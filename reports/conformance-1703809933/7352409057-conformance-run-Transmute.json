{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec05a880-1b0e-4910-a6e8-22b5699e266c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7bd25bfa-64aa-46cc-b9d5-2b8eedd68ae0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01017459-115e-4973-9592-6a772ea1ead9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b72266c5-8b1a-43a9-a697-e0b443e0053d"
                }
              }
            ]
          },
          {
            "id": "84fbe387-a171-4433-a4cd-4c30030ead10",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "227831fe-0a14-4d5b-9549-f2699b8b3b3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38af4371-cf73-46f7-97d7-ed38cc413e55"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2239d6e2-73c0-45f3-9378-5e6c801a7055",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a7ccd5f-bd72-4761-a929-7c0aca9de5c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd6289b6-d7ed-4830-b0af-be112e03adf7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbdd9ef5-c240-4bc4-b72f-f8b59333ef3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a55fcf1-20ba-4757-9f54-08f7cef911e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "448becd7-1a58-4abb-a9e7-aaa731686436",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f55b8e79-99ff-418c-a8de-cfdc2895412a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8f97941-c7fd-4c7c-a550-46e0f123916f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "602fc1d3-fcd6-44cd-a81d-9a0eba63995b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec351d3f-0f23-4f3f-a08f-006a063852d1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f00edfe7-2aa8-4a8e-85e1-d5e3b0ae58dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25e214af-6694-46ed-8e04-1ede231a1226",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fb859f1-c9b7-45b4-bdff-c64465735bfa"
            }
          }
        ]
      },
      {
        "id": "455b37a9-22e7-49ed-bda7-1f91f80752fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b98665be-78a4-4193-98ab-18e77f7873b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e0bc4b4-b81f-4c84-9b5e-5503d994a8df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0fb78e0-1ae8-4f0e-b6f4-39d642bc78d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca37520-c6db-4042-810c-c28498820e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b844ffc-8635-452c-807d-4db12ed5ed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4306bf-f6c1-4e56-9287-2f4f6ea1b3df",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab44561f-42a9-46b1-9674-64bdf06abdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56e0b0c9-cf10-44c0-936b-f8c9adddc75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e445a40-7a84-409b-9d92-0527d8434e8b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe691b31-0d5f-4aa2-88e9-da8432406d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a01675bd-7469-41ea-b2ab-c2f1f4356afe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2872d375-1f47-401c-86cb-212a4a50582f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12d65033-1735-42e7-9239-3e25ca750a19",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8235845f-d266-4d50-947d-8ca7a154b46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af836b55-2726-4fb4-8c6c-0ad1adde808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e88135-9957-4edc-9cfb-ebd476fdb59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ed8782-8750-42ed-85a5-49dcee6480bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7d1648a-945a-46f4-bd66-8f8c18778cb5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "775a45fd-1897-4076-a176-92b619eba0ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "325b59c8-4c08-47d8-83ec-40668b8ef8e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "603eac77-431f-454b-b547-a9a30bb32c29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "574fb668-e18c-4a4e-bc1f-20b16d1d20f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ceca438-1c80-44c5-932b-d88541052af1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf52161-0677-404f-ab14-fec984dabf4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71bfdf46-9036-472a-bc97-6fa2910e04ab"
            }
          }
        ]
      },
      {
        "id": "7ef63859-166d-40da-9a1f-3b75b27f4c4b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "537c51c9-91fa-4d2a-ad6d-1021d9a97e69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f260024-1415-4452-bc88-ac66f82637de",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cd69df8b-fcef-4d27-97b2-8864c5a854d9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e691c6-5b86-4ad2-a203-5968a504a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3027a4ae-2786-418c-8c11-2660c6d05af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c630d6-7829-40e6-9d15-67fe8e071c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9f2aa41-1fba-4c2a-9ed4-c6922e22a494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596ac894-ef6a-405b-bfba-78a88830168c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a37787e-7e53-489d-bea4-bbb6cc0dde01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82a92c4-8412-4833-bc10-9d5b155eba16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8267699d-31f3-4409-852b-09038f476635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c38ad0c9-efd2-4320-826f-092031d337ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785b9001-494e-427f-a924-9943d4391efc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c083f54-a4e0-40a1-b30c-47c4b0db901d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25011ea-092d-4dac-b28e-46cf5977a0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a71a073-7628-4c57-9d8a-4b8f532cba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cefbf945-6f43-4d14-90dd-034a49153bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7904bc-1637-4349-a255-1b7d212d599c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3831c3-311a-454b-b7b5-6d7c6ed87623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d23ae69-8174-4846-bc0c-5fd722891b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a72a33-eb99-42c4-8a3b-cc0d73087770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78c98639-85e2-4c12-99b6-fba2634e937f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efb5def-7ac5-4b28-8a30-9a2631d3bbdf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243c93f2-1da5-4d8b-9383-fed096dbeae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070894fc-b194-47d8-8f32-8fb1a718a718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498186ed-5ea7-4058-be6c-80fa8115f585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b25550-8a45-463b-95bd-fdd67fa3e076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a794f517-7df8-4bd1-ace0-ed205c855759",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1797cf06-c7da-4af3-a085-222cc324c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbfe39b-de45-43f9-9d4d-1a56abf7167e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fe0269-5a7e-4c9d-9bb0-4557128d70e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c2a646-eb29-49f3-bec5-eeb6af0b01bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144e421c-90ac-4ccc-be56-b84709088696",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c9f1ca-96fb-4a18-b272-75b538bc41b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed8853e-eae3-4024-8f39-079200f4351e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a21de06-77d6-4dba-a77b-ab94a1a96ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1728cfcc-e7cc-44c7-a566-3a05b47b9173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61e7031-c5d0-43e0-bfd9-0355de118b51",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e13139-7b58-40b9-8679-b7762673c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fa624c-25df-4ea2-af43-9054400658bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018c0402-113d-4c0e-84e5-21a3bf60b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "207215b5-cbbe-455f-8161-944bec980a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296ce94a-31f1-4273-b1fc-cb52f71ecd24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c144f-fad4-4ac9-82c3-6b047fa05f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbf9100-d90e-4eca-b5d6-4fa43c4de539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3ae9b0-6788-4883-8285-518be4b96aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c72f00b-9319-4a08-8f36-94331e4316df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386144f5-8f9a-4578-89db-4c19ca2a3fe0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bcf59d-2193-4792-bd9c-92eeb339b6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc7b775-bc35-4c79-8ccb-c81802254352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36348258-aa31-4b9f-a0d4-11262cdd4ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fa9376-5360-425a-a657-6ffb99451bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832f41b9-1909-4649-902a-8e9c5ce7542c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86085104-954d-48c0-a081-29f48d092199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4826ef-1413-4439-9560-9bfa6d1ff4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfd890f-4745-4b0c-8a1c-e0e0d5fdfd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1000bf3e-9e99-47cd-a763-1c8ac32fe00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8724a3a-2947-48fc-8582-c30d03d4d66e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ac77a0-7e64-449d-833b-b1e274a0b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa47a7bd-7cac-4928-8c60-0c7547112854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d61bd0-1cd7-48c4-8e00-801419c5ba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20bea709-4d81-4edf-a097-6f24938923f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d673f39-c709-478b-943c-f244154c1dff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f432f-9f0c-4c25-a12f-879d2b440f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbca445-a4bf-470b-843b-860a27fb9af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02d19e6-ae6f-4f5f-b5e8-c0a83cbcd205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b7d3d97-bc45-4813-9e8c-cdafedf18814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7188c6e2-1750-442d-a330-dea0fe9c1bfd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d68ded-6baa-48b7-8703-53fd40043068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e21d9f-42be-4851-8117-cd2697d3aa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6b18d1-0629-4927-a897-6e1ddbe04495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e1247f-f6f4-4f43-a9e8-ef7229cc0683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a245a4cf-115d-44be-b88c-576607cdfdf3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a5acc1-2bfc-4c0d-88f2-edede3370bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2ed330-c4d8-4390-8882-49d6621828cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40761c3a-0965-456e-9809-94fd7cd683e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a079869a-ce8c-4bca-9bdc-8b58cac61e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011568f1-cf4c-4aaa-8df2-5580bb9611da",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65856b26-da02-4707-961e-f8a3fa3a84bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90090656-6791-4ed8-b8e6-83cf36ad361c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ae1c39-4b76-4870-a3c4-86e8ed737305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63be4d6f-9f96-4981-b379-f7599ba99cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacccc2f-8c50-4b9e-8026-2054cc523c79",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3c7f33-9d96-49da-9832-65839af31cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d3bcb8-f335-49b4-8a58-6f9277573e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232ac8bd-9781-422d-a908-48c0135676b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2507f491-ab80-42c9-bc10-4c679c31bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49fdb59-e33b-4242-a7c9-5cd3fcff3015",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f721e47f-7612-4676-b4b2-a23825cbe240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6e265c-2925-4a8f-8cae-ed4e2300dc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e92a7db-7c4d-4666-94ac-4ff0b38b8b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d22b9b6-ee4c-449e-8060-eb50e2d6f2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2773cb73-af41-48ae-b92f-91543662e837",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c40508-91e8-4fdb-b1b3-acd8efa1a90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1302c3-d9f7-44f1-9e37-6de6a506e6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0cb475-5c49-41a4-947e-7f33be54ffe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ff5d63-55a3-449e-8e6f-76fe62779b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6259a0-e98b-48c8-80c8-19f5cfffccb8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f108996-8d18-4e2e-b5d2-3bfa29499142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961b20b4-37b6-447f-80fa-60fc82b4c192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cd4caa-7d5b-4cfe-865a-f0518e219aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7f29a5-d94d-4b2f-b4a2-7d0aac2f1b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3c896-db86-40ff-bbb3-50d0c18cba52",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf7a87-0ac8-490f-b49f-6ee54d297c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431681b0-1ce3-4050-8dd4-b6f9d1af7a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5370b97-1799-4e41-a4e6-897e377c052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7c8f72-07dc-4a23-b33f-17360ed22a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b5817b-a615-4a2e-a59a-751ccb7bc20c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4781eb4-6577-4dae-8da2-16601f80f9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b680549-6c58-4a75-9230-1a35a93872f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1903a23-5f80-4f76-9e66-5de4f07a63bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10155666-136b-4eb4-a16c-4df963b5814b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b6e85b-1927-4c85-98ed-2a4c4563ae36",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d7a70-5128-4d39-8b4f-f66a61d2bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0b6392-aef2-4dff-929a-27f633cc9b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4585a692-c3f0-44ba-ab9e-87738c90c4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fcb04e-c19e-4b41-8c8a-946b25498576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f04226-9d56-4ac5-8ca3-524779266121",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c01ac0-b38a-45f0-b3c0-231a306b04a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b12c15b-e3eb-489b-82df-5f38a69de604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc704b4f-3820-4ef8-bc39-13f12b2c1ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabf962d-5abf-4e98-b166-f4efe6494cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9c318-5511-4700-a539-ee6dbf5d4eb2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288693ad-8f28-4f4c-a139-0b9589276d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32066cb-2940-4631-80d7-213590f79651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a14a7ed-d21b-4f3c-96ae-6b0e911b7633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d2c314-6627-4bf5-9a77-20ad11e456b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9a4ad9-b75f-4adb-b0ad-8d986e8dfa97",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c59eea-8252-440f-a535-fef947a74a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9805f68-22c9-4bfc-9630-f50fb44840ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b529ad4-c45f-493e-b61d-41e2e9cee115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d898e832-d59b-4655-ae03-4c01c5289581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae5bd7a-aef5-4c5d-9e03-17a0bc2971db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79840b4e-ca90-4f68-99a6-83969f675927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be3f775-6617-4f82-a8d2-7a99c37e30d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7bb3d4-3214-4c07-9e4b-1d4874a71afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17645041-a4d9-47fb-a24a-4146e11844cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eda8ac0-be07-40d9-a2ce-7f3ea6d7795b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfcc8e6-a96a-4403-8f41-83cf7bf5e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5283434-f8a9-4e41-b70c-278c89ef0b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ba29be-1c4a-465b-b386-f7c71fcba964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc95cd5-a896-4e73-8596-0374d0abf354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f17472-e7c1-47c7-b0d5-7143331005d5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d0f90-2d70-40a7-9cde-92dbd5b80026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af1a0f6-018d-4405-8094-cf03c5d17d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946bd8e7-0fe0-466f-9e9f-bcacdb8ea76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "784b47b9-3e86-44e1-b114-a7a3f449f3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a245faf-ea54-4741-9367-f596d5e6dd41",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ec1bc2-2b28-4dbc-8246-89f8f7c3bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14691c83-9d1f-4e95-9a69-badea8ce8bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e602b947-1699-474a-a6d5-c414502bdba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59dd52f-9713-4299-8602-c1797c0f2f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a8ac2b-d3ab-4700-91db-c4fe6afd33c7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593ecfa6-9acc-4382-9ffa-1c029735021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8f3d99-4363-4638-9bee-a05574e3fc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3b93ff-f3d0-430b-b574-e22a81fa9271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0e7eb4-b4f8-4af7-95b9-cc3cc772bad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa91d38-936f-463d-a48a-fc8116e1a26b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616ee71e-108c-4135-ac9b-86325c03538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211309c4-cd6e-47b3-8c22-45b1da9feb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b6ee69-ba19-461f-9734-1e5e82e74e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "838020dd-d11b-4d7b-aea3-66594fa21f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2da3f32-8b17-4ccd-805a-a9c579574e6d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32def9b0-27aa-45c4-b293-c26938c899be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dbdccc-cd70-4117-a9f6-864f0ad9e5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c78eb21-9935-4e2e-bc92-62ae89c58633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2822c98-1245-4ae7-ab99-3e8131b4f5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb378f4-90c7-43dd-9b29-1552e336e1a5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334943a9-e150-4fac-8fee-8af186eb178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a64af1-650a-4bde-9f6e-6b46ea1590a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45866eec-2fc4-4832-9c55-96b9991b04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b36aa3-7a45-4fd4-b5d6-88deb4643ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1d356d-3fd1-45c3-8448-1d8748a078c9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938fcd7e-b7e1-46bc-bb14-97ff8239f05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb711f8-30b4-47d6-8989-295bdc49fd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087c5e6c-239a-49a9-8d45-109f4b77626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "46b7d7bc-2d08-4ded-b927-ff7f03bdf931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e419a020-a2dd-4a0e-9f24-3b7eb960b87a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083263ba-cb0e-4bfb-9f75-89c68c730cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35aadaac-7387-4806-a721-ccb7dc58fdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d385cab-3cc2-4492-905b-0d67f7ea7e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2042e645-96fe-41f0-8ceb-1c82f15826e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c515144-51ec-46b0-8408-506d4823d298",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d855faa-81fc-432c-97bd-d14b34f55e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bd845f-ca15-4152-b576-7e701aac811e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4002ee6f-cc62-434e-a530-d96414de8e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8276cca-729f-4d33-9426-d0c83adc75f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6a1e0-597e-43a0-b85b-f7cbd8bde4a6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d882cc0-79db-4562-a5fd-6c815f005af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0208a8-7b57-49d1-aebb-ff42d6480c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e53c1a7-f78b-4549-a932-e95b95176232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5af5e75-05cf-4fb9-88ca-663f692de110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d16d698-f8ad-4895-a408-b0c632cd72fd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3106ebf-9107-4aef-a4ea-9b7cddd04aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e13ae97-c04a-4cd8-b5b9-572b93fcfb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d144262a-b285-4432-a12f-e4af20be0c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aad8acdf-cdb9-4ae5-b83d-bd407f39019d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1599105-90ec-4d12-9788-62a3c54861cd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad49aa7-7bb4-4063-b12b-ae93f00e3136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a10eacb-7264-4203-b411-2cc4b2677408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7066be3b-58e3-4ad7-b120-1719a9bce463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6900dece-c161-43ff-8b53-bc3f7e6b307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c771c046-cad1-4b15-bf3c-07ab1a60aea4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc9ec6-475c-47e1-bc8c-6e4134adb872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fec7ee-280b-4fe6-98b5-d2d117950882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1859dee-3c7d-4d81-a340-38b00235fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8c190e-f257-4db5-9549-bf17b0eb2aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c13e7-d1aa-4654-aad0-5841476b32fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce965454-a896-445f-9cda-76e807f27c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c28bf7-b2aa-4266-bef5-ffebf1bb52fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f868ce76-484e-4a9b-bb69-21ae8a643e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3c3fbf-0b33-4312-80fb-dd8275ce7265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0ca72f-cc6e-451c-be9a-65a356195ebc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d18ce-b2b8-45b0-ab61-59ee3370c65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a924febe-ea18-452b-883c-a70bcde159a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d16340-78c3-465f-8c0e-bc93472ec23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f61a878-1e91-45bf-95ed-ec1838faff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5829706f-0a5b-47ff-a20a-90c23d447173",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fbfcf6-35a0-4408-879e-de064b36ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1552e9dc-4e93-4ba7-9b1c-aee6f3f0ad81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f8091d-77e0-44ab-8406-34daddcac2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "635f4183-fc2b-423c-aa5f-ccf20e3d949c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdad6d9d-5fc2-4bce-a14c-01e5188e7306",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c86963-5dd8-440a-b0bc-3ef3b435190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b8b47f-a365-49a1-a631-428d94777a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37001cb1-9610-4e17-b555-c245b5d4b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c8a16b-68af-4570-b054-7a932bd93ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7712b695-cfe0-441e-85bf-0041f06e83b7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4554d478-0353-4445-ab4f-97377a69e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfdffe2-2452-4489-a337-554987cbd2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74e6a0d-528c-4bee-a010-e13748d7c790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8433a599-c720-4c52-bf08-46cf56503212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e4e742-8ba2-42b2-9d14-132918deaff2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c571612-7a8c-4b14-be9d-5d92354a64bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc65434-e1fd-4aaa-b28c-44860ba641c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf91c349-85b5-48e8-aaf1-8d3f37d1352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb48d842-5a84-4e4f-8253-9ec11057fdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae7bd94-d90c-4c17-bafb-62bbd293a14a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25076e58-d624-4e9b-bc26-f5cfb74614e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65698f03-7164-457b-aabb-2d3c9c22324b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d8a344-eadc-48b7-8738-52ddb97bc8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88695ddd-1052-45f3-8034-a5c30c3c2cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e5c62-0d16-448c-b92e-cc1102f9d660",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fd569f-b10e-4af3-9b17-e07e148afc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9062f957-ba01-48c6-b28c-69e1053d61d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29747d6e-8224-48b6-bf8c-fd93066b695e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c6ece8-a0e4-489b-bb30-fda112c3451e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84444edd-bef4-455e-bc61-ff12232f3aed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c138a739-432d-4bbd-9e31-3e8437ff6414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e55de4-d711-437b-8286-940af8c32b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bd95d7-b2b3-4e5d-936d-a56f47bff5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6d8ebd-6428-4968-8358-017b3a5226f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182a2120-727e-4b8a-ab44-563c39ef6e59",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeaaa57-47d0-47f9-9a50-4182682054a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dc5e3b-6147-4d13-9df8-0c6d93ceba06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7e4199-0377-4036-8174-8e7eea6ee2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5ac5a3-59e8-436c-bc13-b7bf7ab249d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a1bf8c-7498-4cff-961b-df4ea59f725b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc4ef50-4f87-40f3-a5ec-a9e9397f10b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f26f8ef-1e0d-4d89-a20d-aecdbc1c94c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b55810-5b8c-48d2-bdf8-f1e8aeec97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5343f0f-fd8c-4754-9639-e14ce11b332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e7987f-b3d2-4424-adbd-7c58e987579a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755656c7-b882-4fbc-85a5-6a34ccb0dc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6989b3a-c9e2-4510-b57e-ecb078322003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3794a9c-e349-4768-a928-9261d8a5c0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "478a20a8-1dc1-470d-9080-5203226bde59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e428f1f-8284-4760-aab6-0f547e502f66",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0561b441-b6c3-496f-a727-147d318dd0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bff17e-5390-439e-96d9-cafc0f0d147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7356d60f-b619-486d-a846-639543cad38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea3b0ab-02e3-416d-9242-364777c6a526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e746202c-4633-4121-b10c-6ca69aa8fb3d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80120647-e534-4f09-9d23-bc72c9c57eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23b3cab-7b18-4cc7-ad8a-a3197e5295c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e2f205-e64c-438b-aa33-72f210cc78fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bf8e6a-3331-4c4b-910f-52a9b93667a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f936fe76-5f2c-489f-a906-e1c179595101",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2143c3bd-a3db-4aee-95b8-7de8274c149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2718172-4ce2-4b96-b537-6c3edf6e63b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8949bd97-c235-4ebc-8623-bde187b49911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bea60d23-7a8d-4031-bbdb-a642f9468303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbce120b-69d3-4995-8b72-a1274edd9910",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8d90c0-0878-4600-a37d-7482d6671cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87255ba1-20e0-421e-b1eb-fde75640a7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789c552c-fafa-4cc4-92b7-17dc32ccc920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "892c78d0-d0b0-47da-ae6f-1648267fa986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba8e1f-a6df-47f8-9fbc-5085fcf147ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67753ff-0794-4598-8f9f-179e5ff72bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fd1e06-6ecd-4e59-8cd6-e355c76ffefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcec0f87-8017-409a-9f0b-f1416f22d1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3a247e-a2b4-4f7b-9ca7-4a1166615a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf9d747-b6e4-4308-9dad-06d93230c678",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb1495a-676e-4c70-90e4-e6830f20602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e772a7-4ff1-44c9-9ea7-20dbbd617464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4567e2ca-f9ec-498b-bb8c-dacf88d91661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e931dc6f-6b3f-4ee7-bf99-784465486eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c10a6-11ca-4281-8b05-b3b34ce91a8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf52c01-cafb-4978-a534-5f23fd0c1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3281a8bc-c977-427a-b9dc-3c8c3a72631e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3f36c4-0a21-4314-b24d-d8f198f16be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a535a014-b485-4112-bacd-79fa4eed575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a1e7c7-7549-4a7a-8408-4e92937d1604",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eb509c-9d93-4532-952c-2a406212d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e8b230-8ecc-4b4a-8c28-20dedd91b103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b942a1d3-caaa-479c-8b7a-e6669d7353ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "461825c9-9335-4665-a229-e5760474248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e8bb6e-3c27-4e7d-b17c-50163d68e9d2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d7210-98f6-4fbd-bf37-f285436401f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096d4592-48df-4c6e-8ab4-980df377e9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c6d895-4d3b-4547-8e39-5364f358a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be80f367-89e8-4c9d-b9dc-1f6aa68f43a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9329953a-6fc9-4110-8514-548a2e6eb377",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b12107-9ed3-4d1f-a0b3-322f7a409087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24722fed-b3a2-4137-a75a-0c7471a762eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3998a2e2-9c47-4b61-af01-a117c084b31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92eafcc8-7582-4c6a-b752-01cf794aa792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb29570-c53f-4f53-9c20-5558ba0102c7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf495c89-f0bd-483e-ba1e-926f0a9c8973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a199ea84-c4c7-41c0-9f5a-fed0abae9a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf2b847-c603-4339-b0e7-b52ccb0be805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b93c97-65ac-4d19-9c4c-bf28b91e9246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e4081-03fd-4fc0-a41e-5fd3de863b9d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b424f-0d94-4494-b99b-f14bf48dba2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e8fad9-6fe8-47d0-8f26-1d61f446c823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf283de-1e56-4304-b148-01e0f1b91cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0e71dd-fbf8-4c01-972f-9e8481241163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0568c7-8ca0-4992-8601-10d4ced14eed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f3040-b4ea-4be6-b655-a1e8f8c81188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f3f342-8507-4de5-aa67-d32b9f818b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac237a09-80e8-44f6-b748-3d6866ac1835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9653b3bc-087a-4834-baf1-291b01c6282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7120a8-f1f9-49a8-b338-94a4f9759f62",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16e97f6-63cd-47a9-bf8f-f62af8f999b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dd5caf-3432-4be5-bdc3-e4d2b3910c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e910483b-b655-4b9f-a9a1-3591be8e75c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b64af22c-07ba-4e5e-bd93-5ee69e00d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad15aa07-4744-426b-bc14-402a75056a20",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfbb75f-1451-4692-9a80-c0ef28eeab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce25d39f-7339-41a4-9c02-72fd0499f547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218c2d53-9791-4592-aa7b-5ce57e5060e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7595adb5-fe08-4e06-b576-f818a3febf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d93e70c-8dc2-4e32-bb33-097d54b7d1bc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34840639-3279-49ba-85f7-f243dc0fad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eac3727-232c-4b9d-b99d-54b77b19d591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88af8cfe-3492-4bd3-96e7-f505ae5eb46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06fd8a48-ff7d-4778-b349-f0a2f0aaac54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe895c4-a4ec-4701-8e40-048a5f97a9b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e0da3-9f44-4232-9252-b8039455b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b4f57c-bf44-4176-91d5-649adaaa0680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d667fa71-0cfc-48af-a6e1-4b77a53cece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00e1243-5a5d-411f-848c-1aec8b62f8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647578b-49e5-4057-9661-debd31ac110d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6885b997-7504-4b48-827c-d67eeb0b1511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9e8aba-2d21-4582-95c8-dd54abc25904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044acbff-c991-4d2e-9bc3-04a0e576e9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5679c14d-0482-4a94-af5d-c23d9d812bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac0892c-3bbe-42eb-a585-5ff97c04adea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb24ff6-4908-49ba-96d3-9427f251511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1601ade2-a0b4-4f0a-b6d6-d8cabc98ed3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d87a008-3d41-46c1-b590-eeb79e5b09b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "263480b0-1d82-4d86-8244-9cf8cd342f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd961722-5e17-4459-8386-0d410e6baa7f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd22973-6077-491a-b37a-fa1f37403570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338fde4f-74d0-4bf6-b4f6-38909a8b3eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1fa176-8901-4f2b-8133-7f9ef7c0cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1c385d-1d62-47f1-aa06-c5422fb0304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d871921f-7f6d-4a85-bc32-89ef9e1eb6e9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca8116-93f4-432b-b917-dac55fe1af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea00bc99-5896-4334-95a8-1de5a3dbea03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da13909f-17b5-4049-b265-0e8bdb037bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee9f230-edf5-4895-8ff3-99214056f827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb25b77-fc2a-4826-b179-abcf0cbe0df6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14e824-b677-4acd-9ba9-77f9a107789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a3b904-cb87-4ac5-b41b-c5a68d158655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7bf552-15ca-4623-9fad-ee7303adf88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b28f926-5262-4f4a-8aec-7e8b64467abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8483ade1-ff86-4379-93d3-5b0cfa70d5ec",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fa317-c305-479b-903d-1cb2eaa57058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9253065a-aa08-4337-a9db-45c6ca29f0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8c35ee-daf8-43a6-b1fd-2e74441ea3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b2e9d5-e784-4802-9397-17d3c445931c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4542c76-0c84-4c34-9f42-69d3f96f4c7d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5055a8f2-3552-4b0e-b5dc-d71db4665b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc8fb8b-6eee-4dc0-9d6a-7b3d9698ec90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b19d303-ef16-422f-852a-605141846efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e88137-518d-4bc0-949b-ed2dcff0a8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d6c8ee-59f4-4ed0-aa38-abd5317a9b76",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d778f9-f1a9-4efa-8566-a0c63a13d8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e352e8-39c7-4f4c-b53b-f6fc847a01f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d505da-de91-41c1-b682-a16f7e43cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d892ba-1068-4dba-84b4-275e555e457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d89eb-3f13-4b90-a5b2-86906c7999e8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa30a6-a250-42d3-812e-205bfc22e89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39e999b-ec3d-440f-bba3-666253d1e636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded02d34-3c8d-4328-8b0f-fbe85a6e783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4135bf33-f900-4502-99e4-0bf8bc657242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f12c98b-558d-42b3-8c5c-babfcac5b586",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e1e77e-28b4-4657-81e5-1de76dee8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3642c5f-0782-48d0-aa2b-427e5a2bf231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23b5f06-3ed7-4acd-8da8-35d70af7e569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9168ef69-cf35-44b0-b983-d21a572ec2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81125585-2a63-4cad-b87d-f4837bd26e19",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578961c7-785a-4d54-88c9-a72b4c9ea537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4f115e-31b8-4c42-8621-4e4828ad57d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de7ed5e-af1f-4855-9771-d17da8bad232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10145db-a989-4044-a6c1-782ce080cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab47582-5ba6-441e-88bf-09276529a138",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f7ec2c-9e3d-4441-9a93-9c12fff29ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed86490-dc6e-4104-831d-601e60615bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90013c5-0073-41f3-b5d2-5defac354101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e074a5ad-4e70-48e5-9fae-488ddede5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec63d39-ec65-4dba-b785-8170853cf330",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55103c9d-8124-4d14-83c1-c68a76b98b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef060917-7c31-4c9d-b378-d76689ef7db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcc49cf-768a-4ff3-8788-40939b3f513f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b19d356-f337-412b-b27a-46c859487088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620512f8-84dc-4741-a143-86ca1af28d76",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14411eb-d16e-40bb-95a2-53fbe0c1c62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ee19c8-c43b-45b1-8b59-009210c0c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba42bca-7e2f-4cf6-baa9-6b73bf6f0903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86210a3-42fd-438f-b63e-1c0c13267a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb60b5b-6d4c-4507-b58f-6f0df8eebf74",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb913b92-d663-42a4-b0e1-4eae065f38f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ca725-5b48-40bc-95d2-4aadc86c3a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf23a62-8dfe-419b-b158-047b3fe6d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c31146d-71a6-412c-8e8e-b2776d04c426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f138e6e4-19aa-44f1-8132-92f5d5dbfe34",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd44898-c955-40b7-9c79-be3f3c4bc8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260ba7f3-42e7-4a47-8d11-a4e9f49af4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6e6eb5-5b4d-4df7-86fd-b37a5fea699f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bc7cab-bd63-4bee-8258-7f3788778640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0043248d-0d10-4278-82e4-cb9d4333f24c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998a0d98-7fbe-49c5-91d2-d3fb185d97a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6bcab6-878d-4a8e-b5d6-72f3db325bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b008c-eae4-40d4-af31-394950df9e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1da619c-222b-40d8-815f-d9d76df5eeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d569a1-18fd-4ac9-a901-58a7ff2c0d1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be482f-33cb-4878-8985-29b0126cca49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96315c12-d10f-490e-92b5-5c5605b2e8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf4eea4-20f3-46e8-b203-a49f19e6c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39285835-4629-439a-9f60-11cc35f4dc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c9ab4-62fe-4b2a-ab05-56305d1ac2b6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d449fb-8f7c-403e-ad15-cdc9831d2c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c4f327-fc69-4fad-889d-dcc78582721f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b153f3-7ae1-402a-9b15-de62c92641c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d04cfe-d951-48cb-85a7-ee77493436a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069f9c9b-3cab-4a5a-9c1f-14954b2beb3e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a06ddd8-4389-4636-81b2-791769b040ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aef727-7151-4350-aaf7-63012643753b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f13cfd4-7c64-48a3-b1a8-37d240e8b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b35a1d0-591f-4112-8ec2-b5a5c4dbe415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dcd9bf-4c58-4611-852b-5982fe32227e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaac6b1-43b6-4d51-9f1b-96d1d45b9835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a69672f-da6c-4466-9e3b-633f1798ed34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a717cf8-7fa6-4aff-84eb-80e0f8e02724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dcabd5-9d08-44a9-acdf-6750e2ace5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56f069e-f813-4968-b300-414a63aced09",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e9060a-9616-4867-a28a-ae7a1898b3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "369a1720-dbb2-46dc-9447-05ce03363f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2baa468-203b-447c-9dd0-5abfd7603ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "deed49e7-5bf5-431d-8431-d31a2e55ae3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21fa3002-0da8-4c0e-b953-7c5fbc862c2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14731bb7-f241-4f93-8bd0-42837141be73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782db4bc-fefa-462a-8eed-bf238f393a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "954b049b-70af-4449-bea1-759bac5847c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8938f98c-f1ff-4490-a8ec-e8c594b97dcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c005d8a9-71ca-457b-8973-706a6c7c4b6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44a1345b-5d96-43fa-9dd6-7fe65c6b482e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9e4154c-9e2f-48ee-a45d-d28667ea4605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1c58d3c-d790-41ce-b345-6842e42f8889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e11fa52-37c9-4582-8af3-8140621e3026"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8dffdc68-fb62-45de-9303-9d681bc49aa6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3017f7ed-cb9d-417e-8550-e852a2ee8fc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ead8eb0-bee9-4840-a036-a906d49d2208",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "739ff97e-6f8a-4917-8c56-71ab5b81607c"
                }
              }
            ]
          },
          {
            "id": "60cae242-bc38-4d36-9dcd-b0174acaa26d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68ae245a-a5d3-4cc8-bdff-116ad18b96f8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1a4a4c09-5f89-4656-88d7-4caae40af442",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a34d8b-7099-4dba-bfbd-026cc3183d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "17638599-d392-41f4-986c-d0c2af5f040c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fde8e4e-c4d2-4496-a1a9-96e493d5ceb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d073f0-e675-4bc7-bbd6-64e2b855ece0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d36e2fe6-0c37-4316-bff4-596bb04a3918",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c101c6d5-8c4a-485b-ac52-9b6061cf6c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af6240dc-a159-4220-b468-6bd6a7cbdbc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09bb5364-e67b-44a2-be0b-afb9186dafcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44d84ef7-b63f-4f1e-9785-e3c251649df1"
                    }
                  }
                ]
              },
              {
                "id": "8fa3c622-af32-4c24-9522-47edf0ff9cfe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "765d32f5-acec-4b1a-85db-91b6fc062318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b820fc7-0e7a-4b18-a8f5-0832efafda2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d5abc36-b04d-43aa-b743-0fc9a58d2124",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b28af272-5f97-4f6d-997e-d83fc45e0fa8"
                    }
                  }
                ]
              },
              {
                "id": "a7956ccc-5b5e-4a43-b26a-96c51904c7dd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a47ad09-a8c9-49dc-9c66-f16cff74f42a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37fdb96b-b2d0-47b6-9a98-952699d3210e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33e0a97a-f832-44ec-ac6f-24ba694b1a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ab57edf-59af-45c7-92cd-814e23b5988b"
                    }
                  }
                ]
              },
              {
                "id": "fcca4de8-0384-4f6f-8b9a-b93ed808169d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "931ed8ee-940f-416c-aa67-e18a38e5a18c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4443f7b6-96df-46c0-8767-1194655645fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9cb38e0-fd7a-436a-9284-565cd89db791",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a647441d-1f95-4136-bb90-4240df3becae"
                    }
                  }
                ]
              },
              {
                "id": "b83eca68-7b05-4c15-9b65-2bad1cc33ec1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05de4c45-06ff-4ffa-aa2e-b76ddf36d2e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8259285a-cf35-4b12-a4da-3b17fcd4121e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa91e653-3410-4039-8f1a-e7a8747cd663",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7de73e14-728d-4c65-971a-27cac13da866"
                    }
                  }
                ]
              },
              {
                "id": "2acb7557-735b-41bb-8647-ee67c23a6a29",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a42d6793-73e2-4351-8baf-ae4ece3bbf7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8b93e03-2e20-4606-8a0e-be8dd09131a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "548fa89a-7571-4be6-854a-fc9e59eaf351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a3de3bb-1f2b-4557-afc5-cae0610f3a64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1351507-0e33-4993-ba04-294c25dfcb65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17023fd1-54cf-4152-bdfa-2f169cbc4a7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b8a5da4-b559-4281-aaba-f7a783145152",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0e3325b-96b4-4523-badc-99bed17e9345"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d53f1c9f-1728-4160-9d33-480ecb370c60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8b17680e-f34f-4930-b9c7-653fc7359b65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa0370cd-5624-4406-9f58-3d6f45ad2daf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cfffed0-5c4c-4130-8ec8-7ac844a1af9a"
            }
          }
        ]
      },
      {
        "id": "9f159259-b24f-4452-bc4d-f73882b86d9b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d7d413e3-6733-4e7c-b903-9c0b2643ee78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cca9063-cb1f-4837-b1f9-44bc93348739",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8797d65-76c5-4c96-8f76-8d720a84bad2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952334cc-db18-48be-a749-ccfdf718a77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1094cff6-9541-49dd-ad6f-dfafd953d1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacde032-6dfa-4f36-8ec3-98d7f402c37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "628538d0-068b-41be-b5f3-2039ef6eaae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4e277a-c174-4fe7-bf36-6b6d3900b4ac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febbd189-a8ab-40ad-82c0-0ac6abf6034b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d51767-8cd8-4297-9838-cb7c754c9d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76286010-74c6-4f09-912e-204923f4e037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74885c74-0710-4f56-8eee-7e776884e53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0120b94c-fdd2-443e-b563-adf1104c851d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec928de7-ab5c-4758-912f-89fd7960d31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed50f5b-9779-43b6-9aaf-7fb1c36289e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4683d5f7-67e1-4702-9c3f-f2ee01848a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "710e6fd1-8fdf-4400-9326-0abd0db56397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781f7263-d32c-4e13-b079-8e37b3c5fe49",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd0b219-a889-42ff-97c2-483f54845d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6e7af9-3fe1-4dfd-baa2-d196ccbc9d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb328673-f100-4e48-8ec7-cfcb14184dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64cb347c-a530-4b9c-95cf-210b5ea41f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b84839-5ef3-4bd6-86f1-bd591e807274",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab277eb-1d81-40f2-a1ec-e5c6bc247fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7e1bd8-e96d-47dc-b1eb-ab9cd083cc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8ede53-d9a2-4048-acb1-bc774fdd8fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d20e32-601f-4d12-8081-dece2fa542c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d5c313-ebf4-4cac-9d44-6196a60c57a3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47f72a-0dc3-42c6-a1f3-305d8cda7870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a8902b-21d8-4e17-a350-d84d62bfb205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cad1d03-335f-4c07-93a6-dacc89492371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c816d7-fa5f-407b-91c8-ba0a25942946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8fc93d-4b53-4bdf-abf9-7cce8464d921",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf7cff-a9f1-4866-9b04-48de8c85d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb649914-b7d1-4eaf-b5da-3dbd0c5566ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b0157-3d19-41b3-aaa0-67fae5ecb7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03556d6f-27aa-4e14-9342-52aa25e5da7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581d7dad-f15d-4a92-9346-83aa177e2915",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa95de-b7b5-4fa0-93ca-8de3b509d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce21bfb7-7a83-43d0-9017-0d00bf6ba637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f69ef-eaa6-43d2-bba7-8b403289d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d74f96-8a1f-43d7-acfd-07de2ad65997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa7d3ad-bd30-4b47-b4bc-0927a052fb92",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abbab19-397e-4be0-868f-eaed5275e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480ee3f7-8029-4435-8005-22a91f0c062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d5714f-9062-4244-b497-f85f728d664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb438b02-3b23-4999-aed1-47d62536db6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ffd945-1391-4a00-aaee-6852adbf87b2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260084f0-b310-4190-a894-1920390f2947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8878e8-a001-44d4-a912-a5a86d8ee336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93385570-0e18-4ae5-a350-567db632e56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9dffb3-7e62-4785-bdd7-a65758f49b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d1de14-91e5-45c7-b83b-6b17e1b8779b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4a0311-b6cd-4c37-b331-03476fe2c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb790948-31ed-4e8a-bea1-7d49b34d5bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b85f6db-f43f-4654-88eb-e005cb739f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d696958-eb18-44d0-b3ac-6fd77f644eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518fe2b1-2517-4857-9214-32e1ccfbe06c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb240f33-e13a-4443-92a2-3699fb5b6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2e27e9-bedb-4b24-965f-fee720463c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fde3e24-3a48-413b-a41d-6f96392b02b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "206e494a-ab82-454c-bbd8-2bf51dda4a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310e906a-5d5f-4ea2-9d68-1426a3daf146",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187abe9b-0953-4e9e-90ab-62298f8025ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc066f48-0798-4230-a31b-1de571a5bdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f131d097-c0c0-4a75-bdef-b19df024af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96bafc71-53b8-42ce-94f2-f176d8a67a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb8571e-637b-4ba1-8922-6bd09df76d3a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512c9c0f-8f79-427e-86d1-aab4441666d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16de0931-74ec-40fa-805c-b6fb9d860d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98555bf-b6e9-4b24-8ff9-de677caa5af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e189838c-c143-4d73-a8c0-95f208e187f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb3fb30-258f-40a4-816a-62ce91988fc9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda491bc-215a-4ac9-8048-ce61156216c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e09ea7-6809-4eff-ac21-286a70a1cb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a394d9-9eeb-4efd-a889-cb549254f19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "89400759-6b87-4f42-b5be-c09bc02dfe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a5ec1-5f10-41d8-89e9-edd9f797858a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17636fbc-12ad-40c8-ad96-25bb28791a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbff2f2-b8fd-4776-9823-11193a7cabe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4bc702-28df-4700-bfee-d3b356f91023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31f9d10-1bc8-40f4-af15-e9b75e1f8939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f5ae13-5fdf-4362-8bd1-d51b17654919",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a5f78-3a10-475a-8c46-75770d6c415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e637ab-a527-40d0-9c2c-d98d797fc1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d76c04a-ef37-4fa5-b298-452be76f459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6fae99-a183-49fa-b658-af72eb17cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fce673-6290-4639-a352-4e8fb1857680",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266dd25b-72ed-402f-9893-e6e699b1d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ee2f2f-eaeb-4a04-a6f7-442f65cd7e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e72321d-d2d8-4bbc-8935-478f55fecfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e904f00-bf73-469f-b5a1-402c49169adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69c663a-85c3-41b1-8034-ba5ba62becff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f24443-99b3-43e9-bb23-162ceaa070f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eb42f6-5347-48e3-812e-508858881479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b73663-7660-4cff-a812-fe5fdd811c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d01284-d91a-4cd6-b8d3-36b779a11d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1858ac-9330-4379-ba03-23150e4f9805",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a935231c-7b03-4063-b79d-b129baeea790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224ccb22-546a-42ac-923b-b2c68b054e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931663ff-2102-4f3f-8676-e438c00faa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd2cf93-60b1-49ec-aa41-77baf6a30bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3143c35c-3815-4176-9ed6-e664b17c98df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac663079-24d9-4e74-9b49-da34c93423af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60019d24-a185-441a-9d36-b60ef66553a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf46f45-81ee-4d71-a9c2-fce81da08a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7527d53d-1a6f-4d9c-a003-7125f1fb0f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd09e48-a32b-4068-96bf-42680c7bd6b6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7879d43b-8fc2-4801-a2e2-9cfc47afd847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb4ab94-671b-456f-af3a-550b34c3e1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4926c4ce-bb40-4d73-be6f-8e9a191533f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0e0772-2664-4e08-bc22-3053f9c180f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5adbe4-34f4-45f4-ac24-2e9d68ec6deb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dc7009-4873-4373-bf4d-e62d1eaa35aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80f3931-a432-4eab-9a55-8818e19c3173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c69aae-44f2-4972-ada0-e4b328d6ee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3bd705-e5a1-4365-8d61-57f04cb61ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99438a78-0d05-4b83-a8d4-f18991b11a23",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34960404-1043-44c5-8158-00d01a9e2a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7282043e-3cc6-4a28-a514-4b25cf427798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0809d5e8-894a-4b02-bbd9-26c31acd5b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f5e504-edf5-42c1-a0ff-e2cda12548db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee2ae74-5bca-45eb-9e13-7f04593aa7b4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2b716b-a860-4c6d-8293-d53ae2f3c794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f886f10b-2455-4780-9513-3018b8a923cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debafc89-e8eb-48d1-bea0-3c9eb7c6050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f3f738-bacd-47eb-adb3-ec8e59d3a278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f6971-7ffd-4a51-b770-b3786d71037b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68179fb-baa6-4937-8e0e-986d08094b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf1a0b4-d3ff-44ea-bb9c-426609b4fa84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1414c6c2-c57d-4b5a-8031-d52420375d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e7e8ed-c533-4d69-a5ea-d775c7b441bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cffb219-406b-4b03-bfa9-1864101f95cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5590986d-732a-42b9-8ab7-7bd6f29e3883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e210b01b-d4cd-44c1-a90c-3acbde0e0432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cd4e74-013c-4ea4-b55e-7003850eb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01349d40-c188-4f1e-8483-4b233dad4f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3e4d89-229b-4e56-8dea-04b0c299423a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15da22da-3830-4340-869a-ca6aa31f7077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d444b9fd-6cd8-4dca-8b71-e44f4b8313cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff237a66-6796-4f04-8764-708f880b0b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ee12aa-18ca-430d-8b3e-1898b6059068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd6a5d-2b07-45bc-a414-d1002c7833a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233b33f3-035d-4fc6-a0c5-64ce8bc1f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a7661b-58a5-48f0-bd1a-40b4e0ec9727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753613d7-9c7a-4042-a7b0-086f8050aef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432e43ad-f19b-409a-819f-852cfbff20b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c70ecd4-19ee-4fa5-9a33-314185ef8b92",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156b2e76-7292-42bc-8424-f241c3d4ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cac133-d958-4881-8cc7-0ae195407f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753a53cd-011b-4f86-b406-844c4783ceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4cecd8-31ac-4745-8871-993439c43b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6259b9-d941-47ec-8a7d-698ee5b88a67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b8393f-4be8-4039-9078-14fa73ded309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf12a9ef-4041-423b-925e-b2029908d5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4474fa-219c-48c9-a4b4-ac5794eabb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "692faada-f647-42f6-adc2-57342a7c90af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ab7163-299a-4798-9703-776dc9aad3f6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd781f0-3d1e-4af5-b483-4bd2be5aa035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bad2ff4-94c1-448b-83b3-cd00a09c3282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d8dff2-ad4f-4330-8960-d914c4359602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0521d36-bf0e-4e5e-aaa7-a92836e0aa0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecd25316-17f1-40be-8928-9860c152d1f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acc01cb4-fe36-4d3a-a232-a0a7a7221900",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ac7a06-4b55-4d56-9d8d-fe485f078969",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfdd398-1684-4497-ad74-6d0262420bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb070f3-4e35-4840-8a3f-90f196b1845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6162eed-18d2-48dc-9124-2c4ada2bf713"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80a1cb06-d439-4569-98dd-ee2b862555f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b29a8b3-7ffc-404f-b7b0-5592731d4a66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d4dc5b-52f3-4016-856a-4a5f43a33d64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0de197c-a1ab-4479-a697-5c0a70f26cc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7b80628-5f79-44ab-b7e2-76f916cd8956",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7c78348-e609-4ad6-aeda-815cee4f5cfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2bc9662-1f00-4836-bb1e-d973a1a7f835",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "650494fe-b20d-4b87-bb92-29d97c88823c"
            }
          }
        ]
      },
      {
        "id": "832c026c-62cb-430b-9d9e-bdd8e8faf91a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a08ad74d-1de4-4a80-8405-7cf0f7ef1054",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce71ba74-b40b-4c1e-8542-cc4125a65217",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2768d84a-c965-416a-8cfb-25922481a752",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d032e8c2-f41c-41df-9c81-cf26b722f7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070341ac-c96e-463c-bdbd-771cf7b5791e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e733c7f-f1a4-450d-9467-502d61e527dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5e88af-c019-4544-9a8f-91d482e60f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232afbac-e10d-4c1a-bbb0-b2ac60bcbb60",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a05b6a1-bbd0-4691-bea5-e51a9a603adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5e6b70-e09c-4099-9510-94972056fd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b936ef-f6b8-4ba1-af46-1409593a4c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd673a57-30ac-40ae-a573-7d5c9dd83535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a302558b-33d1-4186-adee-d9587bf4fd1b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac7aa3-ab21-4ac4-8382-f17961bda6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10478f2d-284e-4f7b-86e8-d167e56e7823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f492eac8-275e-4fd5-a62e-0a4da6086be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eacd8c43-6cf1-4c0d-a247-064e85e7832d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e80d1ab-d8bd-41ca-84d9-9ca9b4b5013a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb84233e-73ec-4683-ad97-768b0218722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4f6688-7829-47ea-a218-5f378da82283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481a304c-8ab7-4ad6-bc02-3208a2150fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd98202-cdf8-4465-afb9-871c1fe9392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83502471-80fd-4473-a362-8c58545d1940",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ea9880-acfc-42dd-b885-9053c62f9916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3a45b6-4ae8-480b-8dc6-682f3f8eef54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4014fd8-1c4f-451e-94bb-5096d5770b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa743661-b267-42fe-acec-98ee2fa96526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3485b3eb-ea8d-429a-86d2-ccaa4ab24fc2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450eec3-8d56-474a-90d2-e63a0316e746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2376f20c-a30e-4fd5-8f26-a785482027d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ea55b-fe4e-4f86-b549-45823286519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a65bdf-1d35-4946-a9c1-d383316be9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c24d9d-5792-4215-a260-95acb2155dd4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67f644-fb3d-4072-8956-b1e7c6cae656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf2b321-48b7-4c31-bf48-767966f37ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8ba9ff-831c-451f-8114-5336a05399f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04d60a7-d444-4a01-a062-184f6ae93f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae05ff-c9ef-4219-8bc4-3f9d60a6e9d7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff585d-6f85-489f-94b0-fcd40a8742cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afe91fe-7b4f-41d5-9ca6-6ab59f01d59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99af2d20-ae86-4156-903e-a733f69fa8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "823ff427-5d48-4e91-a349-456387a0616b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd43e877-f91b-490c-8d03-37a149612fae",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efc40fb-984d-4fb0-8a44-85117e31fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8768aec-73b0-4631-87e7-b64d958c75d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523557af-038f-4687-8aeb-c5ffa0fddf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8521568d-8e83-4b38-9ac7-b47e8f11c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fa493c-b007-4ef5-990f-b3136ee3195a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4399525-b17b-430c-b26c-cbada2cd867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa250f5-1d20-4178-b4a4-d5f32972b7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e679e4-412a-41de-b6ca-e674a271b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81d6bfe-9dcc-4857-9f0a-18d39b85348c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c19f90-1e41-4f4e-9aae-791e728a755a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c831082-f7a4-4c5e-8f5d-263b14572699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b795f261-5229-437a-86ed-15c063d7874f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cc4fa3-f176-4dac-9393-679353ca61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aa253a-0187-4b6f-9421-67621c168a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edcb24b-ef46-4f28-a364-f7640672213b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bc1f37-9b35-4b8b-80fe-ae660bfe34e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c7094a-7f5d-4c8c-9936-6760f173729a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e638bb-3193-4070-a14a-d7ef7c1180d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09136d98-382a-4433-b947-6fb7c4f560d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7d0c9e-5648-475e-ab80-bd5c219cbcbe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531a3e85-b5d7-4799-9dba-cfc3c475a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d574cce-27bc-4784-9969-b12ae1be82aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4858f981-926f-4569-be7c-ba82cb670b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced809f4-07e0-4894-ae26-88f1098e4332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0a371c-407a-4e78-b11c-b184f29aa121",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce70db1-7a63-42b9-b95b-5510319bcd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcd77d2-b633-41cb-8fe7-949307037de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d910271-ff25-4255-a9b4-03e16b67716c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9220e41-0785-41cb-a701-a3940c61981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976283da-c224-4582-8710-3d72c23d098e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaffcbf-fb5e-4ef4-80e5-b06b11d7ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6221a2-6341-48d8-bb04-9a4285663f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7554f92b-b6dd-4a1c-a42e-2a49ac837038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae71865-7d27-424b-8a42-27798fcf1612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97c1d66-d29e-4222-95e2-030071578e92",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68785c42-8742-46c8-831a-9676b17a676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c947d778-8127-4139-8858-ca05a2b7e93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bce1304-198b-4a40-820d-5989c460880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf404be-fa09-4e0e-b9e0-1965844d59d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14ae7bc-6710-41fc-9b11-e9eeeb5b76c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ccacc5-3941-4283-ab50-4336f0090ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0758fd6a-e247-485f-b56f-4a830903a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78540d-0229-454e-83bd-f2f74b01c66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa51997-cfdc-4607-89c0-a1be27676793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e275d0ea-4a59-40e9-ad37-550dce6b43fb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcbce7e-89ba-4726-b497-5ee2f45db1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06aa006b-338f-42dc-b25a-9245e620a807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30954274-c5bb-466a-9114-25c24231f91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d256357f-5e0c-49b7-8ea2-e8302a99e147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86f19f2-0c87-4205-8008-0f9a22107b1f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d58ead7-49d1-4073-bdbd-356b2653cc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc69bf08-0cca-4f6e-a0e9-28aa1b5ea237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9109bd-d715-4285-94e1-37eafd4b49f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0d88d8-482b-4ceb-9d0c-51c5dc56bdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44d75d2-0b65-48d4-bcae-90f24d174761",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f052ec1-2c78-4151-a021-7d1772ef827b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb563f5c-c6d4-48c9-8c1e-4c39e6149de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd854de5-2cb0-4fde-b123-d703a04a80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f303a3f9-4ba4-4e9f-a51f-af7ae1d778dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a4e95-424c-46ad-9ca1-211cc09e9b84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d793457f-3b5c-4fb8-bf5d-d1c68d8b7ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391df9b5-276e-4227-8acf-4cde99652193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb236c8-4416-45c7-b718-781fbb25a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "810dbac1-979f-4def-966d-0ea77a08a7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0812fce-46b6-462a-a7c0-ba027dcd37b3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7201df89-3e24-4d26-9d2d-b4c913ddb303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb44ed8-6d25-44c8-8f50-ce164495c84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fca9e9-ee58-4f7b-8835-a05dc8f1b951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa625cb-f281-41bc-a597-614b99d02706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a39bc54-65ba-4da3-84dc-c898710ce476",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae575287-49f9-445e-8432-ced2de74fc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610eea63-4d70-45d5-ae37-4ea8e4f60f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65c8a08-e98e-4621-8e6a-c170bfb9a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae194b4a-cb35-4123-ac45-6cc6999b67e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1081c03-f1b9-4590-80c3-9817c0580021",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8dd84-eb5c-481f-bfe4-22709c98a88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c199f0b-6d42-4555-9db6-603a05122dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71262bad-aeec-41b6-8eb5-6e559d5b64ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e6fdd4-3384-4875-98b7-bb0d8b6fd739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae55ff5-09c8-49e5-8e35-b6d07ba7a344",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe99885b-d6b7-4ac7-b14e-46a6f5ee6bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1e73ea-873e-4b72-b0a5-dfa17f5f0537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b1a12f-3327-438b-9b88-834ce30f075f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ec19d6-7e8b-41c8-b509-4e9f1d9a7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed099d90-d68f-4c1f-8935-60d952b776fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159a2d8-d04f-40fa-975f-8611b5df2455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec5f666-a2ff-47db-af84-24b31b173b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaf0820-424b-4cb1-b7e1-e6cc572eef53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364b85b7-fe7b-4868-a491-d6e51203cfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d42d034-1ba1-4a54-87dd-de7235141557",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6539760f-79f7-4db1-b37a-a3d41ab619e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96730819-523b-4204-a080-84a7bf32b8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c058388b-1d4c-447f-a41f-dd2cff91400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a1fd45-d5ad-4e22-85d8-c6b232ce2c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89db0b1-6757-4c86-bbbd-5c949bd4ad52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69a1064-a124-4f1e-a9dc-5b8e285750de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8c2ffc-6ae0-4e34-b021-df7d99009120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a99b1-0ce5-4c9e-8429-0fd634c68d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54562de6-c5b7-429f-a0e4-a6305ff2ee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bd76d1-9f58-4110-9aec-a4cf8065c470",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c238856-0d44-4858-a4f1-345bcf6c8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120b164c-5954-4dc1-90ec-3ab636c4ae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8943c0-3540-4bde-b5e1-4871f6be60b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "644b0dcc-9764-47b8-b2ab-6ca82be7a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544a337b-c9dd-474e-b248-c76329fe9f66",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6162282-3079-48ff-9fd6-0ef26ca6aa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcb34ad-5a73-4f2c-854a-0bf9694383f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57aef0e-304a-463d-b80c-3a86e3a96338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68472266-e3c2-418b-a673-e9bef4608c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cff080-2cc8-472e-8a8d-6b3728254359",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12c4f85-50db-45e6-b30e-e64b8174dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1c97d5-5eb5-4b1b-bce5-ceaca46d4d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c8e706-811a-442a-85c8-ca04935674cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf641b3-53da-4fb4-b5e7-8437a9bbd488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49af720a-99e2-4ea1-b446-d6fcb8aa4cac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483084a2-8fb8-4d40-98d5-219478b9a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99d577-d92b-4e69-9ac6-a2e87d0df7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0d07ca-6220-4078-985b-0e8ebe4472c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f5af2d-6f99-4a1d-bc37-49252b853ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5d2fcc-b237-4fc1-97a3-2103cde9ef5b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69104e86-a569-4176-98bd-9e35034a29ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dea5a3-4a87-4b0b-a807-47a5127ab478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8714466b-55a4-4740-8746-f4de6428f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeeaae0-5819-4c7d-87f0-9b05d01d2cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb3fda4-55dc-4622-92d6-d9df380af9b1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf4da3-9889-444c-b17b-30f91a6490a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08346e23-80c0-4146-ac3b-f5770042dd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495518c-d57d-4ec4-9634-d425e9118f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78d5f92-2e28-4af1-93ef-cea90ceef108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af1659d-0e32-42fe-8a54-f72793c94d82",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1923e21d-f81b-4885-b82a-763ccc323ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a48dcea-4187-4f2c-b79c-e5eb0c1a04b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd106bee-e5fa-44e4-ae4b-6fb84d0a5b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acee1d73-ab9d-44e4-9bcd-055a51a27677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a3b4df-a033-433a-a6d4-1044e3b6168a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45ad1e7-4420-41bb-a729-dbab6819e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4277d8-78bf-498d-ba27-ded73c3e0d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df0e35d-8fc4-4a9b-b0df-a91648aeda96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59818584-2989-4594-bdd5-ce81e69dce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa96bec-6dd5-4b19-bfb8-497acd8082d4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60139ec4-57de-4b35-aff9-71a8e42438f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67080a34-4a65-46f4-afe4-1d6dd4da33aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6625daa7-b490-46b3-b87f-4295bc14a306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac193b3-ae92-4c42-8031-34991191e5a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "325c4b85-97c1-490b-b4e5-83e8cd3f97c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ab403be-fe5f-49ed-8c23-cbbd9eb6f86e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63990b9-532f-4e00-bb7c-7bcfcd6475f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2417d5-a06b-450f-b781-f7bab7b6adda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bc28a0-a46b-4bf3-8a7b-f150ef391c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "199018f6-cbf4-415a-be99-7b9566bdd463"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "800ece50-852f-45cf-a63e-9866e25e4575",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e9d5ab-3ec3-4eef-8cb4-c87fb44990ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1df53028-a473-4f11-b7e1-ecddd4c7adb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56dd8f2c-f25f-4b35-b254-a32e32f35d23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd66f81-7f21-4d39-9440-40a4cb0306f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "993f7506-20ee-4b33-9860-e6f82ff6f7c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad427b8a-4403-4ad6-8046-eaf54d122af6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d58266a-3b67-439a-aec8-d850268bf2e0"
            }
          }
        ]
      },
      {
        "id": "0e0f2374-461e-4921-9ac3-3124dc0cf5fb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "187837b5-8c62-4ed5-8efb-a860fdd5272c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "507159af-8873-4895-90dc-2e22a691b5fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1ed98a6-93fa-4c68-bb66-9775ac21e46b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea9c0b2-f9b4-49b8-b2b5-cbfcc8cc7771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcd8d71-0136-4ea9-a125-f3c52b929229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425efa95-9302-4bc0-8b13-943ff23236a2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9db0d9-cb5c-4417-870d-eb1489bc112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502ea0ae-cebf-4bd2-bc96-a6e94a8a3958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6352fef0-55d2-4072-9c6e-4da90b1206d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b862a10a-1dab-4dfd-b3e5-27b38ad857af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30355083-9d79-4ccf-898d-17321590cbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e7763a-ae01-45b7-9ff9-f045958be157",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822b8f8-6f4a-473c-984e-85662bcd1368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20753f78-b100-46a6-899f-ed966c763ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cec29a7-47e5-488b-82c1-c56d09b68a7d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59b1b0c-672a-47c4-8053-0f377da3a42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b23d3b-b84f-454d-8ff1-5886287f554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f43c4f-6aa7-430f-a964-d15fdd331cbd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77d9e3-d9d5-4d20-94a5-4d36e5802b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade9fb8a-5d5a-426e-bbfe-7bb8293db623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059c8f05-a619-4e86-80fc-436e416a2654",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044c255-ebfa-43b8-8d6c-55faf2a4afab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915ef10c-5b38-4a27-a4ba-430d3f72a80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057c0a5e-f235-4c51-9db3-4c4250493c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b9e988-96c5-40a5-bbc0-83a8e85c928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139e467c-b2e3-4888-b2ac-4f135dee1c1d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4fb1d2-74ac-4ee0-b4f2-d50069c847af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a27eb7-8d47-470f-a088-23afdceb7d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b96420-d7ce-4792-bf3e-50ef9dcdb647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94d63eb-4d9e-4f0a-8d73-9d64ea6fff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ee288e-ee4e-422d-94c3-04c280c0ff52",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fd1cf8-0667-4428-863c-e7b167f83a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d32c3f3-b06a-4947-989d-24f8da143b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2adf2fd-50cf-429a-bf44-f247fb6edb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610d9adc-c018-4fad-8ac9-0f683011dc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db1d834-7079-49a0-b90e-0cccd6942ad0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feac034f-7cac-407d-b4ce-3c457e617d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd0f219-1cd3-4939-8c3e-7940e503b1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9927e696-d281-46cd-8aaf-63649df351e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6bd812-e260-49f5-975d-a15981339c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa9b26e-5108-4809-a384-a98733d55455",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38146ebc-ffe4-49f7-baf4-b1fbfba32d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbc7727-8a6f-41a7-b03b-3dca3e508129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1b06ea-ecc3-4f60-8399-abfde7dfaf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ca175f-8e11-4efa-8a4d-699064dbd8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7987764-6c2d-4a2b-a201-e96258b6f8f2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a5a00-55c1-4cf4-a0a4-74d622e664c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074eb815-0826-40db-b463-fe7227468975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac36d536-2515-4799-827e-570060afb763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d0a0d0-a4eb-4ba3-a819-fdbf68b090bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67338e25-0824-447a-911f-d3302c38d1a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7214cb-e09e-4d35-9d1c-a2abba89fd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b35351d-9d6f-408c-88a1-502be7516b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb56f41-2606-481b-84f8-522e1d64fede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bf3fd5-a18d-4463-bb30-d9a31548f26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f38539c-7408-494f-bc46-4bbbe2bc28e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ed5a01-d337-48a4-9120-65d3892ecea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2557c35d-f0ac-4152-9e1f-8bf430864862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7dcaaf-de92-4765-80a1-46ca3126318c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f988da-69e4-4e65-8dbd-47022a0adcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426afb0b-ad7a-4588-8d68-a6b8832195cf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839c0ed-6a5d-4eb2-bfb0-f589e42d3dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaea36d3-f1f2-407e-9f74-1dcc1e647539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be61b381-a303-489b-a7db-2d24bb924865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d93c80-6d78-49e1-afb1-99160e5abf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e362ea0-d948-477b-a85c-c11565a03e6d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0d21d3-8430-4b48-8d61-c07c581ee63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f82956-5a6d-4791-a63c-268acfd10e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b7642f-1d4b-4ae0-8ae4-478b324bff73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d41b335-b08b-4747-8263-1a5056ef2a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d90294b-ef71-4bce-a36e-f98a49e18a80",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41947938-a33d-4517-8581-15a1d8ca77c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d361f06-1496-4550-be82-40a2c7b331b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9739eb01-ede8-4e59-9765-592935a8c919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd861c2-cfb4-4ad9-8f2f-f0a3ef7ba812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c2db3-a113-4192-924a-efc27c3a691d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3ee662-14aa-456b-82f5-c34a725af0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceafc3eb-31ba-460d-afa2-9f0428f0249b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa11d80a-076a-40a3-b4da-fc874b359db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3851502e-6b6a-485d-997a-b080f170d2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d4dbc-4f1c-4244-816f-8ff90eb1fe4b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92e783a-156c-457a-bcf0-ca48df7b9a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7beadf5b-8edb-40fe-849a-3d2dbd69474f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa33cd01-3818-459e-8c50-caf9f0f2bd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416b47c4-088c-4066-b714-d0ea5035b394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f815202b-607e-4b55-839e-a503a59b3850",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eb9774-cfa0-467d-b649-710abbf40a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47aa9ee8-e9e6-4265-952c-363cbf52d72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622b2df5-5e7c-4965-9a6f-ef2e32c24bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af4e54f-244c-43f6-ac8e-02109cbaf4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045c8a8a-bd06-410c-a6c3-780d32930a91",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1453d-d136-4051-8f59-6241575d56f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b19e0fc-6108-467c-8e0c-2471399f8354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881aaa43-db39-49c6-9bc6-5cc3ff36d094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02b557f-f7ba-4259-ab07-b60e37f5ea0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f55007-2488-4576-8116-0e3ac26d4de6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8eb5aa-7d83-43d6-b7b4-865a37e211fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c35a00f-05bc-4fa2-913d-9de06e3c9902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e3b55-604a-468c-9631-c45c3c4d161f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aab9fea-3dde-4dea-975c-84e9eea18466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f1270c-4409-48c6-a7c4-335165912ae4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbb9bdf-64a0-4d60-ad8d-4679b200deca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e098eb37-8da6-44ea-9075-60f60b7ee7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbad1ea-0556-4b2b-b33a-eafa700e039d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20263b2e-f120-4cea-9a67-d56e6b4896eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94af04c2-e08f-4701-886a-e4e05ddb82cc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d39a3-c6c4-4595-a49d-1e4c23d18a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e25097b-54bd-48a2-a3d9-3a5aa80cd344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8633b2-391c-4b83-9408-4aec31be5c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f72ef-f97b-45ff-b0df-e6eb2e845ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb63719-919f-4f92-ad3c-c36cc588e4a6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf62072-94f0-4161-968a-466ca572b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d95ad0-b967-4cc4-8ae7-10afbd13ee09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e491f8a5-d111-4404-9867-0c229f4c1ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06419c29-ccf0-456d-b2b0-024278ec1317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83fcd14-88b2-45b7-ab4f-b155fa100bde",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d83fb3-8ff8-491e-bd91-c9d6829606ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55699e21-b15b-48a2-b638-52efe3069777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc9d512-15a4-41f5-8dee-fbf762dc60b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84599649-6846-44b2-9c74-762007b13925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67323b52-8caf-4aaf-8863-14d5aef5aa6c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b9ef7-4001-438a-9fc6-2e6fc6bc92b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52a7e7c-866d-428f-a291-d7491645ee0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde9a0a2-21f8-4986-8e17-d2258ebe9052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68df3fa-67e5-4304-9710-53e9e32f2653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5726b08-33f8-4bea-b44f-f1bdca61768c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a35aab-11ed-449e-9fe7-f0fc6f1152f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b219cf60-5c29-4689-b297-325a332e7550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc8eecf-4c42-447d-a65e-0636b2383200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40eb3fd8-217d-49e0-8492-0b1fba7909e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd3383-84d8-44fb-bc17-6ab4197aef40",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07bfb7c-4648-489e-b8c9-52a807c54c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1faedffc-e87f-4d7e-9ff4-ee1ffdceb319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256cc1a5-225b-4f34-a6af-afdf60bcc324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a04640-30be-443a-a986-8c015febec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177d88d0-1233-4bbf-8101-28af60200a29",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a44a5-f084-4b67-b0ea-5e670adac86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0df5961-e6b7-479a-a14e-fcddc1b80b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37a266f-b7db-4760-8181-39321b6731a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badc8792-1255-4889-adb8-04f97d01724e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308cdb26-4843-49b4-bea4-d9a408dbedbf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f118e95-94e1-4a47-ab09-d0216cfc6cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe37b49-2897-4864-8e6b-9101b349ecc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be6c020-18f4-4468-b532-e749b08aebce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7f22a2-55d2-4ff0-b1e7-5f82714c00a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec452cc-eb20-4caa-9ce9-5e0bf4cbe87a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f79867b-9107-4346-8ac3-a6710298c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c202a58-ef98-4cbe-bbe8-7cc44980d08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14af04de-6d8d-405b-9afd-9ef3b15581b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0159b541-0428-4ebb-bbab-8278a158df0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ee5db6-7522-4fd2-a294-55076dd89acc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d238954-b42e-4ace-acf2-d60e493dadcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fb7747-b8b2-40f7-9921-712b543cb3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05d41f2-b74b-4873-a850-f9265b1af48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245fcc53-2384-4124-8756-3ff93b42d3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c37637-d9c0-4d52-86e1-f5122d95966e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e551ef83-2d87-40b5-ace6-e076979eb08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422cc192-8df5-4360-aadc-0e95b13c31f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa03f1f-85bb-46d5-9213-6ab4f14bfee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebf0424-455a-4717-a697-b34d86cf5c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bffb69c-bcd7-4e0d-be56-6adb2462968b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da7278f-7e09-4dcd-a4e6-3e41b5eed02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fecdb4-bc2d-49a7-a7ab-ffb1cef525c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955af2a5-bcd7-4fd8-80b8-eb2a16e09e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7f7dce-5609-413c-a9f4-95fe9002e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfc6033-6e0e-4608-82fe-de523854a562",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad6269-51d3-415a-8dff-0299eceb427e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4a5c4e-0803-4254-91bc-d348edc92120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d68436-e3ff-4408-920a-4841014eb4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec762347-277e-47be-ba4f-114b4a669d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdac713-ed42-4526-bc55-72853bd0b07a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb37c0f-7540-40cb-b148-427f66c06a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0e3be5-7cf2-4092-8387-647dc72a3b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d71eaf8-a8ee-4dbe-9cdd-f40bcbd1529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b230bc-7795-4064-a3fe-26f783f98abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd3e90-f717-4925-b36a-130ae09b249d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b5db5f-422a-48d6-8f44-d954609b4abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c294af-b5f4-44d6-9b28-febc8b5312df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a0ea6f-4d40-4024-9942-ba463b7b801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4ae278-a89c-4f7b-80f7-c7794d6b30b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35977061-f32f-4e72-b925-cb71ee3cf0a4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba1c059-ede4-44be-b00c-f9ec01bfc36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7406de5-6d8d-45a2-9e3e-467fba96fcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c8371a-8e22-46b5-a8e9-98cb6f913b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbcb459-eb12-47e6-9e02-6767459c9402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670497b-fa22-44b9-a786-dbbc48cd3c49",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb03f3ce-9bfa-4b4e-a913-f6facae8d713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e49bef-2ef0-49d2-aba2-2db97ec1451c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c4606-76a1-43af-bea4-10d4d3eeb4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa67992d-084d-47e1-849e-843d196f0c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b942bd-e693-45bb-aca0-1f1c9a67c04f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725075eb-5441-4faa-aa58-d71059b3e803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87fa7d5-b630-4bdb-a05d-bf51aae0c042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0756d9d4-31e3-4e60-83dd-b53560e8c400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd731a8-10c1-44fa-a82d-8eab70869492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e2f58-df40-4f6a-96c5-276881d06ab4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c5f6e-8a54-4b38-88ff-c4945a9eaac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99e6e2b-4029-4e0f-a9e2-f0f14c9d8332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714c4f9e-1f9a-438c-a33f-165fd0ee643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a8f091-c7de-4161-98b3-745ce0306238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81456b85-13b3-48ad-a5e4-3fd74d92eb26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c34ff9-380f-4589-ab6b-85a056bcec58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35860def-3a4d-4c31-bf27-c734f8a39aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937e137f-3867-4070-bfc4-8577b81c9b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834a3dd7-4d84-425e-a8b1-f0ee933d457f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceaaa37-d3de-41c3-81ff-3bfd4552a5ea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce9266b-326c-4341-aa36-b8b9c888898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f172f32-1cb2-4239-8d37-2691eedf4970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe4b676-b5bf-4f0a-b755-01e93eb8b425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05b20a7-0e46-48f5-9734-68ff261fd9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ecf8e4-99cd-4360-b41b-8a1368d58b71",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d860c0-853b-4385-ac26-8819d219fecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db245fee-1392-4917-a21c-595950f2dec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cac2d6-f139-413f-b5e2-884ca235d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071174fd-d331-4620-a403-cecc232be53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ecb50d-4fde-4298-81a1-aab2c41191aa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3746c73d-338a-41ac-90d4-77cb35e9dced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf2f908-e5fc-4325-8276-c16d294b09ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aef885-3823-4d33-914b-7d71d8e873d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a98d7aa-fe9d-42e6-b561-ea9fbfe3b264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7737852f-7091-4b53-b1ca-54cb7f3efca0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff924a54-fc95-4b47-b28f-8a9e632e7c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec97450-6ec9-43d8-9bff-26d674028e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08c214f-ad1d-4d96-bf6b-2639e20d4a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9acf670-7b2c-40cb-b350-b3e8bb049610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fbcf41-0e80-4d36-bcf7-770701283c6c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6277c-103d-4a63-afe4-e65f2b4244f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea24ffb-4270-4893-9c7c-5bee06ea2aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a4f0be-2aa1-46b6-aa93-6c148a13ae06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a28898-667a-46d8-a9b4-065acdc55596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba581df0-1ee7-4288-9eb6-f70338577784",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d8fb93-0e3b-472c-8896-85f0483fb6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94331fb-6744-42bf-8b7f-83f83d029506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1baf3c-c77f-4cbd-b3e5-be490636e286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003f030b-c4bd-4849-9ea5-d36650c36779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50b9758-46db-43e3-9234-bd11d3fc404d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7648df-27f5-45a0-8d84-d53bbcb77fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c5c015-e9dd-4128-b621-d97f677d1c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c867510e-5e2f-4476-8480-c85385a236b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24492ee7-3e31-48c8-b30a-c3dbf16d8de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a75ecdf-536a-48cd-89ed-466a95574eab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3af4b40-2f0d-42c9-8c26-c29d8edb2741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6dbb0d-0bbb-4c2c-9147-27cb7b6012d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10965b-9066-4df6-b452-81ebf44d28d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e456db7-6210-4ded-8da7-e1e2bf194649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6db07e-9c0e-43c5-bee4-22307cedcbf3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57977a05-9280-4853-8d3b-b0ab48b6904c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770ee438-a5f5-4b75-ac3a-1b227bf5134a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cef53a-5420-43bd-91d6-f0ae9b44f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d601fc62-ed5d-480d-8542-42650507a37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d34084-b054-4d59-9211-2919d3fe6081",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85a9c9d-ca77-4f43-a911-3bd3459a89a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ede83f-149d-4074-925b-022bd28e7020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46351b90-a94f-44f9-a61a-ab5f31d4aabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176e1b24-2b94-45ce-a523-3cb72a678fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc826ef-4f44-4fee-a635-b6b071281922",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f712fda0-d85e-4e08-8269-c4d44d7b2717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242878cd-2496-4032-a9e9-a6a900988c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a60ff-66b6-42b8-bf02-937750e67b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf9a1f6-2c94-4e40-8d97-70452713f474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33d27a3-d392-4cd9-b169-7f3c59fce163",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abae044-abf3-4db4-a5d1-52e57c6aa2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0840b768-95df-4973-8279-5aa704634f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b630feb3-987e-48b6-a691-1869752277be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36af70a2-1c8f-4b47-901c-5410657585a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeebe21-75c3-420d-be9f-446baa227a2f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46532a61-6356-4894-a801-392b18637e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c642417e-2e1b-4a10-b613-b7703d185182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8700325b-2efb-4b01-aaba-cbea4679f3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0741f69-b68d-4cc9-82ab-82969a5da110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ce4f33-cde8-4132-bf1f-a6d7359e18a4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84af9fa2-b5d6-404f-b77c-5228f78a4c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b5ea5d-4dc0-4589-be5d-a5e566f82124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b086fda1-57df-4a1b-b59c-d2295460e747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606e5745-ae13-4476-9987-9fd54d5ad5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0ecc4a-67b6-4c35-b510-b050d66b5b3b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b89e5c2-28df-4705-9eb7-30c159c42709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03ae07-6a87-44a7-8cad-0fbccf8ad3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05522c17-9845-4337-b582-88f819e6e2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeb949d-d8fa-4438-99c7-17d75f8c3327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7592bac5-9074-4b0e-bb09-9c189f8d9064",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07fef9-ad21-472c-9002-9f083891e947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0debf0-5eee-4d43-9b81-6f0cd6dae760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fdf602-861d-4150-a61d-bf9d00e5f954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8058284c-1915-4c3a-81d0-ae42583af64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ef27d9-c496-4622-b55f-137602f9d2de",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b220510b-2093-449e-829e-359f240915aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5182fa4-fbaf-4a1c-89c8-86cd22bbc0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6d1f9-c153-40d3-b139-0a01767daa4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06e90c4-c3ed-4c23-8e23-fa599c808b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6de72ec-00d4-4164-95a5-e6a9a642af71",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25f936d-9a03-41b3-969d-2eb16a8f505f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb49e0f-d77b-4fe6-bbe9-882eaf21fa4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c307e4ba-df08-47c8-91e5-05580e2fdcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d89f2f-0a2c-46bd-bb9b-f1ff375bca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b7f25-27c4-4a02-ae28-95543ae52a4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c3d8f1-85a2-4924-80b5-cf98b2d7b558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0478cd1b-1723-40e5-a2be-ef491864a0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0c7b6-6098-4c48-b8c6-47060df3d2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ada7bf1-bd5b-4e7c-9f08-f92c670fe9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6776503c-adab-4df0-82c8-305894ce0544",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d09a838-1eda-45bc-94eb-5ba87dd0833c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1fb3fe-0327-4b6c-b4e4-cb729319b9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95e6aed-6c62-47bd-b139-18c8da6348b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c721e9a-2f9f-42f1-a093-3c9a893136b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d62068-e196-4be7-8b42-9c5d37588807",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf904b6-b461-4e6b-aed4-a415ac4949c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d564ca-4c74-415f-97ae-a34319a6facf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c10c87-7e2f-4193-9366-a3cf08e5803b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b246908-980b-42c8-be52-33386758484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027f5c6a-bf04-4352-9b64-3d87ca7cf9b5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f4b75e-642e-4258-97d1-318424f2ee95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d148d60b-36ed-4201-b071-ce6cb5c9de00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650ca324-70f9-4cae-9865-a7ddbe459c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe03645-e0d4-4a64-9c5e-aa5efda39176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078033d0-1e53-407f-8a9d-5a8ab9ea4fd9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36519828-36e2-4dc8-96cd-91e3a687db7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf919cab-88a5-4d17-ab47-efa0232f73a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff3c05f-2963-4fe1-a187-0301423cbe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0602f806-bf67-4bdf-adc1-3600ba0d36cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed59c6e-0ef2-423e-8e40-fd035316dbe8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d20fb9a-5f0e-45c3-8ddf-a86226023bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0a3d6d-12c5-4e75-aa74-2afc0580a4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4837a7-fc22-46e6-a293-75fc4b7a306c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb41174-7321-44f2-80f8-a04b53c1fbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa20d03-2f66-45d1-a140-347ec12c86aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd44b7ee-7a2b-41be-86f4-71bd97fcbee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9df0547-1fad-481e-9cc4-320cee281188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b2a2d-bd68-43b4-926e-7af0f1f126ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a979e61b-8544-4786-a824-be1e1bbc267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d694360-e6e2-4393-bcda-d8b3e32678a4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319dd4e1-cf23-4412-ab27-19bc20b244ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb271e7-4f37-4745-8572-f5f87bac4a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089a9aef-2498-4e6d-a84a-0ac32439cdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b428b961-df3c-462b-88b1-dc2975d3381f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d0e0bc-c283-4b17-80ce-ce4ec4fedea6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e056a023-ae87-4a79-8fe1-fb49c8f5ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba238df-9d1f-4b0d-be70-b3705ff4b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28df3fb-d3e0-4909-9860-9803f8cf408f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c0cab0-d56c-42be-9ff6-3c481e619bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc9c9de-7112-4dfc-bd28-ec03b6fc3492",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69da49c6-3436-48d9-b3f8-60b1bd02d58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37d57f5-43b5-4ca5-af09-e3788fe3e4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3848eef1-8270-42f3-b66d-642197cced2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6891d8-1a0b-404c-8e9e-294a78cb5ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdc845f-cca1-45e6-bb8f-2a3099fabe19",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03399537-2fe8-494d-96a9-4e46d20558f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad93ad9-39f8-4558-9c59-61b67a58f724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305b246b-ab18-4bfd-a6b5-46b00ba6b035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bff0f6-dcc1-4156-baf6-d0f883b1e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5e295a-1bff-4d7a-b3c9-c1c0534585f4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623bb332-e31f-4c44-9f35-9367d5a5c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f16490-f2b5-49df-baad-63f799de7389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e7214e-4b48-49ba-9a65-e5679fe89775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8015634-4244-477e-8911-103f04b2929b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4105efaf-a9a8-47e9-ba2f-2cc5714e65e9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4100582d-d282-4eb6-8abd-a8555cde1182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b50530-dfcc-4046-bcc9-edbc2ce8d3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52f9c9-11b6-4221-9dbb-b2a529826392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8711d482-bfbc-4397-b9f7-bfa1096015cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84107fc-5ca4-4691-8249-f50e1851f736",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663121e2-5663-4155-a4c4-c928c7ca8eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a100d44-11fb-4309-ab37-6cdfebd34d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd4dd15-f720-4ed2-8005-8b18cb18fc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fc6489-0e95-4378-84d5-4c4ea15c6163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c27767a-650f-4b2c-a6e4-dea13313ca4d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57cc9da-ad69-42da-8838-29a0deda3d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83098b82-51b0-426c-b346-45a6ad098024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398170ce-1699-4a98-a765-d71542436857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae05a354-2af4-4a0e-86b1-0b22bef516e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade55804-f577-41f3-a4a5-9225862305df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42342fbc-c146-43d1-b8c9-755204eb58d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b55205-1fd7-4a5a-8e18-1743a9c369b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58356167-3733-408b-9a92-6620ca158b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1e83e6-8db5-4244-a93a-c88ada2966ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9088bb46-2358-4431-b676-8d1444dcaa5f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7290f2d5-4bec-4f6e-af19-9c8031e5c286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a73ec7-4445-46fa-90a5-662b5afc003f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f69a7e-a8e8-49f6-a95c-6452aa333dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fc69c2-241f-4f28-afcf-6827914b6fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f286b7b-08da-42e2-8f19-c8d89a36de37",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4286a57f-8c08-495a-b291-1d01142670e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b89c3a-6c08-4a7b-95cc-7e557725011a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e335b-283b-4e3a-8e9b-69d863e86765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c98f27-d645-4f4b-a602-9f36f8cdedc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa83ae15-01e1-4219-9a82-e432cad6a1fe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8d550b-5023-41f0-89e7-30bf39fb9b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5397a0f2-a65e-455b-b550-e5127104b094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14f564d-2ac3-4a88-b708-d215e7d83070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1868d8b7-6577-4581-b050-82dd3fc9b6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e22057-596c-4856-9f2e-27d6cf7538eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2962123f-a939-4388-9d4f-9217f14e072c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da83efc5-21ab-49da-8983-5105f9297359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4819b3bd-db0d-48dd-8e4b-af87d5c9e424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fdaaa8-1947-42b4-86f8-c46f5ce3f3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a0379-5782-4a78-8776-06cd40b826b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0defbb4b-0f03-4ae0-b76d-7aa2005ff8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6a8c93-b812-4556-ba97-ac2e1a2c3496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c7c2d3-a801-46c3-8157-d42538c0e276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efab35ec-4bf2-472f-8188-d6bab880a2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd205282-d34a-484c-bba4-7bd8e44e25cb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8acf57-9ef2-4bbd-83a6-afc028845ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d932d2f-4f36-4b40-be42-7c36e3815373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b61b9a-45d8-4f44-b1c2-904f12714748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e34b94-e6fa-447a-b9ab-384532a9edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bddafb-ba0d-479e-89aa-05074fbcb891",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c67a0c-c20a-44fb-8070-4184e14ba556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81726fcb-2450-422e-bcb1-d31e4168a434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc1d113-68b6-4d24-b44e-6243df27ff9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d02662-7bf3-4676-a54c-a3862ee7bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6ed634-054e-407c-bd7a-a085c54ebb26",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d62e714-112b-4d09-a94d-83a97c49c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d595d31c-23b6-4da5-8dca-816a8898c59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5a62ba-9ebe-452a-a24b-a09895aaf7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16ac20f-5d28-4c74-933a-84c5a44d8934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a139346a-9276-49ba-a8f0-53c8513ae7b9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be00bd74-b040-402c-8aea-0574f791900e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fc8ca1-b7c8-4fd2-9f62-04cf7aba8b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c020bed8-3bf8-425e-953f-6bc6ae4ed3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21552778-3d6b-4bf8-aaad-25722d6593fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c11e4f-d9dd-46bc-849c-1b4528d59369",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae66eb1c-b427-4cc3-aa19-16e06259ce45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9851f82f-8555-4149-bdd8-0bccc2769fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5cd83f-27a7-45f3-b981-3691eeda9fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de9edc5-17d0-4893-b5b0-b98ee8faec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2a3121-c082-4af9-99c7-7de9af6da6d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8402655-9c8c-4f42-ada4-52445a1a6884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fb28c3-0451-47f0-8183-dea9ee034aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea26887-8770-490b-a822-649b06454108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e4717a-85c6-4e38-92a8-e7ae0c4c34ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe5a223-bce4-40fc-a04a-7a9b0eb6f289",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce85a2d-4b0c-4b07-b703-e3fc23401f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac6094e-49c4-44b0-871a-1e97b8f9b999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ef2c3-f220-4b73-b97b-248beb8f9497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c1165-ca6f-4fcb-b428-7651e5a9318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d685b02c-a0d7-4708-8cb3-699c6e1d1c78",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5961e50d-fe38-4659-9547-ebc3e4c2ce94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e39edc5-7987-405f-a41f-4373bec26e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ae7b08-c3c2-42c4-a11c-e5e9815bc756",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8247c0f-be00-41cb-8203-6edb77d098ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e5e7aa-d901-4f4c-87fd-0d8ead0bac0a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5ab528-4395-4128-b36c-67ef0f53fea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2a89cc-a0cf-4222-8042-afbc0fd5813d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1f1bdb-32db-47fa-a8c9-e97dc67864d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbadf8e3-d518-491e-bf6f-a77c5f374f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770ee975-4a8a-4ee5-bd00-5daacbc59d37",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1c1ede-fe63-44f0-923a-e5fa35949126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af184c06-1666-4b0d-a725-6e5d4fe6f0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80abdecd-3f3b-4d78-a8e2-692b228bfc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ef94be-543d-4f5a-ae00-34df45bc56d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687c2fac-7f92-4388-a5c6-94b76f710c38",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15012f2f-89ae-4c4d-8776-81845c43a321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9f5169-a890-4e07-81b8-d1aa9fef4c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e89478-dd7f-42d0-9425-a7c5a67c4973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671bffa7-fe0f-419c-9260-295a31f2b7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1173f7ac-0b11-4b60-959c-20062057859c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089787be-71fc-4fa3-8df4-813fe7af14eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6819a9bc-3092-4372-9602-ed28063fe83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8e23c4-136f-4f14-aa62-d6a3fd13294c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16638fe3-e212-4056-a0bf-0e9f2ef2f674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eea187-08f3-4e19-b338-12cd5159d3fc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b544eb9-b2e4-4c45-89c1-0f0bb23260b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1baf862a-f308-4e06-8fc8-0d827292618a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd11294b-6823-40bc-8839-db5440c2c858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4305bbc8-ac15-49db-a052-e2e66b434e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8e08e3-4522-41cb-a9fe-b4b16f0f90b1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7817d7e8-2ba7-42fc-8a91-a58ca1fd21d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19504257-9e4a-4b7b-8087-68a5cb2fc787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9d1859-35c0-4b7d-b16f-28a0a06fd28e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9696d4b2-b0bc-4d67-924d-215e4a746b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348057fb-f4eb-404a-9923-95b828b68d4a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce10a78b-0460-4917-aca4-fc51ef4ee925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605f0e4c-0dc9-44ba-b721-616493eb61aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a406b6-302d-4a05-9faf-c5e8662521f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2965ece7-d685-4155-bddf-b023058a7de8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85539284-ab67-4782-91d7-e7cf625ea668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efc9c821-60fa-434c-8762-b5c995050c73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c16aac37-c3ac-4a5b-b4bc-2402dfccd21e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb22d0a7-c69d-4f00-b7c2-e3ef593cc162"
                    }
                  }
                ]
              },
              {
                "id": "4cba2b19-b774-4122-9cce-aab336ea62ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3afb2dc6-31aa-48b6-a3e7-56f8e0f3dfca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7b622-9581-4c11-a901-7769f8686afb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "961a32ab-3371-4743-91e8-a7af0fda190f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2af55c9-b005-493c-8ee2-2ccc3b1300c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87b5b0a3-3748-494a-bf7a-2390a4729f5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d997da64-0fd7-4247-806a-c2fe8dfc707a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e14ab52-bbeb-44c3-a867-f660264196af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aebd560-7291-4ab0-8298-5a2c06b25aff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75c5b90a-0695-4ac0-b845-1df34ab33e71"
                    }
                  }
                ]
              },
              {
                "id": "2cd78d0a-d675-4900-82f3-f0200c9efa9a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6fe78ccd-5f77-40da-a036-8c99bbb2e655",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e0a09f-22c9-403f-91a5-3ce66ff8b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "927f09e9-0351-49b0-a320-775b57498709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6e5f3f-9b75-4862-b60b-2cff077cc503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1191bce-c418-471c-b5e4-625f9b5977aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "be883fcb-da4d-4c4a-a15b-a8f68e94198d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "390f74fd-fe1b-41ec-ba88-8c006f1957ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37f7879d-eefd-4905-aad2-e18b2250cc11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fea7651c-2ddc-4901-a177-ef8ee81ffb25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac5fe21c-3960-467c-ab29-022f34162e18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e48900c-fdd7-499d-8760-679ecfe0196d"
                    }
                  }
                ]
              },
              {
                "id": "fcb38a43-4673-4e9e-9678-4ac3217a974a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6508a251-0ff7-44c4-bfe2-9500629a39d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31acfe55-5de0-4193-84a6-4ca3fecbb4e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e97ac6ba-d3de-4494-85e7-b09739bd256a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20557ce6-0e87-4682-8b81-a8c7d5d38ba6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0df32070-7317-476e-a2a4-9aeed6ba4392",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1dd6cca9-d882-45d4-a0c9-3b0c7bec3e15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99efca54-275d-41c6-b6e3-79530dd8f6f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "869ef83c-4b65-4b9f-ba11-a4668e86d48e"
            }
          }
        ]
      },
      {
        "id": "f5e40b4a-f955-45da-af0b-c960a2e37a76",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eb16b772-6e20-4168-a040-0a69e6d51651",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a545e2e7-a90c-481d-960e-9e0f2a10911c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56f966a7-a2f0-48af-b920-f9c17e259f3f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b31eb3-73ce-44f4-81cf-d2f65f3eda88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c044b1e-9607-429b-a40f-7ccb2d10d1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b053b2-66fb-480d-aeaa-f5a9ecdb3e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a32f839c-d1d4-42b1-a597-d8b02fe148a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f0317a5-9ba5-48dd-bcbf-3a72475fa566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a8d27e7-98ae-4559-9998-f20aa89a0c66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97286a8a-0716-4279-9fb0-cd0c24b8e6aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00db6e0a-1287-4451-b7bf-8dbdbeecc5b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cda9838-f491-4871-9987-d44e6770c41f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "86bb1831-8f92-44ae-a9ec-31e9b55465d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bd866be-e86b-4d6a-9a6d-d773be53d2f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d28bccd-1e02-481c-8d9e-090d84ebd910"
            }
          }
        ]
      },
      {
        "id": "a24b387d-e373-4f99-8795-14f535344a0d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7c593775-67e6-4a6c-b17a-753fbb88e1bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e1743bd-baa7-4c29-8b34-68fe7c257fc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11df60e4-3272-4528-bfbc-64cf89af85a5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0298b78-dacf-4169-8249-fc6beef3cad1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13b0e4f4-8da3-40af-ac67-3211e6883619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c00bf5-db4a-4515-8c5b-070b95cbddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f5b6ce4-7a41-4a07-9349-4f3652f89987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b16c2fb1-f2df-4b2f-a2ac-ba85ff35f225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32299e9a-3929-40c9-bb0e-b4d4253611e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf62f61d-6156-4cb9-a03a-b86dd51e6810",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7544780-4859-452d-8192-9fafe2f54b7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8f146d7-e05d-443b-ba3c-e8577cb099ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f18ffbb-0f63-488b-bb0d-ab084ac7c005"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2573fe83-0172-48ba-b3c8-70d0b10a83ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83b0a37b-490a-45be-946d-63daf98cefd9"
            }
          }
        ]
      },
      {
        "id": "a2ea9c83-59d1-46a5-b127-54ee0b0c26c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0b45de55-7204-4ea2-853b-888b2fb67f54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "676936a7-150c-47d9-97fb-0e916ae55dfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25c6a159-f6b1-4f7e-954a-e6d1551a7300",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb77a27e-87cc-4ca3-8920-c710efb538e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee3d5a87-ea9c-4368-96ad-a71a1a23f2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4ab91c-0318-4033-927a-a9ad0a987b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872506d3-6316-4ae5-9dec-aff1f54da6d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d62f014-0121-4495-be44-055f83305d4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9d8fe2d-ca09-43ad-af82-10a29d89455e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68836a41-2fb3-4dae-b78f-ca9b3c03bf52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38690d8d-80f3-463e-ae75-c7c17005f18f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90f90f3e-68b8-401c-93f9-ccbe477e2248",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "531b225b-9b87-4757-af67-1e0475f71dc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17fee49a-7fd3-4f3f-ba69-be9c6bf6206c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63dc6ea1-8635-4f2c-b88f-ce0261e9dd4a"
            }
          }
        ]
      },
      {
        "id": "a5d46ce1-2c07-4e67-8242-6b1ca6ef3277",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3d35ed2-7e22-4b6b-b5ea-795482089b1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b58bed65-6350-46dd-bd8a-381f7b909017",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e0782f0-9922-45f0-ab9b-9598722e2a97",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b380dd5-401e-4270-b045-aea35fe06797",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0b58e97-77b7-466f-b5e8-d00b5f010222",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.16842105263156,
      "responseMin": 6,
      "responseMax": 2736,
      "responseSd": 308.6510544105352,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703809727617,
      "completed": 1703809765972
    },
    "executions": [
      {
        "id": "7bd25bfa-64aa-46cc-b9d5-2b8eedd68ae0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "244eba70-19c8-486f-bcb8-c90625bb3e98",
          "httpRequestId": "f83a94ba-3737-4a57-bac4-40b9b9b4b07c"
        },
        "item": {
          "id": "7bd25bfa-64aa-46cc-b9d5-2b8eedd68ae0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d269666a-6f3e-47a1-9337-eebc6dee4312",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "84fbe387-a171-4433-a4cd-4c30030ead10",
        "cursor": {
          "ref": "1bf0ee66-b4e3-420e-9c73-f8d7ab360101",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1971038f-66a3-4165-8e14-b79f54992d21"
        },
        "item": {
          "id": "84fbe387-a171-4433-a4cd-4c30030ead10",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ddb57db3-ccd9-462b-940b-0c898f241ad9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "dd6289b6-d7ed-4830-b0af-be112e03adf7",
        "cursor": {
          "ref": "82de5b40-f93c-4aa3-a064-ae6339e4febe",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "530dbce8-0d73-4ed6-8ab9-fb56947cb18b"
        },
        "item": {
          "id": "dd6289b6-d7ed-4830-b0af-be112e03adf7",
          "name": "did_json"
        },
        "response": {
          "id": "c3a6ad06-d187-44b0-a69b-86502b568041",
          "status": "OK",
          "code": 200,
          "responseTime": 695,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb78e0-1ae8-4f0e-b6f4-39d642bc78d5",
        "cursor": {
          "ref": "5f642c2f-170f-42b6-83e8-9190e2b1e67c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c5b37592-21bc-4e94-a748-73618aec886b"
        },
        "item": {
          "id": "a0fb78e0-1ae8-4f0e-b6f4-39d642bc78d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "51197371-fc0d-41f0-baee-4e5372099795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb78e0-1ae8-4f0e-b6f4-39d642bc78d5",
        "cursor": {
          "ref": "5f642c2f-170f-42b6-83e8-9190e2b1e67c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c5b37592-21bc-4e94-a748-73618aec886b"
        },
        "item": {
          "id": "a0fb78e0-1ae8-4f0e-b6f4-39d642bc78d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "51197371-fc0d-41f0-baee-4e5372099795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4306bf-f6c1-4e56-9287-2f4f6ea1b3df",
        "cursor": {
          "ref": "ec3e6f5d-daca-43e0-8de9-cf7be9a927e6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8bd50c45-4c15-44e6-8b51-cd3b85949dd8"
        },
        "item": {
          "id": "fd4306bf-f6c1-4e56-9287-2f4f6ea1b3df",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d2f503f3-e325-4ccf-8ddd-af473e799992",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e445a40-7a84-409b-9d92-0527d8434e8b",
        "cursor": {
          "ref": "886ac162-2884-453f-bd14-0e5524f4fe72",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "544e5ed4-006c-4cd3-9bde-a96a37525d4c"
        },
        "item": {
          "id": "8e445a40-7a84-409b-9d92-0527d8434e8b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7eb4ced-55c6-4131-a65d-6f57e8cc95f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d65033-1735-42e7-9239-3e25ca750a19",
        "cursor": {
          "ref": "e42bc7c0-1deb-410d-aaa4-72c03781aab6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "329eded1-94ee-4252-9bb9-d03c8e26f4c0"
        },
        "item": {
          "id": "12d65033-1735-42e7-9239-3e25ca750a19",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5992fd31-85ca-4a1e-b7af-6bde6f0b4ccf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a45fd-1897-4076-a176-92b619eba0ff",
        "cursor": {
          "ref": "07542fb8-b2f2-4c2e-8e16-0f9ab109fde0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c8e13b40-b459-44d1-9b13-e75e9425c130"
        },
        "item": {
          "id": "775a45fd-1897-4076-a176-92b619eba0ff",
          "name": "identifiers"
        },
        "response": {
          "id": "feb8944a-9fab-48c0-904a-60ad06b2a569",
          "status": "OK",
          "code": 200,
          "responseTime": 289,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd69df8b-fcef-4d27-97b2-8864c5a854d9",
        "cursor": {
          "ref": "9cf1258f-c556-4b63-9814-9eb2430daeab",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2a7b2ca2-f2c4-4c82-9e7e-64167f9d0a6d"
        },
        "item": {
          "id": "cd69df8b-fcef-4d27-97b2-8864c5a854d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "758f247e-8cd6-4448-abff-58756c53f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596ac894-ef6a-405b-bfba-78a88830168c",
        "cursor": {
          "ref": "339cc8d2-9d92-47e9-b497-8f19e3cdf738",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "23168b0a-57d5-4982-8c0c-e4a8ae780b46"
        },
        "item": {
          "id": "596ac894-ef6a-405b-bfba-78a88830168c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9488a9cf-4468-429d-9eda-11d2d6cc9237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785b9001-494e-427f-a924-9943d4391efc",
        "cursor": {
          "ref": "4e79503e-d44a-4124-8686-c91412211b04",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "971aabc6-282a-43bc-9cbf-2851086d3acd"
        },
        "item": {
          "id": "785b9001-494e-427f-a924-9943d4391efc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "60f4a526-120e-4494-a049-80d953c604c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7904bc-1637-4349-a255-1b7d212d599c",
        "cursor": {
          "ref": "5b19e472-0340-479e-9c4e-6c0d7be3b1e2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e6e9b6a3-5e31-4897-9a46-4068e7c1a5fe"
        },
        "item": {
          "id": "fe7904bc-1637-4349-a255-1b7d212d599c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3e1353a-e89b-4a28-bbef-775f01b39ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efb5def-7ac5-4b28-8a30-9a2631d3bbdf",
        "cursor": {
          "ref": "6ad4ee85-c54e-47ac-84a3-c7a295aec278",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "62a848e1-9b58-4a16-906f-103c5d3bc095"
        },
        "item": {
          "id": "9efb5def-7ac5-4b28-8a30-9a2631d3bbdf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "56bf45ce-8325-48dd-8ee8-493760b02874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794f517-7df8-4bd1-ace0-ed205c855759",
        "cursor": {
          "ref": "8c8a13bf-705c-422d-9258-c144cfe00f88",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4d64a8c4-a640-4082-857d-1096ab7a6ea2"
        },
        "item": {
          "id": "a794f517-7df8-4bd1-ace0-ed205c855759",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ba57ce82-5bd2-49dd-87a0-da78c64d4f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144e421c-90ac-4ccc-be56-b84709088696",
        "cursor": {
          "ref": "68ed3cd8-d04d-44d9-ba83-c77b5b914fcc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f978f13e-0dfa-4618-8115-d952889fac15"
        },
        "item": {
          "id": "144e421c-90ac-4ccc-be56-b84709088696",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b17d59a9-a52e-4c6b-bfa3-012db8a027df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61e7031-c5d0-43e0-bfd9-0355de118b51",
        "cursor": {
          "ref": "b60df134-b75d-44e5-aa18-587a1b48baef",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "951440de-d51c-44d0-b70e-960de413f3a5"
        },
        "item": {
          "id": "f61e7031-c5d0-43e0-bfd9-0355de118b51",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "137cb758-44ec-4597-9485-eb07de24f161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296ce94a-31f1-4273-b1fc-cb52f71ecd24",
        "cursor": {
          "ref": "09d0bd24-cc9e-4633-93c9-27fb42d4f8a4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9bb63e5c-f89b-46f2-a3f3-17d276e92e89"
        },
        "item": {
          "id": "296ce94a-31f1-4273-b1fc-cb52f71ecd24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6bc1de1f-8f06-4ba6-a317-6577771e885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386144f5-8f9a-4578-89db-4c19ca2a3fe0",
        "cursor": {
          "ref": "c61d0f4a-8eca-4638-8c6e-a13f614405dc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "810eb70e-2540-4ec2-8d76-fb378e5d661f"
        },
        "item": {
          "id": "386144f5-8f9a-4578-89db-4c19ca2a3fe0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c326565e-e187-4a91-9149-8d1115ae5538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832f41b9-1909-4649-902a-8e9c5ce7542c",
        "cursor": {
          "ref": "12706a45-a107-40fd-bf7f-09f8e2ac94cc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7c169b56-cad6-4541-a5da-e866842c1f1c"
        },
        "item": {
          "id": "832f41b9-1909-4649-902a-8e9c5ce7542c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "488b8266-ecfc-4c45-af37-8130b6b945d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8724a3a-2947-48fc-8582-c30d03d4d66e",
        "cursor": {
          "ref": "8f0c50b8-88a4-4f2e-a3f5-02b3484d41f2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b9b526ff-f721-4b3d-8bd5-9ee1ed14e21c"
        },
        "item": {
          "id": "b8724a3a-2947-48fc-8582-c30d03d4d66e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a2e9dfea-19da-4529-ab11-157ccaa90337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d673f39-c709-478b-943c-f244154c1dff",
        "cursor": {
          "ref": "bb835780-0b3b-48e4-8396-c4cc0e23c8bb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b30872b-7fcb-41d0-9fc2-6c458970ac73"
        },
        "item": {
          "id": "9d673f39-c709-478b-943c-f244154c1dff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1cd8439b-f761-4c59-a84d-1c267bbe8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7188c6e2-1750-442d-a330-dea0fe9c1bfd",
        "cursor": {
          "ref": "86c14938-bba3-4e87-b66d-2d73304388cc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4eaedf1b-7813-4d3e-868d-53668085eb3d"
        },
        "item": {
          "id": "7188c6e2-1750-442d-a330-dea0fe9c1bfd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "858c083c-241c-4537-bc2b-67dff298a223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a245a4cf-115d-44be-b88c-576607cdfdf3",
        "cursor": {
          "ref": "210e594e-1617-4daf-9e34-20de237b29bb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ebe34780-afe6-4c93-9cdc-09359351f599"
        },
        "item": {
          "id": "a245a4cf-115d-44be-b88c-576607cdfdf3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c8ea532-b92e-43db-ac3d-cb150f05683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011568f1-cf4c-4aaa-8df2-5580bb9611da",
        "cursor": {
          "ref": "df4983b0-1777-4529-9102-ec2d934cf13e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "812310f9-6199-493d-ace2-36e2d4317f07"
        },
        "item": {
          "id": "011568f1-cf4c-4aaa-8df2-5580bb9611da",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "529293fe-d103-4071-b639-f5040325ad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacccc2f-8c50-4b9e-8026-2054cc523c79",
        "cursor": {
          "ref": "870533e9-c1a6-41af-bffb-be74c03e309a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f70a17a5-379d-4c29-872d-4659d7520077"
        },
        "item": {
          "id": "dacccc2f-8c50-4b9e-8026-2054cc523c79",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "435b8fbe-1a9a-4657-b9b5-eeec7cbba640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49fdb59-e33b-4242-a7c9-5cd3fcff3015",
        "cursor": {
          "ref": "d31a4c99-3e30-481a-9c9b-3c1def79997e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5c0b738e-fc5a-432a-8f42-4f2e0f2685c2"
        },
        "item": {
          "id": "b49fdb59-e33b-4242-a7c9-5cd3fcff3015",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "16d78005-4247-4feb-be03-6e59b2b99c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2773cb73-af41-48ae-b92f-91543662e837",
        "cursor": {
          "ref": "a8787468-e1f1-42ac-a2cd-31409037735f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b9293757-f477-4432-913b-a410f36ef436"
        },
        "item": {
          "id": "2773cb73-af41-48ae-b92f-91543662e837",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "159eb93f-47d8-4903-b963-ed653ef22bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6259a0-e98b-48c8-80c8-19f5cfffccb8",
        "cursor": {
          "ref": "ab84ca4f-847c-4d54-a15b-4285d8fc67d7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0ee59c6b-bafc-4d7d-90f0-a67b30104108"
        },
        "item": {
          "id": "9b6259a0-e98b-48c8-80c8-19f5cfffccb8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6d588918-8333-4c94-9685-7172e068dd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3c896-db86-40ff-bbb3-50d0c18cba52",
        "cursor": {
          "ref": "f0bdb760-e955-469e-aa91-3ece3b77ac5c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "656e3d05-0094-4ee2-bbb4-3b68d5e73c20"
        },
        "item": {
          "id": "aea3c896-db86-40ff-bbb3-50d0c18cba52",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0dadf4cc-9f1d-488e-9596-e4e54b14b1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b5817b-a615-4a2e-a59a-751ccb7bc20c",
        "cursor": {
          "ref": "6838e14b-c88b-4d3e-b300-959acef439ab",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c4cec46-948c-44ee-b51b-c23c25eb94a7"
        },
        "item": {
          "id": "39b5817b-a615-4a2e-a59a-751ccb7bc20c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05db6a9d-8402-475c-bced-214a2abac127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b6e85b-1927-4c85-98ed-2a4c4563ae36",
        "cursor": {
          "ref": "63cd4d9c-491a-4655-bfde-8af844bb401f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87094d0b-2a3c-468a-b6e7-9a0b997fa4bc"
        },
        "item": {
          "id": "a6b6e85b-1927-4c85-98ed-2a4c4563ae36",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8e4628a3-3d81-4c34-b9ed-79e2cb8ce0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f04226-9d56-4ac5-8ca3-524779266121",
        "cursor": {
          "ref": "647b674c-49f2-4b82-b23f-31dcf3bbe1d5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0f51f582-299e-473b-8786-50dc09acecd5"
        },
        "item": {
          "id": "76f04226-9d56-4ac5-8ca3-524779266121",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc9c56c3-9e46-4456-8c3f-b024a6f7060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9c318-5511-4700-a539-ee6dbf5d4eb2",
        "cursor": {
          "ref": "481fd5f4-633d-45a4-956a-8eb6ed5de4da",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "40829f0b-3243-441a-83df-b3b369817bc1"
        },
        "item": {
          "id": "b3e9c318-5511-4700-a539-ee6dbf5d4eb2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9b57eb6d-222a-4670-b464-cc3bd839a76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9a4ad9-b75f-4adb-b0ad-8d986e8dfa97",
        "cursor": {
          "ref": "de8e2d6e-a41d-4f8e-911e-6138944b0cfb",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f563e3d2-44f4-454f-8e05-133bf009b50d"
        },
        "item": {
          "id": "ac9a4ad9-b75f-4adb-b0ad-8d986e8dfa97",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cb32478e-12b0-4c5f-89e3-2201f4a67886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae5bd7a-aef5-4c5d-9e03-17a0bc2971db",
        "cursor": {
          "ref": "8b238b96-fa12-41cd-a154-c96b9f3d9d9f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8eb2ac0f-114f-492c-b4dc-545b08649444"
        },
        "item": {
          "id": "cae5bd7a-aef5-4c5d-9e03-17a0bc2971db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "56b94faa-5631-4074-99bf-2c7a19598826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eda8ac0-be07-40d9-a2ce-7f3ea6d7795b",
        "cursor": {
          "ref": "a8f3d099-3876-459a-8c27-aff8c1c2f4a1",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "22b5acf0-7651-4670-be3d-431be1bc215c"
        },
        "item": {
          "id": "5eda8ac0-be07-40d9-a2ce-7f3ea6d7795b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e7873bea-e65e-46ad-9dc2-587304b0e7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f17472-e7c1-47c7-b0d5-7143331005d5",
        "cursor": {
          "ref": "6c9018be-6be6-4155-b31c-f02e8b7fc902",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1ce80dcb-e381-4c57-bd40-ac1fd623d050"
        },
        "item": {
          "id": "a8f17472-e7c1-47c7-b0d5-7143331005d5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0c3bf0e0-97fd-4dbc-b77a-3c5cfef60942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a245faf-ea54-4741-9367-f596d5e6dd41",
        "cursor": {
          "ref": "d4013424-29bb-44ab-8b6b-60530eaec60a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5bc5c185-b2fa-4121-89b5-6bef8d19efd2"
        },
        "item": {
          "id": "6a245faf-ea54-4741-9367-f596d5e6dd41",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82c10661-3e24-4272-a146-200174d4ce79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a8ac2b-d3ab-4700-91db-c4fe6afd33c7",
        "cursor": {
          "ref": "be90871b-ad57-472a-9d43-8fd3b6ced123",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "13ed13bc-d31e-4c68-88ec-b304c1ae0cca"
        },
        "item": {
          "id": "11a8ac2b-d3ab-4700-91db-c4fe6afd33c7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "59a5de8c-cc22-47a3-9860-3d2a5bce2f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa91d38-936f-463d-a48a-fc8116e1a26b",
        "cursor": {
          "ref": "83dbdae9-d0b0-4306-a111-5ef82e910cb6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "379e671d-3aea-4ec1-af91-5747143c68c2"
        },
        "item": {
          "id": "baa91d38-936f-463d-a48a-fc8116e1a26b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3627cbf-0572-41c3-ac40-a2dc644d6263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2da3f32-8b17-4ccd-805a-a9c579574e6d",
        "cursor": {
          "ref": "be964788-9388-43a8-aba7-e46478e1bb26",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c88e5ff2-2657-4804-911f-a85643c33ef0"
        },
        "item": {
          "id": "d2da3f32-8b17-4ccd-805a-a9c579574e6d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "14ba5c08-0c50-4faa-baa7-a791102a62fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb378f4-90c7-43dd-9b29-1552e336e1a5",
        "cursor": {
          "ref": "e55b28c2-ba04-4a36-8663-39daa7c09060",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3b98f9c1-fdd7-4500-8e2b-03860ce5dabe"
        },
        "item": {
          "id": "bfb378f4-90c7-43dd-9b29-1552e336e1a5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "701fb2b5-7945-4824-90d0-d7791b2e825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1d356d-3fd1-45c3-8448-1d8748a078c9",
        "cursor": {
          "ref": "af1e9c80-eea3-430d-9dc9-d7a1a070da30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f97fd147-9bd6-485c-be79-13a55b1b9b26"
        },
        "item": {
          "id": "9e1d356d-3fd1-45c3-8448-1d8748a078c9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b5ee49bd-4f67-4f2b-8768-6deaf49a30f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e419a020-a2dd-4a0e-9f24-3b7eb960b87a",
        "cursor": {
          "ref": "5bc6df4a-cee1-4cb1-a130-a919918d481c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "32ce28ae-db65-4954-bdcf-5b94d1e84acb"
        },
        "item": {
          "id": "e419a020-a2dd-4a0e-9f24-3b7eb960b87a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0a5e875d-1e2a-4971-8441-2e65c20afe0a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 315,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c515144-51ec-46b0-8408-506d4823d298",
        "cursor": {
          "ref": "d0691a2b-df2e-496d-9174-4ca8a0388f05",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eb5348fa-220c-402c-8af9-a1b4859a63ae"
        },
        "item": {
          "id": "3c515144-51ec-46b0-8408-506d4823d298",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3ec24d5f-bdf6-4413-8b45-ac2a6ec78b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6a1e0-597e-43a0-b85b-f7cbd8bde4a6",
        "cursor": {
          "ref": "b2556da8-7402-43cc-b635-5dac3758ec48",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c4abbabd-e650-4852-9c46-669506391b8a"
        },
        "item": {
          "id": "38f6a1e0-597e-43a0-b85b-f7cbd8bde4a6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "acd4e649-8cde-40c9-83da-46e8df3cec78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d16d698-f8ad-4895-a408-b0c632cd72fd",
        "cursor": {
          "ref": "740aed38-5241-48a1-ae2f-b6d856611722",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "96442be7-655a-43e0-bb82-735fa38dd5ff"
        },
        "item": {
          "id": "5d16d698-f8ad-4895-a408-b0c632cd72fd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "45b2a103-3b49-4023-be3d-a17c32943424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1599105-90ec-4d12-9788-62a3c54861cd",
        "cursor": {
          "ref": "433207b4-9dbd-48d9-bb81-6c7ec7f09559",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "447c3e6e-4698-438b-89b2-ca32244dbe5b"
        },
        "item": {
          "id": "f1599105-90ec-4d12-9788-62a3c54861cd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "488f487c-0aa4-4c10-84ec-15baabfe6977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c771c046-cad1-4b15-bf3c-07ab1a60aea4",
        "cursor": {
          "ref": "2ecef2c0-4f6a-40c7-83c0-7bd559658337",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3141b0a3-de62-4cf1-8b74-f1412414cc44"
        },
        "item": {
          "id": "c771c046-cad1-4b15-bf3c-07ab1a60aea4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cddf8cc2-9bda-44a3-8e59-3ee3a9f218e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c13e7-d1aa-4654-aad0-5841476b32fb",
        "cursor": {
          "ref": "6799d96b-fa0d-4f65-94a1-2418fde64cc1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "69e55a68-f612-4090-ad95-0e651d76c1e7"
        },
        "item": {
          "id": "391c13e7-d1aa-4654-aad0-5841476b32fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "138a68fc-0790-4901-acbc-69a77f5d66df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0ca72f-cc6e-451c-be9a-65a356195ebc",
        "cursor": {
          "ref": "767f9789-2846-4897-898e-4109ad0af468",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3702efd5-6cc9-4321-aaa9-7968dcdfe569"
        },
        "item": {
          "id": "9a0ca72f-cc6e-451c-be9a-65a356195ebc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c478f32e-dd4c-4577-80f1-f88a3d25f82f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 372,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5829706f-0a5b-47ff-a20a-90c23d447173",
        "cursor": {
          "ref": "75cec74a-0eab-4884-973c-c071d74c1c0f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3ae0b892-ab73-4a0d-a02e-65ed6396c3ac"
        },
        "item": {
          "id": "5829706f-0a5b-47ff-a20a-90c23d447173",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "589205d2-7c40-4595-964a-362f3acef69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdad6d9d-5fc2-4bce-a14c-01e5188e7306",
        "cursor": {
          "ref": "e8672e30-5146-4dca-b98d-880e0481f79b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "07809fd0-8185-4951-acc4-dc9570e8736f"
        },
        "item": {
          "id": "bdad6d9d-5fc2-4bce-a14c-01e5188e7306",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5843502d-e689-4623-afa9-b748e768209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7712b695-cfe0-441e-85bf-0041f06e83b7",
        "cursor": {
          "ref": "7c268080-ff99-430a-9e0e-d08aa2d8b5a7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8114b8d1-752c-45c9-83b3-f1b8f22d93b1"
        },
        "item": {
          "id": "7712b695-cfe0-441e-85bf-0041f06e83b7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4d2518bf-ab3f-4ff7-97ef-f5fcf8125d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e4e742-8ba2-42b2-9d14-132918deaff2",
        "cursor": {
          "ref": "6fdcffd0-afc9-4866-98bd-420b4c4276df",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "db34b5c5-1e72-4588-9c5a-174ec2f59950"
        },
        "item": {
          "id": "33e4e742-8ba2-42b2-9d14-132918deaff2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c42280b-b2ca-42ea-bbc4-e8ff40fe138b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae7bd94-d90c-4c17-bafb-62bbd293a14a",
        "cursor": {
          "ref": "0f815b8a-b6d7-4dc0-8831-ecd92a153661",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c29d887f-64b7-4c50-b93b-a8974bf1fbe4"
        },
        "item": {
          "id": "9ae7bd94-d90c-4c17-bafb-62bbd293a14a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "042a5909-a3bb-48c5-8128-12732f83cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e5c62-0d16-448c-b92e-cc1102f9d660",
        "cursor": {
          "ref": "1810f5da-d504-4c15-98ab-04bf2d5c1252",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0c6eca1-df6c-4834-96d3-fa307d2c84f1"
        },
        "item": {
          "id": "583e5c62-0d16-448c-b92e-cc1102f9d660",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5f145eb0-4cb6-43a8-8990-4d6274ffa66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84444edd-bef4-455e-bc61-ff12232f3aed",
        "cursor": {
          "ref": "062ea7d3-4b43-435a-aa62-6ded9bf0e79c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9c0ad37a-42d7-48ec-a27b-97a548214714"
        },
        "item": {
          "id": "84444edd-bef4-455e-bc61-ff12232f3aed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0b2d764-2ce1-40ba-8b43-0ac1f9b4f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182a2120-727e-4b8a-ab44-563c39ef6e59",
        "cursor": {
          "ref": "2381aefa-eee1-4756-abb6-2246f523739c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b7d67b39-f387-4fc7-b997-f25802d00625"
        },
        "item": {
          "id": "182a2120-727e-4b8a-ab44-563c39ef6e59",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "adb8ed71-6ac5-4ef5-9e88-8b17f60766e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a1bf8c-7498-4cff-961b-df4ea59f725b",
        "cursor": {
          "ref": "7650c98d-954d-402f-adf2-c9d76521b31a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0ce22787-8a5d-4680-b78e-8555b026e2a6"
        },
        "item": {
          "id": "51a1bf8c-7498-4cff-961b-df4ea59f725b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb92e278-bedc-4fa7-9cb8-29d65372f98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7987f-b3d2-4424-adbd-7c58e987579a",
        "cursor": {
          "ref": "ba58924a-3c7a-4b88-8d5a-277e032ce3b1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e3af9972-6c2a-41cc-b658-f0db7341b781"
        },
        "item": {
          "id": "05e7987f-b3d2-4424-adbd-7c58e987579a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "41d870be-1bdd-4fda-9f8c-6f44fa0144bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e428f1f-8284-4760-aab6-0f547e502f66",
        "cursor": {
          "ref": "df6c2500-53ca-4500-b17e-7677ba98fe04",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5a820661-9a9b-4bb9-bb2e-2858660ed015"
        },
        "item": {
          "id": "8e428f1f-8284-4760-aab6-0f547e502f66",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c5f77aec-836c-49ae-bc98-6aeff4b1925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e746202c-4633-4121-b10c-6ca69aa8fb3d",
        "cursor": {
          "ref": "65bbe520-6d86-4dac-ab2f-156d11ddc9f5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7a783503-1fd1-4d9e-b9e6-6acade421304"
        },
        "item": {
          "id": "e746202c-4633-4121-b10c-6ca69aa8fb3d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "afadfb14-e6f6-4c5a-a4e2-208863e53eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f936fe76-5f2c-489f-a906-e1c179595101",
        "cursor": {
          "ref": "3904e033-93bf-414c-9bbb-ae0a976d7fe7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bb31d07d-3093-4202-9687-ec541256414e"
        },
        "item": {
          "id": "f936fe76-5f2c-489f-a906-e1c179595101",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "764a9e73-996a-41d5-a574-80c907577ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbce120b-69d3-4995-8b72-a1274edd9910",
        "cursor": {
          "ref": "7838f41b-8e13-49a7-8665-f27daa3c1869",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "377c32b3-d225-4d35-a2f9-aff0ff390eb4"
        },
        "item": {
          "id": "cbce120b-69d3-4995-8b72-a1274edd9910",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0afff290-6a70-43bb-af7d-8d3c198c1984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba8e1f-a6df-47f8-9fbc-5085fcf147ea",
        "cursor": {
          "ref": "389d7821-4776-441b-bba7-905141336800",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fe3ad8a3-c87e-4317-a8f1-66bca5c33bbc"
        },
        "item": {
          "id": "3eba8e1f-a6df-47f8-9fbc-5085fcf147ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec89387b-96c4-4beb-aaef-fd2766dce628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf9d747-b6e4-4308-9dad-06d93230c678",
        "cursor": {
          "ref": "0b1da834-b46c-4ea9-9a5a-c65c47964e9c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0432e5a0-20d3-4013-819a-de6cedf987fd"
        },
        "item": {
          "id": "daf9d747-b6e4-4308-9dad-06d93230c678",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "07b87739-9977-47f8-8b2e-1179a29c7d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c10a6-11ca-4281-8b05-b3b34ce91a8a",
        "cursor": {
          "ref": "f1c4d59d-b966-4bed-acf9-ef6c1aafc0bb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eb896b82-bfe1-4c5a-a4a0-cff04d73e93a"
        },
        "item": {
          "id": "740c10a6-11ca-4281-8b05-b3b34ce91a8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d407d17-46b5-4e37-a7a9-404412ccec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a1e7c7-7549-4a7a-8408-4e92937d1604",
        "cursor": {
          "ref": "a8635e63-a4c2-446e-9939-5feed39ca3b4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "67c7f94f-c616-408b-a1b2-72a505cd157f"
        },
        "item": {
          "id": "56a1e7c7-7549-4a7a-8408-4e92937d1604",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a5b54e47-3fc3-404f-a814-ebc682c87018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e8bb6e-3c27-4e7d-b17c-50163d68e9d2",
        "cursor": {
          "ref": "609255cd-dfa2-4a82-b8bd-d70645a7cb3d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1ccdacc6-92e2-4063-8658-868d68bf4c89"
        },
        "item": {
          "id": "57e8bb6e-3c27-4e7d-b17c-50163d68e9d2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f6e84bb6-f330-4234-b7b8-d43963f4c13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9329953a-6fc9-4110-8514-548a2e6eb377",
        "cursor": {
          "ref": "6c7c68c6-9ceb-48d3-90fb-306c28d88a35",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "347fee57-181e-42fe-9aec-d78b121b482c"
        },
        "item": {
          "id": "9329953a-6fc9-4110-8514-548a2e6eb377",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eed48a9e-beda-44f9-a1e4-88859acdf873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb29570-c53f-4f53-9c20-5558ba0102c7",
        "cursor": {
          "ref": "fec2eb4b-2264-4182-a554-1313f2f035d0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "899fba21-bd99-44fd-a878-b7818e45d18d"
        },
        "item": {
          "id": "bcb29570-c53f-4f53-9c20-5558ba0102c7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fb65199f-d1ae-4d5e-a0c0-a1fbd3d391b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e4081-03fd-4fc0-a41e-5fd3de863b9d",
        "cursor": {
          "ref": "ae033504-ea97-4061-a052-5af6af1c15d8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c3cbef75-4caf-4c95-b47d-f59e1dd8a143"
        },
        "item": {
          "id": "e88e4081-03fd-4fc0-a41e-5fd3de863b9d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5e2a6b04-45b6-48b7-92ae-3a1446ec6909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0568c7-8ca0-4992-8601-10d4ced14eed",
        "cursor": {
          "ref": "1de461da-4a8a-4886-88d6-59595ab4e75f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f9dc9ae4-0436-41c5-bef2-a0c7eaa6995c"
        },
        "item": {
          "id": "0e0568c7-8ca0-4992-8601-10d4ced14eed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f4452030-c4a0-4da4-b2d1-22d35624e328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7120a8-f1f9-49a8-b338-94a4f9759f62",
        "cursor": {
          "ref": "8d1b0815-30ca-47fa-a612-a69ec69e16a1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa077de7-3748-475f-97a7-8cca0eef1309"
        },
        "item": {
          "id": "ab7120a8-f1f9-49a8-b338-94a4f9759f62",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3ab58b98-33c3-46d9-8903-053405f09025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad15aa07-4744-426b-bc14-402a75056a20",
        "cursor": {
          "ref": "005fdb1b-ffbc-4b7b-9c99-22572bc705a9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f6ca7a37-4d43-420f-b96f-fe958acfb033"
        },
        "item": {
          "id": "ad15aa07-4744-426b-bc14-402a75056a20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c504d54-7119-4d87-9ceb-2ed32c11bb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d93e70c-8dc2-4e32-bb33-097d54b7d1bc",
        "cursor": {
          "ref": "298be9b8-4871-450f-8f74-e8f6dd1b2442",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "29c1a3fc-57d6-43f1-89ca-09e5ba59d012"
        },
        "item": {
          "id": "9d93e70c-8dc2-4e32-bb33-097d54b7d1bc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9a8b9dac-ea80-49f9-b61a-f90e50c902c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe895c4-a4ec-4701-8e40-048a5f97a9b9",
        "cursor": {
          "ref": "a758ab19-4215-4fa2-a52c-f4df617bbb83",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "325b76a0-5d87-4af5-86b3-0dd3350022bb"
        },
        "item": {
          "id": "cbe895c4-a4ec-4701-8e40-048a5f97a9b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "55f57dd7-1228-430c-9416-8ae80c4ce7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647578b-49e5-4057-9661-debd31ac110d",
        "cursor": {
          "ref": "8807cec4-b3cb-49dd-a5f4-3d8e091e2d82",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0e638b4a-cf6a-4064-b906-c1edc591660d"
        },
        "item": {
          "id": "7647578b-49e5-4057-9661-debd31ac110d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fa9f1e92-ab54-4aa9-9767-ad7b055e286f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac0892c-3bbe-42eb-a585-5ff97c04adea",
        "cursor": {
          "ref": "fdd2b5a1-afbf-40fd-9c20-840344a9ec76",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "79cd7337-77e8-4bbd-84a7-780963672a00"
        },
        "item": {
          "id": "9ac0892c-3bbe-42eb-a585-5ff97c04adea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9682ebf-2cf3-4e9a-ae1f-9515a6f9e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd961722-5e17-4459-8386-0d410e6baa7f",
        "cursor": {
          "ref": "e072a31d-8a34-424d-8914-296539cd14a6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9a2037c7-3e66-4eb6-bbf0-a0b8d14ea9cb"
        },
        "item": {
          "id": "dd961722-5e17-4459-8386-0d410e6baa7f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dabe96f8-9e4f-416c-84ad-f6892406ca55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d871921f-7f6d-4a85-bc32-89ef9e1eb6e9",
        "cursor": {
          "ref": "9f2d265f-a07f-4c6f-b51c-a4ef014d5a61",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "05219b1f-b6d9-4763-8e75-ff10e028039a"
        },
        "item": {
          "id": "d871921f-7f6d-4a85-bc32-89ef9e1eb6e9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b283bd1a-715e-4e17-aaf7-e469c3b5de74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb25b77-fc2a-4826-b179-abcf0cbe0df6",
        "cursor": {
          "ref": "85b083d6-c003-4d5b-a19d-0c806796e48a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95f310ec-a4f3-45b8-bf00-0f49a5f265c7"
        },
        "item": {
          "id": "3cb25b77-fc2a-4826-b179-abcf0cbe0df6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6640e96d-3761-4775-ae7c-fe3aec57fa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8483ade1-ff86-4379-93d3-5b0cfa70d5ec",
        "cursor": {
          "ref": "3e7d6e10-bfae-47cb-8521-f6d94a04c3e3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90198e1a-3803-462f-b671-7a9bc6b2b70a"
        },
        "item": {
          "id": "8483ade1-ff86-4379-93d3-5b0cfa70d5ec",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d86e90d2-66f0-4758-a06f-f95b3917b378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4542c76-0c84-4c34-9f42-69d3f96f4c7d",
        "cursor": {
          "ref": "600da687-8963-4052-b4db-1adb9b6f0f1d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "08721cf6-617d-4691-8704-283bf705eedc"
        },
        "item": {
          "id": "b4542c76-0c84-4c34-9f42-69d3f96f4c7d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8bd70377-e762-43b4-a888-87de130117f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d6c8ee-59f4-4ed0-aa38-abd5317a9b76",
        "cursor": {
          "ref": "1376eb82-6126-4e7b-a2be-fe185b6914b1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d247aed3-a7f6-4a2e-9f22-027d0d6661c6"
        },
        "item": {
          "id": "06d6c8ee-59f4-4ed0-aa38-abd5317a9b76",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5046046e-c96a-4ffc-8eed-dffe706a5a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82d89eb-3f13-4b90-a5b2-86906c7999e8",
        "cursor": {
          "ref": "bc228a16-d027-4e46-945a-7ab245a67190",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2671c300-93ea-4f21-9d64-0877897a7710"
        },
        "item": {
          "id": "e82d89eb-3f13-4b90-a5b2-86906c7999e8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2235ae1a-22d0-4fb4-aa6e-1c7165f9b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f12c98b-558d-42b3-8c5c-babfcac5b586",
        "cursor": {
          "ref": "88632b25-970c-40fb-b08f-e977d28b7296",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "03e88ca6-0c1c-4bcb-88aa-79bc1de41723"
        },
        "item": {
          "id": "7f12c98b-558d-42b3-8c5c-babfcac5b586",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f910a484-6e83-4b16-9eac-312a2a63c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81125585-2a63-4cad-b87d-f4837bd26e19",
        "cursor": {
          "ref": "e27d5e44-9c58-4864-9806-25f37c924ee6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b549975f-2132-4a11-92f9-4c64534adac4"
        },
        "item": {
          "id": "81125585-2a63-4cad-b87d-f4837bd26e19",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "155d151d-c9cf-40e8-8040-08f1b7fdaeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab47582-5ba6-441e-88bf-09276529a138",
        "cursor": {
          "ref": "350490ef-4830-4b11-95e0-3aefd166e594",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "da1e262e-ecf3-4109-89c4-19ea9ed831ad"
        },
        "item": {
          "id": "aab47582-5ba6-441e-88bf-09276529a138",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "969c5984-f150-4bfa-8ab4-522c9deef116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec63d39-ec65-4dba-b785-8170853cf330",
        "cursor": {
          "ref": "165c02cb-c93c-4532-8f16-23d509b47703",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d060224a-62b3-4467-8b67-a7885344da84"
        },
        "item": {
          "id": "cec63d39-ec65-4dba-b785-8170853cf330",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5129911d-afe5-42db-8b98-4cf39ba196f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620512f8-84dc-4741-a143-86ca1af28d76",
        "cursor": {
          "ref": "ff814000-176e-47aa-a055-c4aeeffde57e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43ee1be8-6022-4cff-aaaf-db6337373299"
        },
        "item": {
          "id": "620512f8-84dc-4741-a143-86ca1af28d76",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88f0cf47-a47d-4fd6-880c-ecc7a47e3b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb60b5b-6d4c-4507-b58f-6f0df8eebf74",
        "cursor": {
          "ref": "3487e92e-cdb2-4c17-92ab-1719fb1247f7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d481aac2-bacb-4c92-90ec-339e1922a669"
        },
        "item": {
          "id": "feb60b5b-6d4c-4507-b58f-6f0df8eebf74",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1319f910-17fa-4f86-83c1-cc1b2d871b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f138e6e4-19aa-44f1-8132-92f5d5dbfe34",
        "cursor": {
          "ref": "35dc16e7-5b20-4201-a2a6-7807a6bc7909",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6e619609-bb7d-401a-9b91-674315ee2f95"
        },
        "item": {
          "id": "f138e6e4-19aa-44f1-8132-92f5d5dbfe34",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b6d0b87b-957a-4f2a-8c4b-c77ba6a538aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0043248d-0d10-4278-82e4-cb9d4333f24c",
        "cursor": {
          "ref": "7bad71e0-7826-4aee-8ee9-152eaa84b1ac",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "008afe12-2e3f-4df9-881c-9cf4bbe6be78"
        },
        "item": {
          "id": "0043248d-0d10-4278-82e4-cb9d4333f24c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5859a65e-19c9-462e-8a85-89e577b9ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d569a1-18fd-4ac9-a901-58a7ff2c0d1a",
        "cursor": {
          "ref": "57b3a48c-074f-496e-8b44-e4baca6b487c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3da9f051-c416-43ce-b5e2-407afb0367e4"
        },
        "item": {
          "id": "c4d569a1-18fd-4ac9-a901-58a7ff2c0d1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd85d633-b3c4-404c-a0ed-96c616ed75a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c9ab4-62fe-4b2a-ab05-56305d1ac2b6",
        "cursor": {
          "ref": "7000469d-da76-4b7d-8ca1-6c1ca73a5af1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f32de986-2335-4167-971f-274bb2cb7b21"
        },
        "item": {
          "id": "060c9ab4-62fe-4b2a-ab05-56305d1ac2b6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2be512ee-1e7c-468c-b955-1e39b9bc0d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069f9c9b-3cab-4a5a-9c1f-14954b2beb3e",
        "cursor": {
          "ref": "80416ef3-67c5-4faa-96ca-d887e38284fb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "22f5cab2-bce0-4c4a-910a-f7aa1b37755d"
        },
        "item": {
          "id": "069f9c9b-3cab-4a5a-9c1f-14954b2beb3e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b850197c-e662-4d3d-abf1-321b0c55a9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dcd9bf-4c58-4611-852b-5982fe32227e",
        "cursor": {
          "ref": "5e160425-e4b0-46e1-8462-bfe562494932",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11f5e71b-1b15-402a-9400-4692cff4a222"
        },
        "item": {
          "id": "99dcd9bf-4c58-4611-852b-5982fe32227e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "503274c4-3d22-4c78-a03e-80dfff735b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56f069e-f813-4968-b300-414a63aced09",
        "cursor": {
          "ref": "2b410dfe-f626-4499-ad7f-f7fff8f00b8a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25ea9c04-33a4-4b53-adb9-6d37c1fcee8b"
        },
        "item": {
          "id": "b56f069e-f813-4968-b300-414a63aced09",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7546be1-630c-460f-8039-61f6656044d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14731bb7-f241-4f93-8bd0-42837141be73",
        "cursor": {
          "ref": "ba4285ad-6bda-4cf9-bbc5-201c91c0e92f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c56b3e00-c667-402d-ac46-0f4d485418f9"
        },
        "item": {
          "id": "14731bb7-f241-4f93-8bd0-42837141be73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d3bd89b8-fa00-4483-9772-ddf0b56b95d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4a4c09-5f89-4656-88d7-4caae40af442",
        "cursor": {
          "ref": "c2b8c9f6-3563-48d8-ac4e-4e57e5d95b15",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5f45e83b-9401-42a5-89e6-d08d9ff46501"
        },
        "item": {
          "id": "1a4a4c09-5f89-4656-88d7-4caae40af442",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "169bd0c8-92ee-4b1c-9ec3-c92dd8dbf62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d36e2fe6-0c37-4316-bff4-596bb04a3918",
        "cursor": {
          "ref": "ca8f83c7-4eae-4d7e-873a-3bad68452b62",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6937888f-1bd6-4987-b7ca-5200de2ea66b"
        },
        "item": {
          "id": "d36e2fe6-0c37-4316-bff4-596bb04a3918",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c3aaee75-b011-4d75-860c-9c927091f80f",
          "status": "Created",
          "code": 201,
          "responseTime": 2736,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa3c622-af32-4c24-9522-47edf0ff9cfe",
        "cursor": {
          "ref": "2822f987-8f7e-4196-ac3c-8e9a047cc8b3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "963f9d02-68a9-4956-b3c3-cccaac1ea9f3"
        },
        "item": {
          "id": "8fa3c622-af32-4c24-9522-47edf0ff9cfe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8775f72a-d6e3-4285-9be2-744e8f284eec",
          "status": "Created",
          "code": 201,
          "responseTime": 1987,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7956ccc-5b5e-4a43-b26a-96c51904c7dd",
        "cursor": {
          "ref": "70e9774b-2b5f-48b3-9dd1-810392c3910b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e5d56259-adea-4b44-86de-9df2e77210db"
        },
        "item": {
          "id": "a7956ccc-5b5e-4a43-b26a-96c51904c7dd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22014d00-8cc9-46f3-bd5b-a3ecb9930769",
          "status": "Created",
          "code": 201,
          "responseTime": 2020,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcca4de8-0384-4f6f-8b9a-b93ed808169d",
        "cursor": {
          "ref": "960665b7-1758-4699-940e-1bafb03bdf66",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc0ff7eb-79e9-4968-b0e7-eec4b2c85457"
        },
        "item": {
          "id": "fcca4de8-0384-4f6f-8b9a-b93ed808169d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "83aabd9f-95da-4a32-a29b-6c6d251ff8da",
          "status": "Created",
          "code": 201,
          "responseTime": 2098,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83eca68-7b05-4c15-9b65-2bad1cc33ec1",
        "cursor": {
          "ref": "c4d288d0-9cf0-40b4-a75d-a13e2b3c1aee",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c1037e6e-2cb4-45d4-83a4-be0edebe04d6"
        },
        "item": {
          "id": "b83eca68-7b05-4c15-9b65-2bad1cc33ec1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4904e9b4-150e-4d11-9c46-21efd15b56a7",
          "status": "Created",
          "code": 201,
          "responseTime": 1932,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb7557-735b-41bb-8647-ee67c23a6a29",
        "cursor": {
          "ref": "f30ead0a-5cfe-4229-9cc6-23f54fad4626",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "76531fa7-5e3e-48a3-8b06-c667808990ad"
        },
        "item": {
          "id": "2acb7557-735b-41bb-8647-ee67c23a6a29",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2189c268-3e22-4a0d-af6c-d0f3febe3417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c8797d65-76c5-4c96-8f76-8d720a84bad2",
        "cursor": {
          "ref": "26917e9e-aa8d-49bd-bac8-ebb5a22eb607",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "51b0ef5b-4035-4847-915e-b73252f18302"
        },
        "item": {
          "id": "c8797d65-76c5-4c96-8f76-8d720a84bad2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76193f94-a967-4112-9702-05c3d6cee37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4e277a-c174-4fe7-bf36-6b6d3900b4ac",
        "cursor": {
          "ref": "62757344-2293-425d-8e7f-b99b51b20018",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1fb4bf92-db6d-47ea-a053-d0bbbcd088a1"
        },
        "item": {
          "id": "ba4e277a-c174-4fe7-bf36-6b6d3900b4ac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d89c85f3-734a-4255-b87d-bcfd78b8f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0120b94c-fdd2-443e-b563-adf1104c851d",
        "cursor": {
          "ref": "76e273f6-dadc-4559-ba57-af051a779c08",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d0b3f1f4-c2e8-4eac-8a75-99a73425ca7c"
        },
        "item": {
          "id": "0120b94c-fdd2-443e-b563-adf1104c851d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a41ab3d1-467c-4fcb-bde2-455132e17956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781f7263-d32c-4e13-b079-8e37b3c5fe49",
        "cursor": {
          "ref": "cdb02d19-c03c-4b53-a09a-8fb280e36bfc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dae73ada-2fc1-4071-bd9a-36ea0a8c9ea5"
        },
        "item": {
          "id": "781f7263-d32c-4e13-b079-8e37b3c5fe49",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e8d5170a-0747-4b47-8abe-17efd6f4196f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b84839-5ef3-4bd6-86f1-bd591e807274",
        "cursor": {
          "ref": "be6fd986-005c-4531-8a34-459a8b884eba",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "40f4873d-2fe3-46fb-aa25-2a907e4e34fb"
        },
        "item": {
          "id": "55b84839-5ef3-4bd6-86f1-bd591e807274",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99b96d08-0174-4f57-b26c-c776fc2de407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d5c313-ebf4-4cac-9d44-6196a60c57a3",
        "cursor": {
          "ref": "093b2e40-4e4d-4cf2-83d9-e885a851707a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "06bd5ce8-943e-4429-91bd-d884e595eed8"
        },
        "item": {
          "id": "c5d5c313-ebf4-4cac-9d44-6196a60c57a3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c49955ea-c604-40b3-b395-0eafc03fda61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8fc93d-4b53-4bdf-abf9-7cce8464d921",
        "cursor": {
          "ref": "25dd7b3b-2f39-4f95-902c-317ad307562e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "377583ce-8227-49b0-8905-fe38c018b2f6"
        },
        "item": {
          "id": "ef8fc93d-4b53-4bdf-abf9-7cce8464d921",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9302e4d-c6d0-4c2a-90df-929b70245b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581d7dad-f15d-4a92-9346-83aa177e2915",
        "cursor": {
          "ref": "5bc861a3-e777-42fa-b22e-12c559bf89b0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cbf483e4-3e49-4aa1-8bad-306a6d0216a8"
        },
        "item": {
          "id": "581d7dad-f15d-4a92-9346-83aa177e2915",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2fffd5d9-8497-4a37-be49-c54b31c03910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa7d3ad-bd30-4b47-b4bc-0927a052fb92",
        "cursor": {
          "ref": "7f72c7b0-61f1-4250-b76c-272a5c208763",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bde1cf46-86c3-42a4-992c-18ec88279eb7"
        },
        "item": {
          "id": "eaa7d3ad-bd30-4b47-b4bc-0927a052fb92",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f22b8f75-f2b1-422c-afd8-b081ce06cb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ffd945-1391-4a00-aaee-6852adbf87b2",
        "cursor": {
          "ref": "32df2367-e571-4453-912f-323f236eec63",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0b269fd9-8fb1-4c29-950c-a9c5ff7480bb"
        },
        "item": {
          "id": "98ffd945-1391-4a00-aaee-6852adbf87b2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74b2600e-bd47-447b-880f-4c2ab1093d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d1de14-91e5-45c7-b83b-6b17e1b8779b",
        "cursor": {
          "ref": "32314206-81f9-4209-b026-b8cd8ec23f07",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0570ceed-1bcb-463a-a88f-e1bfefaf74da"
        },
        "item": {
          "id": "d7d1de14-91e5-45c7-b83b-6b17e1b8779b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ac5340f-93e7-4f25-8a6e-b5492b62aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518fe2b1-2517-4857-9214-32e1ccfbe06c",
        "cursor": {
          "ref": "d22435a6-3797-456e-a304-77de60266635",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b8840c11-d908-4d3b-8e4b-13afedce301f"
        },
        "item": {
          "id": "518fe2b1-2517-4857-9214-32e1ccfbe06c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d6d9283-a9f9-4fd6-90e6-0b99f781ae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310e906a-5d5f-4ea2-9d68-1426a3daf146",
        "cursor": {
          "ref": "87510b0d-04a6-4fb0-b4db-5d608e518d19",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bc6bd25d-f3d5-4012-9405-a4353928f91f"
        },
        "item": {
          "id": "310e906a-5d5f-4ea2-9d68-1426a3daf146",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ebe79b74-46b4-4b35-b939-03fb8b208869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb8571e-637b-4ba1-8922-6bd09df76d3a",
        "cursor": {
          "ref": "4afaac98-3a3f-4d55-acba-c94cdea0d1a3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d77f4193-3973-4eaa-a418-1f085f829c16"
        },
        "item": {
          "id": "1bb8571e-637b-4ba1-8922-6bd09df76d3a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2bb9a53b-6558-419c-807a-c0b4af4ddbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb3fb30-258f-40a4-816a-62ce91988fc9",
        "cursor": {
          "ref": "72d30c0e-94b4-4053-b4ed-43b6505c0bd8",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d5b7900-c947-47ff-84a6-5887f13eb965"
        },
        "item": {
          "id": "4eb3fb30-258f-40a4-816a-62ce91988fc9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71963bb0-c83a-4dd1-8ce8-15d39f9d9729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a5ec1-5f10-41d8-89e9-edd9f797858a",
        "cursor": {
          "ref": "bc2eb0e3-8a40-401a-965b-31a3819648c2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6e701542-14b5-4eb1-93cd-94a43235a4ed"
        },
        "item": {
          "id": "5e4a5ec1-5f10-41d8-89e9-edd9f797858a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd4d90f7-911d-44cb-89c9-0574de84286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f5ae13-5fdf-4362-8bd1-d51b17654919",
        "cursor": {
          "ref": "0f7988f5-5ce8-48bb-8b19-893807920b0a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "981dcc89-b273-4ca0-a706-2dee18d6a2a5"
        },
        "item": {
          "id": "76f5ae13-5fdf-4362-8bd1-d51b17654919",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "876f3a91-4f0d-4b0c-ad60-e97e4ea5e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fce673-6290-4639-a352-4e8fb1857680",
        "cursor": {
          "ref": "fccf1a65-b66c-41fc-8c6d-ec16c0de90b4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bf334c26-5409-46ed-a29e-5f15ccfe8a27"
        },
        "item": {
          "id": "f4fce673-6290-4639-a352-4e8fb1857680",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "39ff659c-10b0-46bc-9bd4-3bade26960ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69c663a-85c3-41b1-8034-ba5ba62becff",
        "cursor": {
          "ref": "498609be-d3d3-4b02-ad8f-494e382bfc18",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7421ed0f-e8b4-428a-b090-01d77f7b96d1"
        },
        "item": {
          "id": "d69c663a-85c3-41b1-8034-ba5ba62becff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27f5d9a3-6267-46b6-802b-76a4efe1df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1858ac-9330-4379-ba03-23150e4f9805",
        "cursor": {
          "ref": "c1a36e18-b833-42ac-81f9-cd7f9c55b60a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "37821741-21cb-4361-9e75-8317d050aa9f"
        },
        "item": {
          "id": "cf1858ac-9330-4379-ba03-23150e4f9805",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5914255e-c2ea-481c-91e6-ba7a07a249ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3143c35c-3815-4176-9ed6-e664b17c98df",
        "cursor": {
          "ref": "0d2ad12b-46cb-4d7b-b444-6fba86d9557c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44665303-bdc9-4873-8669-cbfcaf291102"
        },
        "item": {
          "id": "3143c35c-3815-4176-9ed6-e664b17c98df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11b12cbc-674b-416d-b793-5edff2666008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd09e48-a32b-4068-96bf-42680c7bd6b6",
        "cursor": {
          "ref": "eeeac950-88ca-4844-90d2-c7efb691db13",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e78ee716-684f-4ad6-a1e5-3e4570d1ff4f"
        },
        "item": {
          "id": "4fd09e48-a32b-4068-96bf-42680c7bd6b6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f30d99b8-3033-432a-a841-5fa616018256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5adbe4-34f4-45f4-ac24-2e9d68ec6deb",
        "cursor": {
          "ref": "df6635e2-92d6-4d2b-b026-e397500119e4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "66f35522-e7bb-4691-b4a7-b7fb178513b4"
        },
        "item": {
          "id": "0e5adbe4-34f4-45f4-ac24-2e9d68ec6deb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c2fb87e-7799-471a-8552-5128928d36c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99438a78-0d05-4b83-a8d4-f18991b11a23",
        "cursor": {
          "ref": "99a14df3-36b4-41ec-9f92-59d7de513000",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e2d98b68-9efd-48db-8ad5-3102954bb1aa"
        },
        "item": {
          "id": "99438a78-0d05-4b83-a8d4-f18991b11a23",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3be7aee8-2207-47ca-b87c-1e3cb8f0251b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee2ae74-5bca-45eb-9e13-7f04593aa7b4",
        "cursor": {
          "ref": "60f85eab-0cbf-4912-b556-add8656ab976",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "894174d0-72b7-4a82-b2c7-4e49cad0c696"
        },
        "item": {
          "id": "2ee2ae74-5bca-45eb-9e13-7f04593aa7b4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0dcfaad9-e443-4f57-8c6d-ed42cf1254a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638f6971-7ffd-4a51-b770-b3786d71037b",
        "cursor": {
          "ref": "6d78dfc6-3eb7-4a61-af55-f76542487115",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6143ba13-8651-40d6-80ad-40477f7a3846"
        },
        "item": {
          "id": "638f6971-7ffd-4a51-b770-b3786d71037b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "00fd9366-9184-4c8f-82de-d4724e9a8bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cffb219-406b-4b03-bfa9-1864101f95cc",
        "cursor": {
          "ref": "de390f47-ee8d-4b65-8dda-1d4b51eebee4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4c1724c2-abf2-49cb-85e9-c48a39cfe5c8"
        },
        "item": {
          "id": "1cffb219-406b-4b03-bfa9-1864101f95cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8a724c8d-fdf1-4c49-9146-768588b230c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3e4d89-229b-4e56-8dea-04b0c299423a",
        "cursor": {
          "ref": "06933476-9857-4e37-979a-fa2f44a91485",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d273f23-a759-45a8-b69f-d375646fc38b"
        },
        "item": {
          "id": "ce3e4d89-229b-4e56-8dea-04b0c299423a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e8b71de7-c68c-47da-be91-edc628020086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd6a5d-2b07-45bc-a414-d1002c7833a7",
        "cursor": {
          "ref": "04910693-175b-45ce-adfa-23ab33885321",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "680076b5-1917-4349-b60c-3f52c8593981"
        },
        "item": {
          "id": "fdfd6a5d-2b07-45bc-a414-d1002c7833a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77f1cb1b-537d-4445-a539-d4c152513f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c70ecd4-19ee-4fa5-9a33-314185ef8b92",
        "cursor": {
          "ref": "733256e3-5b80-446b-8862-0f669a979e03",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "afe1f7f7-59a2-4e60-95ad-7fd49b100eb7"
        },
        "item": {
          "id": "1c70ecd4-19ee-4fa5-9a33-314185ef8b92",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "28047289-7372-4093-8a70-edc17305b629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6259b9-d941-47ec-8a7d-698ee5b88a67",
        "cursor": {
          "ref": "46948b31-531b-45b3-9b11-69dd1d135e0d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14c9191d-e07a-414b-aa22-9468f25cbad9"
        },
        "item": {
          "id": "2f6259b9-d941-47ec-8a7d-698ee5b88a67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2224883-316c-4123-a546-449cde69aab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ab7163-299a-4798-9703-776dc9aad3f6",
        "cursor": {
          "ref": "95fc2b63-7c90-4891-8a59-c4e9078e2c67",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d8e58558-bdb5-48f7-bdd1-45aa76b6b1de"
        },
        "item": {
          "id": "f6ab7163-299a-4798-9703-776dc9aad3f6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5e1ee5d7-5f4f-4698-86ee-8301051570cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc01cb4-fe36-4d3a-a232-a0a7a7221900",
        "cursor": {
          "ref": "a04710a8-600f-4fa5-93c3-c91a2dc336f2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3eda33b2-b5d3-4b28-ab0d-466cc8027fd3"
        },
        "item": {
          "id": "acc01cb4-fe36-4d3a-a232-a0a7a7221900",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1d2751c3-fced-4492-bd13-a98e157044f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2768d84a-c965-416a-8cfb-25922481a752",
        "cursor": {
          "ref": "494bef18-9d51-4e8c-96f4-d4114819b8d0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fa580a95-894b-49fa-90fe-96feed393aad"
        },
        "item": {
          "id": "2768d84a-c965-416a-8cfb-25922481a752",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c98ce38a-b143-4970-8c16-b2e16ee5b14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232afbac-e10d-4c1a-bbb0-b2ac60bcbb60",
        "cursor": {
          "ref": "68de7f30-145c-4f7f-b8da-9604a0c8fd01",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b7f5c99d-8fc4-4c20-9d44-7bb7d34df7c5"
        },
        "item": {
          "id": "232afbac-e10d-4c1a-bbb0-b2ac60bcbb60",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bd7739eb-0dee-4dee-ae7d-b36233ae8a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302558b-33d1-4186-adee-d9587bf4fd1b",
        "cursor": {
          "ref": "4092c9f9-f484-41d9-a7b8-da6216e1bc31",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d1e68914-76d6-4706-abe8-68c99cdb6c65"
        },
        "item": {
          "id": "a302558b-33d1-4186-adee-d9587bf4fd1b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ae6f0bc-0744-4a45-b3f7-9a2cdb1d1a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e80d1ab-d8bd-41ca-84d9-9ca9b4b5013a",
        "cursor": {
          "ref": "ed26ef0b-ebab-44d1-888d-4e0faf8847ef",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4baaae1-5ae3-450a-8836-e2348844e3d0"
        },
        "item": {
          "id": "3e80d1ab-d8bd-41ca-84d9-9ca9b4b5013a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "82234663-924e-4c1c-8066-1152a9699972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83502471-80fd-4473-a362-8c58545d1940",
        "cursor": {
          "ref": "98da9205-3e6e-4620-9ea6-6826b7cea596",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "59b7e661-f293-4da6-be5b-2f2cf1f345ca"
        },
        "item": {
          "id": "83502471-80fd-4473-a362-8c58545d1940",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "719b8911-1450-4278-ae5e-4d2fadab644a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3485b3eb-ea8d-429a-86d2-ccaa4ab24fc2",
        "cursor": {
          "ref": "1972fe30-42ae-4a1c-be96-2e5958755aa3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74c3a6f9-e1d5-489e-8e0b-aea34684d399"
        },
        "item": {
          "id": "3485b3eb-ea8d-429a-86d2-ccaa4ab24fc2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd32e583-a8d4-4ae6-997e-4c7237d47d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c24d9d-5792-4215-a260-95acb2155dd4",
        "cursor": {
          "ref": "2ede81ad-e80e-4533-8d50-f7e325bd166d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6afad438-1a8b-491a-bbf7-4df67c13f807"
        },
        "item": {
          "id": "39c24d9d-5792-4215-a260-95acb2155dd4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f96f05f6-5e91-4929-80f4-a4f68309c3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae05ff-c9ef-4219-8bc4-3f9d60a6e9d7",
        "cursor": {
          "ref": "17682edc-22a5-4641-86fb-57d7d4c8ca98",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d6dca7a9-0e6c-4e72-983e-8edcf947c65a"
        },
        "item": {
          "id": "20ae05ff-c9ef-4219-8bc4-3f9d60a6e9d7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5269b57e-c30a-4636-a7a0-eb2df55eff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd43e877-f91b-490c-8d03-37a149612fae",
        "cursor": {
          "ref": "be3d0066-1271-45f0-86be-1717408f6fa5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8b03eb80-66e7-4042-b7dd-1decdac00779"
        },
        "item": {
          "id": "cd43e877-f91b-490c-8d03-37a149612fae",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c4d0b1c-2416-4ef3-bb08-3f681c01e971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fa493c-b007-4ef5-990f-b3136ee3195a",
        "cursor": {
          "ref": "edcdb49f-b087-4e4a-b12b-27d05c261a04",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6a6ce221-a7ce-4758-9cbb-7737931f4842"
        },
        "item": {
          "id": "80fa493c-b007-4ef5-990f-b3136ee3195a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "802bad92-2f02-4544-baf1-a48a019d9a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c19f90-1e41-4f4e-9aae-791e728a755a",
        "cursor": {
          "ref": "63f6f00e-5da2-4d09-bf1f-03aab3fa4f6c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "57c40771-346f-460c-a34d-527d7f4da8a3"
        },
        "item": {
          "id": "f0c19f90-1e41-4f4e-9aae-791e728a755a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8aad5492-da20-4070-b0a3-bd6239045b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edcb24b-ef46-4f28-a364-f7640672213b",
        "cursor": {
          "ref": "1b53a8b6-d86c-4718-b80c-1360fbf00d34",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d978c680-725a-4a07-9716-e0d4f18ad6c1"
        },
        "item": {
          "id": "9edcb24b-ef46-4f28-a364-f7640672213b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f32fd8bd-cf51-472d-aef2-1fea6124946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7d0c9e-5648-475e-ab80-bd5c219cbcbe",
        "cursor": {
          "ref": "c8df4ac0-315c-4697-9004-c52b0415328b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8f2f644f-cc33-44a3-9a22-1d4141787977"
        },
        "item": {
          "id": "ea7d0c9e-5648-475e-ab80-bd5c219cbcbe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2cde96eb-9206-4d0e-a16a-050282d17de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a371c-407a-4e78-b11c-b184f29aa121",
        "cursor": {
          "ref": "54c3e478-5bea-4a63-b0d3-1175e8537d31",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "29b8cadb-3e54-4b6c-89e7-e4cc79d3502e"
        },
        "item": {
          "id": "fe0a371c-407a-4e78-b11c-b184f29aa121",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6d94e8a-930a-43e7-83db-3d7758806054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976283da-c224-4582-8710-3d72c23d098e",
        "cursor": {
          "ref": "456b44d7-0d5d-4823-ad36-0615e60482af",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b8189f87-20e6-45ca-8864-31f5d4cbb36e"
        },
        "item": {
          "id": "976283da-c224-4582-8710-3d72c23d098e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d1673eea-f5f1-44c7-b90e-f41c92bb5df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97c1d66-d29e-4222-95e2-030071578e92",
        "cursor": {
          "ref": "f6ededfb-1576-468a-8e6b-20569fe1fb22",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f37bd972-2443-43b5-9761-2f0519efc227"
        },
        "item": {
          "id": "d97c1d66-d29e-4222-95e2-030071578e92",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "431eca3f-8afa-4590-9dac-fff9b724b1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14ae7bc-6710-41fc-9b11-e9eeeb5b76c0",
        "cursor": {
          "ref": "af6af3d3-0e91-44eb-a9c3-5a846eca66cf",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b9d21593-80b4-418c-b06a-f0c3861b7a6e"
        },
        "item": {
          "id": "f14ae7bc-6710-41fc-9b11-e9eeeb5b76c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fcf52e5a-ba5a-4952-9130-92da8441031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e275d0ea-4a59-40e9-ad37-550dce6b43fb",
        "cursor": {
          "ref": "c29a38ed-1b48-4395-b458-6105e5447a82",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf00714d-c232-4c7b-8a33-d4f92ad4f45e"
        },
        "item": {
          "id": "e275d0ea-4a59-40e9-ad37-550dce6b43fb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94db7bfc-a264-4b81-988d-1e3bc6043a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86f19f2-0c87-4205-8008-0f9a22107b1f",
        "cursor": {
          "ref": "20436ca1-380a-4fff-b665-ee1c11ff6e02",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "43a4d951-2552-4527-9b38-eaabc2481059"
        },
        "item": {
          "id": "e86f19f2-0c87-4205-8008-0f9a22107b1f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "02dbe1d5-2061-4a1e-9033-96044b40178d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d75d2-0b65-48d4-bcae-90f24d174761",
        "cursor": {
          "ref": "28e7e7f6-5e65-4867-9fb6-50d56c165555",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3aec36a5-6e17-40ff-9130-8ce83cc4b7c7"
        },
        "item": {
          "id": "b44d75d2-0b65-48d4-bcae-90f24d174761",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f35f7cbd-5389-4822-a91a-5cd10f49e24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a4e95-424c-46ad-9ca1-211cc09e9b84",
        "cursor": {
          "ref": "5852594d-e5c2-47f4-9da8-ab2e1143d64d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4a3f4a6d-509c-4507-95b7-7da714da9e40"
        },
        "item": {
          "id": "632a4e95-424c-46ad-9ca1-211cc09e9b84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25e14a19-0355-4323-bfd4-8549bbe62c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0812fce-46b6-462a-a7c0-ba027dcd37b3",
        "cursor": {
          "ref": "b3eb95bd-b7ec-416d-b43e-c728fa97eec1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7c493e20-fef1-426d-8845-c018521d9b9c"
        },
        "item": {
          "id": "c0812fce-46b6-462a-a7c0-ba027dcd37b3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f39a3691-2665-4ee3-ba39-09d70b5ac514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a39bc54-65ba-4da3-84dc-c898710ce476",
        "cursor": {
          "ref": "3969aea2-f21f-4e3b-990a-2840e7ab8478",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "77801b88-cd9a-4a51-ba3f-66a105886298"
        },
        "item": {
          "id": "5a39bc54-65ba-4da3-84dc-c898710ce476",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de465285-a519-414e-9235-f30bf1825afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1081c03-f1b9-4590-80c3-9817c0580021",
        "cursor": {
          "ref": "86321421-757c-4bd5-a8ce-12caf5aeac90",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "592bc864-84fc-4896-8a0b-6c9eb578a1e6"
        },
        "item": {
          "id": "c1081c03-f1b9-4590-80c3-9817c0580021",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1454ff40-58de-4835-99d6-9f24466a317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae55ff5-09c8-49e5-8e35-b6d07ba7a344",
        "cursor": {
          "ref": "e4b48d3b-cba5-4aca-beec-eddcfbca9e48",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ac1c6170-cc00-42d2-9686-9ee9fc5d7743"
        },
        "item": {
          "id": "0ae55ff5-09c8-49e5-8e35-b6d07ba7a344",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b635b692-a2bc-4c54-b862-e1db61c3febd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed099d90-d68f-4c1f-8935-60d952b776fb",
        "cursor": {
          "ref": "5f5cc8fb-4ddf-45aa-b45c-0517e4bed143",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c39436fb-825d-45e3-bec2-b192034917f4"
        },
        "item": {
          "id": "ed099d90-d68f-4c1f-8935-60d952b776fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9d233eb5-558a-49e2-b911-8c59e2a64188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d42d034-1ba1-4a54-87dd-de7235141557",
        "cursor": {
          "ref": "ad04a0ed-6ddc-4de0-a081-d5e7bcba9cd6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1c8bd3df-d4e4-4a0e-9684-b89a05bdf1e1"
        },
        "item": {
          "id": "3d42d034-1ba1-4a54-87dd-de7235141557",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "09b5a1a7-c32e-4eb8-89f8-d74ebe78dfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89db0b1-6757-4c86-bbbd-5c949bd4ad52",
        "cursor": {
          "ref": "90356a49-2c92-418a-b2bd-d83c08d92907",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e89b4c09-304b-4c61-86e2-a2abc75aa78b"
        },
        "item": {
          "id": "f89db0b1-6757-4c86-bbbd-5c949bd4ad52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e58c8853-00b8-46a2-a813-b999ae11ea2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bd76d1-9f58-4110-9aec-a4cf8065c470",
        "cursor": {
          "ref": "18553027-59d1-469e-b9e0-753b978c982c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "50475edc-75de-4a9b-a87b-f88bef49a3e1"
        },
        "item": {
          "id": "e4bd76d1-9f58-4110-9aec-a4cf8065c470",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bc88a9ad-b1e5-4c84-aafa-553f52082290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544a337b-c9dd-474e-b248-c76329fe9f66",
        "cursor": {
          "ref": "9cc9376b-853a-4ac4-ba59-f0c63ded0885",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fb209c83-cc9c-46ad-a427-d52570f3adc9"
        },
        "item": {
          "id": "544a337b-c9dd-474e-b248-c76329fe9f66",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9debb14a-5fb4-4c22-91e4-d2cf121a352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cff080-2cc8-472e-8a8d-6b3728254359",
        "cursor": {
          "ref": "6dd11933-bbcc-427b-b738-6c336f882b5f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "77ab68fa-794a-4b7b-88e7-c513b0c6069f"
        },
        "item": {
          "id": "37cff080-2cc8-472e-8a8d-6b3728254359",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "85ba5a5d-0ace-4ee4-b985-67542d1ab0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49af720a-99e2-4ea1-b446-d6fcb8aa4cac",
        "cursor": {
          "ref": "e1ddfe6f-d525-4c38-9fa5-c335499508a8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c7b2c10d-88f4-4cef-922b-6908d89245b3"
        },
        "item": {
          "id": "49af720a-99e2-4ea1-b446-d6fcb8aa4cac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a70fe38c-c485-40b8-887e-70fc22b1e930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5d2fcc-b237-4fc1-97a3-2103cde9ef5b",
        "cursor": {
          "ref": "a4f90f95-3a97-40aa-a067-9a6d9495b58c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b9a43ff4-0577-4568-b8f2-238f88d113ef"
        },
        "item": {
          "id": "9b5d2fcc-b237-4fc1-97a3-2103cde9ef5b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1e711368-765a-475d-a792-f9d2f17b8fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb3fda4-55dc-4622-92d6-d9df380af9b1",
        "cursor": {
          "ref": "13dd883c-3dcc-4300-ae44-b2acf96c9e45",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3af36971-b5f6-4923-a603-00e660ac25cc"
        },
        "item": {
          "id": "3bb3fda4-55dc-4622-92d6-d9df380af9b1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "12265dec-b119-4c14-b9df-8466120f770b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af1659d-0e32-42fe-8a54-f72793c94d82",
        "cursor": {
          "ref": "504fb04b-c022-4a7d-985e-a04f56cb1fae",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7c154347-b133-4fbc-882b-a0f315630cda"
        },
        "item": {
          "id": "7af1659d-0e32-42fe-8a54-f72793c94d82",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "706f703c-6a6e-472f-8c41-2590d5513a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a3b4df-a033-433a-a6d4-1044e3b6168a",
        "cursor": {
          "ref": "c6e7e78e-86db-4d05-867d-cf08fcecf2ea",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "87936dee-6a80-4043-815a-c00c19cebff5"
        },
        "item": {
          "id": "31a3b4df-a033-433a-a6d4-1044e3b6168a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "56510ce5-8670-4be9-810e-f975917cc661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa96bec-6dd5-4b19-bfb8-497acd8082d4",
        "cursor": {
          "ref": "4b9c8717-a609-424c-af3e-64e91df88fe3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5b2d696e-60fd-4dde-ab76-47747ce8fd6e"
        },
        "item": {
          "id": "dfa96bec-6dd5-4b19-bfb8-497acd8082d4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ab3f7e61-5a36-4b31-954d-79c8d7ebe867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab403be-fe5f-49ed-8c23-cbbd9eb6f86e",
        "cursor": {
          "ref": "15c7e855-601a-4ac6-b5b4-7ed9ff46346e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fab9cb43-2655-44ed-a10d-8d5ed3874579"
        },
        "item": {
          "id": "0ab403be-fe5f-49ed-8c23-cbbd9eb6f86e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "73b361d0-d55f-49f8-b482-470fbfb639ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ed98a6-93fa-4c68-bb66-9775ac21e46b",
        "cursor": {
          "ref": "05d8da90-883a-4ec3-a204-0f742254b259",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9c68fc20-3832-4305-86d6-bd95cc760796"
        },
        "item": {
          "id": "d1ed98a6-93fa-4c68-bb66-9775ac21e46b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7a9a33c4-aab8-4f45-bf56-8d9390eaa68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425efa95-9302-4bc0-8b13-943ff23236a2",
        "cursor": {
          "ref": "ab0e1bb7-e283-495f-9946-8c2f963a243c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d4d2d0bc-ea3f-4c95-b2a2-951c7eed6014"
        },
        "item": {
          "id": "425efa95-9302-4bc0-8b13-943ff23236a2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "72d2a88c-74fd-465f-b32b-0e594619172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6352fef0-55d2-4072-9c6e-4da90b1206d5",
        "cursor": {
          "ref": "dbb4388d-c13a-46d3-beef-f90284093148",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "94994923-716d-4f4b-85d4-0a553027642e"
        },
        "item": {
          "id": "6352fef0-55d2-4072-9c6e-4da90b1206d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1ed03db2-17fd-47f5-b569-380e3f86423b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e7763a-ae01-45b7-9ff9-f045958be157",
        "cursor": {
          "ref": "286319d8-20fe-459a-9d2f-09a2d5efd7c1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "767dfce2-2a21-49e3-8837-1e5fdd5fe43d"
        },
        "item": {
          "id": "b0e7763a-ae01-45b7-9ff9-f045958be157",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a37ff02-0ec3-4d26-aebb-3f62ce21b8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cec29a7-47e5-488b-82c1-c56d09b68a7d",
        "cursor": {
          "ref": "d5a28972-aace-4a3c-826e-1fbd66312798",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "12bc2d0d-b96f-4644-a7d0-ad691b313567"
        },
        "item": {
          "id": "5cec29a7-47e5-488b-82c1-c56d09b68a7d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "07e76419-cdf1-47c8-b3d4-976a958919ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f43c4f-6aa7-430f-a964-d15fdd331cbd",
        "cursor": {
          "ref": "5866143f-ab93-4269-b8ba-5830c9e918cb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f330d524-1a16-4d74-a67a-d6a6e59edd80"
        },
        "item": {
          "id": "e5f43c4f-6aa7-430f-a964-d15fdd331cbd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ecdfd638-b3b1-4e5d-be75-ed3489f249e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059c8f05-a619-4e86-80fc-436e416a2654",
        "cursor": {
          "ref": "5866e81a-50d4-4599-aa82-9f9bb0db9b65",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a513ca4e-d66e-4fd3-bea7-f2e4ef9de0ee"
        },
        "item": {
          "id": "059c8f05-a619-4e86-80fc-436e416a2654",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eaa51f5c-9120-4ce4-beb4-4d8a298beda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139e467c-b2e3-4888-b2ac-4f135dee1c1d",
        "cursor": {
          "ref": "a2417b87-fc1b-4991-9ca1-c2aa12c619e4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7542bce-cb53-4c18-9645-33f998ca49b1"
        },
        "item": {
          "id": "139e467c-b2e3-4888-b2ac-4f135dee1c1d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6ad6d16f-0563-41a6-88ee-cdd097dd17c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ee288e-ee4e-422d-94c3-04c280c0ff52",
        "cursor": {
          "ref": "5a8f0c6f-bb50-4704-9b65-ab70be79810e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e43e0d7-4c1a-4171-ab8a-d2156a6c9add"
        },
        "item": {
          "id": "11ee288e-ee4e-422d-94c3-04c280c0ff52",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6458f279-21c3-4e0f-9ed0-7ad0f5795178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db1d834-7079-49a0-b90e-0cccd6942ad0",
        "cursor": {
          "ref": "21a23a36-e945-48fd-9029-1c3fc44a802c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "449e7b82-43dd-43ea-abee-f06a9651f847"
        },
        "item": {
          "id": "2db1d834-7079-49a0-b90e-0cccd6942ad0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1a732952-e414-4d5c-a10d-967a4988f90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa9b26e-5108-4809-a384-a98733d55455",
        "cursor": {
          "ref": "c4122851-8964-4c03-96a0-cc10eef10cc0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6991d86f-9866-4e67-ac5b-96afd559cf6b"
        },
        "item": {
          "id": "8aa9b26e-5108-4809-a384-a98733d55455",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dfb61a5f-d1f3-4fb0-ace2-bc4ad9cd168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7987764-6c2d-4a2b-a201-e96258b6f8f2",
        "cursor": {
          "ref": "8398733d-cb86-4cb8-9f18-81dd6b189c47",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "53cea134-840c-4434-aa87-ccf1a923cfa2"
        },
        "item": {
          "id": "d7987764-6c2d-4a2b-a201-e96258b6f8f2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6ede1297-eaf3-4f4e-8b16-1f8c8027347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67338e25-0824-447a-911f-d3302c38d1a4",
        "cursor": {
          "ref": "6b0a284e-23cc-4e9c-aba2-7218ddfea4d5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8f10332a-174f-4710-9506-b3f215ff86db"
        },
        "item": {
          "id": "67338e25-0824-447a-911f-d3302c38d1a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "77a93023-62bd-4549-9989-c2537786875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f38539c-7408-494f-bc46-4bbbe2bc28e9",
        "cursor": {
          "ref": "42b963f7-6ed8-45a2-8b04-6d6b2955b059",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "abd531a6-fe99-44e0-8bef-9d640ce3aef4"
        },
        "item": {
          "id": "7f38539c-7408-494f-bc46-4bbbe2bc28e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ca28cdc-2c4b-440a-a17a-f630e8878c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426afb0b-ad7a-4588-8d68-a6b8832195cf",
        "cursor": {
          "ref": "73bd9a3e-485a-49a7-aa99-f9cf895eb4e8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df6abb35-b58e-4797-8739-5e02d7848c70"
        },
        "item": {
          "id": "426afb0b-ad7a-4588-8d68-a6b8832195cf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "10dc4ee4-982f-44cf-b8d9-303e31f5201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e362ea0-d948-477b-a85c-c11565a03e6d",
        "cursor": {
          "ref": "9cf1a11e-93e7-45eb-be41-5da11c828c6f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14e90bfe-d343-4736-94ee-95eb60f3a587"
        },
        "item": {
          "id": "7e362ea0-d948-477b-a85c-c11565a03e6d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8171779d-de3a-4063-8f76-5daebf5c6dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90294b-ef71-4bce-a36e-f98a49e18a80",
        "cursor": {
          "ref": "8e84e619-8afe-47ab-8ac0-59c961af6451",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e75a0e5d-d740-405a-a233-c2dc788008e5"
        },
        "item": {
          "id": "7d90294b-ef71-4bce-a36e-f98a49e18a80",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "31138c60-1b9f-4712-a718-d9bae33d417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c2db3-a113-4192-924a-efc27c3a691d",
        "cursor": {
          "ref": "4a9569b1-fb29-482d-8a6b-4b66d4f9a856",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d7c6a0e4-5947-48f8-9286-2ea55c0ef965"
        },
        "item": {
          "id": "625c2db3-a113-4192-924a-efc27c3a691d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c973c58d-cea5-43cc-94a5-74980241a817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d4dbc-4f1c-4244-816f-8ff90eb1fe4b",
        "cursor": {
          "ref": "3cdeccc2-c4db-4c1c-aa2b-f1a02f3b8c00",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c387c1ec-04ae-4216-84d2-42fb65a017d4"
        },
        "item": {
          "id": "5d6d4dbc-4f1c-4244-816f-8ff90eb1fe4b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "028de9f8-e66f-41a5-b68a-aad1921f4b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815202b-607e-4b55-839e-a503a59b3850",
        "cursor": {
          "ref": "26f4c398-fb06-4e66-9e2f-9f512e0d9464",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bcc7c11e-a0e1-41ad-97b1-2739169f0487"
        },
        "item": {
          "id": "f815202b-607e-4b55-839e-a503a59b3850",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b143a71e-d1ec-47b9-a349-e9b2d854a674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045c8a8a-bd06-410c-a6c3-780d32930a91",
        "cursor": {
          "ref": "0d1adad7-e1a4-4309-ae0d-dd21b1efa3b7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3403ed5b-1fe6-4ae4-bc3b-c0c15bc8eee6"
        },
        "item": {
          "id": "045c8a8a-bd06-410c-a6c3-780d32930a91",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f4285eb7-7e82-4860-972f-80393ff81ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f55007-2488-4576-8116-0e3ac26d4de6",
        "cursor": {
          "ref": "e37d050b-5295-4c85-9b11-dc9d8b406073",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d1a4f6c3-8ca1-40b6-837c-ba3cdc7ef0a8"
        },
        "item": {
          "id": "89f55007-2488-4576-8116-0e3ac26d4de6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "936e91c1-30c7-4acd-a718-0ec2bb9f816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f1270c-4409-48c6-a7c4-335165912ae4",
        "cursor": {
          "ref": "792d50f4-6462-48d8-b6ae-0d457591f40d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e4371d4-3351-4323-9b19-4245df27af94"
        },
        "item": {
          "id": "c9f1270c-4409-48c6-a7c4-335165912ae4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7e5723c1-5759-4fac-8f51-a45cda773316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94af04c2-e08f-4701-886a-e4e05ddb82cc",
        "cursor": {
          "ref": "84618b94-a9c8-4011-b106-632e3c335109",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9aa1989a-efb4-4e37-bcdc-01046f2971c1"
        },
        "item": {
          "id": "94af04c2-e08f-4701-886a-e4e05ddb82cc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1d1190e-83ad-46c3-8eed-6567b05e2e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb63719-919f-4f92-ad3c-c36cc588e4a6",
        "cursor": {
          "ref": "898d75e0-a36b-40df-b99e-a5d580b4c6cd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "db09ad44-b6fd-4361-a1ac-3b8c181f2da8"
        },
        "item": {
          "id": "0fb63719-919f-4f92-ad3c-c36cc588e4a6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4cdfc84e-4536-4f1d-b401-2d4990a7b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83fcd14-88b2-45b7-ab4f-b155fa100bde",
        "cursor": {
          "ref": "f823bf06-e6db-4260-976a-44fcf52f2d09",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e911ca6e-dd93-4c14-9a2b-ef3419027da8"
        },
        "item": {
          "id": "f83fcd14-88b2-45b7-ab4f-b155fa100bde",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f87c6a67-9453-4044-8cbf-44603f25a0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67323b52-8caf-4aaf-8863-14d5aef5aa6c",
        "cursor": {
          "ref": "64841acf-bb44-42f9-9a4a-cd39481ce8fc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "610c07a3-c08d-495c-9674-f90a4bbb1db1"
        },
        "item": {
          "id": "67323b52-8caf-4aaf-8863-14d5aef5aa6c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "208f70ca-f18c-453c-b019-e743e1bdc84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5726b08-33f8-4bea-b44f-f1bdca61768c",
        "cursor": {
          "ref": "e73af3ea-538c-4ad9-b662-654c5c419fc3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4db545b3-540d-4a4e-aba5-731581470471"
        },
        "item": {
          "id": "e5726b08-33f8-4bea-b44f-f1bdca61768c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "271381bf-e54f-4cdb-be08-745a59f419f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd3383-84d8-44fb-bc17-6ab4197aef40",
        "cursor": {
          "ref": "8d9e53ba-a45e-44b4-9ab2-ccac7eb7aed7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79bb44fd-947f-4476-97c8-483c45d53bc5"
        },
        "item": {
          "id": "debd3383-84d8-44fb-bc17-6ab4197aef40",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "87014169-074e-44bb-b32d-2b773b34a6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177d88d0-1233-4bbf-8101-28af60200a29",
        "cursor": {
          "ref": "0dea98dc-7e05-4a93-9fc2-e0c1488aac65",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0bb44b85-2522-4ac0-ab07-1b284abb9ffb"
        },
        "item": {
          "id": "177d88d0-1233-4bbf-8101-28af60200a29",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f846645f-0d57-4a3d-8f6a-7de2ebad341c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308cdb26-4843-49b4-bea4-d9a408dbedbf",
        "cursor": {
          "ref": "f2cb1f53-68c6-4d5f-a3e4-9bfc1eda6c5e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0cd8a3c1-bcb7-4863-a551-80b640bb6cdf"
        },
        "item": {
          "id": "308cdb26-4843-49b4-bea4-d9a408dbedbf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "36338cfb-86f4-4604-964a-04b98699156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec452cc-eb20-4caa-9ce9-5e0bf4cbe87a",
        "cursor": {
          "ref": "277e33fb-b41c-430c-8027-6719e0a7da56",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b630a2a2-a340-41e7-8a2d-db36a8c50ac6"
        },
        "item": {
          "id": "eec452cc-eb20-4caa-9ce9-5e0bf4cbe87a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "668225e4-35e8-4d9d-853c-2f563cd929ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ee5db6-7522-4fd2-a294-55076dd89acc",
        "cursor": {
          "ref": "9df5a51e-0508-4666-ae1c-07e4ceb149b9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "98a4e03e-f559-40fe-959a-97e3369f8f72"
        },
        "item": {
          "id": "f3ee5db6-7522-4fd2-a294-55076dd89acc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f15e0b08-174a-49b8-9677-c95ea4039f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c37637-d9c0-4d52-86e1-f5122d95966e",
        "cursor": {
          "ref": "4ecfd063-6ab0-4317-9b0f-f25ff7a4c803",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ebb6a01-146f-4a4e-bed0-b9a82e62e2dc"
        },
        "item": {
          "id": "33c37637-d9c0-4d52-86e1-f5122d95966e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e1628f1f-22b3-4184-a3d5-7cfab15f5eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bffb69c-bcd7-4e0d-be56-6adb2462968b",
        "cursor": {
          "ref": "d0d11332-0beb-4f68-a128-567aece532b7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f5d25dab-9b07-46fd-b7b9-4708f46fb2c0"
        },
        "item": {
          "id": "0bffb69c-bcd7-4e0d-be56-6adb2462968b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "63538fab-758c-4507-b09a-a731a543fa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfc6033-6e0e-4608-82fe-de523854a562",
        "cursor": {
          "ref": "6c093ddb-f8ac-480d-beb5-da253c037b58",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b259f9d-42fd-42d7-8208-e75927450a6b"
        },
        "item": {
          "id": "fbfc6033-6e0e-4608-82fe-de523854a562",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "19abba53-e901-4734-a4f3-53a1c867a634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdac713-ed42-4526-bc55-72853bd0b07a",
        "cursor": {
          "ref": "1afaa335-1175-449d-8111-c58138048076",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e0298ece-0d22-478d-9aea-720d2af5e358"
        },
        "item": {
          "id": "dfdac713-ed42-4526-bc55-72853bd0b07a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b915e882-9bae-4ed8-9a11-b48b823a6fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd3e90-f717-4925-b36a-130ae09b249d",
        "cursor": {
          "ref": "6009f534-f710-4bae-af8a-586754640d6f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75f879ee-c097-43d8-80b6-ef85e3fccc13"
        },
        "item": {
          "id": "cebd3e90-f717-4925-b36a-130ae09b249d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6b4a50ab-df99-46f8-b644-4deab1902901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35977061-f32f-4e72-b925-cb71ee3cf0a4",
        "cursor": {
          "ref": "40c70f2a-281a-42a8-aa3e-db314c52a0d8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a824dd2a-39ef-4146-8560-316ce2c9177c"
        },
        "item": {
          "id": "35977061-f32f-4e72-b925-cb71ee3cf0a4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "354efb00-ee04-4eac-9a64-4950803eac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670497b-fa22-44b9-a786-dbbc48cd3c49",
        "cursor": {
          "ref": "009a5188-38be-4111-9e9f-439116a6ed73",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8978a8c2-9623-4859-ab1d-55a278bdf6e4"
        },
        "item": {
          "id": "2670497b-fa22-44b9-a786-dbbc48cd3c49",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f622d968-05d3-4273-97b3-bbdaca2319c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b942bd-e693-45bb-aca0-1f1c9a67c04f",
        "cursor": {
          "ref": "280ea7af-9021-4060-b9ef-481aaf4d874a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "07b5279b-31ab-47c5-8d30-6bcbf6e9fab2"
        },
        "item": {
          "id": "37b942bd-e693-45bb-aca0-1f1c9a67c04f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "06d7eaa2-68fd-41cc-9280-d46d26d7d41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e2f58-df40-4f6a-96c5-276881d06ab4",
        "cursor": {
          "ref": "eaf6448f-c8bf-410f-9a93-f131c5175ae3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c75bd0a7-9a51-48b2-95b2-55563dcb95e8"
        },
        "item": {
          "id": "078e2f58-df40-4f6a-96c5-276881d06ab4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "15b2fbdb-5977-4a2d-a26b-930361d7d35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81456b85-13b3-48ad-a5e4-3fd74d92eb26",
        "cursor": {
          "ref": "68ed501b-c57b-4e2a-9646-28f257de36b0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4fd65654-30ce-498f-8d9a-1b5122860a6b"
        },
        "item": {
          "id": "81456b85-13b3-48ad-a5e4-3fd74d92eb26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25d81d30-8024-47d8-8cf9-eac8ec9ce372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceaaa37-d3de-41c3-81ff-3bfd4552a5ea",
        "cursor": {
          "ref": "042ddf44-91d3-4877-99e2-fc9abed2fe66",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "877ea61b-1629-423c-b562-1d57de2925eb"
        },
        "item": {
          "id": "7ceaaa37-d3de-41c3-81ff-3bfd4552a5ea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd1603f9-8c97-465e-be1c-87c6a46e865c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ecf8e4-99cd-4360-b41b-8a1368d58b71",
        "cursor": {
          "ref": "cb3cfec4-5b77-4932-89c1-8613c73d91e8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ba37d02d-22a2-4d26-8570-c735f24b7025"
        },
        "item": {
          "id": "f3ecf8e4-99cd-4360-b41b-8a1368d58b71",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fea4f415-deaf-4dfd-8c29-820e94fc1275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ecb50d-4fde-4298-81a1-aab2c41191aa",
        "cursor": {
          "ref": "10c4e750-0c56-4d7f-9d37-0685ab3ffdc8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6485a745-871f-4cbe-ba1e-9f8e4be1c371"
        },
        "item": {
          "id": "e3ecb50d-4fde-4298-81a1-aab2c41191aa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "79269003-ec27-4417-8f18-94a62be73fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7737852f-7091-4b53-b1ca-54cb7f3efca0",
        "cursor": {
          "ref": "b20bb12c-4e29-49b6-b122-51386bca3328",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ec8a346-1537-4748-b2be-2218cdc25ee6"
        },
        "item": {
          "id": "7737852f-7091-4b53-b1ca-54cb7f3efca0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7e61bbcf-3ec7-44de-b3fe-752926f2f192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fbcf41-0e80-4d36-bcf7-770701283c6c",
        "cursor": {
          "ref": "9ce92f34-6e54-45ec-b6bc-a1dea885bf6d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c58f7a6b-295b-4c0b-b607-7da6e3c662b9"
        },
        "item": {
          "id": "c1fbcf41-0e80-4d36-bcf7-770701283c6c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8ce16c0a-01dc-422f-bea0-79f7558309f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba581df0-1ee7-4288-9eb6-f70338577784",
        "cursor": {
          "ref": "1406ca3e-3a4b-451d-894c-065361e3b352",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d1da1163-fab7-4674-ab31-4113ef99f58f"
        },
        "item": {
          "id": "ba581df0-1ee7-4288-9eb6-f70338577784",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e202b0e6-a210-4c39-a65b-9f5cc162cf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50b9758-46db-43e3-9234-bd11d3fc404d",
        "cursor": {
          "ref": "9361961d-ab83-48be-a37a-6c9978f06ec2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2b141eae-e9f4-48f0-a90f-7b4d39a8f574"
        },
        "item": {
          "id": "a50b9758-46db-43e3-9234-bd11d3fc404d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d71d67ae-495f-456b-a732-c971d41ba1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a75ecdf-536a-48cd-89ed-466a95574eab",
        "cursor": {
          "ref": "81faa759-7b5a-4372-a442-565bee16fd3b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a6bcc15-e673-4b81-b697-c26b9106cb16"
        },
        "item": {
          "id": "1a75ecdf-536a-48cd-89ed-466a95574eab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c7111271-9559-4065-862e-da506e7f7bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6db07e-9c0e-43c5-bee4-22307cedcbf3",
        "cursor": {
          "ref": "2a15ad89-a379-455d-bd52-11a5b2251b97",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f331d310-aabd-4cfd-aac5-9e7b416d3ea8"
        },
        "item": {
          "id": "cc6db07e-9c0e-43c5-bee4-22307cedcbf3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7be740c-097d-4390-9782-c8a5409283cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d34084-b054-4d59-9211-2919d3fe6081",
        "cursor": {
          "ref": "74731b4c-aeb2-4537-8343-7a5194bc2dda",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2827501e-5af5-446e-832e-5ba42b32d4ba"
        },
        "item": {
          "id": "40d34084-b054-4d59-9211-2919d3fe6081",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "32e147a1-4958-4bfc-901e-70029db124b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc826ef-4f44-4fee-a635-b6b071281922",
        "cursor": {
          "ref": "6cd0c67e-2318-4e30-a29d-2f75220a772b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5030b6ab-47a2-4116-9b18-0960a4fbb852"
        },
        "item": {
          "id": "bcc826ef-4f44-4fee-a635-b6b071281922",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e4d2ede-663c-4edd-b016-aa6a441156d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33d27a3-d392-4cd9-b169-7f3c59fce163",
        "cursor": {
          "ref": "62cf70bc-9366-43d8-8e2b-fef89f432f69",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e14c06a3-9653-4cc0-91e8-321d0e2c1bfd"
        },
        "item": {
          "id": "f33d27a3-d392-4cd9-b169-7f3c59fce163",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ba5f910b-d868-45b8-98fa-4d2e5385fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeebe21-75c3-420d-be9f-446baa227a2f",
        "cursor": {
          "ref": "c7bbc83e-c841-4095-9224-7042fcd27f94",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "72ffd04f-9aaa-4d00-92d9-c34ae23a0556"
        },
        "item": {
          "id": "7eeebe21-75c3-420d-be9f-446baa227a2f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6ce70ad1-cace-4f6f-9c2b-16a07e4eac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ce4f33-cde8-4132-bf1f-a6d7359e18a4",
        "cursor": {
          "ref": "1647e018-2cc9-4110-a3e2-ff7cdafd2785",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "add4d8a2-dee5-48ec-9153-978fc86d1506"
        },
        "item": {
          "id": "40ce4f33-cde8-4132-bf1f-a6d7359e18a4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "493bce66-8792-4ddd-b628-7cc5fac03c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0ecc4a-67b6-4c35-b510-b050d66b5b3b",
        "cursor": {
          "ref": "83faba27-eda3-49d0-bc09-00d6f3529cdd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5da00585-3048-42de-84ba-2e4d1d0bff5d"
        },
        "item": {
          "id": "9f0ecc4a-67b6-4c35-b510-b050d66b5b3b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "56fc8f10-52a9-4341-b8ee-19bd3e5a3875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592bac5-9074-4b0e-bb09-9c189f8d9064",
        "cursor": {
          "ref": "c12df2d4-a990-4478-badb-411228a38db1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "123a55b9-5e65-4b06-bb80-38f2b3a37e81"
        },
        "item": {
          "id": "7592bac5-9074-4b0e-bb09-9c189f8d9064",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "64241cd0-b424-4f43-b336-5d17b4e5da9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ef27d9-c496-4622-b55f-137602f9d2de",
        "cursor": {
          "ref": "0ba9bdef-c0b9-4ebf-8655-172f13ce28ab",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8910879f-6981-495a-8b00-aa5bcae92c3a"
        },
        "item": {
          "id": "69ef27d9-c496-4622-b55f-137602f9d2de",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f58933b9-6274-4aae-a68a-915359c00ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6de72ec-00d4-4164-95a5-e6a9a642af71",
        "cursor": {
          "ref": "638d8930-c29a-4d68-bd86-3f3f4674275c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "84b9372b-55dd-4abc-a679-d8b79ca90ab8"
        },
        "item": {
          "id": "b6de72ec-00d4-4164-95a5-e6a9a642af71",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "315ccd1c-c6ee-4318-ba9f-c8ffcfb05a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b7f25-27c4-4a02-ae28-95543ae52a4f",
        "cursor": {
          "ref": "67fa7212-6686-460b-aa39-7de36e60adf1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c9379ed3-aaaa-43c5-a48c-e3ffafac8d65"
        },
        "item": {
          "id": "452b7f25-27c4-4a02-ae28-95543ae52a4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "527d70b9-d82c-48fb-880d-a33173b76362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6776503c-adab-4df0-82c8-305894ce0544",
        "cursor": {
          "ref": "45608bd3-5dac-443e-a02f-e95a329a31e6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4c57f715-c842-46bc-aeae-adbb5b533121"
        },
        "item": {
          "id": "6776503c-adab-4df0-82c8-305894ce0544",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9537b30d-f684-420b-bc4f-1ad3e354b35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d62068-e196-4be7-8b42-9c5d37588807",
        "cursor": {
          "ref": "d90eabf9-ecd5-466a-8c51-2435b426f007",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "169982f9-68a4-451f-8e49-01cf5e4075e5"
        },
        "item": {
          "id": "36d62068-e196-4be7-8b42-9c5d37588807",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9d552aa4-a9f3-45dd-bd13-531307dd0074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f5c6a-bf04-4352-9b64-3d87ca7cf9b5",
        "cursor": {
          "ref": "914ff8a8-28ae-4e70-b767-38cf43a82676",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f8f9662a-62f9-4655-9623-1432caa142b8"
        },
        "item": {
          "id": "027f5c6a-bf04-4352-9b64-3d87ca7cf9b5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "31368f03-189d-4360-82a3-062fa042865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078033d0-1e53-407f-8a9d-5a8ab9ea4fd9",
        "cursor": {
          "ref": "f0e6988b-e2d1-4789-be1f-5b171a4264eb",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d1d4384a-573f-4b91-8a25-8c4b21efa86d"
        },
        "item": {
          "id": "078033d0-1e53-407f-8a9d-5a8ab9ea4fd9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b0baa1d8-b9d6-4537-b672-592545672b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed59c6e-0ef2-423e-8e40-fd035316dbe8",
        "cursor": {
          "ref": "aca04da9-2ef1-42c5-9a8d-ac1188aaae7f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0ec2b8e6-6e9c-4fd6-ac0f-ac82066a9aea"
        },
        "item": {
          "id": "eed59c6e-0ef2-423e-8e40-fd035316dbe8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bdf6b269-c69b-42ce-821f-0ab8e17b2067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa20d03-2f66-45d1-a140-347ec12c86aa",
        "cursor": {
          "ref": "ff3cecb1-a943-4a37-8258-3068e9bdae61",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "64a6f6b8-20eb-4d85-9b63-437b5b5d2d2a"
        },
        "item": {
          "id": "6fa20d03-2f66-45d1-a140-347ec12c86aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6001cddd-b041-4d2f-8a1e-1d1bf1e42a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d694360-e6e2-4393-bcda-d8b3e32678a4",
        "cursor": {
          "ref": "93500427-b7dd-458d-8ac2-fb361126b8ef",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "459020bd-896b-4383-8216-8680a58b09b6"
        },
        "item": {
          "id": "2d694360-e6e2-4393-bcda-d8b3e32678a4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "503c8537-72ff-4cdc-8a69-3e5c269fb501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d0e0bc-c283-4b17-80ce-ce4ec4fedea6",
        "cursor": {
          "ref": "647f3024-6132-448d-a2a9-611c06d77846",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "135617e2-b615-44c8-8c08-3ed83bbf3cf8"
        },
        "item": {
          "id": "e5d0e0bc-c283-4b17-80ce-ce4ec4fedea6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0c5cba61-c763-48b4-970b-545128822a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc9c9de-7112-4dfc-bd28-ec03b6fc3492",
        "cursor": {
          "ref": "1e51367e-4e32-4549-ab3a-92c0e9f2338d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef69b7cf-825a-4d2a-a204-fe6fe9aec244"
        },
        "item": {
          "id": "adc9c9de-7112-4dfc-bd28-ec03b6fc3492",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d6319d2a-36f3-4dc2-a12e-dc6916bc5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdc845f-cca1-45e6-bb8f-2a3099fabe19",
        "cursor": {
          "ref": "956c4e07-f3bc-46ec-b99e-c8dc1c59598b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a516b61b-daf9-4e10-b2a4-79238b6fc3ac"
        },
        "item": {
          "id": "3bdc845f-cca1-45e6-bb8f-2a3099fabe19",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "add56ccb-6b2c-47d0-90f1-10e83724186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5e295a-1bff-4d7a-b3c9-c1c0534585f4",
        "cursor": {
          "ref": "0c713f04-b7c8-4808-84e4-0ec4e4623a11",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "61e6f26e-9c58-4fa0-ad7f-e97775f5cb1a"
        },
        "item": {
          "id": "2c5e295a-1bff-4d7a-b3c9-c1c0534585f4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b1e317dd-1a70-406f-8ad9-c3d9efd80a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4105efaf-a9a8-47e9-ba2f-2cc5714e65e9",
        "cursor": {
          "ref": "f02334cf-2995-4e44-82b7-f12c28ea9f5a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bfcd7b81-03c7-41f5-aa8d-c220556c53f6"
        },
        "item": {
          "id": "4105efaf-a9a8-47e9-ba2f-2cc5714e65e9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "beadb1d1-4575-4455-950f-26d1b7681af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84107fc-5ca4-4691-8249-f50e1851f736",
        "cursor": {
          "ref": "1b87fca8-867f-4364-beb3-86dd3c0183c9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6599acd5-23d9-4b7d-8676-f4c165ef1a33"
        },
        "item": {
          "id": "e84107fc-5ca4-4691-8249-f50e1851f736",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "967d5c52-28bf-4903-8852-b1c99ac7dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c27767a-650f-4b2c-a6e4-dea13313ca4d",
        "cursor": {
          "ref": "ba697864-8a29-403b-a283-13c7e241438d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b6e07e90-1ceb-486b-b925-b27232aeb676"
        },
        "item": {
          "id": "1c27767a-650f-4b2c-a6e4-dea13313ca4d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2afb903-4f75-4b0a-92b3-9a8a97c5a047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade55804-f577-41f3-a4a5-9225862305df",
        "cursor": {
          "ref": "ea98a01d-737a-41e2-a8fc-38854a305e80",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6c5075fc-a2c7-49a3-a10c-94c31c7324a9"
        },
        "item": {
          "id": "ade55804-f577-41f3-a4a5-9225862305df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7601352d-4738-4f3a-a944-93fc51909527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088bb46-2358-4431-b676-8d1444dcaa5f",
        "cursor": {
          "ref": "2d9a783a-42da-404d-a929-fbd4589b1467",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9aa4a726-9108-4b21-98fd-6a571cdd0d04"
        },
        "item": {
          "id": "9088bb46-2358-4431-b676-8d1444dcaa5f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6c64a26f-a673-4945-8ae1-a937cf95e807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f286b7b-08da-42e2-8f19-c8d89a36de37",
        "cursor": {
          "ref": "702f469b-8abc-45db-a03b-a8bdc5e1c5fc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "85bed3e2-a1ad-4739-82f2-e751eaf94f7c"
        },
        "item": {
          "id": "3f286b7b-08da-42e2-8f19-c8d89a36de37",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "470b0ee5-5773-444f-9e63-d97dc03b6977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa83ae15-01e1-4219-9a82-e432cad6a1fe",
        "cursor": {
          "ref": "8f9bd12f-733b-4380-9064-cdfafddc6083",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b7dfdb4a-1d3c-4850-8af4-425ed9e27e58"
        },
        "item": {
          "id": "aa83ae15-01e1-4219-9a82-e432cad6a1fe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f8e5c281-525b-4dfb-9c74-6f1314421fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e22057-596c-4856-9f2e-27d6cf7538eb",
        "cursor": {
          "ref": "792ef1f1-9948-4163-833d-f370f2af444f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bf091000-f2d5-4ebc-925d-d4667372c3b6"
        },
        "item": {
          "id": "29e22057-596c-4856-9f2e-27d6cf7538eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e59cc1a0-185e-4e95-99f6-b5d5278d9c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a0379-5782-4a78-8776-06cd40b826b7",
        "cursor": {
          "ref": "7327bd68-bb73-42da-af4e-9054e43dec8b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "36b1f08d-cce0-4cd5-ae33-9dc8e1f2c9c7"
        },
        "item": {
          "id": "2a3a0379-5782-4a78-8776-06cd40b826b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e16c6727-32fa-4686-a55a-1bf2dc00d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd205282-d34a-484c-bba4-7bd8e44e25cb",
        "cursor": {
          "ref": "9328d2a5-4265-4b51-b377-a26ef01f4cc5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "75a3f20f-e06f-48d0-8cc1-4dab52980b57"
        },
        "item": {
          "id": "dd205282-d34a-484c-bba4-7bd8e44e25cb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ed987ba6-b41a-49c5-b33b-57e9185cae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bddafb-ba0d-479e-89aa-05074fbcb891",
        "cursor": {
          "ref": "5c8792fe-d16c-4d91-b748-247677127fe7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9da2ad6d-0fe4-4986-bfc8-20dbdc90ee1f"
        },
        "item": {
          "id": "f6bddafb-ba0d-479e-89aa-05074fbcb891",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2af21cff-c3a4-43e7-8f4b-f023a145a26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6ed634-054e-407c-bd7a-a085c54ebb26",
        "cursor": {
          "ref": "2e965ffd-be65-48c0-ae90-5a2953eaca28",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6ff1cdb9-0689-49f8-88a0-fc4c064a66b4"
        },
        "item": {
          "id": "9c6ed634-054e-407c-bd7a-a085c54ebb26",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb519c71-8cd6-47ec-a506-b7c1f7eebe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a139346a-9276-49ba-a8f0-53c8513ae7b9",
        "cursor": {
          "ref": "b7f5e27f-bf40-459f-8f8a-6f3a4c524068",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ff41e5a0-cb04-48b6-a945-7596971df468"
        },
        "item": {
          "id": "a139346a-9276-49ba-a8f0-53c8513ae7b9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7649a6f4-a8d1-40a9-bf7c-9f7e5016e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c11e4f-d9dd-46bc-849c-1b4528d59369",
        "cursor": {
          "ref": "c81c93ef-fc0e-4be3-bea5-169ea921dcea",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1ae0fe76-d411-4be8-b481-acb40fa53c89"
        },
        "item": {
          "id": "37c11e4f-d9dd-46bc-849c-1b4528d59369",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2fa89aaf-8a52-46e2-a318-dd980520301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2a3121-c082-4af9-99c7-7de9af6da6d3",
        "cursor": {
          "ref": "f93432db-a810-4660-be27-c96fc40555c1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "02c30e8b-a052-47d0-8183-09a221032ff0"
        },
        "item": {
          "id": "7a2a3121-c082-4af9-99c7-7de9af6da6d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "783af6cd-ba1a-4918-8e70-3c62f1bc4a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe5a223-bce4-40fc-a04a-7a9b0eb6f289",
        "cursor": {
          "ref": "6f106c7e-6d93-430f-849a-6ef7c3a58d3b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "237a4a5d-77ce-4acf-b2fd-dd04bf29b3b5"
        },
        "item": {
          "id": "ebe5a223-bce4-40fc-a04a-7a9b0eb6f289",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eb45900e-9e45-4283-9569-833cbe12c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d685b02c-a0d7-4708-8cb3-699c6e1d1c78",
        "cursor": {
          "ref": "2c4c4699-da11-4a03-b69a-ebc68156e9a8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "90ba5d0f-d897-4720-bd7b-eb7216229599"
        },
        "item": {
          "id": "d685b02c-a0d7-4708-8cb3-699c6e1d1c78",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e6926b33-58d4-4196-9cc3-945f65541bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e5e7aa-d901-4f4c-87fd-0d8ead0bac0a",
        "cursor": {
          "ref": "c07cc35d-74e4-4697-b7c4-3a59db747315",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d88d3fa-748e-4f20-8510-bd172feb2e96"
        },
        "item": {
          "id": "91e5e7aa-d901-4f4c-87fd-0d8ead0bac0a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "afa7f413-1992-4a95-9b43-d54afc63a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770ee975-4a8a-4ee5-bd00-5daacbc59d37",
        "cursor": {
          "ref": "1a9ea95b-0214-46d3-b19e-4a67df3d550f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ef755167-7d88-4ccf-a3cf-7ddb0725482f"
        },
        "item": {
          "id": "770ee975-4a8a-4ee5-bd00-5daacbc59d37",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "14fb3a9a-d7a4-4e6c-a9b9-a70e8308006f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687c2fac-7f92-4388-a5c6-94b76f710c38",
        "cursor": {
          "ref": "fa6d295b-7fa8-42a6-963f-3cafe6e91f6f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e85375fe-1f5c-4a3c-88fd-014566eac8c6"
        },
        "item": {
          "id": "687c2fac-7f92-4388-a5c6-94b76f710c38",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1d646504-155a-4a33-ab34-022d7cde8aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1173f7ac-0b11-4b60-959c-20062057859c",
        "cursor": {
          "ref": "e3e5f80b-38b1-4480-b31d-8fe996f0381f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "98f8cbcd-3431-4aa4-b6f0-d46b436a2577"
        },
        "item": {
          "id": "1173f7ac-0b11-4b60-959c-20062057859c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c90f96dd-f86a-435a-849c-a12e8b649bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eea187-08f3-4e19-b338-12cd5159d3fc",
        "cursor": {
          "ref": "b3dc40d1-e05e-4ead-8851-0c81a6828c47",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "48d126d7-6f3d-4136-8863-5e408200b79c"
        },
        "item": {
          "id": "b3eea187-08f3-4e19-b338-12cd5159d3fc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "10d81e18-2362-416b-8eb7-9e655d82d483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8e08e3-4522-41cb-a9fe-b4b16f0f90b1",
        "cursor": {
          "ref": "4d87b8e4-a159-446c-9339-7bff8e1234a3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d2f23c49-5590-4295-94d5-3caa6495b222"
        },
        "item": {
          "id": "3a8e08e3-4522-41cb-a9fe-b4b16f0f90b1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "147f6d31-4425-4cf5-9fc9-68eadcc7dafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348057fb-f4eb-404a-9923-95b828b68d4a",
        "cursor": {
          "ref": "f25d7585-ecae-44c0-b055-2115e1f3391c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "77d27cc5-f385-41dc-92ac-8005bba09fb4"
        },
        "item": {
          "id": "348057fb-f4eb-404a-9923-95b828b68d4a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5106866-dd8a-4589-a279-d8a1dffe109c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb2dc6-31aa-48b6-a3e7-56f8e0f3dfca",
        "cursor": {
          "ref": "43ae91d6-f44f-4e1c-bb0d-1311f68ed37e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0b88707e-6f74-40ac-bad4-942c2439d73e"
        },
        "item": {
          "id": "3afb2dc6-31aa-48b6-a3e7-56f8e0f3dfca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "35ae9825-86c7-4d89-aeae-faafb6e3555c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe78ccd-5f77-40da-a036-8c99bbb2e655",
        "cursor": {
          "ref": "6103a165-4535-4e88-a48e-9eb1cfc0be1e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "df544b76-908d-4ec6-b4e3-80aaeb2a2b4e"
        },
        "item": {
          "id": "6fe78ccd-5f77-40da-a036-8c99bbb2e655",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f2f2fe0d-9ae0-4055-8584-3acf299299eb",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "390f74fd-fe1b-41ec-ba88-8c006f1957ec",
        "cursor": {
          "ref": "2264f416-8f17-4262-81dd-3aa2b95604c5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8cefdb3e-b3dc-4241-a758-73dde61ac614"
        },
        "item": {
          "id": "390f74fd-fe1b-41ec-ba88-8c006f1957ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1022c012-145d-4fcf-a725-44f82333928c",
          "status": "OK",
          "code": 200,
          "responseTime": 1331,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb38a43-4673-4e9e-9678-4ac3217a974a",
        "cursor": {
          "ref": "09a2912f-0e0d-4836-9025-0bf69d60d432",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "53a1afab-951f-4876-a734-a600eb733dd6"
        },
        "item": {
          "id": "fcb38a43-4673-4e9e-9678-4ac3217a974a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "80328eff-17cd-4eb5-b274-048cebc5d263",
          "status": "OK",
          "code": 200,
          "responseTime": 1661,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f966a7-a2f0-48af-b920-f9c17e259f3f",
        "cursor": {
          "ref": "b136d2e3-2fee-40d0-8045-33c1f85fccad",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3029b6cd-54bb-4e85-be4c-639385a7bc1c"
        },
        "item": {
          "id": "56f966a7-a2f0-48af-b920-f9c17e259f3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25a044d8-3192-45af-a519-80409b82f05b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f966a7-a2f0-48af-b920-f9c17e259f3f",
        "cursor": {
          "ref": "b136d2e3-2fee-40d0-8045-33c1f85fccad",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3029b6cd-54bb-4e85-be4c-639385a7bc1c"
        },
        "item": {
          "id": "56f966a7-a2f0-48af-b920-f9c17e259f3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25a044d8-3192-45af-a519-80409b82f05b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11df60e4-3272-4528-bfbc-64cf89af85a5",
        "cursor": {
          "ref": "44a2d9bb-b328-415f-a75b-9f4ccf52ed1f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "60652cbb-f549-4950-b8f0-6a6e0c0a7d2b"
        },
        "item": {
          "id": "11df60e4-3272-4528-bfbc-64cf89af85a5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5580b7f7-1e20-4af7-a473-315ede70cee7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c6a159-f6b1-4f7e-954a-e6d1551a7300",
        "cursor": {
          "ref": "8525e9c0-b247-4a29-952e-0f950c9a0121",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7b3fb73a-f235-4479-aaba-2b94c6e52fe8"
        },
        "item": {
          "id": "25c6a159-f6b1-4f7e-954a-e6d1551a7300",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "248545ab-fff2-4eb5-9bcf-9d024a4e153f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}