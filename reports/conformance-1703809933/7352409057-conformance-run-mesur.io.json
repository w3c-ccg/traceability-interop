{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c0d239c-656e-4962-ae2a-564d0d17ba4d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "54be84bb-718e-40b8-9dab-05310d8376ba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbc10225-747a-4fe6-9244-65cd3e7c62f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93424b7c-afa2-47de-a2e4-6cc63ef261dc"
                }
              }
            ]
          },
          {
            "id": "84478db9-9b76-4fb5-8ae6-cd6238617b9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "decf7aa1-3190-47ee-b3a3-252d039a08b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "43f6d95e-9213-42f6-8991-86fe23a06d43"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8c87ced-8747-4193-86f5-7fc88c68e5a0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2877a328-85dc-4c47-9728-cd81d68b9a05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b38d8222-7cab-444d-b249-44683661290c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c04a4eb9-749b-4239-8fa2-b40b3a69df43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8eed8482-bded-4b80-91e1-af5ecb56d0ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5254a2b4-c791-48bb-beae-35605e5dd6f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b3dbfde-6e4a-4e3f-a8f0-80cab52a0463"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e446609-4636-41b1-a8e9-1f4ca611d7f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d84d07be-6931-4f59-9098-0bf7c855b07d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb12b254-e392-4af6-ab51-911e80731d17",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3e4c4447-9ae7-4385-83f5-f2e0ee555757"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "351337ef-ac56-4a13-adcd-f3bdc2ef318e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbe3fa10-146b-4f28-902b-e91dbae00850"
            }
          }
        ]
      },
      {
        "id": "dcc2ec4f-538e-4ed4-92be-21b99f85482d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c865412e-b6ac-42af-97e6-342aa245f2dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3de3a1e-d625-41e9-a1ff-9446ec404e5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5722167e-05de-46c3-b9e8-2fd3ca1875cb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af971d9f-e5c5-4ce6-81d9-c27717441038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8b9f570-a34a-4a68-aa40-e440ba72025d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b16aae4-1191-410e-9314-67e78068a310",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca3e42-e18b-4f05-940f-76cf65ac3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "232e23f1-11e4-4718-80a3-8f63519e1369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a44f982-9f21-432c-b10f-446f0295820e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd13a39f-d1a6-4056-b745-d5cdb3b940e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f01d264c-46a8-4a5e-b351-159e40f10c2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3316eff-3023-4f25-a244-bec399fc9884",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99198a02-aefb-4722-9b63-5957cee01f42",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a118cfb-3093-4ebb-96e3-219b7b791831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84b310f8-dbb2-4bc4-9264-51f02d9b8747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55dc57f-0e17-491d-bc3e-730e26ed31da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d377ad7-f2d3-4510-bed5-470692eb5f97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "603eda0c-538a-4b63-9df5-81f9cb2317a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44c7e5a0-0918-49af-8572-46522c1dad44",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7ceab7-3da3-47e1-a589-14b7cbea4949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "29d477f2-b7d9-4b8c-8b33-20eb4df080ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09f678b7-4c35-4125-9314-70823f530a54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "36ffd8e4-4bde-498c-9d5c-915dbe296fa8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfde6347-20d2-4403-946f-604a838ef6cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9648e74d-8b9a-4a66-8e57-314b4ef51027"
            }
          }
        ]
      },
      {
        "id": "7f896dcd-95fe-496a-861d-946e2b1ab6fe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "08c9e3c1-95cb-4415-99ab-b199a7dfc64b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86ee5771-49f9-4c9c-aae3-09c2b817a846",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0bba3939-68f8-4f03-a38d-b6a1469cdde2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40158f-c856-4fe7-abb3-7c54081dd6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d70190e-95be-4ac2-aab2-6e3ec64fedb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b54bef7-b441-49ad-bc5f-97e7a176be99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b2a5940-5967-488f-8ef6-bd9ef884ce48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c378377-b2b9-4e2c-a40b-a674fb831d1d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4487b3c-6188-4d21-aba8-cee9b7efd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe7f34c-44d4-4a25-a23a-bdd2d7e500fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3d7ec9-1eb9-4ccc-a8e8-1bc01eee8553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf11a866-8e0f-4695-a3cd-c41f27f79fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a1c42d-9843-44c5-9f80-9cb9f1e4a35c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99152184-7c5f-4b35-8527-f7d4b6526d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9af12b-2bb5-43ce-b264-575d75df7504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03166b7d-5a4b-4e6e-9ad3-69a9b88c431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "697faeb7-19e3-4326-bdcd-7e5e4b7f5df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d49a1e1-f675-4deb-8242-717ea687076f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79a2e5-d23a-44cd-8757-8e50bc791fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c488bb9e-eddf-4597-9dc6-86ac2e0920d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e91949-15f1-4ed3-84ad-ddc3c2d25e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f465a80-d85b-44e5-b73e-052fb9d8168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12bb7c-a344-485a-b9bd-65efc47995f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67789b18-6273-409c-9d3e-dc0997dc5dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de158f8-79f7-4892-ac27-241059be1e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e528d26-b109-42cd-b35a-e47029b9f082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8817ccd9-e5f4-46ff-aa05-ec0be6c81904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242cc185-751b-406b-90f6-c664136b77ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9f1cb9-5ae9-4cb7-934c-9a11304bbdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d3404c-5757-43c5-b7c3-9bb630810f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061a91d0-95a7-4678-abcf-c660e02a881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070ebb57-68ee-44bb-bde6-0fb6377f544e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f451fa0-568f-4ea7-a253-fccba3ea9991",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606071fb-b688-466c-ad49-a984b37502df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646fd377-bd8b-46cd-8a15-3828c9eecef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057d7df3-19d5-42a6-ac6c-d2f1e78edca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bbd342d-e438-455c-a3b1-614c61adab75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d87207-bea3-42cd-b612-74dba121ae9c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b484c359-d7b6-4efe-91fc-eddc9a808f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05887497-5cd0-425e-b2f6-4ac0f18bf06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e43d0b0-da64-4f4a-bcd1-170452aa84c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3d9ba76-8064-4245-9ae9-2777dbb6148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed0084b-7a78-4845-8b34-19def6bceb1a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67a740e-2211-43ca-9b86-cf792b95da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2056d3fa-ccc1-48ff-a09e-0ddb7153102c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e83f088-fc0d-42bb-bbc5-53a32b0152f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "056ba5b4-1335-4943-bcab-cb9582c804b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f92c27-8e5d-4063-a0be-0c5cdeb4c470",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8be7f9a-604c-4140-83f6-d700df0ca29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29497bbb-1afd-4d29-9648-23beff35c6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9540d819-7bd1-4943-a352-e199f0866e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f38996-8c75-4776-a100-d26ee13b92ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1cd613-7bd1-400e-b0bb-a4b0ca119d78",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3ec1b-4554-436b-af00-f5cfbc757dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091378ab-9e0f-4fde-9bd0-a8672f1e397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a8951-f1d6-47d2-b83d-b13e8551eea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da106acc-a4bd-47c5-bf71-39cee241f550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f6c2f3-5008-462d-9821-bcbf0b1316dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da484cb8-dda4-4bf2-9c35-e9c5196d202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5442c5-ab59-4824-9fff-014818bc328f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84f4183-9bb5-4f9f-8612-c4079bce889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dddb9daa-1af9-4f67-a546-45c040885381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf7b31-d85d-4d04-94d8-a682f8dfafee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8e166f-5a6d-4aee-8626-48d3e1a5d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d09a2aa-ea8e-4f87-a042-5f7b84b4394d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcf555a-8073-4aa0-8a37-0478b87882e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac540ff-d5e1-456e-9567-403e1cc65a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb1774-1cc4-4f80-8c00-46645575a190",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765d0e0-ff85-44a3-b2a7-33823bcfd169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da43474-375e-4278-a105-c542f0b647e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8941af21-64b4-49f4-aaf4-81034693e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a23481-b9db-4f69-9b5a-88323053f171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f411ec9-9984-4792-a592-8e864e73b1d1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab50a7ba-839a-4c98-bac5-263578ef1d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c34810a-da3a-45c7-bab9-da7aa4437d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ec2f6c-2297-4069-9e35-8add8d1d57be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08e92795-346b-4103-9be7-851c92edaa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc427e49-4d6b-49ab-95bb-735f6ff1710f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611e0490-02af-4246-9c14-956a68619c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b7d8fd-5180-4d0e-bee7-7f9fe80c8a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f80bf1-afde-4b4e-90bb-108995a9c5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa670ed9-12cf-4ac0-8624-6563ee2452d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a445ba-98f4-4b6d-8853-2117446c1645",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfe34a3-b50b-4b0f-9ed5-96a867ae29c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e863c1-6836-4ed7-a35f-5153ee5a277f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9175cd-d5b9-43f7-9151-f11494363b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b363e269-56fe-46b1-aefa-e28e10c8bf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cebdfc9-4ea2-4cbc-8593-ccca190ddfab",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7fa93-1aa3-4977-b6af-c72d8ed82175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3156cf0d-fa8c-4a75-8d0f-dbee16191105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42dace-ceee-4891-843e-87e3e2529296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ee140b-5c89-4683-ad9f-c13226be4a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e1cc21-956a-46aa-8495-cc3ea46afdae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495396b2-a0ca-49c3-b862-906e755b9d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb8d73a-842f-46fb-be7e-c43022c30ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc39954-34ac-4bc5-9dcb-94c714b80771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b155dc92-7253-4dfa-9558-6854d74fca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a429cc5-0d5a-47be-834c-6fe5faffd930",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56016c-51ea-459e-bb6a-3ae791107117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e5449b-e912-439f-8bc4-fdae71258e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106d4145-20e4-41e7-bb0b-f74da8675d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "907d9929-6ed9-4f3d-9c9b-e8c8b03f2d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16828897-64ab-44f9-ae21-651b6b918dc8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f7192c-a807-4398-a52f-a7421bb08f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e0a439-66e1-4eeb-8dad-9bfd27e36c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337cea67-4d80-4906-90bb-6bad9fd55fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96354549-bc86-4467-b0b0-2bb1ed8c2b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1284cef9-3993-4a7f-91b0-b114db7a98da",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edddaa60-9d16-4f57-b269-212e906385cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f93bb38-d729-461b-8cf8-15de66799072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7e9a4f-7fb0-410f-8819-529b813935b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e8583e-c74d-4a49-87bd-5af1377d53b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fd1124-8c16-45bf-b909-fb01855630c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81333621-f706-4e29-b127-a854989c2f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4da0a2-d9ff-4671-8c0d-df6ca1a0b5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a731eb-1b15-4bfb-b60f-9b96c0d7a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5933617e-3254-4463-b9cf-b8c5ddfd844f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a5eb3-89f5-4caa-9d9c-a796a1f5a802",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18509b52-2a17-48d9-a4b1-9a8d7b5a1d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c19e082-e1c1-4a70-83cc-5d9fbe6ffffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affe6ae1-d0e7-4d4e-a402-f86e6267a2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e664c60-6aa4-4b97-88d2-826e87e907a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265f562-390e-427a-8478-8acfa45f8c79",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f290a98-b607-4877-b072-2768d0433789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7012e546-32cc-46a8-8b12-ee2b26071284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5803b4-4880-4e8b-8f1f-1053916295e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f433d9-6dac-4c8e-8ce7-8665b7079f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e7baa0-c250-4660-85f8-ca31889190cd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdeb7f8-acac-44d0-bf84-8798510634b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d66ce8-7f85-44cc-87ec-4bcf924f56a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea5b828-c71b-4fde-ad9f-dab4066ee4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb2cbc0-a7e1-4f92-960a-df919d835c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c5043f-d8ba-43fd-8f25-1386c777acae",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4401d004-491e-482e-8430-d6968751d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fef0256-9b4d-42f8-af4f-35c9f35ba94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5482ffd0-f8d8-4b9a-b644-65de63777ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4532345-e88e-473f-b19d-1e53fcbfdfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580273db-4b52-46bd-b18a-3f8a055f491a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1741cd3-a374-4353-a431-bea7c0ea28d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f381dd23-106b-46a9-89ff-9e9635ec32c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d08d3b-f559-4bd8-875e-11d4bc9f4352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c847a4e7-010e-4493-8670-029f71e547a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee9c621-5fb4-4e02-9432-fea5b147e9eb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11fbae5-02b0-4acb-9276-b54a2aa22a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa73992-c2cb-44c3-a322-bcf5d442e1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cdce09-c209-42d6-8d60-ea8ce6a4c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39da2510-dd75-4e90-886d-979dc2bb049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7869649f-72a9-4e69-81f7-f8f8ff85e3f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bf3042-d82e-4fd1-a680-044514621bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b5b58-c77d-40ca-9726-e8405606158a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266d4020-b935-452e-921e-ce14771f499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b3a7b5-a6f3-45d1-a47c-d65e32abc770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a444b9b-39b4-4055-af7d-536a4d51b6d9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f6f48-da87-4db7-a162-d125e808bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deabaf28-e454-4028-ae29-9a7d39f9ae6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48139c05-007e-430a-a6d4-eda7aa73bb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29457591-16cb-4f2f-9433-968e9a231484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ced4e3-2b3f-4ccc-93ea-08ca7fd140c7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55204db-e581-4629-8484-f8119f5b1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e83020c-7312-45c2-aa4c-b665087e200a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e553c35-5f5c-4cd9-be92-6cd6de7d1e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "295a5f11-5381-4534-8f0d-b02fee7e9bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f630d8-63ea-45df-a859-97b47fd4b0fb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96c422-fc26-4bb4-b80e-558153694dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea99235-8e93-4c3a-ac88-cde192856280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182afdc0-042a-4edf-b185-9b2e0fa1f4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3321918e-1ea9-4c37-a5ba-fcef80427d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332b0961-b05a-4743-91c8-9982ec771331",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e6fe21-0106-49ac-854e-e9da868ac746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e845002-f490-4c39-a264-110f8c806854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4df603-a63a-425f-a3a2-0fee85762647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c8fc6d-aa08-4a0d-8f7c-54bfe4a4c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784ce82-a972-45c4-a219-91ac64ec5ea9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00ce61e-4551-41c1-8de6-066095939fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95290016-be31-4d38-921f-908248c80712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10f18c5-3d3d-415a-b90f-aca91530b48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed2e013-2f21-43ea-8ba1-7ec64e01cd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f8ef00-0703-4c94-8bba-4ac94cb901ee",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dee50f2-0991-4b2f-97f8-8e8c9821b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3c35f5a-cfda-4f60-b324-b05410a0edb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad397fd8-8e1b-400f-99e9-f438852eb9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6cfdca-d672-4090-a3bd-11edbb6330a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b3eb8-f2e1-4dbd-bb06-c5910436178e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503e5a9f-243c-4f6e-b0ee-9d8b33cf8cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d957c7d2-e9ca-4c0d-9623-6c6d43aeda74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deca5612-352e-427e-bf70-9b3db1e6cdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3713be1-ff94-4dc3-abd4-f3ca9fc6a910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2b7535-b01a-4258-8b67-73032cd12bb8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12835e58-c12b-4d81-b202-781769076d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4f1eb7-6e93-413f-a78e-1bbe6442cb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791e926b-0979-4057-af5a-a3bdb55279b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91183522-7016-47e2-95b2-4bd745b5faa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bb6cd7-54a4-4961-9a54-71193b016063",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5870ca-182a-43a8-8d26-15413c243549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eb837e-654c-4fe3-a084-56e2df1e84e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4601f81d-e83c-450e-bbc7-a125a1883da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13061d5a-1de3-4635-99a7-d321a9e418f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5175b3bb-6a58-4e05-91ad-65d1d541fac5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c28edf1-a594-4766-80ca-a487c9fd6935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64e98bb-d53d-467c-91e0-24711a0082ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd7d249-8f00-4cfb-8be1-358cd7d00aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf20f94-1fe9-4148-8217-4e80c6635183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b010a3b-4cff-41af-a9c5-eda2fc554e37",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b6c460-6a15-4f3e-a485-2dd2ddd32d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc87c7a-7b60-42b4-a921-571e8a14fdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eeb0d9-9166-44f3-9f6d-02a53b34be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f1462d-3637-47e1-948e-c9f55f3505ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcd1b7e-215e-490c-af5a-6e415dad7a04",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2440c5-c8f2-47c8-a1fb-46fda0507b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47374acd-e805-4cbf-8c63-f97f5cab6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee8e34f-12e9-481b-85cd-8eb6923aba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "750bf7e7-1a9f-49dc-887d-e40b89ad7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c5eebb-eda9-44f6-bcd4-07464f20c0c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75979c5c-f697-40ef-82e9-7c5c9b8d0c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21604de4-bbd2-4827-8ffa-fa5763ca962b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66119ad9-41ed-4446-b8e7-d21cae6ebea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df352452-5a09-4243-9ab4-5a005c7a4fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5903c7-b2db-4071-9fa0-b996ee59aa7c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb10e5-b314-4fcd-8fbb-4f32fb48feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57839fe3-5917-4a81-b817-c263dc1bbeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9733be8d-fe1b-454a-a165-dc56eee6ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26fce27-6315-4fe5-88d4-207f1d814b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9db967-fe9f-4cdc-a2a4-a6b7cee47905",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11549dd-355a-46c2-a5ec-43cc118390bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acebd16-f069-4da1-8373-cabdf63dd20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c692d0-b619-4053-9f45-7834fe1521db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c4522f-7bda-4ea5-aa9e-c4a57e074349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6ea1bf-09dd-48cc-a847-5a8fd74a6394",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c612ef4-2fe4-4a4a-8d7d-99b0bdfef98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa5dd64-7ca9-429d-baa5-3947c0330b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20313663-b96a-48bd-84c9-d7eb252f0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd12428-44c4-4721-88f8-f2abb163e9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbab90c-081d-4005-a0b5-d211b11def2e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf3c3da-dea9-44fc-8a09-9f68a10247d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c93e0d3-6c46-4ad0-966a-5c8c0f4a8c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ccf23-675a-4556-9695-05d5c37d9841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75ddf522-00a7-464e-a05c-f50f7a6e800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b88fe-e0f5-4327-9b87-9492e38d76b3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e8b970-4600-462f-b95c-9bdc23bdaa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b068822a-81f9-4f4c-aaf5-2d7ecbd72a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bc9866-5be1-4a9a-8398-20ebd3de72aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69316cbe-640b-4501-8608-46fb94447fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77debfdb-bb06-42fd-899d-4faaa966cd4c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd32f4b3-fe89-4d07-9dad-da5a978c55f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee61f04-ce32-4f6b-aa26-24f53521ffb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde438e-2294-4168-98c7-d6c32da50193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb280a5-66b7-4c65-822e-a4b3c1e0580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c25db2-320c-4355-9cbc-ce816874cf6c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b546601-88c1-413e-be6f-51024e42d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e977f1c-593d-44a7-a858-5e84b7bd7c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c266b33a-e230-434d-8c82-686b7e7aacf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1954239c-2541-4d21-92a3-2d067976fc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c447ac12-262a-4acb-9ba6-12ac586f7b79",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054f0b37-43f1-43fd-9c6a-f5ed5b4d47f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a774907-6529-4038-a340-1ab80d3f4ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad1c8ff-b954-4d57-9c56-24e79e2a9f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5acfc5-68d2-4d4a-94a1-6cf5a04a4180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f63efe4-dc6d-4744-9576-effd6e73176d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78b4e4b-cdde-4444-a33f-ad690afaeaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aa23eb-81e8-4283-85e6-efbcea642170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee991ab-94e2-4799-af35-894cb662d52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4086af3d-109d-4529-8263-09aa26390db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4f5a0-5bfe-4d3a-9a29-90dc63939e73",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67886edc-8cca-4da3-bfbd-f48b832dc300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f5ff8c-9cce-45bc-96da-367af7204f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec68159a-647f-4793-ad5c-32552b2704d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e69fd2-c0da-4f36-93ba-219b04d5c13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb440d2-c288-403c-be40-ba934e009564",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dfec0e-6648-441d-9089-305dc4d3fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969fe319-8b3d-412a-976b-e638fae6d8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300553ab-c5a3-477e-b68c-ec21a685aef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f27f303-75ae-4069-adf6-4873f7e8a432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d897129e-7ca6-49f3-a3da-b40b7dc0ed60",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc697864-3b3e-4737-b245-d8274fec4000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e55ba2-7af0-4123-9fa3-2ad5be3fbbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ef297-9413-44f9-a9c9-1ccea27cecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d80bb5-0d34-4d05-957b-1b625bf1a1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4668f129-bae3-48c0-802c-089c43913759",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa544ae-e9ef-4f9a-9805-89aa45e57e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5621803-b548-4449-ae20-e26a61099562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4510416-b14d-48d4-a6b9-ab68c48ef029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "44ffb8ca-dd82-4eb7-803e-ef429acae6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415750d1-f554-4699-bcf8-03745b65ffb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd5c434-161b-4e2a-920f-bd43eba39479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee5c04c-076d-4fb5-9780-caebec0e6379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c34bd1f-0fdf-4b1b-9e19-4d76543c1cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5911b930-681e-4c18-86e5-fc71453a9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8fb257-be57-4b83-b177-c7f9f17492ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ca92d2-85b8-40f3-96e9-de7fe2f3734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e2ae81-3c4d-4688-9c64-3349f01d71e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e6184e-0828-48fe-87d1-773c05a09dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "abe465fe-9d0b-4b1e-9fe2-ba7f5e35ab48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2555eba-e17c-4d4e-a6c2-f7fd13e23b29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6655097c-db30-458d-9f5c-749e021ba192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db103ecb-eff5-453f-901e-64f1714132cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8209dd17-0d4a-419f-a13c-612156e8141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd61d0b0-3ebb-4fa7-b1e1-3b138b4880d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659fe769-e403-4d90-b954-540566fa91a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a3582-475d-41bc-86a2-e78f516f1630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5637ee6c-3509-415d-9f64-931968f193cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b932abd8-0eee-490a-9984-d5f12a160fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf45e1e9-8ede-449c-bb0a-68f2b9b5e35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee49119a-1dd3-4bf5-a2da-8e89577989ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e12381e-50f7-4ac6-abd8-9f9006283484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8499adda-f3c6-44e6-ae4c-9cffba0f7bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643483d4-4f08-4f0b-bf4c-0ca7a42d9d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "047558a7-d9c5-4523-a680-ccc1a5c074bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd65c5-dca3-46e1-8b9d-2053962fceac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24520dc6-f414-4fbf-b4b0-ebd45ee5b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7e2450-20c9-4a31-9ac0-c99d359e95bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00234f8a-f890-45a1-bfe7-5bd4c5267605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc16e57f-b051-492c-974a-51e8c2ed1c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8608845-1c29-4db0-a31f-5320497b5d19",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d1d05-b284-47ac-8584-06f50d83a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4dde44b-7194-42bb-9e03-8c0e5adbbe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8868b25-8dd5-4d17-acaf-b5d646340bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "524a9665-a63d-4760-8f40-b7cc72cc716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80174e02-9ee7-47d3-9e00-f5619485516d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a03666c-4fa4-488e-a491-2c75fd7de296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dfea27-dddf-468d-872f-e44733297d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba8a1e-c79e-4e38-9192-92017d3e3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1983f73-825e-467c-8bfd-fd30b98464c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00eea2b-dc6b-4896-8e09-0943ce8404f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feebcdb6-4b28-4c91-b791-933ad6e9843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8aaec2-5574-45bb-8b8b-c728622deb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bffd79-386a-45b1-8174-eef875b010b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c07481-5dc4-4a81-9de6-3a82a31d63fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef159e5e-5243-4098-8d2e-230f1d34b737",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af78848-9e32-4cd0-a8ba-376b4bb7e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004db223-321d-415a-ad98-04e9cc04080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adaebe6-a607-4041-8e97-2a0ca2e1e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc31dc01-2c93-449f-ba98-75e01128b88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dccb23-bb26-4815-bb45-0fb6f3312a23",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f5285-da1a-4a4a-a289-a2fa71a4be66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57d77f6-8bf3-400a-a389-94a3ff3ef12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be3e9d-caa6-4348-b5c0-cffad3b7a283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bee2091-94ee-4190-acef-d37d12306f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ab8146-50cc-4804-a6c5-87483262c9b0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee04cdb0-bab7-4708-9e5d-35aecfca154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ce31d7-9b18-43e0-8c8b-250e84b31845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee60a19-dcdb-4e7b-91c9-b996a9dbbb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "faab46c9-225e-461d-ba95-cb9fe2c45ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b5af0-45f5-4a06-b1b9-fc603e34a801",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d7fc21-3c59-4c1e-b938-df8f7c7a3a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2030926-37d2-43ee-8de5-a5148fd5638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0439f03a-c9c6-4bd5-b3eb-34c2feda4ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e76b0ef-3616-4359-b0de-2e4d0dba50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee143a-98c9-425e-85ce-7a4872968362",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc85b80-b864-4c7f-bae2-a53045b67f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcbd5a1-c989-4c6e-a463-da49c032d3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9d88b6-adc1-4fb6-89e7-d0b6b14db7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7982ed21-c014-4ced-9fb4-3aac653351db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c03ba47-8acb-4ea7-8fc2-bcb6a41a98ef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26440aa7-051d-496b-9c94-50eb020e58af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcc575d-d364-493c-9039-8440349a2621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b130d1-30d8-4c22-b4fd-912d2d48abfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79aae490-a188-4431-b67f-1fcdb7a6656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faccc8c3-d643-4fb0-bf84-3ea43bef950e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408ebe84-0463-4cc2-9fc5-7206a979c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2754e23e-dfd4-49c8-bfb9-f6ce0e3bc118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486b612d-8573-4097-9374-5f8cadfa4741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d4d69e-27d9-40d1-b4d7-39b1b5f607ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cd2050-74d9-4bd3-a0d1-b843afcf31ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a57234-141e-4f8a-bdef-76b877dfc705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4e7883-b5e8-4bdf-a9b9-28e7b47ecdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a89baa-c19d-433d-b9a0-8779e1da54f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae58be55-4fa1-4c8c-8069-d639bad878e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9f9d2c-ae72-4553-b2fc-76eb6c96b07e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2debd9d9-b832-4d2b-aea5-208c85fcbabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606f91d7-5c66-4d08-aca3-4af5cba6d3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb0e2f7-c9b5-4836-80ff-9a0e4d92a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eba791b-1875-47cb-be34-ff5538ff62b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe129b9-6944-4b91-832e-e6766c00e8ab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd435714-f7f1-4f49-94dd-7d505504dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5e761f-e9a5-4a0e-8238-d83a73930ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5585e088-a092-448a-a7be-6fee949a6023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9582bb8-e5f2-41e9-8240-ea18d0b32748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b57d8-4871-4513-8d1b-115bf52ed7b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2112fd-05f8-4fd1-a19b-812127b3e542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68725d7-817f-42de-85ae-c74cd2417ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9157f28f-e375-4efc-ac1c-5e094058e82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca94cda8-1f64-4023-a25f-680a25a002e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175872f1-698c-44c2-b64e-9cad99699e04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac0732-8089-4c76-a5c5-a0e5c9c64f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ab800a-d4eb-4793-b79a-5cde72370714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1770e98-1d97-46b5-9610-3c11d5581679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff7ab18-908e-409e-be3a-a80f4703457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e0783-d626-4592-b702-3c738e03ecef",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6ff0e-3e81-49f2-9583-813a5ea946d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a377e2f-4cad-4bc8-a039-d8d295076748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fce13be-7f08-47ac-aa66-b6fa9a61c174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1143d20e-7844-4267-aeb7-b711724680c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b8535e-7b90-41fd-8476-127f07ae9de2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d89f5ae-7c2e-4308-86c1-a2af625fdea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1343226-87f5-4bfb-9e9f-41fa6d55927e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb85934-19b6-4f84-b827-1cb34421249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10610138-2d1d-4d9e-9815-acc3509f87ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bd7a89-40da-4b76-b341-b59f90e7567b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f98565-432a-4779-aefb-187960924afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8894a9dd-280e-43fd-875d-9c75f1a26754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52689f01-7af9-448b-b5dd-23c7ba460cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1605e4f4-b495-4804-afd6-04c5c80fabc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf336c-e3d8-40d0-b6b4-4c8c9c1eed43",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b0c0c-337a-4fe0-8dff-24015736ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9de2fd9-1ccc-46a4-9ca8-74f0e9d08b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0750e2-fc82-4fc3-999c-a2e485fd294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8141fb34-c6e6-4647-b85c-5d87aa4400e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52c18e4-f2cb-42eb-803e-232cce4f70db",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022db6c-79fa-499b-811c-6e376dedec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953edc01-bfcc-47b5-b941-f5b0b2832bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366d5ace-47d1-4bed-8a9e-07aa89bb1435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e07eecf-7a62-4e29-b745-c218264874d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195be3e-1d6b-47cf-aebc-c24f6355ca79",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfe649a-5707-4910-b6f9-af7b545dfba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80ee7c2-921c-4e47-9765-25f77a0eaf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c4869-e3eb-4cf2-92c9-aa6d419d8475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ba8b96-b60c-471a-b41a-2540d573b413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31444ee6-730d-4f9a-a902-4ad561c4abd1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f3bb7e-b20e-4966-bdd0-2bb1caf8573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26546e29-153e-415e-82eb-d3a5e9cc5a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4d8b50-5192-43e3-942c-5a0bac70f7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12e7def3-7774-4432-a4a3-be8d20549efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef578ba7-5365-494c-a0e8-75788c636395",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f0c2f4-db2a-43ec-9ede-a5c29b353d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d9780b-4fe9-4beb-8ce2-0ebc3a223a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0462c4e7-cfb0-4da2-9f5b-72fcd0770a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8e6e58-82df-41f1-876a-d145f9aadbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34232b5d-1ac1-4224-b0aa-310f8b091171",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4f2ea4-6204-405c-b3ad-58c147d09696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651b4b9b-0a63-4713-8a6a-80745fc329da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1529faf2-9af5-4d86-ae24-af8de2a48dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6ac5e-7237-4cc2-a78d-c5afc644588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0443faf5-bfc2-4fa3-8886-e385aecd4835",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2c4e5a-8125-45ef-bfe0-98dc239e39d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fde3f30-c2e5-4b46-aaa0-36be22e3aaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e8d093-79f3-4619-806a-34fbe7bfc9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4c4ff3-e8bb-4db9-bf53-a2008714ad6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502bacd5-2aeb-49c1-9949-d85eed40198b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e91b347-6aef-4339-9901-08b6e04fdd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5b007b-f781-402e-a13c-b9f4b3ec054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411efb2b-0137-4c4c-96e5-8541a9b70367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e43abf8-728a-4e69-8d78-b5c5be2d05a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1017d9-93d8-4786-ac4a-12b24c64f2e4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f62b8-ed41-4889-8ce3-d8d71090ba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bf7826-09a9-41bb-b5fa-a894c8b6a9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2373ac0-47dc-43ea-a8b8-bb627defa6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc1b6c8-5890-4f65-a221-e4f5683fc786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca85360-5463-49f9-b361-f8c6c86de40b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a79b84-ef72-4985-9fec-fb1b9c64d59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c334041-432a-4daf-8530-c456e7133f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5de150d-3891-4f4c-99e9-186df7ac35a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7adec507-5205-438f-82b7-bb85a6e3c632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb700d8e-06e5-4574-a652-fe6fee98731e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b649b073-e7b9-42a9-a75e-c461b657cfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021e567f-9256-4681-aa3e-6a0bb5d254ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64588d91-e6e2-40aa-88dd-596d48b5d05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52dea80-2662-454a-b0f8-3c0d5d22fb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a24b28a-4e3b-446e-80c7-0e6a2655179a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab512f6-33f5-4cbd-8ac9-ac9c3f66b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e7d870f-bd91-4a38-8b9d-016cc144d707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502684cd-acbe-44c1-9ab8-8a16af880f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "67083676-e6c5-4d2c-adba-a96d4842c90a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4301d1a7-6026-406a-a141-711de594414d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aa46c8d-f126-4205-88e3-18bc50e8795f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376cfeaf-b764-48b3-ad13-6250ae2321f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f08ce84-4bf1-4f1d-9cd7-962b46fbdceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15abbd-928b-4809-90aa-e423a7ff813f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54e92535-4f4d-4d6b-a66d-565a502ca204"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71cfcb66-5260-450d-86e4-0bb7120d09f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddd1d62e-457b-485a-b907-967ee2ef9639"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95380c17-a240-4497-bc5c-fbbb9b7cec7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "138b5b89-4bf5-493c-9a76-41cad5521505"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "223a9594-6f3b-4d31-8eac-b1c210887c62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "407ca81a-39d8-44ca-9992-5a3095ce95bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "548fbb98-8308-4947-8766-84a84f30177e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88438466-b079-4dfa-bb98-e91acd9f7409"
                }
              }
            ]
          },
          {
            "id": "438cc637-2846-418e-a15a-77495c107897",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f261905e-fe3e-4790-aba8-c5225c5643c8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "56a34e53-ec32-4970-a67a-bd5dc80f3f8d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164d76b5-8e63-4e1e-8e9e-9bba0cfbf5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fea74eb0-f139-465d-a7a9-39a54dbf3241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96702b9-5e2e-47d1-9c3b-859f358cdddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149a9a96-3602-4184-86ed-8b59d46f6618"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef2ac2b5-c90c-40f7-9dc2-0304416aeb49",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0544c65d-a80d-4106-8c3e-780d23eac4c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e0d1b59-4219-4612-88cd-381ac6f1e7a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46b6a99a-68cb-4b85-a4c1-079523d4df9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12726a9f-19f2-4f5c-ad3e-35223ed6eb08"
                    }
                  }
                ]
              },
              {
                "id": "32ac5923-8091-4a6e-b90f-0538b7cc92fe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a9f3170-bcbc-4f5f-9f6d-9306f73f78d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9282336-f1b8-4676-9a60-e21e813a9bc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11e5321-a8a5-4fff-9371-0f853d53bb24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b99897c-ce1f-4410-851c-10a7918a1799"
                    }
                  }
                ]
              },
              {
                "id": "d5fc9c37-0e7a-4d2f-8676-40c491de4399",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bafeaed8-a577-4a37-a6af-760bd9be6c36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f47504b8-a673-4c40-ad61-0655c881e3db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6710de1a-a44f-4889-ba68-baca391cac7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4323ab22-259b-4e24-bef3-262f7a3f811c"
                    }
                  }
                ]
              },
              {
                "id": "ce96e956-ea76-40f7-b91d-4659449e55e0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afed2cf4-33bf-4d9e-abca-e46c3c47c465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b72f84b6-8960-42dd-bdc4-ca7ef2f31f32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "effd3b0a-7adc-4b2a-9e7e-745f1ac1c931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38177c38-8bfd-4c95-bcae-4502e47bc3df"
                    }
                  }
                ]
              },
              {
                "id": "f89f0626-7837-4b16-bd71-04a8308b885e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea4bd0f1-68c6-4396-b2f7-b98adf56eadf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8bc6909-732d-4a45-8f71-1ce86ee018cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a63afcd7-ba6b-4613-82f2-c2f3656bb1f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a29e8e3d-15a4-4f9e-ba67-8ed80b2e808b"
                    }
                  }
                ]
              },
              {
                "id": "471fe94f-8681-4f44-bd40-41d2ced01acb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "031a06a3-3d9d-43bd-904b-ccf06ef50a74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc299291-d638-4d16-8bee-a0db58ac9232"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ac8b9c-2108-4935-8638-7336f7692856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2752b63-af0d-4d8f-9949-60222e68aa48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4042935d-a5d4-476b-8d5e-d29b3e134734",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6c2ccb5-046d-493c-bd3b-29698d6e751c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef0aa47e-b348-46a5-80dc-4922036c4dcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05cffdb9-eb9b-472b-8483-49ecc0807782"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f9a1af8-7fe6-48f6-99ff-7dc7a50e86cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "394eccb3-29e4-4304-81eb-4e0fcec4178c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6d0558b-05bf-4f03-8a38-2a9e5a40179e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5eb011c2-2030-4f06-bf56-9520c93bfb68"
            }
          }
        ]
      },
      {
        "id": "f63e2cbf-86c6-48a0-9f6c-0368e330cd02",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a0faf1cb-81c3-4bc9-a310-c3e9aa47526b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c70f9eed-82be-48e3-819e-d86e1305c48d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5595de6a-c3be-48ce-921d-7d90c7aed240",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a3eb8b-c898-4975-bed8-8f4f5cc0d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac4bdd1-a12c-496e-890c-f9eaf5a4c162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aafb0e-af11-4bed-9afa-28d371b68832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2c6f29-bfd0-4503-b2c2-ced0b19113a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dd8a9d-2e0e-49fd-8cf2-326d74fd9e12",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3999c4f-96b2-443e-b624-8bb7ed776d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3ad52f-0a0c-4ad1-8514-2a9491674141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e911515-e658-4a99-be40-43715376d30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4c41b7-da82-4030-a167-a307ca53c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5edd4b-d1d6-4d24-bf05-25b1ca697b0e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f5cc2-616e-4568-a5e1-3f1e75043504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc9340f-3f2c-4caa-a951-07997f1d77a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb62ac-b1b2-4706-948a-0bf3e131bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed00be4a-798a-4f8e-a453-560ae72d6be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7c4fa-18e9-49a6-8a08-c470a17d8e81",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6e1ebb-0bb4-42e4-b984-3b216ad38cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3b2b67-8f3b-4bc6-ad66-1699958a1655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a565c7-3f8b-4f77-87db-e70d65964392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb86410-72ba-493d-909f-40392659b8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d978c9ff-f1fb-4505-826b-07e0bc2f6c69",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4baea3-980a-4c17-b4af-64a20a2b13a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6606ef7-65b6-4083-9416-2df45fb9c48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02bcbf7-075b-49d5-b154-7484224697e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15538001-9be9-4bfd-b4f5-b5e180ad84db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d7a2a3-1c1f-4868-b32c-528bb43c372a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726dadca-86b0-4c72-a27a-e24a2b1fb568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770921c2-770a-4f50-8584-2af87f26df64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a38a187-4e69-435f-9087-9834573875de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6036c1a8-b552-4ccb-9fe1-bb95f1c7fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9648fe8-e7f7-48d2-95bd-ef7b52e58360",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67076a18-7d52-413f-b04c-fd25207bea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d61207f-6445-4603-80ff-e620ac5e8060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74bb0b4-bf66-48c1-bcd5-9fcbcac0fcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf324e8d-6ed0-46c9-b708-4ba5b1e2bc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13621764-484c-4c78-a50c-33f8376b2e4e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d29d51-050a-4384-ad30-3cbfdab4453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffebfb4-1660-4829-93cd-f465f1759d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2837621c-e4bd-4933-bb4c-4fd950ad177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03913102-5805-4c55-8865-9d0e8d7df0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9100e1-ea5e-4b19-83c0-c09616ebe42d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8420b7b-54a3-43a7-bab9-9f56d9e2c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0d558a-2faf-486e-86a5-9c58ad1341f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c49929a-6599-4c01-83e1-6c44a144dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "447b6ece-1f32-47fe-8fdf-f5c1daff6abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ba506-4520-443a-884d-316bdf593fac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135cb7b5-733a-4f5c-af9f-6911f6056174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2932bdad-df99-4f24-b933-556a2f9fc9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71517db9-6c22-4407-9f16-547a4caa8e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c91605-f8d7-4e1e-a64f-0343818f9d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcc26ce-b16a-457b-8047-2fbe1853ef20",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eba1205-eadc-4e35-9623-9f5c61e8f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf9ae14-5422-4943-b217-7d8ba69547f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b737245f-4a6e-4f00-9ce1-10afcd37cc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "590a5913-3eb4-41c0-90e7-623e1a8a3872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ac1b09-875d-4bd8-b387-f60bf1a02876",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5d1df-e7e8-4f8f-8ed7-1ce51e28459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3f7236-6566-4aff-8b5d-b4adfac2c1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d4ac8-a9c8-4380-84cd-e251a06968b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70339e1e-d8e5-4692-b5cd-8f10a8c00f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14629ec3-e8e0-4cf6-bb82-3d36a03b88ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df60b0-cb1b-468b-b904-33a3a37a65a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1376bcf-1933-4a12-a581-a6f69dde3ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d912cec2-b3cd-4ed2-9c89-a2e1fd5b75bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b326d9e0-b6ed-4028-a837-6d9a13ecd2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b63cc1-2927-4637-b494-0961c4a01eb7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d45f170-4d1e-45ca-8ddf-b8c5e3df2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01924e5a-f77c-4399-95e8-be90e2d96127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2576c09c-5791-4b6b-a06d-5b0cebf5ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd81160-5d91-4b8b-bee9-ed4fc5e6f274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e547c6b-983d-471d-adde-589e2ac6398b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e7d680-719b-483e-9e57-c9783dac9269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1396138-b724-4559-a461-c520972a781a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e92fa7-698a-4baf-8f70-700940de7550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c28149-192d-42c1-a3ba-ba6da0fcaee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3497c9cc-e777-4482-a9e7-c2784b39dbdd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa62f1-2bd3-4582-a2a1-85bdac5909b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b682235-5461-48f9-af71-bed5b2af8280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f172e542-26eb-41eb-bf79-2440d62104e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1a3150-9abe-486f-ac13-d589d4adb587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebed5329-f1ba-4f83-b565-7f8ccc92e60d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23fcbbb-e135-41f9-aed0-3aa659d8b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ad6ac2-25cb-459a-b125-1c157b23fd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baf2f34-75e5-48d1-a409-7037afd20172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89d46d6-a10e-43f7-be52-eaf3ef5af374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba672e3-2fa7-453b-88f4-ccb5bfe2170f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9196d1e3-28b8-4880-9d15-5c5a97ebfc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03207e0-e177-4533-87f6-da232012f9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da8b5d-0aee-49cf-814d-29971a34e37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a429f013-20a3-40b2-aedd-fc7ce4b1aa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8743e949-9644-47b5-b898-2b65063c5dbf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605bd9d2-4a2a-4567-b467-5ef62eb78937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893d1bcd-b55f-429d-898a-cf122c2a6115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c6f85-ddc4-4b9c-a792-44277940101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91719999-37ed-4bec-9b9a-682b7daf85f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b13d75-9c5e-4f5a-9e49-87339faafff5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08c5c3d-d568-4b0d-a6e0-9fc241a64e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fa8f47-9139-440a-8398-f8790c0ec384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f163def-d85e-44f7-b07e-51a2bf2d8852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ae7184-8419-4ce3-8a97-88aa1c1edfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be11d633-7c5b-4c6e-99e6-869a7a8ed6c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40824837-6f8d-4ad9-aaa7-bb5c192d9557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c8dfb4-3234-4d58-aa66-a6ebfcdbe024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b873e6-83c1-4d4a-be68-13bb07fdc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e16d08f-d8de-4487-adc6-9339fdbb0dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48facf31-d3e9-4846-8908-c4048575aff0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfb341a-0233-4be7-873f-0203acca985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17c1ed3-757c-4975-82db-a79e455ce817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff074eb1-3ffc-42ba-8b4a-e35b0e2c47cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "246a174d-aeab-4564-8385-3f0c4f011887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b6d25-f8c6-4a77-94a0-4263a40e7c62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a694e-d425-44d8-b48e-ab0cfd61b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ce1a7c-0467-44d4-8e19-c183a8510a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd3e615-6b46-40ad-80bd-95e33527404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee338e3f-b170-4fe6-bc74-a72114ede9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7217867d-0169-495f-bff0-847c0c48a6ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38d4e80-63ed-4821-9c38-2ae9b91bc245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87a3e11-3a68-43c6-b479-98324fefd3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f649762-3da7-4de9-b0f4-655c0c041956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9046c928-ea66-43e6-bdea-d57dfb054afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faae7ab-ac23-4ebf-8514-1e9a785f2201",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dcf05a-b270-4a3b-beb5-8e5831d416ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c2d3b7-2e73-41ec-a5a7-20d06ba7fc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3d0187-487e-452a-a9cb-f25c049ae45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8945aba7-41da-4397-80ab-192d7282efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b192a39-df08-4111-b43b-8b86880210bc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf47730-1346-4e46-b7b8-b0e158201b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a93808-2f8b-43ce-a4dd-8b753f1ddeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6748d9bc-698f-40b1-8948-db610a1dfc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea967798-6312-4b50-bc4f-c1a0f4f7202e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11fe582-bd34-4a46-8f86-a5e5af87c6b7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0a8ac-05d9-48cf-a95e-30823f42b582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07986715-e33d-4db9-baa6-65e2ace2b050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f088166-357c-46b4-b717-1b6ffb2ba288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7590ba3c-1a7c-4fa0-bb8d-a895385d4d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f71917-c313-436c-b73b-f595734f4078",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f26beb6-8872-42ba-816c-7423df410e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c91b029-f08f-4ff7-9393-81e320d61110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c453d2-c351-495e-ae44-0b602f178770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3a4107-2d11-4a22-9ff1-2d8671382110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2870730-9443-4a30-b665-5c7cf6e4d734",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72dced-0e66-4b68-95ff-efa88e2730f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcabb4d-5da1-4e6e-b106-3626cac25a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a2acf1-444c-43fc-b7ec-2935c4b9a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f19958b-4f9b-4930-adff-7d465e15f8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef148977-3e45-43b5-b35c-181c107d11c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24104ed-8c4b-4772-8cba-62364040a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c171107a-766a-42e7-9862-04df9b43f86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3fb836-4414-4722-9302-d8d17729fdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87bf3664-a6a8-4447-a8f1-4fdbde1e1d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa084501-0394-4c2e-b5ef-2a41b7c33d14",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe2b73a-2823-4ffc-b2ea-e4be82a65be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2f9a11-8f5e-47ca-9270-262ceb4bf569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61048f94-279b-41d4-9e30-3bdb3625927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4c9986-596e-419d-827d-bef042933271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc7ca72-5fc1-4519-aead-4ec5d9c594b6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa809741-3dfd-473e-9de0-965e3f6909a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7c976b-ab4b-425b-88ba-e9c6a6ebbc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c34f337-a856-4c4c-8066-12a8d71d8893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd27639-443c-40ce-981a-4656b0930f3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b5454b4-2b5a-4cba-98af-a55949e3c6e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5174c17-3474-4c7f-88f2-f8bbbb447b2c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201c091a-0119-49fd-92a7-f0f22e32f00f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad40e5ac-0188-42a8-bfe6-61de78e9abd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662883cc-1b9b-41fd-9018-7e9a6922b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51f07ae4-452f-4304-8fc6-a9ac6c126e19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c38858f8-b324-416e-a003-c9a34226bb96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94119701-619e-4d89-bc3a-67180870d780"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c01be1a2-9c11-4b88-96bf-24c771d036d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a11d8cc6-3973-41ca-9e38-9f4d7cea86ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ddc1de2-acb6-41e8-8cb3-5d43b159bfdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fa4bfac-eed5-4dd6-81e0-9c661fa297cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "157e0c14-dd56-43da-949e-0fc970bc14bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "661e6575-20c4-4bea-b4e4-5797707015a2"
            }
          }
        ]
      },
      {
        "id": "85eb853f-d2c1-4bcc-8259-73a42308c025",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "db21d99e-d256-4b34-916a-2b23772777ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f09adaf-3ab3-4175-be8b-e981060ab0b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0196c7e-46a1-4afa-a592-65393a602233",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d538098e-b067-4950-afdf-83e2946f0816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49e65cb-e9da-4265-b790-fc5deb2a6881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ceefb2-8e07-46e4-aaa2-5157d4081a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75eb0ca-f555-4bcd-83d2-d01a271836f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37997fae-1bf5-44bd-88c5-b26511531f37",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d486539b-246e-4838-90df-019d3ab733be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d46dd13-7454-4f5d-a1c2-72936ca97ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d336f76e-60f1-4880-bc20-556bc103a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcbc266-5890-4a06-b630-401a6961402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117dc445-0877-43f8-a57c-d3d5e535af29",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933c09b6-45b2-4942-96cb-5e8c0d1d7af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623058d0-5736-4cf8-a314-94581679a10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5ddf0d-829e-4003-acc8-3c38411a6246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44153c1d-2f40-4859-8b46-20092cf26491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4c6d10-b715-43da-9d8a-c7d22d941d59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d890d329-dbea-4c3f-936c-773226627924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61447e39-0a7d-4c9c-a849-e37a642e06a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28ac103-5a41-4bb2-9eb3-490f54261951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f1d8e0-a7c3-4baa-a077-56ba2a796305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e367f57-03f3-4243-b150-590606947a3d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b839e1ae-04f1-4b52-bd0a-0e69aa9defc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba33563-2562-466f-b4a4-0dae66608e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122154ff-0001-4e50-aa68-48301d2db09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00004b73-d317-4ea6-93ad-2714b19ce8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac93775e-7c00-4a65-ba3f-63fe84ae9867",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a0611-e3d3-4665-a841-556f46d91fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633fbef7-b00b-4d35-9770-6a99f4207d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba637c-33ae-4d23-b9d9-d45879874f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae9a87c-a9dd-449d-88a8-d5c5fb4a328f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9237fa44-ae7e-441d-9c92-70dd02a6602a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac2841-eeb1-480a-bb75-a4269cc40ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15e8f07-1160-4290-b03e-2d180fadf0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049e6c8b-d3cb-41f7-a630-cece5528923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51a7974-9280-4d4c-bb21-5e79cc91d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e2ae4d-ad11-4e6f-b24e-ff42ddec458e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ee2be-0e01-4c0f-85c0-7776bcf675b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f52876d-2c5c-452f-9583-78a090cded73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbc2cea-2665-4ffb-9ff8-f7555dae26fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2f8d55-c92e-4b1a-b414-672cdd2b5e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93e3691-5e79-4549-b049-9a09c28aee19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248eac1d-37e7-45f0-a02a-6fcfe2f290d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67604c8-3e39-489a-9ee9-3068c5d97719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd09fc1-3e71-4d93-9cf8-7e2caf4a6758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71fbeb1-2c3a-48c8-afa3-dbcef6f52de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131b7dd1-0c42-44e2-9e99-e7059e3accb1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e43314-72d4-4c8d-ba11-2f7dbe53ca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f98e92-879b-47df-a56e-4f44e6474964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c55186a-36ff-4196-a10a-96837ed77be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b7cc19-4df6-48e4-8ba4-0632ae6c73e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67d2978-e87d-4316-b561-43828f2cfa5a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae19bd8-46ed-439f-9022-0c8b5b24f59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fc3ac1-59ee-4cfd-876e-375c55c68a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c35a141-f44a-41a9-bc11-9de6a5c67935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9d399f14-c138-40d1-9737-5b7abc13bc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c600c18-2238-4af9-86ae-13e0ded33962",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ef92e0-9cbe-4c22-aad1-e7a2a5a872dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e1ac9a-194b-48be-a433-433fb4682335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7a11d0-ed88-4d2d-b249-f414798ad7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea87c943-eb04-4e33-abcd-6538e9c00f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bac612-93f2-4f78-87fd-27658bc94384",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac9e969-5a72-4e68-9388-b9908e4ef6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b02a7db-c8d9-4463-8b25-3bfc6ff74122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d687e5-b46f-4e84-8c60-23f1c46833a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff63fbf-569b-49cf-bde9-85106141cfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687984e-08ff-4cdf-bd80-ec628208f32c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0769a702-88b9-472d-afc6-ca86dc5d6ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca7b7c8-4176-4766-8c49-6fb6c0306dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81486e28-af11-44d3-8f39-71d936ae2d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f7eba5-01a6-49e3-a27a-bcbe6455bc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2429652a-cbe4-460e-933c-7a9b84d9dc25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea61707c-b59f-4e2f-8880-118219c241ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f8a6c7-8b98-4323-bb15-f6185bc99d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0895eace-6056-4322-8e3f-3249c521dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "878591e7-f966-43d0-8d1e-b2d391d7a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa22397-75a8-4b78-82f1-76a2a777820c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3f82f1-c5a1-4ead-8a90-2680cc5d6577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be51e2da-438c-4974-9b4b-070f9b81c17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa59efb3-3602-46f0-acb4-0c970ad16f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d350238e-4ea5-4941-8874-73d12080452b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70fd619-9e02-4554-aa74-cf56614ad140",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fac64da-04d9-45ca-9a86-474b6dafcde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7164c0c-510a-42f1-907d-92cf28065294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f4ad11-9fef-4bcd-b7d5-8d938d36d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab94016-dd5e-4bbe-a032-420dfbee8580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6e14e6-b39c-458b-a35b-78044a3f3609",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b146662e-7e57-467d-8842-95a522aa4f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab545ef4-7517-4f9b-9887-50005e59fd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5123f473-800b-46a5-bdae-b1cfef856768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e908fa01-5589-4b9a-8a9b-8384bbc1526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800b0e0b-1e3a-4662-bc46-f7586e38bec2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9315d3c4-a78e-4af5-b3c1-2c47268c0b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15040f4d-5199-41d5-980c-23ffd33a0e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4a89a5-d121-4981-ade0-9489e218f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78596aa9-80d0-482c-b0af-5e1bafd84bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3703d808-195d-437f-ad38-ffd3e8e0d5a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c857e024-8584-4c9b-b12b-0c35c71b78a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1820777f-0116-4f4f-b930-245babee3b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6270e7d1-8061-41b5-9bc6-ea1c5cddaeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fda95a7-0d71-4319-a2c2-6213fe7996c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ce618-35ef-481d-9c67-bd6eb62b7849",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7fd970-5b15-4da2-802e-a2bd7eea846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fb8f56-84a7-4130-875f-675a49a4d7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3a0944-7e43-4362-9604-fd1e9dfd6804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4477b355-02c3-4ecd-b735-c967f202c7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5678043-0970-4a2c-9878-9187c8560cb4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04c83e1-f107-4a74-a8a1-899e556928c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c25de8-ac05-4c07-8d90-9b6796966c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72f80b2-c988-4fbe-9f6b-f12b7684f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2b8ad9-95c3-4cdd-8c68-72b0b2df5f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10fc285-8abf-4b6e-82f2-e3e3e80e0f98",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86656f9-15e8-4834-8beb-617aa858a48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c325c1-038f-4c3d-83c2-d6d8b9ec32f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d107ae9b-5df8-47bd-a517-d2bec2eced45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b269958-a131-4609-890f-a11619c07e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60ac772-43c8-4897-9a36-3779d0626474",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9189f71e-9bc6-42d2-9d39-374a9d62be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb5df33-6dcd-4d68-8b48-4c78bd171f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a34faa7-6896-4489-8fed-155227ee1839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c893b961-9903-429b-8a85-b9edd15b701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316bd25a-0e55-4681-9daa-0f277361289f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa08df3-635e-408f-981d-ead0d58920e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8804176d-18aa-43ce-8736-fbd77d300edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f02ef07-af38-40b3-923e-418be73c2a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a370fa-7d86-4c1f-a5a9-b9fe288c22da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb32b7-2d0f-469c-ba2c-72f737b20441",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564f50ab-bac4-451a-ada6-31fa2a98edf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383cc3ad-9c24-471b-9df3-2603fccfcf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caa0f3a-8545-451a-9ae4-c16e87d2baf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b1694-e023-4756-9ad7-8053cc27b31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e950d671-5ca2-4f76-9c93-651c64d47d67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f935b16c-0b63-4689-b9e7-1ad5aef2c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ba3d0b-611c-414e-b463-8755d991d8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2c624c-420b-4862-97a7-6bc0ccf77d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bb1a3a-8901-471b-b5ee-5caf073860e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa52e432-0e37-4573-b38d-b97bb2a7ebf3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d10349-dc56-4c09-aec7-e4d0bcbdfadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ac2d59-04c0-429a-a293-95af5567cc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767c5bdc-4dd4-47ce-b452-cab9d77c4771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa0a774-50dd-43c0-9ab5-db1492228dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b403ac-f774-485d-ac79-8995eafcabf7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b145e5-559c-44ae-804d-4368ca3e94ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96767444-814e-4c33-82b4-83e1895bece0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5138f7-b749-43a5-883b-84a6ffef3ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db3c9b9-7e6e-45d8-9566-ccb7152480a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85b4fe4-e4e1-492d-b02b-13ccb2c75335",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319bf790-cb6b-4e35-bf4a-1e7c60c048cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2679fa74-c48c-4db9-a761-32b15399612f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bab7b6c-5234-478f-9191-f61cb3a289a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de88db82-1e99-4f57-af97-3efb1d069fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed5ef0f-4a93-4090-82db-c098baa101b1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd1ac05-516a-4119-a0a4-73219754e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae2d6ca-63e5-4598-a4e3-e2879b9fb3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d6ed2e-30fe-4f71-ab65-fc685a36a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007d30fb-8894-4474-bf9a-b924dc9cd322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449ae56-5e8c-40c3-b66b-896891b3cfce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c913c5ca-0ff8-4551-bb2b-a1538ebdd6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30146805-c316-4ada-8f0b-64d8da1e3d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3280259-6daa-47d3-840d-a40b362b7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1428c78-b7d4-452a-990f-bbfc8e626b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84c53a2-10ac-458b-b727-08ec8d5b3e9c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbc335c-9d99-4a21-bd61-b056c84621fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1915187-c495-4ce7-874b-29dc455761da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e886a7b-c46c-4abe-bfc9-b2ce840eeaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b63837c-1f24-4265-8e24-a593adaa98cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544f8b24-f26e-4462-bd66-3a69ac94043f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246fd170-245d-4f4e-9115-ce4e3161c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171daee6-c0f4-4092-9553-1e8ad9fcd219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b587fb-e188-40fb-bcf2-94eab19bf86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa364c37-024d-47ff-b262-9581c7dd3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2486f8-a64f-4276-a689-153728ea997c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc57c464-f9ab-4804-b27c-9ed90b0405fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeefbeee-de7c-4841-a22a-af53df2bb7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106a9966-76ac-46cb-8887-e2a16a9fcbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98c6710-2821-409a-800d-2818034a5479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1102858d-e840-4637-9cbb-4bd67faab3a0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee91252-d73a-4199-8425-a17469058fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a9667c-7cd4-4443-bb5b-97f44f449b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ba241-a6d9-4d6f-ae50-b90ca5a05f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b246e375-df8a-4eca-8212-203d9716feb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a0c224-a1f2-409e-a3ef-c7ed478d5398",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730eb5a4-54e0-4f73-94d8-d9db30a071be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308ba5f5-aad3-41c8-a240-9cb25fcd5858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae2ec7c-049c-41c2-8a13-f5c03fa8c631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1f6230-c943-40ca-b53d-1c08ddecde8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49a5d8b0-a337-4e49-95ce-fcdd4d7f598b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cdadf9c-fc4d-4c4d-b35b-a5f933e98ac5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b34169-29f9-48f6-89e1-3911d9456561",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5393a2ef-2ae8-44f3-b99a-ad71e74b63cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cfaae3-cda6-4e73-885d-70ced0ecdfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "516589ae-6487-4d45-8738-a1a1c9bbf144"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d70d8d3e-84cf-41a5-8a8b-c86fb02ed7fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f9ab65c-a75d-4e75-9cbc-82da96dbc357"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a9fada5-9e1b-437d-9794-2a666560e43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64376dc5-2082-4479-9877-20e51d6b558c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9bde7b8-0d7d-453c-a766-c89063f8b989",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41a1ee8f-0725-40f1-91b7-1cb3ed423c28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eec6f1a-dc70-43ea-af5e-6a662bd6fc78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b05dd5e9-a0b4-4f29-ab85-d1dc04609274"
            }
          }
        ]
      },
      {
        "id": "a31efcab-e56f-4ecb-8571-ee776e5c6147",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b539f7ae-99e5-4800-8894-fad542f54024",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c3410ac-3d3b-4ce7-b509-6ffaec7a997e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e7889f9-ee40-4bc1-942f-3f500cfdb0eb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2027b043-7ec8-4e7a-bd41-2b0c74de1a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a36ae6-f76b-4168-b5c3-af51b5375315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e95828f-c084-40f4-90d5-9a7f5dd7e020",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272281a5-b3e3-4f43-8ce3-a6edda567163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222193d1-139d-4252-a34b-13175772575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2b012-9b7c-48b3-a32e-39699cf9f304",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0907eeb9-858f-4216-bdf4-07d429e18763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10ab76b-9514-42c9-8256-33fb05148e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d957480-be4c-4ead-b204-1a39bae6d7dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccbd873-3cc7-4115-a29c-3f78597c6090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5c98e8-595b-42df-865f-09ebcc068de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f88717-920a-49c9-ac4d-ab80bcc96ae7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9d09af-f6af-4800-8905-a47d795b838c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b747a151-2889-4a3e-9972-89f5a98428f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f196670f-e563-403e-9001-bf71af326d5c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073b0d92-2963-4059-b7f9-5f2f2e18fe2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2397571e-b238-4f66-b556-fd1dbb182340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccb0d9b-b88b-4387-b528-36213a8ece2e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1846c2-a9af-4096-bdd1-4707734c9d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f6c31c-969d-422f-8007-cfddcaacdd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f8e4f0-6894-4eb5-b26a-79d087d298bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba36948a-11ba-43d9-95d5-33c7ab79a5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0024bf-8a68-4ee2-bce3-8a5f4be027f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f40e5-b78e-4028-9b92-57563c0dcc83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1d2801-2aac-42fd-afca-f6e85dc3fe77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26734894-47d8-4e43-a031-ba1a7db48791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153386f7-5b6b-4ae2-964f-9b5e06c0b6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8281c3-1d03-4ac2-9b10-c9b8c25a2116",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbf64cf-06b6-4f63-b51a-96931be4d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bf9eae-47c2-41be-a861-9b10b87129c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97da0471-bb4f-4d47-a4b0-a613741ac53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54735dda-32ae-4833-8df9-e17800995e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0e62f-0c77-4472-b429-4ba5e4527deb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff9d064-afe1-4e61-8110-eaf1febbbc03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b442b1-cdcf-4d9e-9cf2-67bd1594c565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d887b5-1057-47f8-94e0-227e1df6aedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60c0272-3350-41d1-ad42-3ad188dd8365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e134cf-e032-4633-9677-f8232fea6458",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e5c056-24a5-4734-945d-638f342d7ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e28865-75da-4a21-ad9a-2f2e07fa1830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2228949a-866a-4d27-8fe4-3ce7494d5f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8c3244-d0f7-45e4-8b54-6bb20085cd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe028eb-734b-4d27-90ab-db7553a77883",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f92985-a173-4321-bff8-e5950bdc8207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a770559f-e844-4129-9fce-a78b25cc7085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7421efbb-a458-44a9-abec-28759b4798fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb08c452-4f91-434c-ade6-ed30a25f0882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175091a6-85f7-4a87-a178-402c221521ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a704306e-3ed7-40c4-af78-0500cf537d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ded788-1b57-4543-9dad-e08011a1ecad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf63ca4-b92d-41f4-993d-98b2eec27121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcfbc3a-7203-4c6e-8863-7182f8d93e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab95af7-a75b-4b8e-aa6d-462307e1424e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a3f7d6-7e59-475b-b2de-d5fbe0775367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8055dab-4f7b-442c-b70f-1516cf15b248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5163c9af-d6f9-4f1a-891d-d9769724c2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1f7606-54c3-406b-baed-2b16b94b4f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a3d91-0912-45d9-910f-53c231fa557f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d43bbd-ec64-476e-b1ee-ecc44f68b034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18a995f-b5b5-4518-9cf8-05e06099f8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d25605-59e6-4097-86de-5c8ef04dc78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18419c1e-0d22-4cc8-af7f-c151c2d96cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5d7236-3ec1-46ab-af63-f212374d1f77",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c2c649-ab77-4db0-96ee-022cc7971d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a228c5-dbc5-4aa4-8a66-36a15a20dd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4458fd0b-6557-49ee-9604-52d92a6475ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdc6b9e-d84f-4454-88f8-7f6d4d3c3c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9ca3f3-e542-4eca-9ddd-8a6d8606c59b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b5348-b342-4f77-9242-2b59780061b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7b3008-a1e7-47f1-9609-82482d820cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937fc77-5782-44c8-b11b-6affc1e00be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2280692-5680-4cd2-b62b-6e0f5e3fc4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497122f6-26cd-42b6-a780-997e8785b413",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2de3d-0770-47e0-855a-40ece22ae628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec350fa-6f67-4fad-81d5-bc4c41b48b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee1ad0-17e9-48c3-844b-bc3064d8716b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12236de-575e-4733-a154-ea14cc321e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16c59c4-32fb-4b39-b9ba-cd849fc5e2bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e574811-4754-4a26-84d9-3259e8acea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b58c29b-a484-4bb9-b746-a8f5d5bd14e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f91bc1c-899e-4950-b448-67729ae7351b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e1f8d3-43fc-4c77-8d87-c2787e50c84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc1b16-6ced-4b59-82bd-72fbf4ff0f56",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94e8dbb-0867-4de2-b47e-add5dfc00550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d0af00-35be-4d68-a583-e8a417921609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf5f0c4-5b83-48ca-8eda-8a6126eb4b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9d4e3e-bee1-44cd-9559-a7d8fd231f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975250ef-95b5-4703-813c-bf618a42b740",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3805ed21-154c-441f-9575-b38bf7551832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7eef85-3618-4c8a-9ca0-c0b0391907a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b987f5e7-033b-4c89-a4e9-0df61c8f2548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30965a8c-dc73-48b2-b7d6-c032326f6674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df89038e-5e5b-4abb-acff-a620cc1616d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5a862e-366d-4cea-841f-d3d5e03e9b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cc2fdf-bab3-4557-bbb8-290002ef3a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ee2da-a84c-44b0-bb3d-810f8101dd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772af39d-4e39-4400-af52-e75fdadb49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ad102-abbe-4290-96a3-410b29999a64",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865199e6-6e61-47d6-9449-422bff14f9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a043d544-da58-4d90-9bb8-48fd1fad811a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1390c28f-0d2d-4368-8ef7-8cf73ea7fd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1749e52-5bd4-4c67-b1c8-7c12e8c567c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8890ed0-35c3-47ae-b3e8-0eee9c8bf45e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4c1d5b-27d1-4c4d-8133-352f0348f255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b986fb3d-7ba2-4cb6-8333-aff1b38e9623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a0e9e-6b76-4932-bef5-80639e0f51e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c78359-a26c-4f11-b9a8-cf4fb17fe866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699a3b3-bc70-4c8e-976d-daf8578a2263",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892bd7aa-3ea8-456b-805e-13ba10632a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce7c96c-fea5-40c6-9d61-25ac1d33859f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001853d5-2519-4554-8374-c3042becff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facc7e5f-122a-4669-a2b7-003a768b89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43457ee-627c-4ecd-8d74-9cd471348a7a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2021326-e323-4546-9c01-6e3b79004411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37c50cb-db16-4e51-b98f-b98865436e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6d4ebe-120e-455e-9c61-2434888061e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67061a71-9496-49ac-b93f-e1f16c5f6ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efed8da4-e0a1-44a5-89dc-45fc15b44d9f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c49e27-b4a8-4105-9408-ecd7bc64aee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96bd71cd-c6ec-4905-aa11-5f2387e89a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eb0965-fe07-4a5b-a919-9d264a995847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263c4e9a-94c3-456a-8879-cafab0101b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aa3da9-4cfe-4007-93d9-9c1d76aa7964",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bc0d07-f70d-4020-921f-d1978a933daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185ddae2-c0cd-4bb9-a64b-107992597e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a5a74b-9a89-484a-845f-3bdf1962b5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912d893b-9784-4373-830e-8795ab5d239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003795ec-28cd-493c-a9b1-bb23d187875d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbdcb45-babe-4bf9-8048-d1d07f2faed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b6d768-4dd3-4ff6-8c96-fd9e6c721238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e678734-6b05-4f6a-bb24-d83fa4de9500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e749c9-3904-4a2f-9076-c627bf51ded7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15128ce8-0f00-4812-8112-b38cf9f414f6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151446b5-9803-4bab-bf99-4d4e7a2cc3c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d28d21-1ec2-43db-ac9f-041aead257d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c81efe3-9229-4b3c-88ad-bb08af94ee4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff295f86-01da-40b5-98d4-aa727e1fedb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c341c406-b698-4d45-ae9a-8c431f6374fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79bf7b-3043-4eb2-94df-0c93d518a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008f4e5f-af9e-48a9-b7af-97a56e504482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f67705-081d-4e28-a71d-c56e913b5bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f61a2a-7a56-4500-a2e1-fafb8eb5490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27ee5eb-c387-4045-9bec-47d4de00cc17",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549a3231-b379-49ec-9734-cf700c920612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ef1cd8-2caf-4092-bee9-2555a72ed8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db1c3f3-bc4c-4c36-8b31-fe90b8584f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455c56ae-ab56-4f86-9543-b87fc11585b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dfb59a-89ad-441e-9784-d9cc80a62033",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732e4e3a-bfda-4832-b1b9-64b6c71cf076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a06ac9-1ead-42d1-b626-d6e4fb34bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d17a251-b9f0-47e9-a5c0-13927823d0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f7a03f-3f7c-411f-9f60-a7aac5b4e419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbafb09-b5d9-4253-9251-9e60349cec7d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccba5a04-2cd7-4c37-8709-b4ba277639e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2923c9dc-903c-4ad1-9f32-ae2f8e5a98c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b789c9e3-069c-4173-bf42-a454f17b2570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fc6e89-efc6-4e95-9b21-360e672f17c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ae41fa-c8b4-4816-9bef-d947e95147dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4685ee-4629-47d7-8d2c-fb5b4f3c48df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5efa2fe-e069-49c2-9b87-17c006882bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384cc3f-9aff-4170-b09d-9c0054cfd144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b208d7-964d-4058-a7c5-b638808b241e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e18b189-d8fa-44e5-9955-7e8e526d1bfe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ada94e2-d3b0-4b41-8107-57084b30158c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5941286b-e844-4229-8516-fec2b316ce4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768d8a68-0a19-43ce-9ac2-5f8c89bb1439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b52e1-4788-44fb-9d67-fb38ca655576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb8853-199f-49b3-8d81-b4bef13bf996",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb64d4e-c23a-4a6c-a731-070056298c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee5e793-00dc-4728-9533-24991855c2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae6f0b4-d1d2-4885-a819-ebabc27d60ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc8befa-304b-44db-ab6a-e49f3420ffd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aadf31a-4988-4c96-b9ef-16495af36bb9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fce07d-dd5d-4e50-adfe-7c8fd5357ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef78d85e-e1d1-4933-a471-4586e1d91b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e10dad-3855-4212-a269-dff0a842b9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5a3931-0f88-4029-8d77-be94391185a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaafab71-967a-44f5-b8ae-ee24b6eb2f0e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13738259-e2a8-40f1-84a4-c125def14957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4af6d9a-94df-4e38-8384-87ec06daacb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2907e8-ef7e-47bf-b515-d40fbbdb7e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb05a40-44b5-47ec-aaf3-d2c9764dc010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165bb42f-d6b9-413b-80c8-ce074feb90d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8f8f1-a049-4583-ae34-d7f73ca40752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e3932e-fdff-434f-8ddd-37923eab3cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde26fd1-1390-4b81-9925-44f0911e0d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbefb1e-9a69-429b-9886-ea94449f0760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de72e5-7266-46c6-b88a-2f1fed98a26e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50443746-10d6-42ec-b3fd-1c48c4bb7228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4378370e-9e8e-4e0c-a27d-223648a318f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912d93b-a566-4fdb-9e5f-1c1694555cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e3065d-1f80-4464-96a3-65ef1ec85b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b57473-7b06-441b-bb32-cc1e06b7c5af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7facb3b2-da27-45d3-a6b2-de2fca63c29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f159465-145f-4c76-875d-38361bd76f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41310df0-606d-437c-a619-d1c9f2589eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01316c38-8823-48f9-8653-0618aae05101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9a569-3a4a-43b4-89f2-852e1a486704",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf895cc6-4438-4de7-b546-0a792475f034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3d3398-d16c-4b34-84da-46837055b30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fa6409-4912-4c62-87a8-57636fe6c27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b337d4a-071e-49e6-8287-56922638f3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8480de43-eba8-4898-97d7-b9111ce0d140",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40287e1-5360-4202-8c90-e6e4a623e563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff7ead6-d02e-4751-baf7-ba323bcb96e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc01395-0a86-4b02-b6ac-abaf7cb5409b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c72af2-f5d3-44ad-b389-7a0caa366ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56ddbe-c978-4ab1-9457-82a820575979",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b98c14-0a4a-4566-b340-5e673708ac7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af277d7f-13d1-4980-bbe1-4b7d96fb2459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f711ec5-ab36-4768-bd78-51a5c97877c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9bc6e3-3679-423c-943b-795ad2db524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8544cc5-fe63-42e1-9c90-6c37784301b0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2503576e-dd33-4cb5-9b5e-4cbbae92ae2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5621b0-ab85-406c-8c24-8786d9e47dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b644160a-ded3-47de-8a80-0920c8f5aa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b21891-87ee-4903-b774-93f2562bf2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13993a34-c5f1-4e90-9c92-6a47191cb0ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3099ce7c-0ae3-47d9-b1ba-95bf57b41958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85380d8f-adf2-4cbf-be3f-948099e722de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2cbc1b-1714-47dc-9d12-67bfed4d3050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d8439d-5ca8-4765-843a-15818d702063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c789d43c-a9f8-469c-b6c5-acd6fad063e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f96034-2f2e-44db-b19e-d9d0d4442007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113f42bc-491b-47b0-990d-a0074141235c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abb5a04-5da7-485c-bb94-2ab554ba43aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa614673-d215-4914-92ed-3ea54ec29cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d1c25a-2cca-48a3-95f5-f3a1a6c98df0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa993946-0034-48b7-85fd-dd14377bff66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7cc707-ba76-45ff-bf71-c77ecf569a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41d6b1d-3ee9-421d-a053-5277e7decb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b949bfe-218e-4582-9555-af3ee789396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e054df-0b0b-41f3-9d94-af63a298a5d0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2721b497-eeb4-40ba-9585-7aedbf3f20c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1528096-e562-4170-bd15-24841c4f99df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c92c25-cd0e-4d3c-91cd-3f96cfa4a3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f851c742-649b-4da7-936a-66c201a345d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899fc002-337a-443a-8679-9d62e9435e49",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc83bfce-7639-4147-977a-cf96205ead66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3aa630-8374-48ab-bdbb-842822c66eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc9d500-931a-4920-b6c0-9a4ebb9b3fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5c71ff-24a6-4db3-8fe2-4f0a46da1669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9075d9-a8a6-4165-b5da-5fa6d6ba17c3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac407cc-bd18-40f4-b72e-4bbebef4b94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f099c39-25f9-482e-b335-4181f53a9453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7dd9fd-8eef-4f7f-adf5-51d827698109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf75bd8-7d00-440d-8108-c320f0500fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0ab51d-9123-47c2-b408-2bb1fd888994",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019af200-c5c7-48e2-9f74-18d16d1ffee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddf000e-2c6f-41c3-8697-974fad8280df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46b550b-9518-4014-9cb7-33521fbbf95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcc3143-47b2-4136-9c6c-c48a36b46f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecb9fd6-522a-4922-9132-fdff8b39ae8f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b0ff37-e6eb-41a0-8baf-9e7a323a7c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bbb203-5948-4708-9d3e-7eff403c1554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80a44d-4252-46ee-b475-e9f8dae71a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9942a6d6-684f-4831-b620-88b49ff1927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624a201f-9594-4dba-9aa1-81e87d42edd4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9943f1a-6753-4e54-9481-b5567839ac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e212ae11-6437-493d-901a-315eecaf9351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a3c632-06ca-4604-8477-87118876e03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e1e55d-9d53-491e-be89-721b80b4d153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f15dec-8d00-4bb7-9511-e100696e2eee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38cca5d-3d9f-4b99-b3b9-794c34884b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe35021-2946-44c2-864f-f241c4df7442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279c1936-741f-4f5b-b401-5dc1616789b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd09047c-f5a2-4d4f-98a3-9ba8cc1b16c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdadaf1a-0f4f-4152-8df4-0ca36b03fd6e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cadfff-dd87-4513-8ec0-ba8733619ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bc72e4-7146-434d-a33f-c85569a9e3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02cc5ba-0eb9-439c-b64e-88b81245da5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54451246-aec8-46ee-a86f-a43ec462da30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ce6b63-8d77-423f-831b-aaa401ca88b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5678a7d-1c1d-44bf-8d2f-1d238335f8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0162d5a0-e514-497a-b16a-b339d721c241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e188d0-1d98-4d94-a639-e7c337be2ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8195a6-b30c-4f0a-9397-f42301f91b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1679ea-86ec-4c12-ab12-5dd5a42849fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9809906-ee1c-4314-bf34-a9d0944b0f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cf3ef9-ee2e-479c-b887-bf69098365bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032b0af9-c058-44c3-a967-483583d4e28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56ee600-aab7-415b-b57a-ea83614cad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4aaabf-9110-4c45-a168-cc30bf804558",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88b807f-e86f-45e6-b9f9-3d9c4094aa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8fe5c3-5829-4f6a-933c-d1b2423206aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62fd004-cf92-433f-9c5f-fda2d3c1d373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d328bcc3-55a5-4a75-b067-dc3fe0ed2d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00244aa7-69ff-48e8-a127-fb597f81f8ad",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90b7f41-d7c2-433d-b041-5c61278ccc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5d2a43-b825-48cb-af0a-c9e1c58bdf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b2839-c5b4-4b18-a024-7cf0d8a94a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3a8084-7658-4cde-8828-f325dedd119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd12403-0857-4b24-b470-edb177679683",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc57a4e-81a0-4a42-a68c-0682e29e09c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acf8828-e9ce-49df-9652-ae8e07b7b045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafa41d2-2b01-487b-ad79-fdd15a47a58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9a8530-d444-4bcc-9ea7-11e33e0122f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7082fef6-b975-476b-95cd-cf01652af05d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fd0209-c2db-45ff-ba10-07115d65ee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b4c758-6649-4767-8325-a720431f7446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdb2574-da48-4b56-b764-e56a6ca5269b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd60c07-7b79-4322-9991-5e8a2d67a7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f4c730-5f82-424f-b30e-42d2b66ba125",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ea366d-97f6-4c44-bbdc-d02367189e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b5b477-c054-4fcf-868d-ba6585f13cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2875f980-6101-4c18-8e43-1441d0280f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1047c112-5458-4574-8c06-239287218863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e9c50a-d7de-4f65-9dea-25f38a67fa33",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a80d0c6-74b5-4c45-8790-22d6a8db0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b084c2-766a-46c1-8bf0-71fd1cff1855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d536f3-820c-4282-b206-5401b238caea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e787acd5-2b1e-4615-a5ee-1c09d8f39761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f844becb-57c2-42c4-a526-3a1969155a26",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0542c1f-00c3-419c-8ca1-4b40863145fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c31486e-efde-4559-ad3f-1115e22ecafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2584131-6883-48ce-b385-279858842b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66d240f-1c7c-437c-834e-7293ad85e129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc42735e-2489-4766-91ef-5e9002deb663",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99152be5-e3a2-4b85-b198-f76f17cd803b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0372df7b-d4c8-4484-adb3-5018812f6dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4947332-1d63-4b92-8f6d-948c94752169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62bc852-80c4-469f-ad91-5a1379b69f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376db07e-df86-4a02-8633-5322d88e085b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b488a2b-e8ff-4159-8afa-1d60cc68cff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6354e65f-ba0f-4a19-bd8a-79325e6b4502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec1ac1-88c2-4bd9-857e-2a4b5e90e612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14742687-b0d3-4fc0-bcf7-5b77d399a99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2e9a55-f9c4-4fe7-a2e9-e374e7c22d2e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b6acea-ae25-4769-8253-95df6dad58db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf803aac-8571-4ff1-8be9-7e2d00369984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a35b91-7322-4c65-8675-1badd0619e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd4c6db-a961-4cc9-a9cd-79c6d97953d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe2c58-07e7-4af6-9ab4-a3f1d951601d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb521f8-b904-4087-bc2b-faf0315b02e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2d4909-b838-4924-a63e-bfc8a7dc703a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608809ec-239d-4945-a212-2df1e584aafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c86b3b-d29d-4e10-a6f0-9cce96bb703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1669fbe7-77df-40c2-b8ed-b04e68c35484",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d539b8-f401-42d2-bd42-67543023036f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a296d3c-5401-4565-b17c-57064fb6a35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b03bbe-abd4-48e8-bb01-939a78167a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3f90aa-67ae-4231-bc88-a37b4c4179bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b51931-3fb5-4332-8af5-20f975b17545",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a40c6-53d6-4dd5-9f5b-a92e5322e967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4b6eb3-201f-437f-97f7-38a7c04467c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d3164e-003c-4abe-8394-fd34b514aa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951fcb45-bdbc-431d-8e44-712ec762b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d863338-acde-40a0-baa2-d1e7633a5b53",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad37058-e629-4cb9-8fce-30c3034a65aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13df5019-35f8-45cd-8cb8-8d82312ec53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18789375-2cc8-4ea4-841d-377c1a563a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12e049d-aaa4-486f-9f78-568a689cab82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fdfe9e-a425-426a-b998-1a15e939e84e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea65a6d-b661-4608-8beb-8ed2eb081242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dfed829-1fba-4cf1-87c9-c9afa9429130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d470ca3-0ba7-4ee7-af1c-b9c244641d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5286bf-ae82-4391-936b-51865336cc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13589c6-89aa-404f-989f-cde428a6f325",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930405b6-9902-49c9-b9dc-7106ec49c51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d71a3e6-3a52-46cc-87b6-8973cc6d5f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f47ec4-5a19-4adf-85c7-15cb2cf16e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15048874-3c2d-4d74-ad11-cc431582ec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91eec24-dfef-42e0-96a5-d1df7841e695",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b8a67d-142d-4a1c-a75d-543d239a0538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48697232-1722-4bc6-8ae1-2383e8ecfcf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0a9bbf-679d-4e96-8b0c-eec532c6e74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5552462-5c38-4bcb-944c-cfccfcc79cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06257e12-b468-47fc-9e46-5409d87b4d78",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d0c045-c3a2-4da1-b551-0c4b52b1c49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa11c75-558e-4fff-a3cd-5afd4d8a42e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573415b9-505f-4253-b9b4-e0c5402b77e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3d79e0-764f-4128-8cf2-065dd1011c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf72ae6-9c57-4b0a-80f9-2af749257efa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf2d948-d8c1-4274-8f02-07a1f691f3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88489fde-b517-4933-b538-18f66092c2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf8847b-296e-41b2-8efc-5ec910e37219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d83aea-a6d1-44c4-9c75-6f0c66d31ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39c9e7e-a9c1-49cf-ac12-345db440da5a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f956cc4-ca62-419a-a4b9-772a3434d94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5e423c-c04e-475a-854f-9356061c536e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adca246-656a-41f6-b316-3fd2373b9d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761c8ddf-dd4a-4137-95a0-6c2cca434964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66827a07-230c-4aea-acd4-bd6905e5edc4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e9ced8-7871-45f4-b7c9-e04f11f3a15d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4434b2c3-dae2-4f26-aea8-67e7041ccc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9251543-3c91-4ea6-8094-b8b9f482b841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dd0617-1ef2-4b5f-be25-fa02fd38c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a778455-df54-494c-be9b-0981b3eb152b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f4a241-45c9-42ce-bee9-f4f8135c4d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcba5b89-2ff1-4b3f-a29e-28c5ef265c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192afb1f-b929-48e6-a935-6d983b0870be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f2748a-d75b-4966-8487-4faf858292ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928dca29-50af-4ac0-926d-46a38a6aa334",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1e8086-2b3d-4947-9b83-60766b4882b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1b96ad-ab10-4309-8a5b-ed2006895e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f4e509-627d-4684-8dd2-2a821e719c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14946d1-91ed-4086-8bbd-f68a611e9f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bab23dc-2a7c-4238-8595-41ed1334bd9b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52cc3f9-92cf-4525-aab6-6b0ecd2f37ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5751e99a-a1c0-4ba2-baf8-c42d1fefd2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cc5c6c-f8a9-49e6-9be2-6392dd71993c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4654c00-edd5-4a34-9e7b-6f6e86f1e6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd19ade-64c1-4426-b04f-e6551a56a86a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf341dd-6b4f-4c59-aade-b8abd14c749d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c3d123-092e-403a-8b83-f1979cb260c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731a8dc1-0050-485c-899f-20329ea853dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc365f9-d939-4b40-839a-7bc7d56115ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568c2f29-b8ee-4945-8038-cfc3f06fc41a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aae683-b32e-402a-b1f1-303fdb9d7668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c92c3a6-88dd-4b9d-b8dd-9dc7ae940340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72532cd0-8107-42bb-b08d-9887b2d13670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8594b83-a741-4da7-ab8b-8202f50ded2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6c1603-f55a-4df9-8567-7d1a79f9164f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e1fc5-b093-40fc-9cda-ef7b8f57e653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eabc007f-4499-4c05-973a-3bf6ceebe874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3886aa18-adc9-44c2-8163-94c9c5ab1107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a434a6-46e6-4a54-998a-a371bba5d193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0bb437-1be6-4327-b624-9ebaa5876443",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a9b6dd-c879-4601-8b4e-1dfb4ee837b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec8a98c-6b52-48b1-bf13-23afee1088d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa50d232-4a0e-42e7-9e6e-f71f006c30d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01769a20-d855-49f3-bac4-5a328258733c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87607baa-c0b2-4855-9b65-a07badcc6107",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1dfd8a-0785-4e69-94a7-2dad1424bb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "324fd4d3-cf74-440b-a30a-01baa9357220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b66ed38-d50d-42b6-bdf0-3f968a5981cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead8434c-9a39-4d7e-9f9e-c402b2c6e408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ae9af7-fc85-43c7-9d07-bc440f39645f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbee893c-1fd5-4c47-b334-39185a5727c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130bc137-2820-41c9-aa86-a60ce0392035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119806ad-a148-4f9c-a0e9-da110f61fe64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1787dbf-bce7-4829-a70b-78ac11e5a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4404551-2232-4084-b958-027d1dbc0244",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a08fac-9ded-4893-8a2c-6ea2f94c773c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e29b3b-6c53-43ee-bcfb-6f19f44830a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a63c54-4b4d-4b4d-ab02-4e1697bb627f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4e1c95-8dd1-4716-a6bd-ebc0875bb1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed45ba1-ff7c-466d-a6eb-2c0d66bb86d7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f843226-6bed-460f-8f7e-c08af473468c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430ab049-5f5e-42de-993c-e2e7861cb78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1980c4b-03bb-43cc-bc9c-2e259b3a0d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b7536a-b5de-4640-9cb2-50655dc3d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33f6332-6e9c-403b-b7e9-cc63b0db08a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f016a0-5577-484c-8a0f-a8132c03a984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0e4fbd-2fb2-461e-9736-eda062290043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c64dfc6-d4ad-4b74-9d8f-8240a949711f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2898104a-9105-43e0-b753-a65060780726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a8bfd8-bc78-4010-b742-2c6b8daddf52",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b05e9-6e2f-4184-a6bc-282bcabe19a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1073c7ed-f1bf-488f-a15b-a665169c372e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0b98e8-826c-4e31-9b45-64ca641ed5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ed82e-e232-40bd-893c-d4049f88ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55145c13-b468-4909-8386-0d17f5ae1ae1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7f9c1c-6a55-4bd1-ae71-fd8e71762882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6a1cfc-f202-4ce2-bc00-5201ddff0a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d671fd52-168c-4ad9-846a-6296d374a230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae87636e-5e9c-43ec-a7ae-5eaaff9e5b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a059df42-5d9f-4024-a71d-840768a4f5ce",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b3f85-b1b1-40bc-8385-66ef6c2f6db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0a60f9-d904-47e7-9a04-b142150f7678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1e7088-123c-4bd2-b3fd-2234a857538b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a3ea7d-7d82-4453-a4f1-95ebf80934ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ccf3f-0ea0-4568-bcde-695980bfb9e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1076153f-eec1-4e42-871d-f749ea7c5bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a0bcfb-31a9-4e3c-935e-e4934111ae59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a28b49e-ac4c-4f9c-866a-6d6717c6e222",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90062e34-217e-4c0f-8a10-fa8c4b3c39a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f783a53a-a339-43fd-9c13-069725e40cef",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ec25f7-5b91-4fb9-b6f4-05838cc561c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7457bf-957b-4154-82c2-6f39b36a5d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354d133-ff96-4f0a-aef5-ff94e513a451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50dc4078-3f0c-4c75-8d88-38a023c992e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "183cd7cc-060e-487f-a6f8-8ede7ae57b79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35e427a5-4861-453c-ad1a-03df74c24665"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710e6be2-b346-4b32-8da8-78b08f445cf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9359f29d-5ae4-4a64-ba8c-6082a52cdc56"
                    }
                  }
                ]
              },
              {
                "id": "b11439ff-ad18-41ae-a3a4-3f90fc5102d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4c4bc9a-d832-41e0-9ef0-e192e24725b4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1930d5-b747-4766-a882-e8cbb7e89f8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9561c4f8-90cc-4df4-834f-33664c7d3b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dd6907-d265-4f33-9e64-a3035ed4711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91e0dc5e-baa1-438d-8bf2-deb1745d7425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c9c444b-b513-4e52-8336-cf54706c6276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cf67837-7ed9-4cdf-80d1-fd08a7c4878a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78295a57-57a5-4a51-ac3e-42d52c38de91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "826dc937-ca2f-4d21-8e89-4b891302f07c"
                    }
                  }
                ]
              },
              {
                "id": "a542ac1d-de55-4b80-9ce7-67b95eae6a3b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b0eaf5e-138a-45a0-a1da-55c226c7c164",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb99f54-0fe8-41da-a837-668b97cb6870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7d05d4d2-7ef7-49bc-b23b-c26788e7b88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a823467-8ddb-4f6b-bb64-3bf2d5207d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89b7359-4699-4927-8967-409d58879746"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08364645-e01f-49f9-823a-9af8d5f76884",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1820437-56da-4c44-92fa-39d8ee492391",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a447ca07-0b9d-4baa-9fda-89ddb4cc5e67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d25d9330-844d-418e-9aa0-9a8d821bc22c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9854c96f-1006-42e5-9aa8-5f804433ed0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a579c20-e1c9-48cc-8746-1cfec6d35878"
                    }
                  }
                ]
              },
              {
                "id": "bfa9c362-5d8f-4b8d-8c7f-cc03c708a593",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93333505-2327-4a1e-aa37-6b36a22b88bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26db19d9-c6c7-4b23-9d3e-7096a9d8c5f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5db32b9-e630-4515-abdb-0c1ef4047bdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "986ecccd-0d3a-4d74-989d-bd15d8d49b25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9815f6c1-f4cd-4b1c-a903-dc560749a4a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "00728536-ad3f-4ec3-b92b-ffc22ce859cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0c9d1ec-15d3-4fb5-b492-cb3bd387ba10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c60561e-d340-47ac-9501-657ab4e2becf"
            }
          }
        ]
      },
      {
        "id": "658c20c3-68b0-4a35-832a-16c6b839c7e7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9be32990-8103-4d20-b33e-bd34f6d89404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e17afd22-6c80-461e-95cf-1c8b429267bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6de68780-ac3b-49fe-b970-e8a29104bc01",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e028dd8-3921-49f9-a70f-eb9740b20acd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2754e2a6-d844-4b89-a5df-7825d1ee954b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9fc21c-2e42-4aa7-a437-363a5e8c0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be2d564d-8984-4503-a365-5c72ee024320"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b4f94bb-0877-487b-95b4-011f43628b5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "229f7ea5-ea1c-4bd1-99b4-55a0adfa597e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4978cd-7678-4a6b-9a25-0ef84bcc6893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "474a9f25-c457-4f87-9396-1de5457aa346"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8d58172-7c15-4c84-bd50-67048e5328a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1dba8250-c3f5-4351-85c2-35849e1ba422"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75800166-8a35-4780-933a-ac02b607d65a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b31da30-33de-46dd-8590-a30deea89e01"
            }
          }
        ]
      },
      {
        "id": "01848e11-0e3e-4c0f-8c10-094c949b8952",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c0088f93-13f2-4847-b1bc-d5773acccfe1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f71d02a4-78be-4331-ad83-c0623d2eca73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64180b6a-9d28-42e1-afae-cee2d3ba6ad3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab42d75-9d70-4fc9-87d2-9577c75ec2f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb53b15-61c4-4f9e-9540-36f694d7be24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b4726f-d500-4a89-a377-0d9ba627de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2c7be5c-fbe3-4363-8347-c4e6561117cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13d4a888-3ed6-459c-9574-c0a733ddfae4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76c0873a-f216-440f-89ba-8b7b3278b236"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87e9cc0-1791-4b6c-aae5-52b46905d88d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6f55d86-dcb9-47ea-b7cb-7d1281b69d29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf3cb9d9-a3f6-4300-9ca2-76cd734c1430",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc95c616-b87b-48dd-8270-0d0a06816a95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c641e2cb-f496-46c3-a51f-79ca5fd88f85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f266612-6a2a-4be9-ab43-6cda5654c7d5"
            }
          }
        ]
      },
      {
        "id": "2e342368-7ff5-42e1-a0bd-13690eba235a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9f2fb470-9720-450f-9c49-deeb1033f927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad1ced97-fcf3-4382-a799-aeaa082a1df6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a4be85f-da06-4d25-9b45-ccf830e814ab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e80ca6-5dab-413c-bf33-09c9912a6cbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c89e47d9-e0ca-4b97-bcc7-dae679b464d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8fa900-584a-42c3-95d1-d937203850d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fa3bc56-4cce-45b6-b8a3-f7c3b92519cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "932700d7-5ffc-4b63-b535-8f0a677a30be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49a6ca13-94b7-4f97-bfe1-4213ff1fd85b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0c14cdd-420c-4578-afc4-73952bacab95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72300627-94f8-4965-9e62-393ef4476162"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f537f35d-baad-42e5-a9d5-701faf7511b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f213ede6-e228-4689-87ab-c95adabb3936"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a64203c-047f-48ea-9b4d-0cb52b33491d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8dfd3b7-04fa-4ada-86a2-9cbf6a9e25e5"
            }
          }
        ]
      },
      {
        "id": "a04ce137-2f80-4483-afd1-3125a8c852c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61a263d6-2e09-47c1-9f26-a87f49d58e07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7458e313-39b4-46c0-a7c6-25d0fa070582",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b9e67ccf-4a7b-414c-947d-570848cadc2f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dbbc97d-4ad6-4982-bb16-ea3982ee3137",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4997fe0f-4b0d-445e-a1f1-30b6e7794c36",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.463157894736845,
      "responseMin": 20,
      "responseMax": 293,
      "responseSd": 22.489675070230394,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703809728188,
      "completed": 1703809752282
    },
    "executions": [
      {
        "id": "54be84bb-718e-40b8-9dab-05310d8376ba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c5425f49-6240-4fc3-b0cb-05a95841e647",
          "httpRequestId": "bd6ddfdc-0a8f-4108-999b-24e0731fea94"
        },
        "item": {
          "id": "54be84bb-718e-40b8-9dab-05310d8376ba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e37ffa61-38cf-41b4-9f99-b13c35474187",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "84478db9-9b76-4fb5-8ae6-cd6238617b9c",
        "cursor": {
          "ref": "326a6d16-1e0f-44ae-83b9-6c519a73d10e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "309cf3a6-8792-4d6c-b0fb-0cc353f16cf3"
        },
        "item": {
          "id": "84478db9-9b76-4fb5-8ae6-cd6238617b9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fd3ff2a5-77d5-4858-a68f-51e6b12bcb71",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "b38d8222-7cab-444d-b249-44683661290c",
        "cursor": {
          "ref": "1cab5768-b47a-4f39-bab8-4990e5613cae",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ca1f1a1-6aca-4145-8331-761ee28be167"
        },
        "item": {
          "id": "b38d8222-7cab-444d-b249-44683661290c",
          "name": "did_json"
        },
        "response": {
          "id": "b727d92a-ef1d-4b86-aa54-1e65586d7652",
          "status": "OK",
          "code": 200,
          "responseTime": 286,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5722167e-05de-46c3-b9e8-2fd3ca1875cb",
        "cursor": {
          "ref": "d86fcb39-037d-4187-9d45-88179df815f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "504dec26-ae2d-47f6-812f-76ae1b95d780"
        },
        "item": {
          "id": "5722167e-05de-46c3-b9e8-2fd3ca1875cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "da8f05da-1d7e-484f-9d39-d63fa555cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5722167e-05de-46c3-b9e8-2fd3ca1875cb",
        "cursor": {
          "ref": "d86fcb39-037d-4187-9d45-88179df815f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "504dec26-ae2d-47f6-812f-76ae1b95d780"
        },
        "item": {
          "id": "5722167e-05de-46c3-b9e8-2fd3ca1875cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "da8f05da-1d7e-484f-9d39-d63fa555cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b16aae4-1191-410e-9314-67e78068a310",
        "cursor": {
          "ref": "2eccd652-778a-471c-8940-42357723973d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ddc8c3a5-cb41-4bdc-889f-c979a18a5d53"
        },
        "item": {
          "id": "9b16aae4-1191-410e-9314-67e78068a310",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8a017b2-8f05-4f42-9068-f8da0b7814e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 96,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a44f982-9f21-432c-b10f-446f0295820e",
        "cursor": {
          "ref": "5ecfc154-0829-4e4d-b882-1db4c18663f8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1b204656-ab43-4752-97ea-5d791a51ff31"
        },
        "item": {
          "id": "6a44f982-9f21-432c-b10f-446f0295820e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ac4f838-4167-4e53-87c2-ca1d5e273dd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99198a02-aefb-4722-9b63-5957cee01f42",
        "cursor": {
          "ref": "40ccfa82-9fe1-4f02-b7a5-ea5f39e7a836",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1caeb156-13b7-4e46-b866-9d98e1d6da5d"
        },
        "item": {
          "id": "99198a02-aefb-4722-9b63-5957cee01f42",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e05fd3fa-d33c-47d3-bf49-b249f11d4b47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7e5a0-0918-49af-8572-46522c1dad44",
        "cursor": {
          "ref": "42f5cfc4-3fe9-4d32-9e33-9dc3e14ca84a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e297bfd2-1139-424e-b8dd-8d2619cb933b"
        },
        "item": {
          "id": "44c7e5a0-0918-49af-8572-46522c1dad44",
          "name": "identifiers"
        },
        "response": {
          "id": "d9205ccf-b139-44bb-9ada-935a6957bf83",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bba3939-68f8-4f03-a38d-b6a1469cdde2",
        "cursor": {
          "ref": "62faf349-9a07-4722-a721-8904f900526c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7ba02d6a-c649-4abd-9170-fb8433062934"
        },
        "item": {
          "id": "0bba3939-68f8-4f03-a38d-b6a1469cdde2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3fe658f1-e956-4227-b7d0-7dbb2af0118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c378377-b2b9-4e2c-a40b-a674fb831d1d",
        "cursor": {
          "ref": "91893ade-6fd1-4409-a696-5bd2a0fab2e5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5c1f485-bfd6-49eb-bbd7-5da98bcf4d84"
        },
        "item": {
          "id": "9c378377-b2b9-4e2c-a40b-a674fb831d1d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ccd978dd-f5a7-463a-8480-cc167df3c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a1c42d-9843-44c5-9f80-9cb9f1e4a35c",
        "cursor": {
          "ref": "3f68ce39-e1c1-4742-811a-b1bcdd12e873",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fc13a407-5439-4d63-9aab-66f7756d6d80"
        },
        "item": {
          "id": "32a1c42d-9843-44c5-9f80-9cb9f1e4a35c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "41caff2d-e8f3-43c5-8d65-bfd97247bd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d49a1e1-f675-4deb-8242-717ea687076f",
        "cursor": {
          "ref": "68691b82-d7a4-41fb-b24f-ad32b42f74c6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f7057aa8-08a2-4a0a-b545-86dd2fb5bd36"
        },
        "item": {
          "id": "9d49a1e1-f675-4deb-8242-717ea687076f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cd9d3054-de68-4fcd-89d0-59f744b04f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12bb7c-a344-485a-b9bd-65efc47995f0",
        "cursor": {
          "ref": "2b30c245-a614-4034-bf24-19a1e06ec402",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b0320988-e151-41f4-b388-63823f8a4fe5"
        },
        "item": {
          "id": "6e12bb7c-a344-485a-b9bd-65efc47995f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2e76994d-79e5-44ff-875a-c0b1fa8f328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242cc185-751b-406b-90f6-c664136b77ed",
        "cursor": {
          "ref": "7a4b885e-d1ff-4935-89ec-3be3d9060dc3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2e1b3297-d609-4666-a87f-b133011d759a"
        },
        "item": {
          "id": "242cc185-751b-406b-90f6-c664136b77ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e31778aa-3194-4665-bd50-667c5583d0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f451fa0-568f-4ea7-a253-fccba3ea9991",
        "cursor": {
          "ref": "0ffe394c-5258-4b7f-8841-3e42d14fb37d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e74da8d2-01e6-4281-9392-f246d75f4515"
        },
        "item": {
          "id": "6f451fa0-568f-4ea7-a253-fccba3ea9991",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b08b8461-b2f4-4707-a6fe-5c1cae3738cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d87207-bea3-42cd-b612-74dba121ae9c",
        "cursor": {
          "ref": "34a63ddc-76fc-4e00-a34f-6f569d28a7e3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "51e0bb03-5cca-48e6-9cb0-a51889104b81"
        },
        "item": {
          "id": "e8d87207-bea3-42cd-b612-74dba121ae9c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d9d5b0ad-2838-4bff-a7d5-2b71d6dc2276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed0084b-7a78-4845-8b34-19def6bceb1a",
        "cursor": {
          "ref": "1e818735-dd96-416b-906a-f0abd8be0c39",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d180e79c-8891-42bd-8920-8da445cc2643"
        },
        "item": {
          "id": "9ed0084b-7a78-4845-8b34-19def6bceb1a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5def8357-7b0d-47fb-9112-98a8196d54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f92c27-8e5d-4063-a0be-0c5cdeb4c470",
        "cursor": {
          "ref": "85123b1a-6dd9-4e93-9e68-dd7f16e66ce1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9880d8fc-cadd-41f1-a4cd-93dad21ea7af"
        },
        "item": {
          "id": "f1f92c27-8e5d-4063-a0be-0c5cdeb4c470",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fb4f04fe-ee34-4d72-bb5f-54628a72d2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1cd613-7bd1-400e-b0bb-a4b0ca119d78",
        "cursor": {
          "ref": "1bc10bf0-baa8-4846-9273-15190849978e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05bb29dd-4216-44d4-ad84-145c14574769"
        },
        "item": {
          "id": "3e1cd613-7bd1-400e-b0bb-a4b0ca119d78",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f92d781-6427-4c2d-89a8-bee9ade4c276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f6c2f3-5008-462d-9821-bcbf0b1316dc",
        "cursor": {
          "ref": "da6c6e7f-9a0f-40bc-9ec5-ab9f47de0830",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e3aef08-da00-4eca-ab67-511554f2d135"
        },
        "item": {
          "id": "50f6c2f3-5008-462d-9821-bcbf0b1316dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb49376c-757c-47d0-b1fc-29db49430d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf7b31-d85d-4d04-94d8-a682f8dfafee",
        "cursor": {
          "ref": "b9b18b11-f3c4-4fb3-8ad6-840c395315a3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e491bd7-6093-4bb4-9733-fddb2cde5f90"
        },
        "item": {
          "id": "84cf7b31-d85d-4d04-94d8-a682f8dfafee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "380b3404-cf15-454e-bfdc-9902c4855137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb1774-1cc4-4f80-8c00-46645575a190",
        "cursor": {
          "ref": "fbdf706e-541a-4197-9d91-56f27d868d7a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4fb9331d-bf50-4b94-9a3e-91b81840728a"
        },
        "item": {
          "id": "72fb1774-1cc4-4f80-8c00-46645575a190",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58b24dd4-ea22-409e-a7d4-137015bd5ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f411ec9-9984-4792-a592-8e864e73b1d1",
        "cursor": {
          "ref": "3af907aa-b3a2-4ba5-8513-250d814d82a2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42900d3f-f32e-4d22-aa3d-70c95a7248cb"
        },
        "item": {
          "id": "6f411ec9-9984-4792-a592-8e864e73b1d1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f284bfca-95d5-4250-9833-b0ff882b2b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc427e49-4d6b-49ab-95bb-735f6ff1710f",
        "cursor": {
          "ref": "eed2b927-c8e8-428f-b58d-97fcb42f4019",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a194ee4e-842c-4b59-b070-2c589f67e0d7"
        },
        "item": {
          "id": "fc427e49-4d6b-49ab-95bb-735f6ff1710f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dccaf677-9b3c-407b-bbb5-a8e4366f7125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a445ba-98f4-4b6d-8853-2117446c1645",
        "cursor": {
          "ref": "c3972c44-9aae-4861-a279-2bc8d26e8436",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "11043fd0-27bb-4795-b75e-1078cfaecef3"
        },
        "item": {
          "id": "d1a445ba-98f4-4b6d-8853-2117446c1645",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d241b2eb-0745-4b33-9ef8-ae9a57b1d0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cebdfc9-4ea2-4cbc-8593-ccca190ddfab",
        "cursor": {
          "ref": "42490af9-fa7b-498f-aec0-164a61d0e8d5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "acb9165a-9363-4801-9c1b-a6212ba4e795"
        },
        "item": {
          "id": "8cebdfc9-4ea2-4cbc-8593-ccca190ddfab",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b6c26457-74ec-402c-a331-0019d07e98fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e1cc21-956a-46aa-8495-cc3ea46afdae",
        "cursor": {
          "ref": "67d5be9d-2d80-4700-8787-20860ca9ed06",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "587a8ff0-8e4a-4ed8-8ed3-cda0e46353a7"
        },
        "item": {
          "id": "23e1cc21-956a-46aa-8495-cc3ea46afdae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "da0b6cbd-f950-4b95-84ae-3f5fad69dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a429cc5-0d5a-47be-834c-6fe5faffd930",
        "cursor": {
          "ref": "195c2bdc-fc75-45f4-90dd-bdec4e9e89c8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "40e5092d-9f7c-48a7-bf21-822fa93403e9"
        },
        "item": {
          "id": "6a429cc5-0d5a-47be-834c-6fe5faffd930",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "65404f1e-e9b8-45c3-b3ef-99ef0cadb13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16828897-64ab-44f9-ae21-651b6b918dc8",
        "cursor": {
          "ref": "2cb826c5-c7f0-41c3-91bc-4d11856fa647",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7554c3c-10f8-473a-9969-a79aca4f8d97"
        },
        "item": {
          "id": "16828897-64ab-44f9-ae21-651b6b918dc8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e42d599-b5e9-4763-9fa4-1e14de73534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1284cef9-3993-4a7f-91b0-b114db7a98da",
        "cursor": {
          "ref": "6ecd2aad-6605-42bb-83b2-80e573d71760",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f5a0a702-aeac-47a0-8f8d-0d27d11e6210"
        },
        "item": {
          "id": "1284cef9-3993-4a7f-91b0-b114db7a98da",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b80dfcb-9644-46e7-b808-12721f0524a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fd1124-8c16-45bf-b909-fb01855630c7",
        "cursor": {
          "ref": "0bf2a31a-f05f-4ce3-a081-140d976c9294",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a016fc26-3313-4700-bb6e-e17ac7626abd"
        },
        "item": {
          "id": "91fd1124-8c16-45bf-b909-fb01855630c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7376fcc1-365a-4052-94c1-43bb460e57e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a5eb3-89f5-4caa-9d9c-a796a1f5a802",
        "cursor": {
          "ref": "0e044904-8206-40cf-a164-cc58fbfec18a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b12b20a0-5b4d-4f05-865c-553b006831cd"
        },
        "item": {
          "id": "f53a5eb3-89f5-4caa-9d9c-a796a1f5a802",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8323de9-e512-468c-ae50-aa5997a08c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265f562-390e-427a-8478-8acfa45f8c79",
        "cursor": {
          "ref": "3be07b80-3b42-4083-8ed1-bbb65c2105cc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e0674efe-c93a-41d7-9abf-2e41e4e57c32"
        },
        "item": {
          "id": "7265f562-390e-427a-8478-8acfa45f8c79",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "64ef0910-67b5-43cf-aafc-3aa83a90ccef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e7baa0-c250-4660-85f8-ca31889190cd",
        "cursor": {
          "ref": "f18bd347-7f29-46ed-9a35-07972110ffb3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "127dcc58-3931-4327-b605-cae8eeea1377"
        },
        "item": {
          "id": "24e7baa0-c250-4660-85f8-ca31889190cd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c24eacb2-689b-4417-8de7-34dbc452ab4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c5043f-d8ba-43fd-8f25-1386c777acae",
        "cursor": {
          "ref": "26b65850-d0ef-44df-a375-85f75401b9ac",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4d2fef58-f087-4d6b-8540-c598ad8b7f11"
        },
        "item": {
          "id": "53c5043f-d8ba-43fd-8f25-1386c777acae",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "208edb93-92c9-42d0-bbb1-efc4200c2adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580273db-4b52-46bd-b18a-3f8a055f491a",
        "cursor": {
          "ref": "445decb8-1cf1-4f2a-913f-c3177f0c9ac7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c9719ad0-7dfe-4b4a-8c5c-4828f471244e"
        },
        "item": {
          "id": "580273db-4b52-46bd-b18a-3f8a055f491a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "84e02e42-8607-44dc-a1dc-9c8fcb8b2785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee9c621-5fb4-4e02-9432-fea5b147e9eb",
        "cursor": {
          "ref": "6788168b-9a9c-4352-b15d-b1229327e6d3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2fb1156e-2bf0-431b-81aa-11382cb88065"
        },
        "item": {
          "id": "dee9c621-5fb4-4e02-9432-fea5b147e9eb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "489c823f-9a3f-417d-a09a-3127184a7c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7869649f-72a9-4e69-81f7-f8f8ff85e3f4",
        "cursor": {
          "ref": "37b3dc2c-7e68-4b63-b9c6-8f488c3d6109",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c0a7704b-f67b-4936-a58b-ae5cad3973d8"
        },
        "item": {
          "id": "7869649f-72a9-4e69-81f7-f8f8ff85e3f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d9974638-36f0-4196-86c7-7558f89db29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a444b9b-39b4-4055-af7d-536a4d51b6d9",
        "cursor": {
          "ref": "9bb228fb-d3ab-4447-97b1-a01935d20a17",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c8e4e1b-d435-45a2-86a0-d57f80bc5c32"
        },
        "item": {
          "id": "1a444b9b-39b4-4055-af7d-536a4d51b6d9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c7dd690-df21-4a6d-9011-18dfe7553c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ced4e3-2b3f-4ccc-93ea-08ca7fd140c7",
        "cursor": {
          "ref": "76f83f1c-3128-4ce2-9b0a-88e828c692e3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a0b1ac5-e6e6-43f5-b070-d7f0b3e94e31"
        },
        "item": {
          "id": "84ced4e3-2b3f-4ccc-93ea-08ca7fd140c7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0b6f2131-33cf-4836-9eec-91403ef70214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f630d8-63ea-45df-a859-97b47fd4b0fb",
        "cursor": {
          "ref": "69086253-429e-4fbf-a2ff-1ce381a5b142",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cfe15e73-4010-4389-b78d-13ae215a616c"
        },
        "item": {
          "id": "a8f630d8-63ea-45df-a859-97b47fd4b0fb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eb9babeb-adfa-4d0e-b8df-7dc1df362f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332b0961-b05a-4743-91c8-9982ec771331",
        "cursor": {
          "ref": "d6ef7c8d-d958-40df-bcc0-1252d1ded3e8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b6b904ff-b3de-4fed-8643-d66ec17a0cd0"
        },
        "item": {
          "id": "332b0961-b05a-4743-91c8-9982ec771331",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6628952-a399-4d1b-910f-6d6a06560186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784ce82-a972-45c4-a219-91ac64ec5ea9",
        "cursor": {
          "ref": "c67976b4-4430-4715-a3a5-4b98d0f3ef36",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b5fe3ac0-d407-4cdd-a5ce-42280d4a15e0"
        },
        "item": {
          "id": "d784ce82-a972-45c4-a219-91ac64ec5ea9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "622031ce-5f87-4de9-910b-bba59f770c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f8ef00-0703-4c94-8bba-4ac94cb901ee",
        "cursor": {
          "ref": "5bd3db3f-08c4-4eb4-b964-2e0cf902a440",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "484c7689-a19f-46bc-a9c5-581bbc5a3fb8"
        },
        "item": {
          "id": "53f8ef00-0703-4c94-8bba-4ac94cb901ee",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0335fd68-44e7-4a9f-b3af-10ffff9c72cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b3eb8-f2e1-4dbd-bb06-c5910436178e",
        "cursor": {
          "ref": "0f23270f-1dd3-476a-8d0f-0b25412ecb2f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f1b2881e-7191-4dcd-b421-c2571fc216db"
        },
        "item": {
          "id": "fb6b3eb8-f2e1-4dbd-bb06-c5910436178e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cc09f4a6-1fb3-422f-a3dc-a13815c649ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2b7535-b01a-4258-8b67-73032cd12bb8",
        "cursor": {
          "ref": "0c0db236-6184-457c-97ca-357f7dc8a9cd",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b681cbf-d6cb-4d06-8df0-ab04e7eaa769"
        },
        "item": {
          "id": "2c2b7535-b01a-4258-8b67-73032cd12bb8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7d3fb5bb-6801-455d-a2d3-a3399b641ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bb6cd7-54a4-4961-9a54-71193b016063",
        "cursor": {
          "ref": "2ce96963-e674-4196-9ec5-ec0d3f5663a7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cb0a5516-2109-4ae3-be00-98f67f59f6a2"
        },
        "item": {
          "id": "c3bb6cd7-54a4-4961-9a54-71193b016063",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "89508fab-214e-43ec-a99f-6e0ed733fa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5175b3bb-6a58-4e05-91ad-65d1d541fac5",
        "cursor": {
          "ref": "3c760419-57e2-4faf-92ba-e8e787be7020",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06c4eaad-d862-4ebe-bbfe-0eb1891cecd9"
        },
        "item": {
          "id": "5175b3bb-6a58-4e05-91ad-65d1d541fac5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a1712fb4-eefe-4ff7-9fff-d81e94baf39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b010a3b-4cff-41af-a9c5-eda2fc554e37",
        "cursor": {
          "ref": "c6900d45-b6b4-4ffe-8357-e2ba549b2c80",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c148769-d1ac-4ede-ba67-36996fee2491"
        },
        "item": {
          "id": "7b010a3b-4cff-41af-a9c5-eda2fc554e37",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ee08ae32-6bda-4615-8242-29a172d5b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcd1b7e-215e-490c-af5a-6e415dad7a04",
        "cursor": {
          "ref": "f857c0a3-e361-41c3-bc74-e61e3877c13a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "951efb3c-5ed2-482d-9752-5e86920211a2"
        },
        "item": {
          "id": "adcd1b7e-215e-490c-af5a-6e415dad7a04",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09eec18b-85cd-45ff-82cb-a2f71940a587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c5eebb-eda9-44f6-bcd4-07464f20c0c1",
        "cursor": {
          "ref": "ad72e16e-4e61-49b9-b2a9-e348ed877bea",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ecfda502-a5b3-4ce8-b78b-decaddec55f3"
        },
        "item": {
          "id": "12c5eebb-eda9-44f6-bcd4-07464f20c0c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da0e7d5f-a257-4698-ace7-90beb132ff35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5903c7-b2db-4071-9fa0-b996ee59aa7c",
        "cursor": {
          "ref": "2fa7a2d9-f81b-4236-b81f-c83e25390f22",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7876a459-f868-475d-9642-839ee89806f9"
        },
        "item": {
          "id": "5d5903c7-b2db-4071-9fa0-b996ee59aa7c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "55dc73e7-ce2b-49cc-84ad-97a4e66880cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9db967-fe9f-4cdc-a2a4-a6b7cee47905",
        "cursor": {
          "ref": "e95dc14e-5f92-4dd6-b583-f1b0ba411b89",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df46ee6f-64b7-4ced-8c8e-7a676a765ee8"
        },
        "item": {
          "id": "5e9db967-fe9f-4cdc-a2a4-a6b7cee47905",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "85240f8b-82e7-48f9-a8c3-eb2b165438f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6ea1bf-09dd-48cc-a847-5a8fd74a6394",
        "cursor": {
          "ref": "5ea9b924-9c85-43f2-b146-d726725fcbf1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cb74d739-da98-4bf4-a961-543862be469b"
        },
        "item": {
          "id": "9f6ea1bf-09dd-48cc-a847-5a8fd74a6394",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "985156c1-683a-4dcf-835b-9ce4b3dd900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbab90c-081d-4005-a0b5-d211b11def2e",
        "cursor": {
          "ref": "961434a5-44d1-49fc-aa35-63c252936286",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9ff58740-3b7b-499b-81b6-60645d57d3e0"
        },
        "item": {
          "id": "dfbab90c-081d-4005-a0b5-d211b11def2e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8f861a7a-fb6c-46a5-bc60-eefbd20deadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b88fe-e0f5-4327-9b87-9492e38d76b3",
        "cursor": {
          "ref": "fa9379e6-3fc6-4fbc-a9f8-5900b766ec20",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "86f6fc98-61c5-4951-9607-cf2f2fe14e18"
        },
        "item": {
          "id": "7f2b88fe-e0f5-4327-9b87-9492e38d76b3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "02836f2f-1b82-4e7e-b493-da2cd0f8be08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77debfdb-bb06-42fd-899d-4faaa966cd4c",
        "cursor": {
          "ref": "5f5b65a2-0734-4b4a-8067-8909c5e76ec2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df71367f-0658-4d83-ad66-d27f64494abd"
        },
        "item": {
          "id": "77debfdb-bb06-42fd-899d-4faaa966cd4c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ba3579e3-bc7c-4dc2-ba8c-bb5144248dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c25db2-320c-4355-9cbc-ce816874cf6c",
        "cursor": {
          "ref": "c7f2688c-ee16-4c1c-8dcc-fc633b6f9322",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e35f78ff-543c-4bbf-a7e5-bee8c8a23b6e"
        },
        "item": {
          "id": "06c25db2-320c-4355-9cbc-ce816874cf6c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "53df758d-1e8e-4b86-8c52-623db82cc9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c447ac12-262a-4acb-9ba6-12ac586f7b79",
        "cursor": {
          "ref": "a86e11eb-a446-497e-9f4f-ea5617af113a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "813b139e-a6f5-49a7-bb3f-11d05c7ba0c7"
        },
        "item": {
          "id": "c447ac12-262a-4acb-9ba6-12ac586f7b79",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "22a24655-353f-4693-a86f-c9c519a496ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f63efe4-dc6d-4744-9576-effd6e73176d",
        "cursor": {
          "ref": "318375e6-9af1-4172-99d6-9ed65b219b79",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fa65430b-8da5-40dd-85b1-d55d551606c6"
        },
        "item": {
          "id": "0f63efe4-dc6d-4744-9576-effd6e73176d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da8c1128-af5f-43e8-bfb7-1993b9dea10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4f5a0-5bfe-4d3a-9a29-90dc63939e73",
        "cursor": {
          "ref": "7463da0f-8f94-475d-a4ac-b080f82a9e96",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b030396d-8a38-4dec-a491-c555601c24bc"
        },
        "item": {
          "id": "6ad4f5a0-5bfe-4d3a-9a29-90dc63939e73",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5cca42e9-ba05-4a1e-b0bd-a15431c81812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb440d2-c288-403c-be40-ba934e009564",
        "cursor": {
          "ref": "18a4ccaf-7f20-4f2d-8a46-f1132444ccad",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02343890-9bd7-44fb-ae4c-9dcafe6a3273"
        },
        "item": {
          "id": "eeb440d2-c288-403c-be40-ba934e009564",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3644890d-17a4-41d0-9d39-fc6eb1bb04d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d897129e-7ca6-49f3-a3da-b40b7dc0ed60",
        "cursor": {
          "ref": "6433128c-058f-46a9-afec-2308c1e8718d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6a7e2248-1317-4652-a39b-48895f88efff"
        },
        "item": {
          "id": "d897129e-7ca6-49f3-a3da-b40b7dc0ed60",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dd843ab8-1782-452f-ac05-3994e1ee991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4668f129-bae3-48c0-802c-089c43913759",
        "cursor": {
          "ref": "a1252914-9d12-43d9-9b4a-d71faca0fe9c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "487b04fd-8751-4991-a2d3-f47e4392296e"
        },
        "item": {
          "id": "4668f129-bae3-48c0-802c-089c43913759",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ea317e0-9878-45ac-9e76-f9f8c2b58e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415750d1-f554-4699-bcf8-03745b65ffb3",
        "cursor": {
          "ref": "76c7cf17-bd47-47b5-bfba-11441f01f1a4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "390876da-42db-4fef-9bb5-f8a4d7761f7b"
        },
        "item": {
          "id": "415750d1-f554-4699-bcf8-03745b65ffb3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "97c51143-ee29-4452-896b-df79aed2b13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8fb257-be57-4b83-b177-c7f9f17492ca",
        "cursor": {
          "ref": "231147ba-a81f-4ec8-a0e4-05c4328b737f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5a053a43-068d-4fe3-9f42-f1050add1cd3"
        },
        "item": {
          "id": "cb8fb257-be57-4b83-b177-c7f9f17492ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c93db3f8-cadf-420c-bec1-546ce8b5471e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2555eba-e17c-4d4e-a6c2-f7fd13e23b29",
        "cursor": {
          "ref": "4264f168-ea19-4029-82fe-2f6e784b20e2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5d881845-34c6-457f-bcf8-13fb29b1e46a"
        },
        "item": {
          "id": "f2555eba-e17c-4d4e-a6c2-f7fd13e23b29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ae45f1c-e477-4132-b096-7611c927d66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659fe769-e403-4d90-b954-540566fa91a8",
        "cursor": {
          "ref": "61a4906d-b11f-48a7-b9cc-55ef4bfbb9c0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "541d4702-25a5-4854-ac11-e481f11a3679"
        },
        "item": {
          "id": "659fe769-e403-4d90-b954-540566fa91a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8d1e44ae-62b0-4b06-8118-32f85433ecde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee49119a-1dd3-4bf5-a2da-8e89577989ea",
        "cursor": {
          "ref": "26b17399-7581-4fdd-80c3-ae247d10d97f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6fc21385-8fe0-44e0-95a1-4aa409cc3d6f"
        },
        "item": {
          "id": "ee49119a-1dd3-4bf5-a2da-8e89577989ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5265df18-ced6-423d-b53c-b5baf48a170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd65c5-dca3-46e1-8b9d-2053962fceac",
        "cursor": {
          "ref": "ab8fd187-b2c3-40f0-8d16-57f599d01ada",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "792bc380-1fc3-4f78-8443-7fb74814dee6"
        },
        "item": {
          "id": "10bd65c5-dca3-46e1-8b9d-2053962fceac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "de0cf212-8903-4f4b-b492-68fa577a3544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8608845-1c29-4db0-a31f-5320497b5d19",
        "cursor": {
          "ref": "1aed2635-8533-4129-b5b6-5793a8437d5a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9aa569a-1390-43f5-a7f9-fc3c9354895c"
        },
        "item": {
          "id": "c8608845-1c29-4db0-a31f-5320497b5d19",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ead46402-95a8-473d-85cc-0378c070eb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80174e02-9ee7-47d3-9e00-f5619485516d",
        "cursor": {
          "ref": "3a2fea0a-3a5e-437d-9456-8393ab9f3ba0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df215111-9b74-4d93-b46f-3cf84873a5cc"
        },
        "item": {
          "id": "80174e02-9ee7-47d3-9e00-f5619485516d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5f56dd20-43ff-4287-a35f-030d7c306e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00eea2b-dc6b-4896-8e09-0943ce8404f9",
        "cursor": {
          "ref": "327d6a36-28fb-40a7-9e4d-391624307810",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f6aa971-c698-4958-835d-c6dce7a2e9a7"
        },
        "item": {
          "id": "e00eea2b-dc6b-4896-8e09-0943ce8404f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2acef66d-e723-427c-94d2-e24a21dabc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef159e5e-5243-4098-8d2e-230f1d34b737",
        "cursor": {
          "ref": "141dc457-e9f7-401e-84c9-827d4783741e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d0c2445-b5e2-47fa-b97f-5fcf99838c0e"
        },
        "item": {
          "id": "ef159e5e-5243-4098-8d2e-230f1d34b737",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "24cc4484-b130-4645-878e-e8d777d469b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dccb23-bb26-4815-bb45-0fb6f3312a23",
        "cursor": {
          "ref": "2e172f16-4b8d-4cc3-b390-515607c9f6ab",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1679e7bd-c0fc-4888-b0a4-7858e4fdc922"
        },
        "item": {
          "id": "59dccb23-bb26-4815-bb45-0fb6f3312a23",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e5a7f06f-00d9-4923-85d3-2b1130a007a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ab8146-50cc-4804-a6c5-87483262c9b0",
        "cursor": {
          "ref": "c2f528fc-2c4b-4aeb-b56b-ef43db6451fd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4a0bc8c1-f89b-46c0-958d-ea91fe7c4d2b"
        },
        "item": {
          "id": "09ab8146-50cc-4804-a6c5-87483262c9b0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15938bef-65f5-4e9f-9163-9604e42c348b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b5af0-45f5-4a06-b1b9-fc603e34a801",
        "cursor": {
          "ref": "a8603088-7bad-40b2-8d75-87a9cb72c6d0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d8da2299-9278-442f-9f48-19aa8ef3114c"
        },
        "item": {
          "id": "498b5af0-45f5-4a06-b1b9-fc603e34a801",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cbb40c3e-c5e1-4343-8f09-4e83a6d166c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee143a-98c9-425e-85ce-7a4872968362",
        "cursor": {
          "ref": "bb2bfd16-b8b6-4faf-b5e9-c354b3fcdadd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a1f8d7be-8c1d-40d7-9f32-c2122492962d"
        },
        "item": {
          "id": "24ee143a-98c9-425e-85ce-7a4872968362",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d6169e74-f2d2-49ea-afcb-1f4e7acf94b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c03ba47-8acb-4ea7-8fc2-bcb6a41a98ef",
        "cursor": {
          "ref": "679b701d-78d5-45a3-9d0a-2426a67b3d78",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7801bbd1-13dd-4f7b-b4e1-5edd5e092d91"
        },
        "item": {
          "id": "4c03ba47-8acb-4ea7-8fc2-bcb6a41a98ef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "63bbd6b7-e6c6-40be-a051-cfbdc27aafe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faccc8c3-d643-4fb0-bf84-3ea43bef950e",
        "cursor": {
          "ref": "3275b651-5a31-482a-9a32-0e6478d2f685",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51655d36-cbd1-441f-8b40-8cb562f341ee"
        },
        "item": {
          "id": "faccc8c3-d643-4fb0-bf84-3ea43bef950e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "26117eb5-4340-45e2-938d-ea02f06f009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cd2050-74d9-4bd3-a0d1-b843afcf31ba",
        "cursor": {
          "ref": "ae8c7a94-5ea9-4b4a-b50e-be63efcaf106",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0b02755-af3c-422d-9536-4f00759628a8"
        },
        "item": {
          "id": "00cd2050-74d9-4bd3-a0d1-b843afcf31ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "478ca0c0-23e9-4c01-a592-b84c17be942d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9f9d2c-ae72-4553-b2fc-76eb6c96b07e",
        "cursor": {
          "ref": "f6d3fd13-3bb8-4b6c-84ab-76f3c356ca4d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f861eaf3-7483-4c24-965f-b9cb060de24c"
        },
        "item": {
          "id": "2d9f9d2c-ae72-4553-b2fc-76eb6c96b07e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "414d9ca4-1847-4785-9799-662a2d47db60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe129b9-6944-4b91-832e-e6766c00e8ab",
        "cursor": {
          "ref": "3fc400a9-2bdd-4901-b0d5-5e0385c80739",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3157e463-8238-4067-83c2-fd8288a8c148"
        },
        "item": {
          "id": "1fe129b9-6944-4b91-832e-e6766c00e8ab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9b634b99-18e3-4263-908c-a766f9ae0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b57d8-4871-4513-8d1b-115bf52ed7b7",
        "cursor": {
          "ref": "022a8999-51fa-481b-ab69-65ee2751f06a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10c6c72f-cf94-4116-be38-0999e9a3aabf"
        },
        "item": {
          "id": "b06b57d8-4871-4513-8d1b-115bf52ed7b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0541cf2c-1dab-4aa2-bad8-cfc37eeed83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175872f1-698c-44c2-b64e-9cad99699e04",
        "cursor": {
          "ref": "9c5c332a-7365-4423-9103-5a8c11dde8a5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2195ad01-764d-45c2-8926-efeeba1b135d"
        },
        "item": {
          "id": "175872f1-698c-44c2-b64e-9cad99699e04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9ea80d55-e654-4171-99c2-f33e2d0a0ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e0783-d626-4592-b702-3c738e03ecef",
        "cursor": {
          "ref": "f7369dac-e8ca-4a74-a7f8-1cb59b90c648",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "086c3337-98d3-4f58-b5a3-e1600d880bb8"
        },
        "item": {
          "id": "d48e0783-d626-4592-b702-3c738e03ecef",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "95d64293-240d-415b-9206-8744a910492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b8535e-7b90-41fd-8476-127f07ae9de2",
        "cursor": {
          "ref": "d5e597a4-e941-4c0c-a792-1520486e3b73",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45f8e6d1-dd38-45f8-a795-11c5f2c5b30e"
        },
        "item": {
          "id": "c0b8535e-7b90-41fd-8476-127f07ae9de2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c3ce36bf-9770-4bca-96c2-1a6013f50cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bd7a89-40da-4b76-b341-b59f90e7567b",
        "cursor": {
          "ref": "e2f63fff-3403-4ade-b851-a52e7fdfe717",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f366f713-372e-4ce6-a36a-b1dc5ad95262"
        },
        "item": {
          "id": "62bd7a89-40da-4b76-b341-b59f90e7567b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dc6788c6-874c-4279-a2c1-48b6798cd1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf336c-e3d8-40d0-b6b4-4c8c9c1eed43",
        "cursor": {
          "ref": "2291ad45-3266-4371-9c41-5ce6d2f72183",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d250b7a1-fafd-4b43-aab9-6a6df3355ba4"
        },
        "item": {
          "id": "e3bf336c-e3d8-40d0-b6b4-4c8c9c1eed43",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d63ee2b7-a388-40ac-a641-e5e02684e79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c18e4-f2cb-42eb-803e-232cce4f70db",
        "cursor": {
          "ref": "0bdc3245-c02a-4744-b71a-9cfee75a0be0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "08aa3a3b-8c16-49f1-b6df-634f6b6bca8b"
        },
        "item": {
          "id": "e52c18e4-f2cb-42eb-803e-232cce4f70db",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a324a7b2-6fe6-45e2-918d-b0b23753ff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195be3e-1d6b-47cf-aebc-c24f6355ca79",
        "cursor": {
          "ref": "79bfc944-3f21-42d6-8648-ee28cedfc5b4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7ec9c5f0-1c81-41cb-a006-e176b73e6828"
        },
        "item": {
          "id": "4195be3e-1d6b-47cf-aebc-c24f6355ca79",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "55ac48c7-7b53-4caa-8098-e4ee48136b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31444ee6-730d-4f9a-a902-4ad561c4abd1",
        "cursor": {
          "ref": "5df5429e-45e0-4a38-973f-25a4b766076e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "22476f63-4c01-499d-9c21-85b5f3a7e56b"
        },
        "item": {
          "id": "31444ee6-730d-4f9a-a902-4ad561c4abd1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cd6f3d43-ff5c-4171-9dfe-0d00794c5be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef578ba7-5365-494c-a0e8-75788c636395",
        "cursor": {
          "ref": "38066cb3-7c9e-4b69-b405-2cc6dd68f9ac",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a2951968-4dc1-4776-b81e-c683a563e1a7"
        },
        "item": {
          "id": "ef578ba7-5365-494c-a0e8-75788c636395",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "99721622-da95-4891-8b9a-73c6f96326b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34232b5d-1ac1-4224-b0aa-310f8b091171",
        "cursor": {
          "ref": "064d15f9-8233-4e19-a1f0-4553da21a7fd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2eb01331-0a89-4660-95b3-8cbc927ea780"
        },
        "item": {
          "id": "34232b5d-1ac1-4224-b0aa-310f8b091171",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b99b6909-1b40-4db8-b5ed-23da520f8cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0443faf5-bfc2-4fa3-8886-e385aecd4835",
        "cursor": {
          "ref": "32ad2968-fc76-4302-9760-ad277011be0b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f48b4ed9-c360-493f-b5a5-f11f8b8480d4"
        },
        "item": {
          "id": "0443faf5-bfc2-4fa3-8886-e385aecd4835",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0c3d14bb-3a33-4e0c-95cc-73bbaa6becc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502bacd5-2aeb-49c1-9949-d85eed40198b",
        "cursor": {
          "ref": "f9bfa692-4311-4f29-9397-c9f776eeadba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "814c555d-7880-4e37-ac4c-b61092bdf9a0"
        },
        "item": {
          "id": "502bacd5-2aeb-49c1-9949-d85eed40198b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bcd0e542-9961-4e86-8e82-244b777011e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1017d9-93d8-4786-ac4a-12b24c64f2e4",
        "cursor": {
          "ref": "35f83dec-3981-4b84-a17a-b984cd3e1e3c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f5f38771-7191-42b3-9d37-fdbeb474bd73"
        },
        "item": {
          "id": "fa1017d9-93d8-4786-ac4a-12b24c64f2e4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "13402584-3d61-4d99-97c3-99a77d794113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca85360-5463-49f9-b361-f8c6c86de40b",
        "cursor": {
          "ref": "59bf8d02-57f2-42a4-b080-ab1a738a2c06",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6986b425-76c1-471b-918a-5bd5c17322ca"
        },
        "item": {
          "id": "9ca85360-5463-49f9-b361-f8c6c86de40b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "257f8b4b-6028-4505-a3d3-41f34101bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb700d8e-06e5-4574-a652-fe6fee98731e",
        "cursor": {
          "ref": "26e3bd80-49c1-400a-ba16-af1b37f3c978",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "12363698-a59e-4b15-830b-fcc2237b3fde"
        },
        "item": {
          "id": "fb700d8e-06e5-4574-a652-fe6fee98731e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f8f357d5-5596-469e-80c7-6cf138200f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a24b28a-4e3b-446e-80c7-0e6a2655179a",
        "cursor": {
          "ref": "627bc91e-2950-4d09-b4bb-3e0add2df2f6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5e59bffc-4a45-4639-916a-a84bbac1fe49"
        },
        "item": {
          "id": "3a24b28a-4e3b-446e-80c7-0e6a2655179a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9e4c938-35b1-40f6-b32f-5f729ea64da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa46c8d-f126-4205-88e3-18bc50e8795f",
        "cursor": {
          "ref": "8efee5cd-6023-4663-a901-dcc236ab2a1e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "01a73318-043a-4300-ae6c-6d55ae6fd1d9"
        },
        "item": {
          "id": "0aa46c8d-f126-4205-88e3-18bc50e8795f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a8ccbef4-a078-4763-831a-c3e1ef992117",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a34e53-ec32-4970-a67a-bd5dc80f3f8d",
        "cursor": {
          "ref": "b81761f5-c91d-474d-8192-0fd0dba42de4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a7756b50-a6b2-4315-92c4-68eee09dd5f9"
        },
        "item": {
          "id": "56a34e53-ec32-4970-a67a-bd5dc80f3f8d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4ce38486-dd1b-48f4-b990-8eeffa82bdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ef2ac2b5-c90c-40f7-9dc2-0304416aeb49",
        "cursor": {
          "ref": "643f2d3b-a91c-494a-8524-ba159362f34e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b6fa5cad-3c49-4e7f-ab2d-6550a3b75d1b"
        },
        "item": {
          "id": "ef2ac2b5-c90c-40f7-9dc2-0304416aeb49",
          "name": "credentials_issue"
        },
        "response": {
          "id": "52cd68e7-0cf6-42fd-a235-f72fa3213999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "32ac5923-8091-4a6e-b90f-0538b7cc92fe",
        "cursor": {
          "ref": "8fc9b654-ebc6-4569-b756-a87f6f06715e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "efd754a5-ed84-42c0-a0be-ad7fae045396"
        },
        "item": {
          "id": "32ac5923-8091-4a6e-b90f-0538b7cc92fe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a0a9134-edcc-4d4a-a664-15811763c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d5fc9c37-0e7a-4d2f-8676-40c491de4399",
        "cursor": {
          "ref": "4dab247b-07d9-427f-889d-c22f51166bb3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "54321217-b0a6-4e1d-9fd9-2b7e22d00d15"
        },
        "item": {
          "id": "d5fc9c37-0e7a-4d2f-8676-40c491de4399",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7b1e1f91-1fff-4ab3-8926-9863df0edde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ce96e956-ea76-40f7-b91d-4659449e55e0",
        "cursor": {
          "ref": "0a18aaff-d363-499b-9968-cc578cfe291c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7c3c43b9-dbea-4690-b9f9-e061a6ab6c60"
        },
        "item": {
          "id": "ce96e956-ea76-40f7-b91d-4659449e55e0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "daf35b03-2371-4b40-b5bb-f74bae60d43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f89f0626-7837-4b16-bd71-04a8308b885e",
        "cursor": {
          "ref": "8c7ee446-db03-4eb3-9eff-c8df5a30dcd8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "14cf3748-7615-44b0-b0eb-a37faaa77137"
        },
        "item": {
          "id": "f89f0626-7837-4b16-bd71-04a8308b885e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "470e2647-b2d6-4315-af43-33b15868714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "471fe94f-8681-4f44-bd40-41d2ced01acb",
        "cursor": {
          "ref": "3cd0f1ca-2c5a-496f-adba-5923bfb4c350",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "08cbba61-465d-4f21-9db4-d30e0616e9f7"
        },
        "item": {
          "id": "471fe94f-8681-4f44-bd40-41d2ced01acb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "de31fcdc-070c-43da-902e-1a3da7ff14d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5595de6a-c3be-48ce-921d-7d90c7aed240",
        "cursor": {
          "ref": "e1aae455-9a4e-4a70-bb45-a0747c12e942",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8a16839b-71f7-4fc7-a870-bedd3b8ffbe5"
        },
        "item": {
          "id": "5595de6a-c3be-48ce-921d-7d90c7aed240",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c50b7f1e-6dd9-4093-b330-cafdd6f3357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd8a9d-2e0e-49fd-8cf2-326d74fd9e12",
        "cursor": {
          "ref": "32cce7b4-1983-4335-bee1-632b526bd2b3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "004f0897-230c-4c2c-bce2-665bffa03658"
        },
        "item": {
          "id": "b5dd8a9d-2e0e-49fd-8cf2-326d74fd9e12",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e0b5741f-e873-40a6-b0ec-b5d4e31c7be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5edd4b-d1d6-4d24-bf05-25b1ca697b0e",
        "cursor": {
          "ref": "10d1fde0-b24a-4fb8-baa5-d1d01e7ce4c4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ecefa821-3bb1-4dcd-a372-a91d9a906d5a"
        },
        "item": {
          "id": "4b5edd4b-d1d6-4d24-bf05-25b1ca697b0e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ba8b5878-c690-46cd-8033-271138f2ed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7c4fa-18e9-49a6-8a08-c470a17d8e81",
        "cursor": {
          "ref": "a3ea3e21-b9cb-46ab-a809-553a7d84a185",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5ff049ee-e7c6-423c-a37e-a11f424bcaa0"
        },
        "item": {
          "id": "f3a7c4fa-18e9-49a6-8a08-c470a17d8e81",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4bd8a10-762d-4a0f-846a-f3ee193e19e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d978c9ff-f1fb-4505-826b-07e0bc2f6c69",
        "cursor": {
          "ref": "192f9415-dc59-4936-8c6a-d656f48547f2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "212971e6-030b-4961-be36-182de02bbbf5"
        },
        "item": {
          "id": "d978c9ff-f1fb-4505-826b-07e0bc2f6c69",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf457f9d-ef53-4aa5-b641-81438c27a16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d7a2a3-1c1f-4868-b32c-528bb43c372a",
        "cursor": {
          "ref": "6e801234-4d5e-475a-af73-056577ee184a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "afbb1295-c650-4554-a00b-b70c7b6a6a32"
        },
        "item": {
          "id": "e7d7a2a3-1c1f-4868-b32c-528bb43c372a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cef6e46b-9d11-4fcf-b4d0-07d34ce7b343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9648fe8-e7f7-48d2-95bd-ef7b52e58360",
        "cursor": {
          "ref": "1dbe12ad-d7c8-4f7e-9531-513747f5f201",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b438c35e-a6a6-4f12-9fbf-35d34d60682c"
        },
        "item": {
          "id": "c9648fe8-e7f7-48d2-95bd-ef7b52e58360",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f69bd451-3506-425d-9a4d-49ed1ed41d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13621764-484c-4c78-a50c-33f8376b2e4e",
        "cursor": {
          "ref": "0ae91b5f-865f-49cf-918a-ba1b572c995e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c438d6d1-d39f-4cf1-837c-4a8b11ddeec0"
        },
        "item": {
          "id": "13621764-484c-4c78-a50c-33f8376b2e4e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "183b7dc2-f5da-47e1-8f1c-6a8bc8047b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9100e1-ea5e-4b19-83c0-c09616ebe42d",
        "cursor": {
          "ref": "f0d4a4e7-f1b3-42c4-bdb7-71128895f6bb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e7e994b-7494-4793-aa27-39a656abd968"
        },
        "item": {
          "id": "0c9100e1-ea5e-4b19-83c0-c09616ebe42d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8b912033-e31c-4e81-a90a-e277fb16de17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ba506-4520-443a-884d-316bdf593fac",
        "cursor": {
          "ref": "e25678ae-6066-43ff-a5be-e81aeb83a79f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "88041286-261e-4cbd-8e15-a9207a774fee"
        },
        "item": {
          "id": "bb8ba506-4520-443a-884d-316bdf593fac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8161797a-5efe-4f9e-8b8b-e1c68892dcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcc26ce-b16a-457b-8047-2fbe1853ef20",
        "cursor": {
          "ref": "f4692780-2362-4eca-9caa-8a8e39f70595",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "70361fe5-5302-4af5-9d9c-ca6269c50de9"
        },
        "item": {
          "id": "2dcc26ce-b16a-457b-8047-2fbe1853ef20",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "237a7abf-fb6c-434e-86fd-8f180c64327b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ac1b09-875d-4bd8-b387-f60bf1a02876",
        "cursor": {
          "ref": "bff006c6-14f3-4679-8723-afef2a26fa1f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "36db2883-27a6-4967-91a5-1632d3581420"
        },
        "item": {
          "id": "c3ac1b09-875d-4bd8-b387-f60bf1a02876",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b174c0f-c508-405f-855c-9ffa860e438c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14629ec3-e8e0-4cf6-bb82-3d36a03b88ae",
        "cursor": {
          "ref": "9e7623a7-34e3-4e1f-a439-0d0ee741ccf6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d9ef9174-4639-403e-acd2-fb501d1527be"
        },
        "item": {
          "id": "14629ec3-e8e0-4cf6-bb82-3d36a03b88ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d95b4ea3-1904-464b-9593-be45545eb81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b63cc1-2927-4637-b494-0961c4a01eb7",
        "cursor": {
          "ref": "91027e95-a7fa-42da-a671-4e42102e28e1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2f1e06c2-465f-48d0-a656-1acd7e299466"
        },
        "item": {
          "id": "42b63cc1-2927-4637-b494-0961c4a01eb7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f2150346-8be3-41ab-a8dd-346570d06183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e547c6b-983d-471d-adde-589e2ac6398b",
        "cursor": {
          "ref": "5fd9f226-271e-47e3-80cf-528c75d1b3ff",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "318883b9-f5b7-4c05-b5d2-f9dd839bbcdc"
        },
        "item": {
          "id": "7e547c6b-983d-471d-adde-589e2ac6398b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "79c0f6a0-e110-4948-8162-cbed8f89c26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3497c9cc-e777-4482-a9e7-c2784b39dbdd",
        "cursor": {
          "ref": "3bd98299-ef1e-4102-ac56-6898fb7b4029",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2291a605-b75b-45ac-9714-e0b1cc0829fc"
        },
        "item": {
          "id": "3497c9cc-e777-4482-a9e7-c2784b39dbdd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b77c0f51-69fb-450c-a436-4e5b5768d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebed5329-f1ba-4f83-b565-7f8ccc92e60d",
        "cursor": {
          "ref": "b951cfa3-f772-42d3-a9a4-1590f054718c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d54fe61b-2059-411f-9c47-83c17a333879"
        },
        "item": {
          "id": "ebed5329-f1ba-4f83-b565-7f8ccc92e60d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e1029e7-ba84-441c-93f7-c43dc0e45374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba672e3-2fa7-453b-88f4-ccb5bfe2170f",
        "cursor": {
          "ref": "b04729cd-d7a6-46f5-8723-df6569520443",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d92b5dd-b601-48a2-bcc7-85ef77507a9b"
        },
        "item": {
          "id": "5ba672e3-2fa7-453b-88f4-ccb5bfe2170f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "22d3dffe-a43d-461e-945d-bf387343cf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8743e949-9644-47b5-b898-2b65063c5dbf",
        "cursor": {
          "ref": "907d2f55-2738-48dc-9511-3e271d7cfa29",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f9f4158-4e6f-4735-8d22-ada2c5a5b6ef"
        },
        "item": {
          "id": "8743e949-9644-47b5-b898-2b65063c5dbf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0825a38-2c77-4712-b36b-56f14c135181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b13d75-9c5e-4f5a-9e49-87339faafff5",
        "cursor": {
          "ref": "5f51112c-646e-47ba-840e-b87588b4f258",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b8394f3e-1ae0-48ec-ab12-03f0d801220d"
        },
        "item": {
          "id": "88b13d75-9c5e-4f5a-9e49-87339faafff5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9de2dfe3-ae0b-4aec-8df6-f02675b8f939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be11d633-7c5b-4c6e-99e6-869a7a8ed6c1",
        "cursor": {
          "ref": "fa9ec309-c164-407b-8475-5fcfa403f1c9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d502dfb-4ddf-4a04-8349-7534905ff90e"
        },
        "item": {
          "id": "be11d633-7c5b-4c6e-99e6-869a7a8ed6c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b8cebaa-286b-47e2-af7b-8d7992ab6d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48facf31-d3e9-4846-8908-c4048575aff0",
        "cursor": {
          "ref": "0bd3abfb-e85c-4f26-8fe1-ecfe1f40a996",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "99209b89-95fc-459c-9516-e23fa188e7bd"
        },
        "item": {
          "id": "48facf31-d3e9-4846-8908-c4048575aff0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8765f79-089e-41f6-991f-4e417243fadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b6d25-f8c6-4a77-94a0-4263a40e7c62",
        "cursor": {
          "ref": "2827cde0-78f7-4162-8edf-02b87682989f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3577a755-c88b-4d2b-9bdd-1652f6fe32a0"
        },
        "item": {
          "id": "b64b6d25-f8c6-4a77-94a0-4263a40e7c62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "009aafe9-cbe9-4f1e-8337-2cd3230bd597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7217867d-0169-495f-bff0-847c0c48a6ec",
        "cursor": {
          "ref": "50805fef-1f91-491a-8300-6e9beefc5f9d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c02281b9-1ff5-4e27-a323-e204adf636a6"
        },
        "item": {
          "id": "7217867d-0169-495f-bff0-847c0c48a6ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef58e8ae-c5d3-46e1-8c5e-2d6c30266188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faae7ab-ac23-4ebf-8514-1e9a785f2201",
        "cursor": {
          "ref": "6c5a4212-a7b9-4c14-8366-f3c175b3c12b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "38b2be23-75e5-4684-ba24-1569918ff80a"
        },
        "item": {
          "id": "1faae7ab-ac23-4ebf-8514-1e9a785f2201",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c9ca2c46-3150-4ea3-aa0d-8b7b4a9df885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b192a39-df08-4111-b43b-8b86880210bc",
        "cursor": {
          "ref": "c912e6c0-17a8-4ed3-9816-a0d5fe35f11d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "629e9455-daaf-487a-8bc5-a62046ae24ac"
        },
        "item": {
          "id": "6b192a39-df08-4111-b43b-8b86880210bc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ede664c5-6347-4dc6-9b84-2d1e0ddc2898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11fe582-bd34-4a46-8f86-a5e5af87c6b7",
        "cursor": {
          "ref": "49e89fd8-7ce9-444b-857d-832709630337",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "88a73344-66e6-4095-931b-40a78147f7d4"
        },
        "item": {
          "id": "e11fe582-bd34-4a46-8f86-a5e5af87c6b7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80dd7c63-2623-4d2c-b4f7-3f7951b55d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f71917-c313-436c-b73b-f595734f4078",
        "cursor": {
          "ref": "dab55651-b826-44d8-b986-f30e6caf2eb0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34c7df54-c069-4346-b9be-ad3531d474d9"
        },
        "item": {
          "id": "b2f71917-c313-436c-b73b-f595734f4078",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db0a6272-fb75-4d52-9a7f-ec105e463a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2870730-9443-4a30-b665-5c7cf6e4d734",
        "cursor": {
          "ref": "236d4d5f-2004-478d-b43b-067a52a66763",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1268c44f-0c71-48c2-bfe4-9514d81650e9"
        },
        "item": {
          "id": "c2870730-9443-4a30-b665-5c7cf6e4d734",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "32e56c0a-fcdc-45b5-a507-4264b5697ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef148977-3e45-43b5-b35c-181c107d11c0",
        "cursor": {
          "ref": "df34b635-5f8a-4aed-af8c-56fef58934d9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3ba06292-e977-49d2-950c-fb102451735a"
        },
        "item": {
          "id": "ef148977-3e45-43b5-b35c-181c107d11c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7444ee9-d065-4aeb-b3fd-96c4c22ea8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa084501-0394-4c2e-b5ef-2a41b7c33d14",
        "cursor": {
          "ref": "dc2950e8-1ead-4467-835d-424d21139f84",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "83565a73-a00e-4222-b307-5679e4fafff1"
        },
        "item": {
          "id": "aa084501-0394-4c2e-b5ef-2a41b7c33d14",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c8873d5d-12e6-4ace-aefa-498ed073b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc7ca72-5fc1-4519-aead-4ec5d9c594b6",
        "cursor": {
          "ref": "bdbc9cbf-55fa-4d69-b43b-5bb416030466",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "61596f72-04a4-4633-8f73-18d4af2f9f87"
        },
        "item": {
          "id": "6dc7ca72-5fc1-4519-aead-4ec5d9c594b6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f5cf146e-5540-4158-b32a-b5166c2f8b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5174c17-3474-4c7f-88f2-f8bbbb447b2c",
        "cursor": {
          "ref": "be0e37d4-d86d-4bfe-a2e6-addc6bac51f9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "24906ff4-7a46-49db-80f9-3078f290e139"
        },
        "item": {
          "id": "b5174c17-3474-4c7f-88f2-f8bbbb447b2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8ba9dbe-541f-4210-9eea-a087209a1d0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0196c7e-46a1-4afa-a592-65393a602233",
        "cursor": {
          "ref": "d40bbb96-a80c-455d-9a36-71abf82b3302",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3ca39472-d839-468f-9dfb-5104711d9b37"
        },
        "item": {
          "id": "e0196c7e-46a1-4afa-a592-65393a602233",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d5f3c6b-bef8-4b16-8c71-dc394ea6870a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37997fae-1bf5-44bd-88c5-b26511531f37",
        "cursor": {
          "ref": "cdea9f5b-bcba-4819-bce9-23905824b414",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ca8f33f9-2229-490d-817f-9dd32fc14225"
        },
        "item": {
          "id": "37997fae-1bf5-44bd-88c5-b26511531f37",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a1aca3a-a4b1-447e-96c4-36358d8ed539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117dc445-0877-43f8-a57c-d3d5e535af29",
        "cursor": {
          "ref": "55476c0c-7b1f-43db-b8cf-9a7212769c86",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eb31fbc3-702e-46e7-9fdd-9d1d127cb6fd"
        },
        "item": {
          "id": "117dc445-0877-43f8-a57c-d3d5e535af29",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "308452f7-6680-4963-954e-1c0f05391bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4c6d10-b715-43da-9d8a-c7d22d941d59",
        "cursor": {
          "ref": "1044fe02-3992-41e4-8a60-1e093ff99605",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6058e58f-a1d0-4614-9ccb-48bacabf5d44"
        },
        "item": {
          "id": "2d4c6d10-b715-43da-9d8a-c7d22d941d59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "de1750da-6072-4bb2-9370-20e635e961a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e367f57-03f3-4243-b150-590606947a3d",
        "cursor": {
          "ref": "70d55c45-a2c0-4f0a-9d74-c997e9aac382",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cdbc2ea9-46e4-43bd-baa3-0824f1ddfaf1"
        },
        "item": {
          "id": "3e367f57-03f3-4243-b150-590606947a3d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92d23868-dad1-41e5-880c-45ec64c819f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac93775e-7c00-4a65-ba3f-63fe84ae9867",
        "cursor": {
          "ref": "a60a2be2-9389-4e68-af46-3acf35daac0a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "682bba5b-02e4-4534-8a5d-cbffc65413ae"
        },
        "item": {
          "id": "ac93775e-7c00-4a65-ba3f-63fe84ae9867",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1fca335c-cfc0-4b00-9be4-5c79f7ce7faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9237fa44-ae7e-441d-9c92-70dd02a6602a",
        "cursor": {
          "ref": "723f88fb-8b85-4984-9b96-4f57cb6a365a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0707fda1-990e-422c-b10d-ed16893d4dc2"
        },
        "item": {
          "id": "9237fa44-ae7e-441d-9c92-70dd02a6602a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6fab7fec-f896-449b-980f-3bbe3c4516c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e2ae4d-ad11-4e6f-b24e-ff42ddec458e",
        "cursor": {
          "ref": "70d91833-32ba-45e8-8dc6-b36d68efd99c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5da1e765-e816-427f-b711-354246fc9998"
        },
        "item": {
          "id": "b0e2ae4d-ad11-4e6f-b24e-ff42ddec458e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f93c74b-5a02-4486-bd42-e2793fa4e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93e3691-5e79-4549-b049-9a09c28aee19",
        "cursor": {
          "ref": "ac84a78d-1dcc-4df0-9d10-e59473f2db20",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2fd5a248-df22-49a8-8d7c-7a8cbd3703ec"
        },
        "item": {
          "id": "e93e3691-5e79-4549-b049-9a09c28aee19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96914d37-5b2b-4714-8ee7-6ff5bf7d4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131b7dd1-0c42-44e2-9e99-e7059e3accb1",
        "cursor": {
          "ref": "f246d638-d434-48a1-95b6-ee1f093d2e77",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aa42f1d9-4633-406e-aa12-b78547516f43"
        },
        "item": {
          "id": "131b7dd1-0c42-44e2-9e99-e7059e3accb1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f1d3fd61-26ea-477b-8000-c49498cfa7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67d2978-e87d-4316-b561-43828f2cfa5a",
        "cursor": {
          "ref": "87942882-c9cd-4798-9951-f51f6bdd0dfb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "faf1014d-53e6-482c-93ca-1e776e1e84fd"
        },
        "item": {
          "id": "c67d2978-e87d-4316-b561-43828f2cfa5a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d318c25-003b-48f2-8082-5325b2837217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c600c18-2238-4af9-86ae-13e0ded33962",
        "cursor": {
          "ref": "bb0a573f-ca99-4e24-84b5-7d32a73baeed",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b1f2905b-9b0a-44db-8e83-5b37d7326826"
        },
        "item": {
          "id": "5c600c18-2238-4af9-86ae-13e0ded33962",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c350b1a4-9eb1-43c4-8bdb-196892d4c0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bac612-93f2-4f78-87fd-27658bc94384",
        "cursor": {
          "ref": "360e4860-ae62-4cb1-befb-df4033cc8dbd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cc7f76b7-4825-4feb-b8d8-a54a09426fc0"
        },
        "item": {
          "id": "83bac612-93f2-4f78-87fd-27658bc94384",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1170255-11a2-494b-92b9-0ebbddf05632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687984e-08ff-4cdf-bd80-ec628208f32c",
        "cursor": {
          "ref": "88d99982-5e79-45b8-b460-403799af52f1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f0a8d321-0280-4abb-a671-a4498d01634c"
        },
        "item": {
          "id": "a687984e-08ff-4cdf-bd80-ec628208f32c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1194dc3a-c1f4-40c6-bde8-ab8a8065c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2429652a-cbe4-460e-933c-7a9b84d9dc25",
        "cursor": {
          "ref": "7b1eca35-66b6-43ef-8493-751a9adb8f96",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "398abbdd-2fc7-4087-87df-acf4c2998b5e"
        },
        "item": {
          "id": "2429652a-cbe4-460e-933c-7a9b84d9dc25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "daa91b4e-1000-48fa-be69-c69a17826189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa22397-75a8-4b78-82f1-76a2a777820c",
        "cursor": {
          "ref": "f3aadad2-4bb1-4e3d-898a-d4b4305cf054",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "840c1abe-0a29-42de-95d4-77c6195ad7bc"
        },
        "item": {
          "id": "2fa22397-75a8-4b78-82f1-76a2a777820c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5c522859-79f4-4ff0-be60-c6f88fee89f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70fd619-9e02-4554-aa74-cf56614ad140",
        "cursor": {
          "ref": "f1aff96c-10a0-438e-bb71-d6170d6b2cd5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "deb5d31b-f5b6-402e-ae23-11a70e066b46"
        },
        "item": {
          "id": "d70fd619-9e02-4554-aa74-cf56614ad140",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d6700970-e1e9-4298-a0fd-da8638592013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6e14e6-b39c-458b-a35b-78044a3f3609",
        "cursor": {
          "ref": "6a149776-d017-4585-b8bb-8e54f3cf9437",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a582f42c-c654-41cc-bee8-172e47b3a551"
        },
        "item": {
          "id": "8c6e14e6-b39c-458b-a35b-78044a3f3609",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4dc15dca-0957-408b-9821-d85850e588a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800b0e0b-1e3a-4662-bc46-f7586e38bec2",
        "cursor": {
          "ref": "e640c4a5-0c09-43ba-beeb-7fe68ff1d57d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6b10bdd-2afd-4491-9e28-6145bc7b7d04"
        },
        "item": {
          "id": "800b0e0b-1e3a-4662-bc46-f7586e38bec2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ae5c8ccd-0361-4c8d-8d0a-475b12147b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3703d808-195d-437f-ad38-ffd3e8e0d5a6",
        "cursor": {
          "ref": "0faf1454-b5e3-4e62-9377-2636f31c6690",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c71bc10-1d08-47e2-ab2b-a7dd2f247ea3"
        },
        "item": {
          "id": "3703d808-195d-437f-ad38-ffd3e8e0d5a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29057b5a-e700-4b0e-9608-4bdc884b94b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ce618-35ef-481d-9c67-bd6eb62b7849",
        "cursor": {
          "ref": "970f2e37-7db6-4b59-96c2-fdda1627554c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9b7b399a-50be-4b68-bcb9-8cb2465064ea"
        },
        "item": {
          "id": "263ce618-35ef-481d-9c67-bd6eb62b7849",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "559bd4b2-e0ea-425f-ad8c-e305b72abb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5678043-0970-4a2c-9878-9187c8560cb4",
        "cursor": {
          "ref": "73264c49-6900-4849-81de-c820c11ce24a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3c0411ab-c7c8-4047-958e-c06eacca1e6c"
        },
        "item": {
          "id": "e5678043-0970-4a2c-9878-9187c8560cb4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f38cb744-ba15-4ac4-9920-befbf4e4305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10fc285-8abf-4b6e-82f2-e3e3e80e0f98",
        "cursor": {
          "ref": "ee2e0030-da3e-4fab-a04c-7a27008bd172",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bd113a28-e7da-4dc9-bfda-1d44b5714654"
        },
        "item": {
          "id": "a10fc285-8abf-4b6e-82f2-e3e3e80e0f98",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbb9943e-bae8-4fd1-bd37-83da257e503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60ac772-43c8-4897-9a36-3779d0626474",
        "cursor": {
          "ref": "c0425fe9-32ef-40d9-bdc1-2ac43264b544",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ffb03e1b-817c-4308-be61-e79c6231c952"
        },
        "item": {
          "id": "e60ac772-43c8-4897-9a36-3779d0626474",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1cfbfe28-516c-490b-ac81-4f2bb4ad7d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316bd25a-0e55-4681-9daa-0f277361289f",
        "cursor": {
          "ref": "7130ed92-5888-4115-abfe-61362b1b0422",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "af7eb859-910e-455b-8ab9-92dc10d70405"
        },
        "item": {
          "id": "316bd25a-0e55-4681-9daa-0f277361289f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dfd2232f-b0f6-453b-8421-2c3ec5181eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb32b7-2d0f-469c-ba2c-72f737b20441",
        "cursor": {
          "ref": "08dce401-6ede-4114-94da-8110ecc784d3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11bbf811-6cca-46c8-9cd4-d7806491024d"
        },
        "item": {
          "id": "cffb32b7-2d0f-469c-ba2c-72f737b20441",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7698622b-a4a5-4f8e-8f0e-6026a8da2a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e950d671-5ca2-4f76-9c93-651c64d47d67",
        "cursor": {
          "ref": "dd1746e8-c483-4131-b83d-2971b8712070",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1bfed035-bce3-469e-8341-67795a07ad68"
        },
        "item": {
          "id": "e950d671-5ca2-4f76-9c93-651c64d47d67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "113c9088-09bf-4385-a073-1f0b2958f77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa52e432-0e37-4573-b38d-b97bb2a7ebf3",
        "cursor": {
          "ref": "15c34b61-ebb9-4aa4-ac36-60704322e32d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "355a9701-5034-4a7d-b8cf-a8b6a1a03836"
        },
        "item": {
          "id": "aa52e432-0e37-4573-b38d-b97bb2a7ebf3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c33c5447-1ef0-48cd-b87a-b919971fa3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b403ac-f774-485d-ac79-8995eafcabf7",
        "cursor": {
          "ref": "84c040ad-bdf5-4624-b23c-a7074da472aa",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "144439df-dd7b-462a-9a39-9ba009ec25bf"
        },
        "item": {
          "id": "51b403ac-f774-485d-ac79-8995eafcabf7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fed7899-921a-435a-ad7b-b056f0042629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85b4fe4-e4e1-492d-b02b-13ccb2c75335",
        "cursor": {
          "ref": "75efa00e-dd60-44ee-ab2d-750440db7c25",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "68d979ba-35b3-4448-8a54-b8e74691e414"
        },
        "item": {
          "id": "c85b4fe4-e4e1-492d-b02b-13ccb2c75335",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc6dc350-8b9f-4e31-b8f9-b3ee4c066aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed5ef0f-4a93-4090-82db-c098baa101b1",
        "cursor": {
          "ref": "d5f3ed03-fd79-4994-b065-35b2cfdb60f6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "593da474-3723-46d3-be2f-a0aae66a6a89"
        },
        "item": {
          "id": "5ed5ef0f-4a93-4090-82db-c098baa101b1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "810d14ad-765c-4d15-b6da-bb1db0aa3897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449ae56-5e8c-40c3-b66b-896891b3cfce",
        "cursor": {
          "ref": "c53739dc-8671-4071-9e80-aa6ff3c3feeb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c7db7d7d-9739-4c5f-8ec7-3da5ca0f4a8f"
        },
        "item": {
          "id": "7449ae56-5e8c-40c3-b66b-896891b3cfce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2abb721e-f951-4fc6-972f-72da8749ff3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84c53a2-10ac-458b-b727-08ec8d5b3e9c",
        "cursor": {
          "ref": "2446cf61-1da1-42a8-8882-8b8088a01e25",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e073aa7-d6a2-4914-99df-67b0769bc83c"
        },
        "item": {
          "id": "f84c53a2-10ac-458b-b727-08ec8d5b3e9c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9dff827-89e0-4df4-b32f-a686a0f6507c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544f8b24-f26e-4462-bd66-3a69ac94043f",
        "cursor": {
          "ref": "2868e9e5-940e-4589-b874-8e1b8f51d37f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c37a9887-fd8a-4330-837f-4cf13befb802"
        },
        "item": {
          "id": "544f8b24-f26e-4462-bd66-3a69ac94043f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3903d42f-2f46-4870-970f-24bf936f51fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2486f8-a64f-4276-a689-153728ea997c",
        "cursor": {
          "ref": "8f602250-f918-4458-9b0a-dfdb0eadb1d5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b7d6c368-b624-4b70-a7a4-9240ea32d9cc"
        },
        "item": {
          "id": "fd2486f8-a64f-4276-a689-153728ea997c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc6176e8-066d-4b41-86cb-dc04edf7601b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1102858d-e840-4637-9cbb-4bd67faab3a0",
        "cursor": {
          "ref": "a9fb898f-dad8-4d44-b567-790d38a2839f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72c78d75-0783-443a-8bd2-77037c360a4b"
        },
        "item": {
          "id": "1102858d-e840-4637-9cbb-4bd67faab3a0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "08f63d7a-1154-41b5-b9a9-c1d6010becb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a0c224-a1f2-409e-a3ef-c7ed478d5398",
        "cursor": {
          "ref": "8cc1d0b3-c88e-478c-8c26-201803c933d2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "774feda3-c331-4625-92ed-52f095419293"
        },
        "item": {
          "id": "51a0c224-a1f2-409e-a3ef-c7ed478d5398",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "73a5d5df-2159-4fc4-a116-3005944cfae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdadf9c-fc4d-4c4d-b35b-a5f933e98ac5",
        "cursor": {
          "ref": "f71c0085-ed9e-4d29-9be4-a253050492c7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "51d68400-92fb-4bd6-bf52-bf4db29f8cdf"
        },
        "item": {
          "id": "2cdadf9c-fc4d-4c4d-b35b-a5f933e98ac5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c0d10d7d-cc7c-4c14-9b8d-c05a02df6777",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7889f9-ee40-4bc1-942f-3f500cfdb0eb",
        "cursor": {
          "ref": "f729cb08-84fa-4324-a554-1c0cfafc4ad1",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f16f1c4-82c0-4203-88e7-6a164ddc3571"
        },
        "item": {
          "id": "7e7889f9-ee40-4bc1-942f-3f500cfdb0eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fb489ea5-0b96-4a68-8eba-2b0c7b5d20d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e95828f-c084-40f4-90d5-9a7f5dd7e020",
        "cursor": {
          "ref": "51be6946-149b-46e6-aad9-05e80c6cb46f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36664d3e-14e7-4868-bd3d-a5a5b1da1c61"
        },
        "item": {
          "id": "3e95828f-c084-40f4-90d5-9a7f5dd7e020",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6c4bfc63-8e06-42e6-8b13-90655cdb0f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2b012-9b7c-48b3-a32e-39699cf9f304",
        "cursor": {
          "ref": "5f22e676-8baf-4886-8c34-fff4d609091e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "044156e9-09f4-4daa-909d-957239e72302"
        },
        "item": {
          "id": "03b2b012-9b7c-48b3-a32e-39699cf9f304",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9ffa09dd-1b03-4c15-994b-0421c2b8949c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d957480-be4c-4ead-b204-1a39bae6d7dc",
        "cursor": {
          "ref": "f61ae2a0-dea5-449f-8672-0e663f19a3f1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0a19d2e2-7e0c-47a6-9586-9d0bef256913"
        },
        "item": {
          "id": "2d957480-be4c-4ead-b204-1a39bae6d7dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c1a119e1-49c4-428a-a95f-66e0ab977130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f88717-920a-49c9-ac4d-ab80bcc96ae7",
        "cursor": {
          "ref": "c9a8d3fd-213b-4378-b541-16fdb6d667b2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "215be9b0-6b94-4394-9653-406c89bf0759"
        },
        "item": {
          "id": "20f88717-920a-49c9-ac4d-ab80bcc96ae7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d5ce5e34-0692-45e7-b966-a5c1a5b89961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f196670f-e563-403e-9001-bf71af326d5c",
        "cursor": {
          "ref": "3361152f-7c1f-401b-bc51-caa8e42b20e4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "25ff0de7-91d2-40a6-9cbf-13bd78f72595"
        },
        "item": {
          "id": "f196670f-e563-403e-9001-bf71af326d5c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3b2f461f-0b3b-437c-b347-0651386b6b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccb0d9b-b88b-4387-b528-36213a8ece2e",
        "cursor": {
          "ref": "ac3a1760-7689-46eb-9187-40ba63d97140",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e720eea9-343b-4654-a97b-8204092645f8"
        },
        "item": {
          "id": "6ccb0d9b-b88b-4387-b528-36213a8ece2e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "04f9a2d2-f5f5-48b7-92f0-92bab59413a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0024bf-8a68-4ee2-bce3-8a5f4be027f1",
        "cursor": {
          "ref": "b97b2a45-0da7-436b-97b0-6c43e281b047",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "13955d70-3c04-450a-8713-31605d86f416"
        },
        "item": {
          "id": "1f0024bf-8a68-4ee2-bce3-8a5f4be027f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7c3a81b-92fb-48fc-ba57-921210ee5356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8281c3-1d03-4ac2-9b10-c9b8c25a2116",
        "cursor": {
          "ref": "ccd7b12d-6b28-4027-9479-443badf85a74",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ef0a3e6-ba2d-4633-ad98-a32f74a9a97b"
        },
        "item": {
          "id": "fc8281c3-1d03-4ac2-9b10-c9b8c25a2116",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "80357fcd-41cc-4b66-ad43-d6ddacea7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0e62f-0c77-4472-b429-4ba5e4527deb",
        "cursor": {
          "ref": "d1511037-a8b9-4ecb-9898-f888477edd38",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f48dcd2c-582d-437d-9c7d-c2b58b12b681"
        },
        "item": {
          "id": "9cd0e62f-0c77-4472-b429-4ba5e4527deb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a5940ece-4769-4e9e-b29c-13d0c3dbc7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e134cf-e032-4633-9677-f8232fea6458",
        "cursor": {
          "ref": "18cb5bb5-4f55-4a8b-b498-d3d9af4afc48",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e9050207-6415-4358-89cc-eb58a5afe4dc"
        },
        "item": {
          "id": "b4e134cf-e032-4633-9677-f8232fea6458",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5a1f016e-2645-469b-bbd6-12858f5f5dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe028eb-734b-4d27-90ab-db7553a77883",
        "cursor": {
          "ref": "8c726ac2-a91c-4c1c-a565-7e0fb2efab79",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "580e152b-a87d-4021-8d4a-8916acf928e1"
        },
        "item": {
          "id": "cbe028eb-734b-4d27-90ab-db7553a77883",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0f0ef0f3-a0fb-488f-b718-a8da0d54c608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175091a6-85f7-4a87-a178-402c221521ed",
        "cursor": {
          "ref": "f42ac9a8-5ca1-4cb3-846d-346103e6de6f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "89ac66bd-6b4d-4eee-93f6-3e2da39fd53f"
        },
        "item": {
          "id": "175091a6-85f7-4a87-a178-402c221521ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5ffacacc-d426-4f04-9204-e7f8345e99af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab95af7-a75b-4b8e-aa6d-462307e1424e",
        "cursor": {
          "ref": "9ab0a8f8-8feb-4bf6-a1e3-bde407801f82",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c2682941-137b-4a02-8ca8-45b9c4f0c755"
        },
        "item": {
          "id": "1ab95af7-a75b-4b8e-aa6d-462307e1424e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b5e67559-f627-4f3e-81ce-20dd657c4bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a3d91-0912-45d9-910f-53c231fa557f",
        "cursor": {
          "ref": "25616846-f028-4aa3-88ca-b1524cdebcff",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4e531c45-a3e6-466f-a590-0cd38b08cc46"
        },
        "item": {
          "id": "439a3d91-0912-45d9-910f-53c231fa557f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8c3fa380-b6aa-40d4-adaa-048ea0d4edeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5d7236-3ec1-46ab-af63-f212374d1f77",
        "cursor": {
          "ref": "a29fcb07-c7e4-4329-b553-6132ab96288a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "780da09e-6de1-4fd0-bed6-317e9643e361"
        },
        "item": {
          "id": "af5d7236-3ec1-46ab-af63-f212374d1f77",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "36cede2f-b473-4be7-a55b-6139fe3d21a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9ca3f3-e542-4eca-9ddd-8a6d8606c59b",
        "cursor": {
          "ref": "5cef9f5e-2dd5-47fe-a1cd-f1646dd2f336",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d15648f-73ba-4872-aaf2-cd5dc843dbe0"
        },
        "item": {
          "id": "cd9ca3f3-e542-4eca-9ddd-8a6d8606c59b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df8b3c33-948d-40b3-b786-17433f8980ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497122f6-26cd-42b6-a780-997e8785b413",
        "cursor": {
          "ref": "292a76a5-e4e3-4c41-8592-b6fa69f4f66f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3dfb335c-62c5-41a0-a1a8-6122376740d8"
        },
        "item": {
          "id": "497122f6-26cd-42b6-a780-997e8785b413",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54314349-fb58-4aa4-80b5-abfbfd035bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16c59c4-32fb-4b39-b9ba-cd849fc5e2bd",
        "cursor": {
          "ref": "5847cb0b-2e0d-45af-ac70-23c6d23c1fee",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eecddcee-b4ff-4373-9e05-76e2c310c3b5"
        },
        "item": {
          "id": "f16c59c4-32fb-4b39-b9ba-cd849fc5e2bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "15b0ab4e-02ae-4358-864a-89868800f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc1b16-6ced-4b59-82bd-72fbf4ff0f56",
        "cursor": {
          "ref": "845ec823-d796-4b7c-b3d9-9132ec1935bb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "185c9777-b744-4103-aa28-c3666fc459c8"
        },
        "item": {
          "id": "afbc1b16-6ced-4b59-82bd-72fbf4ff0f56",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ca837424-95f1-4a96-89f2-a2e4285ac702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975250ef-95b5-4703-813c-bf618a42b740",
        "cursor": {
          "ref": "b908391d-1bcb-4c0f-8817-c40bcc90bdc4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a892ebb8-e5fa-44f2-951f-5cf1679f7cd0"
        },
        "item": {
          "id": "975250ef-95b5-4703-813c-bf618a42b740",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "48099f37-cded-4d16-8728-223f8e7ce3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df89038e-5e5b-4abb-acff-a620cc1616d3",
        "cursor": {
          "ref": "16b87909-c416-4de3-b1d0-c41cf185bbff",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "65015b2e-eaca-4d40-800c-ff9fea375d67"
        },
        "item": {
          "id": "df89038e-5e5b-4abb-acff-a620cc1616d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "84351d17-51c7-4d85-9118-90cb71f17577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ad102-abbe-4290-96a3-410b29999a64",
        "cursor": {
          "ref": "0c32cb0e-7a79-4c37-a078-155cd15ab0c8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "92fa2505-ad31-4254-9139-f63812127586"
        },
        "item": {
          "id": "0a8ad102-abbe-4290-96a3-410b29999a64",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3be7cfbe-64c4-46e0-ba18-ca06d21b45e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8890ed0-35c3-47ae-b3e8-0eee9c8bf45e",
        "cursor": {
          "ref": "5b45a7a8-80e1-4097-bf6c-13419b24c036",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "637e4559-6816-452c-af96-856fc16c8090"
        },
        "item": {
          "id": "d8890ed0-35c3-47ae-b3e8-0eee9c8bf45e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "31954d34-5839-47ac-b264-6bab5b438f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699a3b3-bc70-4c8e-976d-daf8578a2263",
        "cursor": {
          "ref": "f6cf7274-53fd-430c-a21e-8aa7320218db",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b2c6ccd2-eee0-4bb4-b45e-dcbf76e07766"
        },
        "item": {
          "id": "e699a3b3-bc70-4c8e-976d-daf8578a2263",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "94ef234d-3143-41a7-97aa-501fe2f53f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43457ee-627c-4ecd-8d74-9cd471348a7a",
        "cursor": {
          "ref": "fc703d3f-043d-446e-b2b0-9f60e93c72e0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d29531f7-d2d3-4915-b53c-b3c5a1698c01"
        },
        "item": {
          "id": "f43457ee-627c-4ecd-8d74-9cd471348a7a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a82a46f8-c1c4-4143-a048-7324be9a8d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efed8da4-e0a1-44a5-89dc-45fc15b44d9f",
        "cursor": {
          "ref": "451c9779-ee7f-408a-97b7-5ea80c307c3c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5325ff45-46cd-46bb-bb71-fe00466072c8"
        },
        "item": {
          "id": "efed8da4-e0a1-44a5-89dc-45fc15b44d9f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c9afaca-ab3a-4ccc-a4a2-6e0881f9434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa3da9-4cfe-4007-93d9-9c1d76aa7964",
        "cursor": {
          "ref": "d042d67e-b6ee-496c-ac98-29f0af2a967d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "08863905-fb9c-47cc-968a-e52ca04308d0"
        },
        "item": {
          "id": "37aa3da9-4cfe-4007-93d9-9c1d76aa7964",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e4235ee-9add-4dfd-830a-c5b47b98c0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003795ec-28cd-493c-a9b1-bb23d187875d",
        "cursor": {
          "ref": "206c6fb5-351f-4278-b284-b761ffe47992",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2560114d-3dd2-4612-8c78-4fba9eb073ce"
        },
        "item": {
          "id": "003795ec-28cd-493c-a9b1-bb23d187875d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "70fa61c5-fb92-454c-98be-89c0dec84fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15128ce8-0f00-4812-8112-b38cf9f414f6",
        "cursor": {
          "ref": "2521a26f-15c6-4bc9-abea-2e8cc7ca3e70",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f20c31be-2b9e-4269-8b8d-74ccc87ff762"
        },
        "item": {
          "id": "15128ce8-0f00-4812-8112-b38cf9f414f6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fa8b06aa-3446-426f-9ca0-dc3f5525fbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c341c406-b698-4d45-ae9a-8c431f6374fa",
        "cursor": {
          "ref": "d3faa3b4-ea28-44d1-9904-0fe9b93443d1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "26c7f801-5bdb-4d38-a1ba-e172a9d6a21a"
        },
        "item": {
          "id": "c341c406-b698-4d45-ae9a-8c431f6374fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "644e665c-de2f-4782-8782-f1acd43c0615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27ee5eb-c387-4045-9bec-47d4de00cc17",
        "cursor": {
          "ref": "f89bb725-99e6-4e1f-a377-6b7bb3ba95bb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dcd241f3-b3ae-4318-85f0-71f86aca07b1"
        },
        "item": {
          "id": "f27ee5eb-c387-4045-9bec-47d4de00cc17",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "90fba9fb-9f70-4c1e-b778-844b4db9bfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dfb59a-89ad-441e-9784-d9cc80a62033",
        "cursor": {
          "ref": "74fa0b2f-fb87-467a-b9ec-2015bb901290",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "578d8951-e78b-4a02-aa4a-e1e98b9ceffe"
        },
        "item": {
          "id": "37dfb59a-89ad-441e-9784-d9cc80a62033",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a0e87d4-f864-4c2a-bde3-f9db13316acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbafb09-b5d9-4253-9251-9e60349cec7d",
        "cursor": {
          "ref": "520c53c9-6a4e-4876-a014-9f875902196e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3b3e68df-a9b5-4081-b697-82faf7027074"
        },
        "item": {
          "id": "4bbafb09-b5d9-4253-9251-9e60349cec7d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "71d5b3e4-2bfa-4933-8b65-3830b012988a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ae41fa-c8b4-4816-9bef-d947e95147dc",
        "cursor": {
          "ref": "ad6b225e-809f-42a9-9540-3124ee4d6014",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6db7c6bf-cd41-449b-ac00-b1d9fc65eed5"
        },
        "item": {
          "id": "51ae41fa-c8b4-4816-9bef-d947e95147dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aad25f5d-5f9f-4abc-8c9b-afd66587af8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e18b189-d8fa-44e5-9955-7e8e526d1bfe",
        "cursor": {
          "ref": "4f4652cf-8119-4a4e-af08-0b86656c7745",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e0221856-cd01-4099-94af-258125675316"
        },
        "item": {
          "id": "9e18b189-d8fa-44e5-9955-7e8e526d1bfe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "82ce95ac-1b46-4333-9378-2517e729fd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb8853-199f-49b3-8d81-b4bef13bf996",
        "cursor": {
          "ref": "9098db16-d060-4246-9a55-c91aa38c5d93",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d93cafd5-c015-4a97-8d94-a563eb118bdf"
        },
        "item": {
          "id": "4abb8853-199f-49b3-8d81-b4bef13bf996",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94649b26-d965-43f3-b74e-65a537b08942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aadf31a-4988-4c96-b9ef-16495af36bb9",
        "cursor": {
          "ref": "c2a685bf-806e-48e4-bd60-ca80c0a0c55d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f18e33de-cdfa-4b86-aa26-5404eda2a033"
        },
        "item": {
          "id": "4aadf31a-4988-4c96-b9ef-16495af36bb9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df1a0191-6684-4e69-97d1-dc9a4145ecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaafab71-967a-44f5-b8ae-ee24b6eb2f0e",
        "cursor": {
          "ref": "7183b328-23c3-4c20-a889-adafc492f030",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d29dd3d6-0574-4bc8-9296-b04705a84dfb"
        },
        "item": {
          "id": "aaafab71-967a-44f5-b8ae-ee24b6eb2f0e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fae6d24d-2758-419d-afba-0c4acab00819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165bb42f-d6b9-413b-80c8-ce074feb90d4",
        "cursor": {
          "ref": "6b9b3eb2-463e-414a-9fbf-86a1402d465b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4da55694-2def-4599-b863-ef96115d38bf"
        },
        "item": {
          "id": "165bb42f-d6b9-413b-80c8-ce074feb90d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b912695-8c08-4ed4-91fa-3fa1051f0a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de72e5-7266-46c6-b88a-2f1fed98a26e",
        "cursor": {
          "ref": "685e69a5-1dce-42fb-b3c4-0896c3e57212",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c00cc652-ee60-4d9c-aea6-e63720372165"
        },
        "item": {
          "id": "10de72e5-7266-46c6-b88a-2f1fed98a26e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "317af2bb-01c3-4fa9-b09e-d8844069367e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b57473-7b06-441b-bb32-cc1e06b7c5af",
        "cursor": {
          "ref": "1cf46664-7fa9-4b00-abd8-e92aeedab1f0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a3b73ceb-6994-48b8-ac25-6048758b757e"
        },
        "item": {
          "id": "c3b57473-7b06-441b-bb32-cc1e06b7c5af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8052da1e-e322-46ec-8ddf-7dbf76cee681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9a569-3a4a-43b4-89f2-852e1a486704",
        "cursor": {
          "ref": "f6d5b5c4-d520-40e5-9d30-15999bb06ebc",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eb46d433-4302-4d49-92ca-ed0c2eea2838"
        },
        "item": {
          "id": "03a9a569-3a4a-43b4-89f2-852e1a486704",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9284461f-3815-4fd5-9f7e-5b632e750da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8480de43-eba8-4898-97d7-b9111ce0d140",
        "cursor": {
          "ref": "a1b76bdf-6552-4e1e-a3c9-bec9d79236c8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ea823946-d7cd-4500-8ccb-37fb1967d415"
        },
        "item": {
          "id": "8480de43-eba8-4898-97d7-b9111ce0d140",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "678b9ed7-0472-4cb9-b05d-4aad1e050d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56ddbe-c978-4ab1-9457-82a820575979",
        "cursor": {
          "ref": "86c0df1d-4fdd-474a-bc5a-39aed16523f1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5aad2415-98b4-4c06-a553-8b35c6710b0e"
        },
        "item": {
          "id": "da56ddbe-c978-4ab1-9457-82a820575979",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7f44ee1-65ff-446b-a6d0-dae24eb092e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8544cc5-fe63-42e1-9c90-6c37784301b0",
        "cursor": {
          "ref": "8d3536f4-6362-49c9-b4cb-2b295b415df3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2c3a6027-c93f-4761-bd26-2ca6acf1ca73"
        },
        "item": {
          "id": "d8544cc5-fe63-42e1-9c90-6c37784301b0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1a83f952-8577-4d6b-8713-0dcb265d004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13993a34-c5f1-4e90-9c92-6a47191cb0ed",
        "cursor": {
          "ref": "83d5ae60-3615-4227-8302-ce8a03172e43",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "40d9bb2c-ffff-43ae-83de-f404980f64fd"
        },
        "item": {
          "id": "13993a34-c5f1-4e90-9c92-6a47191cb0ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f34645c1-9bf5-4660-b909-e041a3672544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c789d43c-a9f8-469c-b6c5-acd6fad063e5",
        "cursor": {
          "ref": "321963bb-7f26-4239-9c18-9a3ce9332b69",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bcf63b09-7b2d-42ad-a222-5661923be57b"
        },
        "item": {
          "id": "c789d43c-a9f8-469c-b6c5-acd6fad063e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "81e19df0-e7d5-4d2f-92c9-0754bd569abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d1c25a-2cca-48a3-95f5-f3a1a6c98df0",
        "cursor": {
          "ref": "d52bb7d1-abbb-4a9e-860d-4ffb8b2070a6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f4aa954a-ae96-4697-a936-bdd86521f469"
        },
        "item": {
          "id": "91d1c25a-2cca-48a3-95f5-f3a1a6c98df0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1c94d870-95fc-477d-b628-21491642f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e054df-0b0b-41f3-9d94-af63a298a5d0",
        "cursor": {
          "ref": "cccfa16b-95ed-4754-ae13-b40647e88804",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1751c016-c351-40cd-9534-f87b16b7edd6"
        },
        "item": {
          "id": "c4e054df-0b0b-41f3-9d94-af63a298a5d0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1deb94aa-9b0e-44ae-ac8f-22d9a47c309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899fc002-337a-443a-8679-9d62e9435e49",
        "cursor": {
          "ref": "0542a278-9272-451c-b6ae-584ecc522962",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d884f948-969e-45da-8113-46c3b1059d75"
        },
        "item": {
          "id": "899fc002-337a-443a-8679-9d62e9435e49",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "76b99408-04e1-411d-a776-05d8f1f503d7",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "cd9075d9-a8a6-4165-b5da-5fa6d6ba17c3",
        "cursor": {
          "ref": "a21a0ebc-7648-4fa5-a824-48b6b73bdf9e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ec8989a-6938-40c4-ac1a-e81db8ed464e"
        },
        "item": {
          "id": "cd9075d9-a8a6-4165-b5da-5fa6d6ba17c3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03651ddc-1ee1-4ef0-ac55-0eed1c0bd50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0ab51d-9123-47c2-b408-2bb1fd888994",
        "cursor": {
          "ref": "1dfeb506-7e41-4c70-8d4e-486af3bdcd9f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca1489f2-cff7-440e-8ddc-61a94786a83d"
        },
        "item": {
          "id": "9a0ab51d-9123-47c2-b408-2bb1fd888994",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a5ae3b0-2235-4c62-8b36-2e55b2ce76bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecb9fd6-522a-4922-9132-fdff8b39ae8f",
        "cursor": {
          "ref": "05e4e912-ec98-4d05-8ea9-8f71c4bcbd8e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "29a15dd5-3a02-4b5f-8996-6c311c2d0fe6"
        },
        "item": {
          "id": "1ecb9fd6-522a-4922-9132-fdff8b39ae8f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0b5ed54-be35-4077-931d-ec64ecdf646b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624a201f-9594-4dba-9aa1-81e87d42edd4",
        "cursor": {
          "ref": "fb3c8e0f-133c-42fb-9be9-ab333240f727",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "20486e9c-0fb3-4ebf-9efe-8dac21a9bbd7"
        },
        "item": {
          "id": "624a201f-9594-4dba-9aa1-81e87d42edd4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e2467de2-9c42-4636-b7bd-660230638008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f15dec-8d00-4bb7-9511-e100696e2eee",
        "cursor": {
          "ref": "3703cf1b-3ee2-465e-a31c-10a52264ec86",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6aa67ef9-5782-4b0a-b9e0-4aab0bf96981"
        },
        "item": {
          "id": "d2f15dec-8d00-4bb7-9511-e100696e2eee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1e6fd745-53e1-4bb7-adf5-d5f536b98f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdadaf1a-0f4f-4152-8df4-0ca36b03fd6e",
        "cursor": {
          "ref": "58ea9eac-23e7-402d-b3e3-91d541c92ab4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3dea8ee8-fc3d-40a0-917d-151428e8090e"
        },
        "item": {
          "id": "bdadaf1a-0f4f-4152-8df4-0ca36b03fd6e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "450ead0a-a8ce-490a-942f-b757512d2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ce6b63-8d77-423f-831b-aaa401ca88b5",
        "cursor": {
          "ref": "ef01b542-c656-4083-bf26-23bf01d17827",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8164cbbf-1527-41bf-b36c-a0d0c8d8a08b"
        },
        "item": {
          "id": "a7ce6b63-8d77-423f-831b-aaa401ca88b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa768872-4b66-4cf6-8dc1-d03f580a2995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1679ea-86ec-4c12-ab12-5dd5a42849fd",
        "cursor": {
          "ref": "6aaa6669-833f-4604-9f31-da0eecaf3486",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dfbf955f-2177-48ca-baba-55daaed1cd76"
        },
        "item": {
          "id": "0b1679ea-86ec-4c12-ab12-5dd5a42849fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d10e53d8-3d86-4d46-850a-7a44a7da12c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4aaabf-9110-4c45-a168-cc30bf804558",
        "cursor": {
          "ref": "78bcbd8a-1630-4b38-9ee3-1ef5906d9d2c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "af9cd8ca-8989-4c93-aea7-09730978fd68"
        },
        "item": {
          "id": "cb4aaabf-9110-4c45-a168-cc30bf804558",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eb62bf19-3ce4-4559-9059-a8181762bd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00244aa7-69ff-48e8-a127-fb597f81f8ad",
        "cursor": {
          "ref": "fe168d5f-d40a-4301-afcf-bd468a2030c5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1f81db86-8ccd-4e03-837c-a9b763286746"
        },
        "item": {
          "id": "00244aa7-69ff-48e8-a127-fb597f81f8ad",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac198698-c065-4ed7-8a8a-73b08400f816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd12403-0857-4b24-b470-edb177679683",
        "cursor": {
          "ref": "5a161484-e13b-49e7-aea4-3041272992e8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3491e680-36b9-42ff-83e0-511cd62b8095"
        },
        "item": {
          "id": "cbd12403-0857-4b24-b470-edb177679683",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c9e99378-cd2b-474a-a71b-da2d2e97a45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7082fef6-b975-476b-95cd-cf01652af05d",
        "cursor": {
          "ref": "1b4e6f2d-fcbf-47a9-b1ae-fa18807be7e7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "06c0eb09-43b9-472b-953f-cd716bd9d3f4"
        },
        "item": {
          "id": "7082fef6-b975-476b-95cd-cf01652af05d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0381aa7f-c097-4f9e-a2cd-b1b4543e561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f4c730-5f82-424f-b30e-42d2b66ba125",
        "cursor": {
          "ref": "c9967cbe-6083-48bf-a3b8-5090e6625d8f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "762a6df1-47f7-441f-8c18-da599b72c481"
        },
        "item": {
          "id": "e9f4c730-5f82-424f-b30e-42d2b66ba125",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16f7c074-8be7-4c29-82bb-2f03e9f292b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e9c50a-d7de-4f65-9dea-25f38a67fa33",
        "cursor": {
          "ref": "59d0e1f1-6843-4c44-b885-f58ef1697c5d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "50ba3103-c942-4b90-b099-54305029dac7"
        },
        "item": {
          "id": "c4e9c50a-d7de-4f65-9dea-25f38a67fa33",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eb0f9f54-11f9-4e82-abca-6d9a51ab5d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f844becb-57c2-42c4-a526-3a1969155a26",
        "cursor": {
          "ref": "99126f48-c097-4932-a9c1-26ee879cc591",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d482ddde-64ec-4f4c-ae8d-e861640e150d"
        },
        "item": {
          "id": "f844becb-57c2-42c4-a526-3a1969155a26",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a40cdd7b-8eb3-4a81-81a8-d6248d7e3ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc42735e-2489-4766-91ef-5e9002deb663",
        "cursor": {
          "ref": "c16fa801-3e4c-4499-ac6b-37fa6142947b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5107060a-47f1-47fe-b441-1ce31c143aeb"
        },
        "item": {
          "id": "fc42735e-2489-4766-91ef-5e9002deb663",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "471215b4-819a-4b92-8149-5aaa115c6c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376db07e-df86-4a02-8633-5322d88e085b",
        "cursor": {
          "ref": "00f21743-2053-4bd6-8913-c2e4143c52df",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4d7eda1c-17e5-4634-a90a-a4c27a58679a"
        },
        "item": {
          "id": "376db07e-df86-4a02-8633-5322d88e085b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf5e2e8f-04f0-4f2b-8803-5fb0f7ea85fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2e9a55-f9c4-4fe7-a2e9-e374e7c22d2e",
        "cursor": {
          "ref": "dc28be3e-b982-4169-98c7-06692cc2c82f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7981658b-8c61-4783-9901-355a08a3121f"
        },
        "item": {
          "id": "db2e9a55-f9c4-4fe7-a2e9-e374e7c22d2e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6ce1aa40-6f9e-43b3-8fb7-52ba0d3b120b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe2c58-07e7-4af6-9ab4-a3f1d951601d",
        "cursor": {
          "ref": "c833f596-a3aa-456d-b065-a94473afe6f7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0a3e79ab-309c-4c4f-bb42-c1626bc4d9ad"
        },
        "item": {
          "id": "3efe2c58-07e7-4af6-9ab4-a3f1d951601d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be408b0a-1e05-4d40-b425-41c07b67631e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1669fbe7-77df-40c2-b8ed-b04e68c35484",
        "cursor": {
          "ref": "48118d1b-5ef1-413b-9330-dd64b828ea57",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f5c99f7c-62a7-42a1-a366-438b86112721"
        },
        "item": {
          "id": "1669fbe7-77df-40c2-b8ed-b04e68c35484",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "43160c57-dd85-4570-b10b-e7aea07d618c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b51931-3fb5-4332-8af5-20f975b17545",
        "cursor": {
          "ref": "4843a893-67b8-4988-a73c-f2fd1b6177dd",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1b5ffddc-785b-427e-844e-13aed26ea310"
        },
        "item": {
          "id": "85b51931-3fb5-4332-8af5-20f975b17545",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ce258751-afbb-40d1-9daf-952e974d9a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d863338-acde-40a0-baa2-d1e7633a5b53",
        "cursor": {
          "ref": "92578c93-a63c-415b-a77f-a32c1f249173",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "03119fa1-40ba-44ba-9a00-91567c4f870c"
        },
        "item": {
          "id": "9d863338-acde-40a0-baa2-d1e7633a5b53",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "178ff5fe-547d-4642-994f-7e68922611b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fdfe9e-a425-426a-b998-1a15e939e84e",
        "cursor": {
          "ref": "92360de1-da6d-4814-9010-035077bb252f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ee66dbe7-b97c-477e-bd41-092f7976646c"
        },
        "item": {
          "id": "24fdfe9e-a425-426a-b998-1a15e939e84e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "102c0467-b094-4151-bb34-9b9ee00eed66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13589c6-89aa-404f-989f-cde428a6f325",
        "cursor": {
          "ref": "6b2350da-bce0-4a18-9244-07d141760b3a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0e91f1b9-a5ab-454e-9a9a-de0036181e74"
        },
        "item": {
          "id": "d13589c6-89aa-404f-989f-cde428a6f325",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2819322e-bb38-444d-9357-f7b01076d327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91eec24-dfef-42e0-96a5-d1df7841e695",
        "cursor": {
          "ref": "3f828bda-d410-4020-8f8a-b1979ccae8a9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "76ff9c4f-35a9-4395-bcfd-e1dd49b05f1b"
        },
        "item": {
          "id": "d91eec24-dfef-42e0-96a5-d1df7841e695",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed18afda-3a92-4fd7-bc39-0e995c2aca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06257e12-b468-47fc-9e46-5409d87b4d78",
        "cursor": {
          "ref": "714f9b95-f006-40ff-9605-4b2190527894",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4c70be70-bb1c-4d03-a1d4-4ee405659cd7"
        },
        "item": {
          "id": "06257e12-b468-47fc-9e46-5409d87b4d78",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c68d704-0f74-44fb-ab7d-396609aec052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf72ae6-9c57-4b0a-80f9-2af749257efa",
        "cursor": {
          "ref": "c0fa85dd-eb54-4316-b612-cf05a79dea71",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8869fc88-f122-4e4e-9c96-8df54f231452"
        },
        "item": {
          "id": "0cf72ae6-9c57-4b0a-80f9-2af749257efa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "df9b7cf3-b3e5-4026-a43a-1497e13d1493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39c9e7e-a9c1-49cf-ac12-345db440da5a",
        "cursor": {
          "ref": "28ec0384-589d-41cd-9241-b254fccda90e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6bbb56be-82cb-4456-9076-9d28e15f7b4f"
        },
        "item": {
          "id": "e39c9e7e-a9c1-49cf-ac12-345db440da5a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "35566fda-7b3f-42ab-b786-68dc710f89c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66827a07-230c-4aea-acd4-bd6905e5edc4",
        "cursor": {
          "ref": "3e383df5-7501-4d54-a41b-f9c01a7ca0d9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c44ef904-8692-4901-aff6-327d9c575106"
        },
        "item": {
          "id": "66827a07-230c-4aea-acd4-bd6905e5edc4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c9996250-fb61-41ad-9e86-4f313d0a5f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a778455-df54-494c-be9b-0981b3eb152b",
        "cursor": {
          "ref": "a46db784-f288-4789-9e63-e2345fd93c53",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ded6f47f-8f07-4d3d-a6b1-728b4fb86042"
        },
        "item": {
          "id": "9a778455-df54-494c-be9b-0981b3eb152b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5127d92a-149a-415f-8808-6a98a33031fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928dca29-50af-4ac0-926d-46a38a6aa334",
        "cursor": {
          "ref": "9f97c189-be71-4169-ac4f-20420f9adc57",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b0776c50-9740-4e13-b272-d8ca9bdfcb0d"
        },
        "item": {
          "id": "928dca29-50af-4ac0-926d-46a38a6aa334",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13b05ec7-3f45-4a07-b8b7-f8b6fd62c690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bab23dc-2a7c-4238-8595-41ed1334bd9b",
        "cursor": {
          "ref": "0f7de868-4bc0-4faf-8ffc-e3aeb671f9ae",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "80602b66-1ee2-4a3b-b208-d5b00ed39c82"
        },
        "item": {
          "id": "0bab23dc-2a7c-4238-8595-41ed1334bd9b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "781f5857-70d9-42ab-86b5-b7771515f3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd19ade-64c1-4426-b04f-e6551a56a86a",
        "cursor": {
          "ref": "03d04026-7457-476b-854b-ecb69d98b633",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "67062689-1773-4eeb-98dd-11745918d956"
        },
        "item": {
          "id": "fdd19ade-64c1-4426-b04f-e6551a56a86a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ea548b01-26a2-4c8f-8129-cb264917034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568c2f29-b8ee-4945-8038-cfc3f06fc41a",
        "cursor": {
          "ref": "2339c722-2df0-47c3-bb3b-4df47748a1a0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "46a1275a-c3f7-4309-90ca-80d4fb920bc1"
        },
        "item": {
          "id": "568c2f29-b8ee-4945-8038-cfc3f06fc41a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b73d48ff-9ce1-4f18-b5d9-7d9004949e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6c1603-f55a-4df9-8567-7d1a79f9164f",
        "cursor": {
          "ref": "383f27d4-b7dc-4af4-b3c4-a9229453d832",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cbc23992-0786-4755-b8fa-29d4574880bf"
        },
        "item": {
          "id": "ec6c1603-f55a-4df9-8567-7d1a79f9164f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "95efd97f-fa1b-48db-9779-731ad9edb341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0bb437-1be6-4327-b624-9ebaa5876443",
        "cursor": {
          "ref": "7418528f-63b3-4f96-accf-adcbcda9ecff",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f05a3d0e-2ec9-475c-a180-631edb34f829"
        },
        "item": {
          "id": "dd0bb437-1be6-4327-b624-9ebaa5876443",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "19d70bf7-2faf-43dd-bcb8-b4d381409837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87607baa-c0b2-4855-9b65-a07badcc6107",
        "cursor": {
          "ref": "699ba639-7d4f-40ca-b24e-32530b2fdb0f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1c63bb61-ebbc-4d74-a679-a56dc8d5f71d"
        },
        "item": {
          "id": "87607baa-c0b2-4855-9b65-a07badcc6107",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9e969e94-4ce7-4bcf-b3d5-8c470c47ed3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ae9af7-fc85-43c7-9d07-bc440f39645f",
        "cursor": {
          "ref": "6435cd3c-70f4-4110-923b-2bd7ee177809",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dbdf2ed7-69b3-4776-82df-53c5c220041c"
        },
        "item": {
          "id": "40ae9af7-fc85-43c7-9d07-bc440f39645f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74b3a22e-584c-46d7-8af9-9b9a8e8c97ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4404551-2232-4084-b958-027d1dbc0244",
        "cursor": {
          "ref": "4566f3ac-aaab-4a41-b2ab-7f4825db2628",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f9daa41a-3014-4da0-901d-8f79974a5376"
        },
        "item": {
          "id": "f4404551-2232-4084-b958-027d1dbc0244",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "72a572e2-a174-4540-b53b-1401f4cc7020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed45ba1-ff7c-466d-a6eb-2c0d66bb86d7",
        "cursor": {
          "ref": "fcadad1e-cc6e-4059-9ede-059e13804729",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1ce90032-69a3-42f0-b6be-73dc8f2fcbb6"
        },
        "item": {
          "id": "4ed45ba1-ff7c-466d-a6eb-2c0d66bb86d7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "31164e58-3624-48f8-850f-9397b6a2633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33f6332-6e9c-403b-b7e9-cc63b0db08a3",
        "cursor": {
          "ref": "6625dcea-ba62-49b0-b240-9ff17bb461b7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6a89c748-f2ea-4da5-a1e0-1201c854e11e"
        },
        "item": {
          "id": "d33f6332-6e9c-403b-b7e9-cc63b0db08a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25ff90c6-242d-4526-ad79-7801f4c8b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a8bfd8-bc78-4010-b742-2c6b8daddf52",
        "cursor": {
          "ref": "c428aa47-ea8e-478c-ad8a-7b236990c169",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bd6ae117-17ff-46db-bf05-4eb9ac0bce15"
        },
        "item": {
          "id": "90a8bfd8-bc78-4010-b742-2c6b8daddf52",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a8bb37fd-b9a2-4123-a365-5679ed990365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55145c13-b468-4909-8386-0d17f5ae1ae1",
        "cursor": {
          "ref": "fdb887d9-ed05-4d0f-8e60-d448c742079e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fd90db0e-8c57-4756-9c0a-fe5df16ee05d"
        },
        "item": {
          "id": "55145c13-b468-4909-8386-0d17f5ae1ae1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7d5ee2ed-f713-4f97-93dd-210504261e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059df42-5d9f-4024-a71d-840768a4f5ce",
        "cursor": {
          "ref": "e6cefc76-cadd-4559-b75d-e0da3298e32b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "48cb0214-567b-4f06-ac28-a4b8c0c429c4"
        },
        "item": {
          "id": "a059df42-5d9f-4024-a71d-840768a4f5ce",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7f39699f-d706-4fe8-b31f-65e9dc3cc0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ccf3f-0ea0-4568-bcde-695980bfb9e0",
        "cursor": {
          "ref": "7134b8d2-744c-461e-a89c-9a92d3eda55e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "430f36f2-107c-4e4c-bc28-bbdd2750e8a7"
        },
        "item": {
          "id": "6f8ccf3f-0ea0-4568-bcde-695980bfb9e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ba80c809-bfc1-4268-8a50-8952993fff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f783a53a-a339-43fd-9c13-069725e40cef",
        "cursor": {
          "ref": "684bf911-1c04-4852-ba58-e056bdf5c03b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "668c427c-5976-4569-997a-c18ec6579ad2"
        },
        "item": {
          "id": "f783a53a-a339-43fd-9c13-069725e40cef",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "102a5315-add9-4f82-a2dc-2be0734e1477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c4bc9a-d832-41e0-9ef0-e192e24725b4",
        "cursor": {
          "ref": "e9951c1f-af27-4b0e-a214-460733198cc7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1fa2c85f-f1f8-44ab-870d-282a6b7e7370"
        },
        "item": {
          "id": "f4c4bc9a-d832-41e0-9ef0-e192e24725b4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4bbfb8ec-8785-4b51-bccf-28b7dc13614c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0eaf5e-138a-45a0-a1da-55c226c7c164",
        "cursor": {
          "ref": "20d57ddd-291e-4ad6-8ee6-26094fe9b745",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ca7ea6b5-3751-41d1-989b-fad2d76f0937"
        },
        "item": {
          "id": "4b0eaf5e-138a-45a0-a1da-55c226c7c164",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "31432c89-e849-495f-8798-9842070eb826",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1820437-56da-4c44-92fa-39d8ee492391",
        "cursor": {
          "ref": "e58f232d-b113-45df-a09d-406584e0b8b1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0c47605f-20ba-40b4-931c-ba7960d73bd6"
        },
        "item": {
          "id": "f1820437-56da-4c44-92fa-39d8ee492391",
          "name": "credentials_verify"
        },
        "response": {
          "id": "579410ec-16c9-43f5-bd5a-9bbcb5417c83",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa9c362-5d8f-4b8d-8c7f-cc03c708a593",
        "cursor": {
          "ref": "667a5bf9-27a8-4188-be4f-8061d0a09950",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "395ca528-15c8-4546-a055-e0550f1c7907"
        },
        "item": {
          "id": "bfa9c362-5d8f-4b8d-8c7f-cc03c708a593",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a1aff1e-d279-4c17-8524-05db6907b2c9",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de68780-ac3b-49fe-b970-e8a29104bc01",
        "cursor": {
          "ref": "3ff57a50-7997-43f1-9b35-f8c32362e7c3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7521389e-ef09-4ab6-af45-3df06313169e"
        },
        "item": {
          "id": "6de68780-ac3b-49fe-b970-e8a29104bc01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "633480ef-8279-4f6d-bb8c-77d7086c819f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de68780-ac3b-49fe-b970-e8a29104bc01",
        "cursor": {
          "ref": "3ff57a50-7997-43f1-9b35-f8c32362e7c3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7521389e-ef09-4ab6-af45-3df06313169e"
        },
        "item": {
          "id": "6de68780-ac3b-49fe-b970-e8a29104bc01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "633480ef-8279-4f6d-bb8c-77d7086c819f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64180b6a-9d28-42e1-afae-cee2d3ba6ad3",
        "cursor": {
          "ref": "4977e0d9-7c95-4bc6-a7c2-ae6b6a34001f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "39ded221-e40b-48ef-b1a0-0216d3bcbf54"
        },
        "item": {
          "id": "64180b6a-9d28-42e1-afae-cee2d3ba6ad3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ecdd98b0-f41e-4fd0-b195-b9c6629dbc36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4be85f-da06-4d25-9b45-ccf830e814ab",
        "cursor": {
          "ref": "f654bbc3-7ec0-4737-92be-5c9f2f1913ca",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7a4941e5-dd39-490f-abf8-953d16ce9d48"
        },
        "item": {
          "id": "9a4be85f-da06-4d25-9b45-ccf830e814ab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2444b24f-0ef1-4ccd-a683-14f78858e795",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}