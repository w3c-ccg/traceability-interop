{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b323b4d5-9b69-4b74-80f8-dbde0a39bbff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f5d720e9-22de-4811-bdf1-56a2eb2c27aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02df73b4-7415-4d7e-8eaf-b8d176f8b7e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31081508-5ba7-4c1d-af44-f2dd9804ac02"
                }
              }
            ]
          },
          {
            "id": "749c1fc5-0ada-45ed-bf01-db922fd9a4ef",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a518285-fc08-4c8e-bd7c-7a924b95a0e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e11fad97-689d-4675-82c7-fbebdfb5026f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9d765de6-fa3a-4842-a17f-ce5733a7ea9d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ac8f64c8-4aa3-4c42-a3b5-713d8b7f18f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fec70566-b96d-4474-a8b3-ab9b033c0cf1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0aad98e-b30a-4740-a872-e9478188cf60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84708afb-b3fd-4c84-bcc7-1d28bb04453e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a71c3305-49f3-4fe3-9658-c61107202bf0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10286571-9677-4e10-87f4-73f4147e8937"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "092bef8a-7954-4b1c-9018-7af39c6e2d50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94cf35d6-d882-45e1-a444-698d9aa21318"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a56d040f-502f-45ee-93f9-e2b26dc85714",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "beffcccb-051b-4161-b277-cd998de8ecdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf6ced1a-19ad-44dc-8f88-0351ad0836db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74fa1c9e-1bea-4e65-b92e-bece0b0a7b67"
            }
          }
        ]
      },
      {
        "id": "77ff152b-7801-44c7-aad0-951a7dc459d8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e8efc123-98c2-4080-a484-2e2b5f532f6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dcab47f-d8ca-4093-b339-73ef08146050",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7ee1a4a-e25f-46df-9cb6-b186b78f1718",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c076746c-0f2a-4d14-b804-47e4b1390362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b39b48a-9275-4379-93d5-ed9b4e237d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d00d4ca-ef57-46b8-a642-78be5d47fe49",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfe245a-e43c-48fe-b474-52ca7a471356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "191df0ab-bac6-48ac-a4ba-95d3d2131032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f97cf9-df73-4355-9f8e-8b886eb86050",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1975e7-05eb-4ea7-baf5-6282143ee0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc5b6875-6cfd-4bfb-bd18-6f93812311a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2242eed6-d961-436b-8150-9171c61208fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe7e2939-a544-4f82-b09a-0fde460b4c03",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61da8b3-0044-440a-b5f1-62765cceb487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d2c77ce-2e66-4719-a73f-358459571ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1305e9bf-1a3d-4aff-8972-fab2fd696be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98382ed9-a047-4fc7-b93b-965aee5fbd9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a1e00475-e28f-41c3-bccc-a7e613b30764",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e715f0e-cc2f-4afe-be3e-7b48c6439c4e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6fc6ff5-84ad-472d-929f-9112fa006b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3f761d6a-e837-4485-8af5-16c1223e9a6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26a0bc38-15d9-4413-8951-d05fb4e15862",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "765cc365-0d2f-4632-bf95-9413c283d344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b20542-0c35-438a-8a4b-d4a7cc3c1b6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57c56a8f-b964-4d9c-a6c9-bf0e3a8e25f1"
            }
          }
        ]
      },
      {
        "id": "e4578760-8e93-4f2f-8629-53bcbbbd64eb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96da4400-f148-4a62-abb3-0481392dd95d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb31b8e5-221b-4a99-ae16-eebb3e2ffeca",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c2c81ce-d4e4-4b10-9581-81fd664b8ab7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c65304-21b0-45de-9d2f-b60d0638645a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98df2aea-dced-4db0-b2e0-ba5eb9f30f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0426b-78f8-4432-bbac-32754d7f7f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28b0095-8c34-4cf5-996e-bd885650f722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e8a74-89c2-40ed-b7c4-59aebe249afa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49b7d75-740f-4e30-aa38-675532f2b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74efe57-b224-4f89-9e0a-a1baed616f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61943081-91b3-43ac-8167-2fae1f4301ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e67fac54-0da2-4e87-ace8-eec795a34ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4dc6a0-7eec-449d-9dea-5b8d8d5b220e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cc839e-e857-4480-b0e0-d8833e73d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5e6847-e56f-41d1-9abc-8808b337512e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0459cb-0381-4790-92a8-d29640963c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161e5416-77b9-4e8d-a03c-1f00f4038f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef607f5-e204-4653-834c-e8df6c60deae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35c1910-444d-4434-9b7a-9ca652dd7e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fc5448-263c-490d-b8f8-f56bde66aa28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3129d824-7f36-4fae-9d46-f77db2476a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecdec51c-4713-4071-b77a-46bd63d25786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371bc91e-bb3a-4308-96cb-eb2f937a423a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5801bd3f-d123-497e-8e35-fa03b563f828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a850588f-cb7a-4ae1-8d8a-04f4ff88a8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a7dd5-ceea-45d9-ba4d-8c14ab9a7b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b006a72-c8bd-40f2-849e-7987a8025316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc0776-8fe5-4ed8-ac67-37dd20c82ece",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d761d6f-672e-48af-8170-e50caa67f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03a5d3d-3aa8-48a1-920c-e9e6261735ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80dce7-8588-41b9-a742-39ecfeeeb005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e82f2b87-a2f9-467e-95a9-6d5d52e11486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc3405e-4aeb-4aee-868b-0ced4bd018da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be6ac91-c903-4e09-98a7-d0b902f2db56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67b8c00-8b0d-420a-a606-d547de2eaf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8195550-1578-4a96-95b1-beb6a96fa0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39c98329-8cda-4661-9676-dd46995aede2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43cf234-7c69-4a7d-bfbf-20ce41c39dfa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d70a36-c322-4243-bb75-c46a8998190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b2ed05-e6f4-439c-bc7a-1e811d21b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01d53c7-ef50-482b-9ff4-7eabc1932870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e7430b-f388-41a5-8138-1d76618cf65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b36ce-db00-4cc8-b934-7a16f164f36b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b3ef2e-279e-4637-abf5-e1b9d437f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46802467-60a5-4078-bbe9-8d841204a0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbb177c-f662-47fe-b623-cc4375497dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cad045f-eced-4b0b-90a5-370d74421fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2fbe1d-d459-4ed9-9e3f-cee4ac3cb001",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d368ee7a-2fb2-4a69-a714-e2ae081b17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39244528-1244-4f28-81fb-96b7dd43ac4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d78bdb-b02f-4a2f-af17-9700135b603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4986c27e-f8d2-4510-bd8d-001c1b081db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff0281-dbf1-4616-af92-30875379ec63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2444f00-aeb5-4137-b2ed-03fad0366d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ef6437-9c3e-4413-9430-2e9320d05efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd0eba5-b1a2-4505-97d5-ead4a9bab5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f6dfc7-6958-4f8b-9b1b-d69f0f4c169e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef3cfc7-6863-42d1-beab-85c9b714f9e9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b0f7a-7faf-4392-917a-2db15298376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011cb059-1956-41c9-b153-10ffafcdc2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3a441a-b191-4a26-ac0b-d5cb9d346338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cd7f530-d321-4759-acb0-569939bc9995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d37dfc-7fa7-4390-94fa-ec85525e7af6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db474b6c-5826-4bc3-9ce3-e51d417c84dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48938d0a-08db-4847-ab68-e9aad7bbe624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b8ae7f-4918-4050-99df-a7884028b72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc4c303e-ba92-41d2-a600-bc5703e82b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c53a0-8fc5-4e15-9562-00beabe0ea15",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14dda7a-13b2-47e6-ac96-a590a1150fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2ddbca-25c4-45fb-b459-caa3a6a4c8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c074593c-95ab-4cd2-af5d-66695a6dd52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d99526c-b620-488c-92ef-298cdd35f451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204c714-a9ab-4bb3-896d-a1571518a842",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe756b9-df54-4697-ba12-c1369c4942e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd10cd7b-160e-4d86-a959-3937d9fb7291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa71951-b8d3-42ec-9c8c-b0af8ca6ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d31e74a9-b49c-434b-bece-2a23798409fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc8a35-056c-4405-bfe1-e6e50720059b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af0f979-661b-498e-88f1-75b970ab9391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53340e8c-de31-4c85-8ab4-c77ffb816d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84ebe88-04be-46a8-a125-d7bf9d14a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53df5d78-2246-4928-807d-9504009a2613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73489a9c-1f63-455e-aba7-b8229a688612",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f274ea0-9a24-43e2-9d68-498346acb5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74da24f0-ee99-4b94-835d-e1bf28c465f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444bf130-b656-4eb0-bc48-2bc5f0c91664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4839a3b9-53bc-4298-b7f1-8ecbc145ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331c1e0-be8b-4a4b-b81c-fdf8e12b0827",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32224a3-5e76-4900-899c-48ca3e8a0f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df12811-fe8e-47e9-a283-fa3b2cd0a636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5510fe-d157-4dfc-9eb7-8d06a01f42d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "973de0c6-19a4-42f2-80dc-40598041ff2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b52fa3-1c27-4869-aa60-88bd93bede93",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3d8dee-6f01-44a3-b9f9-b59c3658cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2bd4fb-08ea-49ed-9268-a63140846b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25038c5-4489-4498-aec9-9e2d30f04cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03611cec-d8c6-4921-b4f9-d2bd91353d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc372e2-6ae1-475e-9950-226c29db43d1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03ce88-3caa-4357-82d9-5277a15b1172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7738dcd-5aaf-48fb-bd1d-d927357e536a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af99c554-43d9-49b2-8446-d51fec0c7187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a71ccee-05b5-41c5-b13a-55e318471943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf2a53-2c36-4e5f-b1f1-e9681341d70c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cdec9a-adfa-4d74-890a-8dc992094dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e54402a-1192-4882-9582-ddeb5365fcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d949ee-9674-42a9-bacb-64a5f53c04ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b55a5d8-6849-4580-b861-a0bd229bd5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882b3415-ef03-4e45-9f90-29c0598a5527",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9a33a7-bd2b-4848-92c5-472dea1a54f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa4c83f-d49c-4b6f-b598-ab4bf3864ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f23896f-e001-4a42-ae41-77a83388e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a27a1e-7d3b-4587-9ac2-cd569470e953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6249d2-f13a-44ea-8816-8361cb4167a2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5847f54-5ab0-42df-ad10-822c06fbda03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f28b67-5082-4f2d-830a-0ba5e1d82970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85dfc54-1b6c-4765-9e36-264fafa4ea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a77d629-2ebc-4704-a0e8-1f509671bebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d1f6ce-5aa1-4704-927d-b96dcaaa1c83",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a48c3c-a2d9-4ed4-bcda-ca349c8fa785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd34d395-a002-4510-af4a-9a649c4e623a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc5a376-3925-4465-ae47-822a876d3db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed8d184-055e-4420-a775-6faf40aba0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f33959-03c4-447a-b61c-def1649c3dd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58309c25-2d64-4458-9f02-427f5a65870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5fb19e-0376-4d02-a78c-9065e64bb30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5380fd4d-c871-4420-ace9-eb84bc27e7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f999c40-9131-425b-8142-a15dba09a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8065194d-32d1-4ad4-a1d9-e015d0efe963",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fbfac3-51d5-48b5-b9a4-b049254f9dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc46952-8c71-43dc-96e0-ec97c2a395a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588be34a-bd14-4d43-9d42-d87d35402a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0ac891-1378-4f76-8d91-b723599a6cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7cd121-7c91-430c-afca-c758b70e45ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89769362-9cc0-4ee9-94ab-38bc9be30cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52c6624-aa3c-46e2-83d5-6c417cc49d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c47495-3771-475f-b741-e6d1b67b9521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8b7123-0b5f-4401-aa51-a7da4fed4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae72fef4-2a8b-4c63-857e-6c57125d1b1b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a6810-cf33-4c7d-984e-1f35d2155af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324d7e85-9b4e-46f2-a51f-83cfb1fc8dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6bae59-af6f-4a94-9ee1-0d4b1dea4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a2128f-966b-45cc-bbb3-ae83bfcbfb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaaa26b-f50f-4450-b331-7811dc035a33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac51002-76ac-4cb9-9b50-eadd915e7337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb89001a-fad4-42d7-8035-eda237f0dcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01382af-18d2-4200-8d4e-c63a30c01824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6468d3-1b8e-4781-be87-e2d88c7d6208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7aab03-9db0-421e-a5d5-6501d092678a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c58de3-ba1a-493e-a355-6d8b3cc06146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b01ae4-8eaa-45d3-bae5-74bc9e39e6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfd7047-611d-48fc-bf25-0da8b3cafea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fab500-b1e0-4c35-8b4c-caa7bac6af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2e1a30-634f-4d74-9dd2-94864af5be08",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984fe92-74e6-4aad-8959-a653215aca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586824b-960a-4a4a-8171-ac32f22d95bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6d960d-94e4-4125-8ba9-9c30fa8eac75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "918dee35-b30a-4c3e-9ada-ae60fc665cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440803be-18b2-4405-ba17-dfbe6dd395d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a004b87-80d6-4ba8-a882-33d5796f935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428837b4-33ca-43bb-b752-1788a3903d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971e9903-ecc8-4976-9470-047fee695934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a25dfdc-fb99-4fdd-8118-2941b9d2fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe3ff13-48fe-4954-8472-7d68d713e77c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88575fa9-d635-4d12-aa41-4879ef0adedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc80d2b7-75e7-456e-b5f7-6606fe116911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac80caa0-162c-4542-a81e-d3131e5a38ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "528940a4-62ca-482b-bcd7-34f312b34537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bbf0c8-24cb-4e94-93f7-29d50ca6d308",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c3a1c0-a873-455d-a75f-dc5e4e9569a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7653ef25-793c-4b43-a85c-1e6fe504de49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a17d4-f5c1-4895-a6e8-8875f5360cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87a86a6-9de7-41ba-8aef-3bffd98065e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5363ea-bfe3-49b2-8ba7-652b7f2ee439",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3629b05-f029-4bd1-8541-3983d7d8ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2026d54c-a723-4816-9655-a140b499bda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d2f1c7-540a-4938-8de9-261f39f233d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d5b9e5-772f-49ef-a03a-36953c42c34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1fc7b0-3cbb-4d87-8951-efc2406db0a0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e708776-dd24-47f1-bcd9-f156d62627d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e0f8f5a-20c4-40b5-b231-a43addb66e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1548700b-602f-43ca-b4db-884efaccf766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3decde-fd2f-46de-8262-9b942852ddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f7c07-196a-4054-909e-4bb2aa004977",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651e1628-a596-4d91-9689-858e217ba11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab2f2b0-8f5e-4dbe-9b63-64b7f30e8f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e094824d-361e-4e24-bed1-39ba0929d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a7db3e-7b71-46b2-9cc1-5c01230c75a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e1817-5a1d-4c5e-a9cb-c797421e2c60",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db06257-4218-4e7f-8f71-72c4d33f731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0da707b-7867-41ae-986d-a51e29faff71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5c8a9e-8dfa-413c-a275-40b54013fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cebbb5cb-83ba-45d1-87d5-c6041759484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c160df5-ad95-4598-ba97-aaab9470abc9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5edc530-c206-401a-b5d6-d098b21bedda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211901b6-27fc-4189-956a-c26cde14c887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178f5d4d-3bee-4702-b483-1592f9e895c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96efcf52-2432-4c72-8b90-116ce6ebeebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeec0d57-7e70-4433-b750-8bae24735c38",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fb40b5-d9d9-4687-a403-b2834726f09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b12b32-8576-4522-9a5b-fd174463319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155fa2c6-d2f8-4eaf-9549-cab95daae85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22fbb0df-e254-454b-9437-6919217594b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4693cc5-d926-4683-8691-8fb55a8d537a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac9c670-3528-4b5f-997e-a76b757080d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d388820c-2f23-4655-bd6c-a2d088fc82fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07448c6-0505-4728-b280-65add6637fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd2e83b-ce25-42e5-a015-2d42d5cd0709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c12992f-d9a1-468c-893a-cc5d1a4f364b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aa9ace-853f-4e04-8692-bc3a7b191ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adc6228-6668-4c82-b427-90c8f1b1a063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1cebfc-00a3-4d52-bf1b-c0f0d03cf355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "63c6bc24-000c-417e-9898-d1e545489119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d800b-415c-4da0-a255-327c2d7c88bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09285c90-95fe-4d71-ae5a-7c5b4eeb70a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4d62e7-152a-42f9-a6e5-4bd0335e51b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada727c7-b71c-49d4-99ad-9c15b6636bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73c966d-307a-4789-8e2e-9f4ec45da84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e2098-d6b1-4b28-9bd6-fda88597a50a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ba420f-506f-4b66-976d-77a9a67c6c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa7d67d-5667-4bb1-8a0b-309204df3918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f4f137-6ed1-4326-ad6f-e73f8b31b31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "720537e9-003f-41d9-a0f6-ccfed72887be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863bba35-9471-435d-869f-690a1acadbfe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108d0d05-ee1c-41f0-b202-51522b3cb95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7619aad1-bae6-42b0-91a3-1a2a4ae008f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebf9c10-2bf0-484f-a370-898ded2cb48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3062ba-a016-4461-b888-f7de1e0cbba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ea764-2888-4357-8985-ba4acdabcdc6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066e3cb7-5fa9-4a95-b11f-8f2ee65bb0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92ff86e-cb46-4117-9617-d4bf9e8eeb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7d652c-1d3a-4db9-8eed-6900406f448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0f2f93-1832-48ef-8890-69598a890114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db104276-21ca-40d7-b266-1b1e36d592f1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68484474-df16-465a-b6ad-faee032e9a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7861a5c7-2992-4655-9010-0f7b180116fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cfd754-a8c8-468b-b0bc-de7944fd0895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a4665a-27d3-474f-af11-f1ac655585e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11a6809-c67f-470b-bf30-335e5ce63a8d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e368367-53b3-413a-8950-32003527e1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9826010-c42a-488f-a85f-abb371901514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d5c328-4835-4a9f-9766-6606d931c134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8a0da3-9add-4b46-b384-e038ba8c2012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7918e70f-c80e-427b-bc87-d098a59d1d17",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cede14a-9fbc-4bf9-abad-0a2af424cd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013d9cea-a4f5-42cb-9a19-2dffece4a351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94c61bb-965e-4e70-b9d7-1d443ee0b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed698c5-391d-4794-9ab1-39b8c0f03ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fe5e74-deb1-412b-92e2-69907e416439",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8ebec4-78a9-4c65-8c4c-90acfd4b10e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4e6d5d-b61b-4d63-8de7-e3a7c0ae4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd66002-c0d8-4f3c-84ba-04c1a1f3beb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4df5a53-9499-4289-a1b8-2ca560c69d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab299e-2654-4af1-998b-27cfed5be313",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93272ed6-8d06-4e48-87aa-442ae06831b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ee03bf-5933-4e9f-8575-4fba5a692823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3db746-f482-4c86-9adb-deba938070ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7ea319-4130-443e-a25e-d294c2fa66cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737cc4a0-cf77-4665-80a8-21cbafa92812",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182114bd-b332-4bde-894e-b13fe45f7b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3ee662-45d7-4589-977e-7128267cd5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb9526d-fb9b-455c-8758-36bcf1eb5e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78c025e7-5004-4095-a880-8ff18b5a3ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c74ab5-0898-44f3-8087-b66bc54923cf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a898a6e2-0e96-4242-ab35-455781e2a52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8b651e-b908-4398-9ebd-625daa414a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace2991-b92a-47b8-954a-3d0ea56b3cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2b4776-63fa-420d-a490-b48012652e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbba2ea-4173-4541-9dae-12925f3d18ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f6a808-f740-48d2-ac02-58ec53d586b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb73fd3-07ef-4a15-9d64-ec8c83d47eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6469d47b-7f1f-4d6b-83dc-18a22ca1cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd1c426-f27c-4398-98a5-0b4e54941b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b1665-1377-45b2-85b8-b6f13937b42f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c14226-3fa4-4433-9f92-2f26f7684a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cfb237-20c6-464c-97b0-f08f09b76a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f0bcf-b5f1-4ab1-a0c8-0dedaba35899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ad6a6b-5de8-42c4-9b41-61c68697dace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057169e2-bced-443a-ac9b-b22b526e319a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e393f4-2207-4169-95f7-0f38685d5eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eba8ee-39a2-47de-8a1a-0b5f4884b4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cde91e-5d55-41b4-806e-25532b12182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bac3e6-ca1c-46e7-ac63-b78c308989dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679f8c85-2d75-4858-b683-ae8601855238",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da23d713-0887-4fc4-9bf9-e08c057099c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ade9a9-c297-4be5-ae5e-2662e7ad79c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd1e290-8384-444d-ab89-c3befb796c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15a029c4-4d49-48b3-bc70-f0ab06e80da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f8f822-40a6-4a7c-8c4c-9316673d2d24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a8beb5-8f74-47a6-b80b-4840af8fad9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6494fac-38d1-4041-a62d-2d995cce6470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31575f0e-de88-451c-b089-17f27ce5f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6513d43-e5ef-4983-8472-4b3314c1e221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8560fc2-084a-4ea2-8123-44dd9ffbc61b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa70c43-073e-4dc4-86a0-c5658ff0d0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3618ffd-307a-4bb1-b81d-35ceb9ea3b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61271359-b8b6-4445-aeb7-eea7371d9aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aef5240-d063-45fa-8e22-10249a1708c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e062ae-95fd-4eae-a7cb-e2f591989423",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de122de-238e-4d7b-9fd3-828ef80ba8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99e2001-b50e-424f-950c-b0c9a2283de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b67f90-4142-48f9-afc3-0625c7702bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5adbfc1e-9494-49c8-bc99-7a9f2184a64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb63e2e5-1b52-4683-ae80-fd8a205e21d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe052b3-e9db-4396-90ba-17615869757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d040d-8234-45d0-8c61-5ac695da78e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a5f7b-462f-4146-a09f-c0a4e5c11464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d67331b-7330-48e1-945a-183720538746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372c79cb-98ac-4bd2-8798-e55b456dc3f0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d32800-e909-41ee-9b3e-10b92164be75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459406eb-9d1a-434f-ba38-4930bf2d7486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39204e-1975-49b5-9a07-e82dc3ead1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bbbb92-63b3-4964-86a9-d399bba1d47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0f019-6500-4366-bd17-15c368d3f6fd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422397c6-0c5c-44fa-879a-f831a0ce19a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171204f7-8ac4-4bb8-b7ef-5e619796e3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249d112f-97f9-4e15-83d3-59a820a54197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "589e1365-a83b-438e-8cd2-82061c5a419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90df625d-bfd7-4a1f-9284-8ba36cee9d13",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3d2ff9-c61b-47a8-bf77-de1ac82bfc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cf45f1-b5dc-4a4d-a7a2-71a7a1e65b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ca604b-2776-486a-abcd-b1bf52b2013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea6c072-ecdb-48f6-8891-f1dceee232b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be8032-58d7-405b-beac-2337d91f7bd9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc712e2e-95cc-44ce-b044-bc0b5dc7bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05369b5e-8762-40ab-9ed1-4ceb3dc04c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7655c0f9-7bbd-4639-ba57-3d222ac6c060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc025c7b-db6f-409c-9e07-62776d8528e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f200e53-34e4-44b2-8619-8ab9f6360b67",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3319d7d-21a7-4376-a33d-3fe41116ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32edb720-f91a-45ee-a82b-bd05125af799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c356e5b-00d9-4fb3-af27-9c068f04cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3e672a-e0dc-43b6-8f4a-c9222b3ba0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9304054-a16b-4b04-9dc7-efad9b2adc17",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e1fa3-be52-4f4c-8387-64485f246c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9383b30e-c3cb-496e-8753-75021c8516fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c221894-efc4-44a5-ae32-d1eab93ebd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff47845-1c5e-4b54-adff-3e8ce609ae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9165f0ce-fa0c-4874-87b7-3960501f9c92",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b833a48-1816-4dfb-a09f-89be77a2aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9d42f0-6727-4d9e-ac12-d7dddde4275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9738bf64-634d-4bd8-a253-68b57f95a494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca4f4c-3af7-44d0-b78b-d8ca79861d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0add3c-1a47-4b12-a0ea-42a945b54a7a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b28f7d5-ac49-4bcc-a6fe-1588292e7a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e6f723-b2c1-49f8-bb84-91d77079c53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813a5d43-ffb8-43d0-8038-5e4750308f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b5210f-c270-4776-8345-1e1b038fcfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2e9611-223e-48a8-8449-546cf825438a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb211ec-ba89-4324-95e3-8c51f0a13e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46c449c-a27f-40aa-b9f2-8bc3ec70b36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3a9296-ff8c-4b58-a2b8-a4e7d6f57092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6896cc7-8030-4185-9e10-779835a943db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0001650a-ab6a-4890-9fa0-e86d9fed5b78",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77913c53-cbb6-4a18-a6f8-37557e796290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c720551c-232f-43e3-b98a-398c7973db40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c367782-6309-4458-a252-aa0186323cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e26b69-653b-4673-b05f-d093b4b8ecc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e44e8-7391-4a4a-8035-2273bfe8188c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce9768a-c12a-4c64-9f5f-899bb8673069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353e0eaa-fb03-457f-be7e-fe9690767bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c3f6e-c8d7-4ad3-bc3d-e045674f4652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a2c978-bf16-4210-9e3a-4135828aad2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52995f19-6706-4df4-b045-f1f2981c7ee9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f34acf-72ee-4af9-83e0-af4999ea2e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcd4f19-2e30-4bf8-9355-02d0afcbbea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41be15d1-da0e-4f81-bd0b-f1dbbcb125e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f13d2b-8dc8-4c7b-bd6b-b6b7bc569122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e45fa4c-937a-4403-a171-df4c690cd2d5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896fd615-3950-45d7-91cb-723ff58a8c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d73ae2-d08a-48e2-8522-c0e8eb8016a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce3f09-f462-45c4-bfa1-4bf9a2668e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33358ec5-6793-48d4-88bc-38cdeee66067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d0c739-28b0-45db-8e80-13752fcbe1d6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1c35b4-1c10-41b3-a2f7-170b66a23459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c60602-9abb-4271-911c-0e93145d80ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae3d0a1-60f1-4cac-9429-84e798a0a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fbea47-bde3-43c8-82d5-3a2670beae17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8898af-6ef6-4235-9af6-f1feee64ba64",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c6716-044f-4884-a23d-6e9d0743ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da776ec-42fe-4c95-9791-e95cfc71eb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed32efe-c2a7-44e9-b751-94db50abdcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9032a107-551c-4094-8135-a0d4d207457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd4936-0b4e-49d2-b9e6-12f107d97635",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b33aea-8cc1-4cc9-85cb-de9d2f0c8021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a29cab-6521-450b-acea-36c83571b1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c0c116-f159-4eb2-8cfa-12f5867d08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "433a883c-c641-40a4-9afe-f8f7ca940b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd256464-d07e-41e6-be26-7faec8850bc9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7786373e-4dc9-4e07-86ec-e00db5048a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b36243-0576-4107-be15-27733c08b633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f87232-02b6-4fa6-af0a-e32ef3279652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d540267-cc6f-4240-83ec-013e2aa1765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8182bd8-3220-4dbd-9f5a-961800c02208",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb61a033-9a85-451e-96fd-3d5a5bd7e2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1913d9a4-13ee-481e-974f-2f4c2b479d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fba0050-acd3-4eb5-832b-5cb4a586233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ae32f2-cc52-417a-8b36-6f8f9c605890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac5f7b8-1a77-480c-af57-5363ec701506",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3e1a7c-bcde-4b69-aa38-ff3d87e2953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1364b3-4f81-4fe2-a066-e840ee5649ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb5e210-612f-4021-a2c6-bcb420aa1801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "641a6976-44e2-4963-bcd5-b1a2182cfb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22db2a14-f3e6-44a0-ad07-2e459556e669",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7654037a-118d-4283-b596-3073f5a77e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd8a49f-473c-460b-b8bd-bd5d94501e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ddb5cb-b9f1-4a18-8311-c7f32105bedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b761bb63-891b-4c05-9e99-3eb4df5c0ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce7d156-08da-42b0-b2c6-dc0aee30f586",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac8365-2bff-4139-a9a5-5147c640b9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b7e484-2898-44c8-a3ad-e67870f9d95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c2953f-857f-4f28-af10-08137e8709d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f64d49-8a7a-4057-a155-4c7aeb7cb3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d40cfef-459d-4e8c-be75-b9f713017ee2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e1375f-8bc8-49d4-b319-df774e07efd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c96bc4-9918-47ee-a0ae-0f17433ca8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681cbe7-ef80-45c9-8cb3-5732258911ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da77ce60-13d3-4e00-8f8b-27890e34f78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1432905f-90e3-47c6-a2b2-86e4d1849bd4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace4974d-3f39-498c-926d-787f8928b180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f86273-8140-4089-a4eb-d77278cdee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a67319b-586c-426f-b835-dc74aaf802b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6a4425-cffa-4389-b53c-f08e48ae888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb86847-9418-46d2-bf14-a97be3731528",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c309bbf-3d18-4d8a-9dd7-4808e7b5fa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1709effb-0667-4780-88ef-2f0a3de5d644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf7e11-b3dc-4d29-b675-c804d3f22151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e7a4a6-ff1f-4834-b272-6f353c0f255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235eab03-9393-42f5-a7cd-dd60163e71e1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f436c-3cc0-412f-9822-abad20e922ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90221fa0-cf3c-4891-ab60-96417919be99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efd9a57-204c-4d89-907f-c364c7055f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd9dbc6-99e5-4ed2-971a-3a67375ef16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a471e105-e9a9-4083-8236-57ed60b9c095",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442166de-62b3-48ac-9369-cb4ab68b0743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267e8d44-702c-4cbb-a17c-beeab38d6c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8bf5f3-f256-41b4-a418-b5cb4e9ceee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a01381a0-d12a-4a9e-a7a5-e4ef295d8d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c55d8e8-0cfc-487d-b16d-9c7552fc7c00",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb2ae6-11e1-4d1c-a9bb-7cf64bfe98c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9425bf68-f27c-4dad-a0ee-fedf72c8f93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac92440-d26a-42ee-8b76-cac9b9c5b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26488582-7476-477d-89e7-7131d4ae5497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda4f8a3-60f4-48bf-8e62-ed870c6f5e83",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233b6d05-d8c0-4452-8a65-253daaa22f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15aabaa-80a6-46d2-b1c6-194009d73b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c423d0-bc30-45c9-84df-1e6b042433af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ec5a0f-bb56-4ce7-9626-9be1287caf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e525b16-2849-4252-9156-53e95860d40a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7da1413-8872-443e-8428-dd8043795d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5562efaa-77fb-41ba-bd69-3b0f9ed5e5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7a63f4-c8e6-4dff-bde0-af932f136223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1893b1dd-bb43-4608-b4ed-4f813a559acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b918c533-9820-46a3-8b3d-8552d519ee91",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ecd1da-5f82-4118-b30c-d7c9c76d3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477c9732-8467-4401-82d5-17b6ca0774b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9f5e3b-a047-415a-b400-6b737fd0ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c53f8c83-fca9-48a3-9041-e81cbd588019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8087fd-ed05-4ad4-8e3a-b96cf933f67a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39d119f-4d80-40b7-a73c-2f749eba4e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31c79e6b-8303-44f7-934c-96a4a619783e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06386db1-ce42-436e-8280-f25323464d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18967a5d-10d0-40da-a57b-18b81fa2d53e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ca4289a-c0ce-42ad-bb40-a5a65cbc6d95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7d21059-2771-4de9-8cd0-8e089ccad00d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15f3f6b-6ba9-4e30-84d9-96918dcc0d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93a68a5d-1a0e-4ac7-abf5-21acf230681b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e026f8d2-4d2f-4c1b-a829-8c776b8f41ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fedace03-2c45-4212-8696-258a60d57300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd8f9ad-9839-4d44-b662-033f921e0e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8c47c60-137e-4750-a964-725d6e2279fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2f09d5-3d75-4c31-aa97-c490291e6863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54c5a75f-29cc-4c3d-bea4-7abe1d0ef4a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3e4704b-7c08-47aa-a47c-5a2af6b4774c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd70a5a0-e372-481d-afb8-355a814cf8e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53123e79-0aef-4be2-8f98-2c9f44812605",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ded31ca1-5c6f-4b8b-a1b2-69ff6cb65a28"
                }
              }
            ]
          },
          {
            "id": "ed6c14af-85b5-4675-957d-227d233a24a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "800edb39-72d6-4282-9a89-415ae708be11",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fb61609-7460-4987-bb61-6b9e1c613162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27d20b7e-669d-4a01-8a60-bbe8e3cf0b3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f3cab2a-f8ec-4beb-8be5-571a61ea7c65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0429f45-3c81-4b30-965a-bb559b7f6b90"
                    }
                  }
                ]
              },
              {
                "id": "3ae57212-8a10-47b8-b2fe-2e366c114c35",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc25b4f6-3721-4174-87f3-f9042d43d1ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7949732-dc5b-4e91-8233-97e6b478b4f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cac03a7-e9bd-4072-b1f3-13b4d211e4e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f43d15ad-a09c-4499-8698-690e95a51be6"
                    }
                  }
                ]
              },
              {
                "id": "dd92eacd-6c23-402e-a467-2478e024eda1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd0f32-6827-41fc-ad5c-52d94c066a27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa16e5a1-8e2a-4e6a-81f5-c834508ffd9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e49d73a4-4582-44da-8b1e-1e95ddac56cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "229d7910-4d7c-444a-b110-18c08147f533"
                    }
                  }
                ]
              },
              {
                "id": "ec77ea39-74bb-4696-878d-15238050342e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7604da1-a6e5-4b6d-bb4c-4586c06d223f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecf47fd8-be28-49e6-bbf1-b2ba5d813fe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4239237b-84d7-4f7f-80b6-8fc6618ae085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55a1b3f5-40e4-4048-9c65-c0ec11de7641"
                    }
                  }
                ]
              },
              {
                "id": "a9ffdb90-29e6-45b6-a435-77ed02d0b645",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea9dc6e-54d2-4287-9287-cd280860b334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b93b7bcd-6cf4-4e3d-8063-f8d10549ca7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4beded3-0f53-4224-8d33-16adc0be125d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "edb1d6d9-b7ad-46d5-9ddb-e2a838ce1e28"
                    }
                  }
                ]
              },
              {
                "id": "5cc9315b-1f9f-431f-a3e3-db9c0d47c38c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a22dfe1-d8aa-4963-b6ff-3c5b5509ccab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18fb87ff-15fa-4e26-b0e3-b20849ca7e24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecdf447e-f059-4d72-94eb-8295df6748bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1909a83c-0432-4140-bb7b-6d6c40c68d2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92dda63f-9e75-486a-a79f-317379455453",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cc60719-200f-48b4-a19f-d33517eb5057"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "acabc0b9-a838-44cb-a6a6-9184ba1cd0ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1eedaf3-e472-43ff-90d2-f335d3a9ed62"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8f22a54-4af5-479f-98ca-8706c7579b0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "77aeb0a3-6396-4520-a393-9acebdcf42cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4089c1a7-1a3f-4c4b-8cd0-9b9093065851",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a50ca35-581b-4929-9173-e4c61735011a"
            }
          }
        ]
      },
      {
        "id": "a86ba1bb-cb7b-4faf-8dcc-afd9eb2d427d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6985cb56-fdd7-4629-8c99-e504241783bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8045bcf3-0bba-4998-921c-63bb954e1f37",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc658407-7dd8-48b9-8447-2a380f721f1c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b0a857-b031-4788-bb66-98bb8d0c4d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c760511-dc63-455a-9647-c0b0d52c87f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49122246-ca99-406f-912a-03e35622f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3717d79e-98ed-4ba3-acb2-21b277e17d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb6d723-43e6-4ee3-ba6d-c8772978f868",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3df509e-cad8-4605-8458-0996c15d2eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbd1493-a46b-4194-9748-090721f826bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28cb0b9-1f3b-43e2-8c03-f94f918b07ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c650396-ad93-440d-9dc0-3fa9b250b7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b05913e-da88-4982-a3e3-8432241d82b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8a9bfc-2717-44d4-8523-aa3f1868ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f57f46-d0c7-49ac-b636-46222ebe0b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa43c709-a385-47ca-b4c9-de43688f0ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2859d7e-8259-4f63-a0da-a91a8039b465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0212a73-6fb8-47a4-84c5-981c89697a47",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50539738-0a0a-4647-96cb-97912dae5a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d76d29-62d9-4dff-b6cf-4c258be3eb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1c9fdc-33d2-4e84-8cfa-7a4d140da314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b3edba-1f34-4143-a5e4-75963b611292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e00f4a9-233f-446d-92cb-1b75d34ffe52",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813f0f84-7ba2-482b-8708-55fb749c0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dbea1b-97f5-4576-8b4b-82b8fafec5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8749a92a-1464-4a61-bbb5-7bea4421aaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "104693c0-f22c-4366-83c6-509733676bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d3eaa7-84e3-4f5d-9a75-5eae2f6a1367",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c7fbac-b754-4967-95a7-d3cfa09641ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a38047-30f4-4dc3-9c02-995a2e549dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0085193-55cb-48ad-a066-2040a9574f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad347b2c-c08b-4ffa-b72c-7e128d043b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d66d32-0576-4096-90ff-fadf195a1b91",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93888566-913a-4e96-aaf3-56329eda6dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4178de15-c3c1-4be9-b309-74c2f320ae37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f6a08d-ffac-4037-93e6-cf78e3f9be2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de64562-bd39-43db-8f77-ac3fc3e4a08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47672f2d-61d1-41db-ae0b-5447a630c395",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da45bcf0-2fd3-4809-8bfe-37c82eb3e391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d589c39c-6b48-4339-8cb2-0e8a9e2fda27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e31629b-175e-464c-97fd-d334706178b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee43b09-00db-40a1-b2d6-ef31ced40e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dd8339-e3c5-4180-b1ee-9a1ea1b2b566",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0921ec3-9308-4f89-b0d3-261822accc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8943afd6-0014-408a-8096-3c00cd48ac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84139f8f-92f7-44ea-ae32-73caab11e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d821f4d-2191-4c7b-88c8-dc8431695532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f5caed-fb8e-46e5-8241-c06acd3f9576",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c84bde-2b09-48db-a70c-d828980515a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3314c8f9-aae4-4c79-9d57-33a9f63ed8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baf3d54-0770-4c5b-a8f1-a972d1e8e157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1176501-3276-4e61-a2d0-0aede4b477f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5f85b-47c8-4b44-bc39-061d40582037",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e51fc9-2267-44b6-9a2f-1753f9c998ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adcf0c0-8ffe-4829-b298-df29b7f9e8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c905ce-76a1-4a74-a1e9-2c5813d0de3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02ff8d51-9c8f-40eb-b4b7-9a7846872151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b4983-b790-4057-9bfa-b1e09813b3f7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6298d8-33ee-4ee5-9405-1a77a7bd1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03d28a3-9e8e-4e17-916f-84a1e5fdd50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77f58c-2d01-4f2e-a18f-612b69c2238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c900f8f-4426-4f23-8c4e-f9fb5a01c252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ae24d-0b42-413c-96b4-c81091b12e94",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4948f059-58f0-412d-8610-7741b83077de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577088d0-fbf3-4a0b-8254-7555da236a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad80fd98-8535-4f8a-ac23-41bf185f3d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d9fa65-4a87-4439-9510-59e1ed5d48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6336cfb-7673-4fbe-861f-c5502fd07061",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e89ca8-c5e2-499c-b798-db57a232b16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78efa184-a6fe-4dd9-9164-d7289a973a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11e40a5-fea7-4400-936b-4b11fe6c7e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9f9cab-71ce-4ebc-98e8-b972a07ac76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936c9d29-0e8d-4ba9-bf8d-10954a5c8c06",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25e680f-77e2-4d50-9947-ce4fc335fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c219692-7f06-4c72-8ef7-5fbaef671ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10299b-f3cc-4588-8455-28cddb259e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa9bc72-5658-4f9c-a5b0-2193089fca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d3a34b-d3c3-4de0-91c1-bf436577b95c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cddeab-07c6-47ae-8bae-808238fca66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fb1f22-825e-441a-bc64-4bb8a27dd21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acecf16c-b445-472d-96b4-ad8080e523c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "723397e2-4903-476e-8ab0-fb701c512af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf656e-714d-4f17-a109-92600688be92",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0908a53d-2e2b-4609-bcea-27902b61f557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3ea0e2-6447-4ab1-bba1-2d3c1e9143e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8117d4-2dc3-48a3-b633-9c8d8cd0486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df83e79-0e43-4656-8078-51b3a342f1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6415295c-15d2-48b0-8246-04b215eb03ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1e6377-50ef-40ff-9bc8-2cd6332f2e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7874f8e-eacf-499c-86ef-27ad49cc1dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe2eef0-5a56-4f7b-9915-cc21e75d8805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad71bb5c-b750-44d0-a666-98bac738b2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b6b284-ebcb-42cd-9d77-019ebac21938",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e92c26c-200e-4136-9936-5534dfb8de5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641ad668-b7ac-4598-89c6-6fa12d7968df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f0db5f-9027-4599-9d6b-d77c604afb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ae6909-450c-4ae2-8399-eae4e15ec144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9761d2e-e0c1-4d79-bb0e-22b56dcbcec3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466f614b-9815-47d6-8899-5a15962c4fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ec127f-8b26-4b3b-9401-666c824ffd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5295083e-2083-4d28-9bd3-bff490ef9c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f989030-5c5b-48a5-9fb5-4deb098827e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8123e8f1-fba6-48ad-a62b-21da9cf349f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743ead5-7272-498a-a340-5e007c3848c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18118364-690c-43a9-b8db-f811d72c09c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ef0c8c-ad60-4f06-9864-f8bc5bc27675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4fa72a-b90b-421d-ac80-85801733e7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7671e0d0-aaf4-4aa5-81e9-a67c7140da17",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd036a8-fb2a-4a94-be36-4c323d457bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b4ed52-1be4-4921-aace-0ae5110506c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ee36fd-ed51-4abd-b2fb-25b13abc9abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5323686c-ade4-4b7f-b1c3-3c4d406484ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d97941-e490-41ee-a657-d29c9e20d48f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8cb05f-3253-46fb-991e-3e507c16c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8233a3b-cfd8-4469-8153-0d41806a624b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b983d-7e67-411a-b5e2-59731c2d1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2c922a-4b39-4d71-90f2-7ca495f9d0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4501b759-a777-457e-9c8a-170d9be9ea03",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b5dd85-dd05-43dd-911f-303b19a07881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8b8a99-27ce-49da-92e8-8881825c222d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a295926f-d2e1-4891-844d-7fbe6d3d1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3d9912-6ec3-4f6d-84c5-7cfb4f11dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38f5fd-c075-4598-bb24-244ed5c0e9fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b37add-5df8-4f86-afac-b24b8099e50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f427f7-3afa-4116-a6c4-bb8eb238131a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c78a3a6-3e4a-4e8f-bda9-ef902f11cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f169e42d-8b31-474f-8901-aa897702f6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b1e90-2baf-4b3b-a20d-a1ffab5033e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d0598f-f5ea-4e12-b64d-7f2d98630c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28e5faf-8648-4235-93fe-33a64c6a854a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238fd580-bb4c-41c2-82d5-663b61e4b5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7c96b1-3b03-47ed-94c1-55054780ca11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e0a92d-73cb-4b18-af77-d2ed54a7e408",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c704a565-95e3-45e7-8b0f-9a7025ae19ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f2ae35-edcb-468c-a97e-ce427cb07067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4be9fc-5ced-4ea3-b5c2-aeaed1626e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f79d888-5f0b-4149-a298-f8087829ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835bec45-3f99-4966-95f7-6aedbd6fc943",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbb376b-26e6-4b71-b07e-80aa4eee31dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad3f2bd-46fb-4738-8f63-2fa2f09fe4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eee9c41-674c-4f95-858f-e964301cffbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1128f601-32c3-425a-97af-95a7a17c26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e7c99d-655a-4a78-942f-633c63f0da56",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1137c2aa-f80e-40ea-b08d-4c5f6615cc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845f652e-4c5e-4e56-983e-a9f64a915494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4827a8d-3d95-4df0-9775-9ce8e7a8ff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0a5ffe-a71e-4388-8e98-0ed18e0495c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216838d-5b97-45a1-a9ff-6c7369e1bf62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f879b-07c3-433d-87db-e075977594d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d712adb-d4a1-4d01-8183-27697b574d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffff6bd-51df-4a1d-85df-65e66a747768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35db236e-c8c5-4b7a-a4c3-b1fc49bbe1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0e9267-88ab-469b-97bc-b556e5cd331d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d415dd-6a67-44f4-9010-11d24321c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f6a998-b5bb-4778-911a-d469932feb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f33e60-7969-4edd-9d0b-e3dad21cf98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3932204e-780f-4c6d-b5c6-82629ef4d7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02334122-217f-4578-8a7b-9d668813c5d1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa90118-eb45-4955-958f-2c8deeda3fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3fa9e-e5e0-4ed3-a826-07fce6f50e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd9dbeb-e111-479a-bf2f-5e8f6ce6ae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f09a26-4288-4ff1-942b-95189c4aff4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93aea64c-6b44-40f0-abe9-639182dff630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba01ca65-b884-44ed-be9b-2cdde7908580",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc486ef-9261-4a75-ac9c-64dbf7a0bf42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06bdc19d-fe2f-468e-b616-8b9394e2a5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b3e77a-5efc-4173-b071-6e4e77b95166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20e25adf-1bb3-472a-b81e-0a129875e741"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4462425-2c60-4d01-8fd1-f3ec130cef72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe2c2766-d3e0-4928-9a06-f155a8306528"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b58a1f3-1286-4be4-83a7-97bf40f5a0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f293ae65-8f47-4693-aaad-2b735b17b188"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "647cdc60-229a-4c12-8a93-dc346862621d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c2b43a9-7acc-42a6-940b-be9850c48b8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37abe1c4-7e0c-42b4-8b3e-65f34788c9a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb0dadc0-3fb4-4ca3-ac51-f1fd964b70d1"
            }
          }
        ]
      },
      {
        "id": "b3fb6025-97b9-4fc5-b8e7-55da635afa3b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2c7fd135-db80-4112-bfce-0b0fe8cff2e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23269584-76d3-43b1-9d08-ebbe558525e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e82cd8c4-6203-4fbc-b4af-4125c1248888",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cc74c3-d688-4336-958e-e9851e7f6464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4888349-1e3f-42ef-b413-9597bd9fa144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b244f027-58be-4c57-8107-b7870cc37a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b48c1554-4c4e-46e3-b67e-ac5df34e7b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce56171-26da-4730-9611-c422f274c969",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb2030-cb91-4201-9b72-9c078fad3ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950f9343-e4cd-4ee9-8586-413a8ef47b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1e8522-1af7-4e5e-bb6c-29a39053be0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c8ae33-8bb2-44c9-8607-eb7887b62ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073b4d2c-3204-46ca-8c0e-47a7f8377e38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec32299-55ab-469f-86e0-c359e58423a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d59119-d4ad-4986-891d-309a5c4162c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853d4095-adf1-4e33-b110-c8620ed11645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bd93ff-3d72-41b6-949a-dc3a87424529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88316e-0fc4-41c1-8c68-80d878c8058a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f823a0f-2b64-48ae-adda-b20ede10a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3df572-fdbe-405b-a6eb-e00e6deb0cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5e207d-01f5-4e1f-81ad-f2dae836a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ed5475-68d3-4719-9c1b-6249efb978ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b8000-d373-488f-9685-b69940c680ca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903ac26b-c293-4861-b5a4-005c21874759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064a3632-8adf-407c-88cb-fd0b2fec7986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365b18d5-cbc1-456f-9b45-1e7598dc32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2777f78-15df-4ea5-a75c-a0543175ec1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c99684-b4f6-4838-9d84-d6831d8f64ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934f5bcc-e629-4131-a419-a76b897ee1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc722142-7714-4ea6-b2a6-5869f6849c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df47f61-81e4-4e65-b5ff-72cf0face93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b104974-e318-458c-93d5-ec8be4e8252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61635f5b-edf1-4b87-a587-fe57b27cde88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e19715-45ba-4d2c-a57a-5174845831d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6df3369-5f31-404e-ad75-d604f3a31d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c0981e-9c9b-474e-bc13-c3963c2e633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f71fbdf-cb0e-447f-8103-fd85202462c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313abe1a-76a8-42df-add5-567e5b12a59b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc6df8-1625-42ee-94b9-f882a202ca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db881b1a-b1d6-4a1f-b4a2-e52cb6a417f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b1a05-91b0-4a03-9d7d-71d848fb991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e321a288-d0d2-4ef6-98b8-f8c1e4849883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45baf6fe-4c80-4380-96d7-9582cf02a589",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3727509-d14e-4385-892e-8c98de02757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d674581-a742-4e84-9021-93bf37f07dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345bfa4a-e2df-47b2-bace-bdca2927cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c8ed0e-3823-4f2c-b5b1-077c0f6fcee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc5139f-7639-452e-8a91-522d731fd77d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b2e0a-86e7-415f-98e9-1ecb5b7655d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ddf749-6b7c-4aab-aa97-b556c2c8b863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523e245f-0ac6-4638-bbd3-a20da3cccfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59402598-0907-4c6f-8ec4-2e1a6573693d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f93b9bd-1593-4cf3-9ede-da6cbd64b080",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd45731f-3658-4bd4-bade-79d5de915585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf831eb-19e1-43a6-8483-5a305ce93168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b904554-b4e4-45cb-9eb6-2549e0cc7848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22cc29fe-7616-4d61-81be-211d8ee705b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af48224-a01f-432b-9609-f75904d20108",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f3ea7-36b4-49e8-9f4d-8642ce59befe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf22bf2-346c-4ad8-9164-78ea6ff1c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c56ce-dad0-47db-a7b3-45153836ec44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc2e3cc-291a-4fa0-b3eb-ec4c714768ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb797f5-18bf-4364-8ce9-ccbfd90f0aef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f522c822-c22c-43da-85c3-e7b7635d427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f215de-ef92-4d61-83a2-6e44378b99c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc45bbf-63b1-4552-bd32-52fa14253d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21d1a69-7119-4194-9a6e-8ec54f68c9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087f33a6-1c67-4382-b1c1-d43568967953",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc2df3d-b551-44a6-87c5-2d054f15cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf734ca0-791d-40c2-836c-ebc78c0b2bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449d063f-378c-40f6-88e2-5217001b07ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97235bab-6f81-4732-ae09-46a92d603cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f450c1f8-2642-4aef-94c4-48529b8044d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471ca1fe-fa62-44d2-bb3e-ce7e6d9e3fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db79e803-41d3-4e70-bd3e-9dd1358d4abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe789bf0-fa2f-4e76-8709-0def4e553b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3289ba2-2bba-4fc2-862d-91216cfca94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a043ae-1291-4be3-b55b-d7c949bf8e43",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea4915e-40e3-45a5-8cf2-0d44e4c0dae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7de133a-5512-4d36-981d-09871ea00141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96cc351-61c2-494f-9858-1be20f347f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd6968b-a54a-471c-bc2a-710ff63b0e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb38d812-c86c-4c9d-8bc3-91b2cb0115cd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42d3239-1d10-4b44-86ea-77bdfb276f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e4a59a-d741-4762-abb2-f4507208a2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d18251a-4086-4c98-b87d-7f2b65895bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "44072fe8-2cbb-4572-adb6-c76325145104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e8fe33-26da-46e2-a843-9f129972b3f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0030e34e-35e3-42eb-9922-41b1fff2960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696d0535-d02f-48a0-9d88-a4ad2b788c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9142864e-2edc-4790-b6d0-a69f1eaafcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a097af8-4468-465e-93c5-8930374f334c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afddd43-928b-4137-84bf-5a4ff6d65f33",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa40d67-7a9d-4f0a-9faf-464916696069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7091fd-1093-4b02-af9f-48e22eae689f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f041afe8-4551-4adb-b37d-0716dce477e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7666b3-b655-4c41-9943-526cdb7cfdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0621fcf5-a496-44d3-ac81-287bc24f7fbe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed36bd6-599a-48c6-be47-28dfffc8f9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2617a1-8eb9-4993-bd58-100b267bc8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d59efbf-14f7-41f1-83a7-fe9a938165f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8eb408-d77a-4cb1-91e2-3126dbaed28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd73ed44-19f8-4c04-aac4-024c666a7e5d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193056ef-3693-407e-982d-f88af3204772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fc9cea-d89b-4e64-8224-a668d309c8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c798b-0821-4044-822e-f20d893121d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58c1ddb-2de5-4847-a780-cf43daa6a0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c8f2e-2c48-49f3-a573-9091bb87687a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6598a6ab-55b6-489c-b9a7-c35f140b7d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93c5aec-25f9-40e8-9cd7-b64dfeec7e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc207e70-5ad7-4237-be9b-dffce5b7d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ab3da6-2859-4da9-8a80-27147677ca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ead5b72-aaa1-4045-8294-698332470948",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34d5083-1a20-4273-af26-43d5b0711525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d482a4-f14f-4fa0-a222-45634800da86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4de842-8172-4952-a076-8c4a705152cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2aed2c3-a2ad-4d56-ab7e-41ff7b0c82fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9613bccf-748b-4639-ae3a-5aa6b0b5096a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a564cb24-c366-4364-9047-2c2906da0958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1b63d5-e6b6-4f1b-bf93-94d263883a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f599130-7b3f-4f48-8091-9aab21755238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fbd739-a6de-4f4d-805e-033d3e8088b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a2cf72-45cc-4feb-a2ca-060b41de9743",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28d87a6-e3ed-45b4-ba44-dd6f09756932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adb9369-0b7c-4976-b334-d8723565f7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8c7f62-83be-49ae-82d6-dfc97c123d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f477e8f-d407-4439-80d6-65232cc8096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef8a38f-e397-4336-808d-d7db807a7ca8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefbc9c5-231b-4e99-8b51-1e059ba0a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33560de-4eee-40fb-8f90-6295c2dbb743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75756bba-7c81-40b8-b92f-d961e23698f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "564536f3-071c-41af-9707-8aed85d67332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c95dc1-262e-4ed2-b1c3-eb4c297620b4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4220e5-a7a7-4bd5-8d20-8c43cbe02db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d2a768-5f77-4737-94fa-2dc2e133cc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad538254-953b-490b-94e0-82e77d4a09a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25651dcb-875b-4945-9fe8-0d7a66e30450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e54d52-b3bc-4b95-af9b-c367a1590c8f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adcbbb2-1c90-48a4-9957-98b922329479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff5fc6d-faa9-4d87-95d1-67583b0b970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7725fa66-601f-4de6-9e1e-0b881714d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc11630-dcac-47d6-9cff-23528918fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49685fc-b951-4f21-aabc-cca6e57daa37",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf1d04-c2b3-4f13-a998-98fea9200d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2731e908-9199-4de5-beec-c0dbeaffd632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b7d51-91db-4c77-a46a-d501cd988be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a8ab19-d760-4e18-b184-bedc5bd56b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e450551-213c-42f5-a097-1a6f7138d9f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2207514f-dc23-40e3-a8b5-2b0b78992475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d3cbd9-1dea-41e4-a111-1e8eba8bce50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9737f33f-7599-4405-a3cc-bfed391e9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b85167-c5ed-43b4-84a0-3452b514bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c227b6cc-9ce3-4fc8-9653-ff51147d2026",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3ca61d-5f3c-49ff-9290-1ff4c4933728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430d8c51-7f1d-416d-b294-64c0899da938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8e182f-905e-4ffa-b5ad-48a0ff904c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6309efc2-5c18-4c74-a227-267ee653a323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690e6cec-83fe-4815-8b37-2ff52af02396",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734a622f-5c68-4230-b200-41a0267113ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff93d49-6af7-45ea-ae96-01a6d4f0d830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d45e96-870b-4328-a4a1-0ced396a68c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "725c43ed-adbe-474f-9f6e-4ef10f0d06e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5eb528-f298-4573-a1fc-a721e91d2ccf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a228ac67-aa02-4f7b-ab0a-a898885b7933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152bc931-05b4-479c-9e9b-5f33373592b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0967ed-6dab-4f31-9f6f-475a20e4ab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc2fa7d-9414-4631-a222-fea599296345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811eccdf-0809-4f5e-b900-2610b655c610",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6db196f-0c12-4453-9370-dd216c24fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e2dae1-7982-425d-aba3-e1c80e791cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aee0cf8-175e-4c36-b46e-485f7e99f7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39d6465-2cdc-4295-bd8b-12fddfdaf549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f829d6-a1de-4bbd-b5b1-5770a0a6067e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa0c7db-e08e-4134-ae65-14e622b131af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378eda6d-0c99-4ff5-82d7-a1f9bb423c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3befc3-dec9-4b10-8b18-becc920a0608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d07d648-83ae-4e88-8317-8ee1bca8d050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abbf372-0ee8-48cc-b81d-d4407edea5c0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a04f63-a2ce-448a-84ee-241fe7a5f391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438593ec-f020-4eaf-8c12-f8124702f05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27427df-4683-4c9f-9b6a-e762be618af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69995664-1d48-4e65-9b91-521d9d41dcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b474b3-98d9-4089-a191-a76e7afaa2c3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990dd610-25e0-45ec-ac20-9880fc19f8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55057cd-51ca-4ebd-911c-806434c3f182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcefbe5-cd2e-4495-bc39-a8c2fb52d952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f153d420-df42-4e86-a063-915bd62dce49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a10b15ca-a6b6-42d9-943d-c3df4d9480be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f7b9a2c-6071-4ef1-ab9f-b39f0a7a9d71",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcda64b-2879-4b54-b31a-7b979b2e5b9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0090c9e3-3b8a-49c5-a4f7-dccc723c4ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ce07c8-fc2d-49cd-991c-3fb50522a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f49ed0b-4660-4f1c-a522-e3de2c6c0d89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cde9172e-d8a6-45a5-a41b-08921b43cff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44e32e23-9c28-4424-93f0-d03a9d992d71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a5090d4-f941-471a-8316-0dbc598301c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbde746d-1835-4e65-8c1c-f91a553d70ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "985313f5-07d2-4ad0-a9d4-2bda3d1f78bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5464928-1a8a-4673-b2ac-2704552ce0ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf4e741-2a52-4780-81f6-e5ea2314a65b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82dbf4c6-9492-44ce-8b5a-bcaf07be3080"
            }
          }
        ]
      },
      {
        "id": "9cd81c5b-7ce0-4a2a-a101-789d32c3f59f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9376321a-c5d9-4388-a73a-f23379dff424",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55772347-78ea-4ca4-abf5-f40b0f9bcc5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8560a47-e109-4e09-9d3c-cd878cf454ee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b07c093-79fd-469f-9e8a-dd3fbd1802b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4892029-6e49-4466-aa05-9c421683694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7f7c42-609e-44e4-93f7-410e0aad2bf0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c25e0-9935-4d57-a853-6e7cbbbc2abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0298c461-5e20-47a8-a368-610a890a720a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51ba6c-be10-457f-bdbb-22b659f33483",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d153b4ce-e678-40c7-ab8c-a7efe6971fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e372a348-3bf9-4ec9-915f-3500b3a250ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67deeb97-6b37-4c7d-ade3-79fd3f54121c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3173c48-a6c4-4343-9d11-1eff2da2c0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac9c53a-fd4d-4042-9313-e07e68d419da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e49c7-bcb6-43d2-889d-8aa8b6b1160e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6205d854-46fc-4f27-a8e3-c86909e699fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf318afe-2bd4-4f80-967f-2e0adfc024d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c7f30e-2799-41c5-899e-70027cdc4eeb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d154050f-6bd8-49ab-abe5-2f0a4fd1eea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9f8744-2675-4ca5-a5e2-d795529d5e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588fbca9-fcb7-48f9-91d0-8a0b13d4a190",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3cc058-5c84-4749-a681-0cf7e291dc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6445d307-af1c-4f5c-b6ab-1129d527a87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a3fe50-7ab5-43a9-a99b-5be593e49a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f29e27-6d00-43e9-9181-560141dbcca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05524ab-1713-45c6-b289-a8850feafbec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b731debc-f728-45bd-b9ef-fec6251d72eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e367a5-f5c6-467b-aed9-f5ca8f548399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847d8b2-6ed4-4fa0-b848-a34df966471d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8124b25-585d-4cd1-ae10-f710ea92fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e8047f-230e-40b9-9c79-648495448248",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87beec34-a213-4b24-8d69-9bfe6d5dc74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7278d8-21f3-4aba-9c90-a787a326cc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b0cd5e-f8ac-4a0a-9603-b4a34c1e99b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117a112f-d48e-4ec2-aeb7-b140a6aaa932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b0eeb1-e802-4fe8-b638-4e3b867bfd02",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad565cb5-8c55-4bfa-a321-4240e385de77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb536518-3007-4298-80fd-cbd73ee7df77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee4eb5e-2050-4d09-b648-40af6bd55955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859869f7-7770-4faa-8fab-a17edb5053e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f3a50c-e5b9-4271-a311-57cfa8491b9c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ac6c8-5598-4d5a-83e3-81db1ff4242e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa39d6fd-5ddd-415b-8801-5e837bb0aaad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c5a319-e578-439c-b8d1-ecd263c693a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f1ec85-017c-4864-905f-eebd09be34ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa6bfdd-af54-4a29-a6fe-ff2d425d114b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfbecbc-70ef-49ae-8da8-8c7a3fd27680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02322658-e720-414b-82d0-1d725ef97dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5ac61d-f7eb-4889-90c7-842175da9d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e59b90-ac41-42a9-b4aa-85e0d7f6c074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92026203-352d-4ab3-9cd6-6c6b49c36122",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd51218-8f82-4c32-9212-1c12b675748a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c96b17-8a3d-41b6-b094-021ccaa7572f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d663a054-0acb-4f5f-8443-fcfa04e67733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426bb233-6f90-4711-9e81-9732f524d139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b327b45-f842-4d78-902d-76587f9b835d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fc97f6-7fab-4529-a74c-26cd68c5d502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467f4022-d29b-4d70-8651-b8f9560ac133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd002c-19eb-465f-934b-1c18e30dbde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa08f7b9-33a9-4aff-8a72-174071db5f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031ac4fe-8568-4c0c-91ca-aa3296479d69",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964ffcd7-8225-47f4-85c2-2fff6cf2ff34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb9cb22-3039-4335-b1a3-0e5b5acbcb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5135c439-9d5b-495a-aa5a-ff6dc31a4911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b29dec-167e-43ec-8609-95cf8d076972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe356c10-bb8b-42ba-a250-5449434e9e01",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4653a00f-762e-4c19-9d88-58069c1c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f256895-f428-4062-b113-e07697a90b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32a73de-e80f-4782-80a0-7ea21ee1cacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8bf347-674d-4de4-8140-87820a67ccfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0319c46a-5f8f-4369-b38d-94b6fc67a188",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f05df5-a015-4e8a-8d9c-9f608074a377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511e53a7-3c0e-4877-9a93-31b64a8724ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63015153-2f22-4c37-9f39-8c0988bf68fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568498fd-49b8-412d-8d37-79bf3613650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb646177-4a07-4f2f-bcdc-a23d5ab5a01d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8ece27-10a4-43ce-892c-3be90ca3a5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d65a1c-4aa4-465a-9096-b5ec3909428b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f2f6e-8295-43f6-97f7-7839cdce0758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d096d37d-d087-4926-974a-96aea48220ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6866e16c-6266-4b88-bace-a387892f82c3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e16b266-6b3d-42f1-b9d6-adbfa36ad880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c94aa6-a810-4f02-a4f3-80217228d1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e1f114-388c-4183-b64e-f129d73cb042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80fcb1f-1c3f-435f-bdcc-58c29b3f2fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3fae41-e6de-486b-ae26-c95ce686f2a2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc0a7b3-9b44-403f-a786-4185e45c4a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334f3dc7-2677-49cc-9454-4a8ffc09577d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fa1608-ad6a-45d4-9bfc-b46bd3c6de4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5700f8cd-96cd-4951-9d54-a13c875bbc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0d52b6-b82d-411a-994d-370e91e2cb61",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0de691c-f6cf-404e-9d14-0e94b801973c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfee733e-c4c5-42f9-9eb3-b3b54e38e509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dafbdb3-303d-4f17-9393-178858d50a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50617778-a23b-4ca3-86ab-90f8bf3d985d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce640bc-b02d-4524-9766-28473b26911a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48cbb3a-0a4c-4b1b-bbac-985b8c81dd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97187c64-c3c4-4025-8805-3c319a86f00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859433fd-73ed-400a-a364-a8ddc4c76339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8d5427-5eb3-429f-ab01-5296f2557ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cfd6d5-2ed9-4836-9bf1-ca66a139a6e3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c33a3-a6ef-4f56-bc16-fbd937a167b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad12d4be-c578-43f8-b337-0cb5ac7a6949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e8b7d2-b9d6-4ffa-8acc-b2bf25124412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bc9894-dfa1-4359-96c8-e71b097c3132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde8f7e-c29c-40ba-a083-a07fce4377a3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ecc028-f74b-4aff-86da-d94cb0b31751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51de72d-b9c1-43bc-9fcf-ac8c0648f433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb03c01-43a6-49a2-9902-792385666471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15bb06a-c3e0-461d-a9e5-7d2be8716342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9598ed46-c1e0-48f9-9bce-94247743c3ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40284b4d-137c-4fa1-a9b4-5c4b2762bb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c82bdcf-8a60-435a-a802-aa2a4225cf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ab4578-f685-453d-8983-f8e5f88b573c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8227071-cee2-46d7-b45e-262e014caf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad70c892-38d1-4c85-a36a-ef5d05d2f23c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f055c3-5a35-4300-87c5-c3a979e8ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1bb212-0a8b-4c2c-b598-ae8359ff80f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c947e-f740-4d2b-8a0f-c6721ab0c219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a58940-d8ad-4467-a267-349fb4323a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f648a7-8186-462b-b498-e3c6700cf779",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fddf810-15e0-4751-baa7-1680fcd0679a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f10be81-6aa4-45db-a163-f2b935a5089f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573c1c92-432b-4550-8d77-bbc485fa0183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c37491-a47b-42ea-863a-d47d9cff8e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc6fbbe-dff0-4849-a3e4-ac01c350d474",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689e1e92-9a8f-4eba-b009-5ae38bf80d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf852a9-7c31-4636-8f20-b814b02d1459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114423ab-0c50-4205-bb6a-fd025387ba63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba2debc-697f-4a6f-bb60-ae6464111a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e35f9-eef4-44e4-afcf-955afae532c5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e874140e-82a3-4ea9-8475-1428de8bd8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18325ebd-8ce2-489d-bd39-fead92682541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99a3fdc-7b76-46f7-8432-d1320a972745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d32eb2d-5c43-45ab-bb29-c9158c5efbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ddc42c-7a7f-4700-8cef-82ecfe6f0d8e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aafe5d-75f6-4874-bbba-5e2e5bf51a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c4fda5-6820-493f-94c9-bd1ba75924b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5672a7-86fb-4601-9b34-c6538866ca72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8120a46-1ecb-4896-b8ae-71406097de02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9345e-e7e6-4979-8a06-4c489199622b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d844f460-de43-425d-9941-24ab47abce0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c94b7a3-3be6-405f-9bde-92fbe3662ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14979a28-0437-45bb-aa39-defc6f0f7d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3ce8df-87ef-4def-b070-b56ce5e9a11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd93fb-d59e-4401-87d7-f17345b1d8f0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6165d208-e541-4516-a17a-b9564c409d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6313276-dab0-4b03-b407-8565845c0178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529c4874-a75b-4947-813b-2a9fe1ecf5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e328a159-5d0b-4e26-bc46-05a71ee668ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6b8b21-98a0-449e-aab3-6675a3a7a44a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc9210e-9be5-435d-bb66-8d6e65bf94d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50189720-3d50-4990-a48f-6314627bdf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5946d-068b-4564-8671-165bd434523b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041ba3c7-a813-4db6-a5c1-5fe2cf9975d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d36fd4c-292e-434f-8a50-f7ac7d9f9403",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8cb2fa-8032-4781-9168-de00cb82e22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb77baee-5602-464d-9823-7a9cdd3e9de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22124b02-8879-47a8-8a7c-80961adc3d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2880811c-0c40-4351-a369-429bc87e9bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850964f2-0c55-4b12-ac01-2d5d1900355a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441df39-4974-4c75-87f3-38f9d0184882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa78de9f-7d17-4516-bc09-41f416fa385a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4892599-59c1-4e32-bde4-a47c084005d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034a242b-153a-4798-85ec-753566be6fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e807b172-04eb-4ead-a69e-0fcd3d3178d8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c436e16-9237-406e-8f31-a71cca710a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291d6ad6-19ce-443a-b96a-d9006b3bcbc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577a77d2-49c9-4a4e-99d3-7f946d445408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bbf575-b66c-4e49-b81b-aca739da9bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bd7cf2-14f3-4778-8fd1-ad395cade10e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84979e33-c2e4-4221-b996-766ef430245a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fbb76b-5460-4560-ab52-5e086aee6166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a9659-1f0f-45f2-b82c-5367f44f6153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84afdad5-6c81-495e-978a-75c96f9f3818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ad52e6-2645-4c03-8d58-56af5d776df9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8ebaae-d5d0-4095-9b34-1c2ad7a36a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e8cf13-cac7-40ac-955f-b9b6be1ab0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9addf5c-5f0d-4b8b-80c3-b38511c3acea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec053817-9bc6-46cd-99ab-8b011dbcb28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f06be3-b945-40b4-8559-419546d4fa9b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae95d58-5ed8-4004-9154-81b517214a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905c3c25-7683-4097-b9de-a23ff1089d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a18735-01ab-4f4a-b655-27bff34423f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a985c699-d9c8-4b4b-a78d-690e2fd0baad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f64ebb-2656-4d5e-9b78-6ed7bb7b42c4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608da0b6-8b2e-443f-b418-3efc7eb8d9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b452b427-5033-4753-8c74-b6300f7d0db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931b2802-71fd-455e-82f3-0626124fe430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521a1e94-4b49-4213-bb0d-76f3320ce4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b13df45-c1a2-4b58-bdf0-1ca3cb017fa3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba00ef86-f08f-4c39-9efe-2a5ee5b2c4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d167ac7c-8133-4122-ae12-dd1b8e387966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ed755-b794-4bd5-b6b0-f220775e2dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966d777f-24b3-4111-a11b-ba616d748c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cda4b53-a38a-46f8-bd0e-a66cd1a9f38d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d07a2d-9b62-41b0-b0c1-b569ec553945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c66fd5a-7c35-48b6-870c-04454c853861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e435f502-ae60-4654-915d-ab49d2fe3112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92975bbf-ff86-4b7a-a8bd-49d5a19acd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e4f77c-55e9-4b56-a318-2db8a1204d38",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196009fa-6298-4e1d-9771-06a7bd8acb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76377262-d9e4-4480-a2fb-7ab8c5082fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83865138-8ced-48f5-8a30-3b31a662cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2359c5af-7e28-4fdc-84a7-bfbce55577a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df00c3e0-3b5e-4885-a93b-432ff16cf731",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8d38c-d1e3-47b4-b07a-bf9d14afafce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a728f07-3226-47b7-866f-cdaa1a8875db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e29602-1856-4a22-a2fa-3351759ea009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74adf11d-3e43-44b4-bf11-2169337d0f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf40a60-b700-4231-9472-7caf16c397f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193595f5-b3fe-487b-81da-262aaaf7e3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede20685-1c27-422a-997e-13746092e90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8d0b44-0304-4dc2-9e35-a366dfac3705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b98d6ad-4582-441c-a916-0883767f7077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb73bd-0b24-4e31-a50b-22d0ae49f71e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb726e7-7d1f-4270-9c6d-b6ad4f100686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2767fb9-7e8d-41b6-8bcf-456e4b8cdfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b67955-2cf5-4c5e-b6c9-389408f987bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4fd15c-71f8-4672-8903-e25030836ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117a7392-9137-49df-8bf2-3b0ab7e7cf91",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dcbf31-b6b8-4336-8c38-51de9a899300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2fb544-b3f3-40aa-a2d9-55579a4a6f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e914dae-e96e-446e-b6eb-b260091c1e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a31110-d938-4c10-8db6-94e5634ae5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ef2dc-98ef-4a42-91d1-c7c8c59bc8d8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aa0bea-8911-49da-85a1-9771564350e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4570ba52-f5ad-4272-bafe-381d34fc632c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a70eea-3532-4767-8296-56e1e09bb276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6ab586-b23d-4c87-be99-8cd6835fb796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71327283-815f-4121-bcb8-c0ac3db80806",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2909c-75a3-467c-a8be-dc359a08f34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a842c1b1-8683-41d4-a244-aa10b05268ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42a7b44-0a67-4a29-836d-a75343e4344e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294666bf-a302-444e-933d-8498cc313e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41b3af0-c6cd-4803-9ef7-27a4a0c2d5c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405b2b9c-5d2e-4786-87cd-f5163ade8bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684ce813-fba2-4b22-9c91-1053d0006e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f7f3f0-e39b-441e-88f4-ecaa9e38808e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44caed8f-7d72-4af7-8190-3636928ab945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ae8bd-5434-485f-b85d-3990c0280b8f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293621c0-1494-4cd2-ab8e-dd7d262df597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad120f3b-67a9-4aa8-ae18-94f82bda22bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57045cd5-90d5-4708-803b-d365cd2775e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a955a826-00d7-47f9-9689-e3136bb57ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30681dd2-fc6f-46b6-b05a-90a8d94163d9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009af256-8db8-4391-b5c5-89963a9fed05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786e71db-db25-4cb3-9dc5-ff9654840e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e728b7-2550-47af-a64d-8a0b3da4f6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16136a15-a958-411f-896a-2ce7021a8445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9325637-8f38-44cf-9c0f-6ca3e330c3b0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad49fa3-8c93-4dfc-9a70-cfbe170e3e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950216b0-d6ce-406c-8a5c-9b47dd1e31dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bdedec-00d7-43bb-9822-95e2ef458bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837ea32f-a6b5-4d9d-b88d-af723c30e9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954106c9-3489-4ab0-9d25-0789f9d13769",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afbad49-3a26-4df3-bdf1-49e188a1703a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2012fd88-d70d-4f7d-afc0-ba065f24d5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9100ddcc-6d97-4585-8d07-f796bcfc9f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b19315a-ed2f-45d9-99db-2d14d10f7cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f0b947-a0a8-4143-b717-3d5372a8e7df",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76d322e-cd98-477a-a3a5-a00a394a2bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e60a74-35e9-4d2f-82a6-89f6adeb1eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7582f059-e8c6-4e14-8e6c-8a060fb3f713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0864f7-bd8e-42a7-bf06-0b3f818cd6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf224e1-26d9-4053-ab77-624052b19677",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587ef276-efbd-4511-8854-93108f920278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e44555e-68c8-411a-8784-4a021ac1a741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d3fa3b-cdcf-4033-93f5-dcb36b425279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bda421-6915-4e26-8c16-d2db66a5df2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3ea33d-643d-4603-a00b-e9618943d3b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511ee278-2f38-4fa7-925c-9148b5aaccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c0b0bc-e53e-448e-9c38-22fdfaf9ad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8356c68-0b65-40f6-86e4-d55de03cb542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78affb40-2943-4e77-a071-bb64a43de16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39da9478-d2b9-4a6d-bcbc-8414479999e3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447eea52-36c9-41fb-aa81-6b604a89a6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9097cf25-febf-4971-8ed1-a63233f5cc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1182ca85-be1a-4531-97d8-ba8282526011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad80771-4ddf-4b25-9f9f-2d32857339bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9930c4-683e-42dd-a403-ac4c2b97aa6b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15b3165-f03f-48b4-8b3c-f202848e2724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21800221-53e2-419a-8a96-3e926797ecd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b6921-8f6a-4aa2-90c6-d270cfcf82c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fd2c78-3dc3-4917-8050-db8155f8d1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1638c45-f8b3-4968-aaa6-64ffafec4547",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eda947-550c-4425-ad69-d42de083bb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f2348b-75ac-482b-a102-8f32e4397a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbbe795-707c-48a0-b931-b02d8146d22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86333d1d-a807-4546-b20a-f96302123c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e864e2-e085-42c8-bfcd-427f5add99fb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2550922-b97f-47cf-b5a8-0247492050f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be367b2b-78bc-4f99-9df7-b3c6f730674f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a52ff9-a3dc-4886-ac59-4c8a810d34c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35973608-b82b-4299-8691-09016a6a4beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b8dc02-366a-4640-86c0-381906a9eee4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e61b1bb-9a69-4886-8129-a88d66371a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283ee0ea-f5cc-4d80-b3c0-f48e399e589d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c414ee9-b587-4acb-8961-27060f4c2026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affd6d4c-c48b-4c8a-b421-a48a691b7feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528f6404-0140-4edd-bfa1-be36e3bead23",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24cdb90-4495-436d-9d27-578d64382936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af82417c-ead8-4b35-aa40-7dc3b05ca125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07d40d0-8ddd-41f5-9a74-c6469146f89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c43e5e5-5640-4b82-bbcf-b43bcd7df4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d63dedc-fbb8-40f7-9ca9-0a06d2710a75",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79ab39d-2022-4dfe-a722-c028850906d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d15697-e27a-445f-8d65-8f2313d9b953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80793bc-eb2e-4e7f-a916-04182e58e85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33afb990-8028-426e-adf5-da90b8a8c5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb7fe3e-63f0-4917-b264-43ceeb8914cb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88560432-ec1f-44b3-a778-9db75ac2a711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426aecd7-eb2f-4314-b757-2fa7402a3cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5de480-8d73-4e54-9c21-81ee44b4f3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6a1586-b757-4f4d-a54b-ea5dc2ac6732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88f51e7-1750-4875-9fc2-b317e5f2eb4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9735996c-a488-4617-b4a9-661d47854ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9202997e-0b8d-4626-b223-db5b09e9058f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f805ed-8ebd-44a8-944e-d53325f47a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87e12f5-be32-4e1a-9675-bb864fcb1aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589de975-d911-4fe4-b5b9-2ba7ad1ddd36",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec391c29-bdb0-414e-a805-740bfe3db64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1593b536-c509-4302-8e5f-9fe453b39209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33a6c71-6e24-438f-b1b3-bf7183ad222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d37601-7ff9-45d0-8ab2-237ac1a2a305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde0a402-76cc-4e0a-b47b-9bc31576133a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146904f1-0c96-432c-afc1-4bf89fb402b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d355747b-d356-4a36-bc9e-ba49a47a2068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013be1ef-b8b8-4b7f-907b-271bf792b299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66858d34-f45d-4655-b349-0e1a6978a177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ebf214-bdea-4e86-92fe-81bf389f9cb2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac2ac74-5995-4851-a05c-da38d89ebf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab49abe-0514-4c16-88cd-cf9bddc2c83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fddcc0-17cb-4fc5-b91c-d9e2d7669661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef7ced4-cd67-4491-91b6-57ab63665e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a969702-9301-4adf-ab6f-57cb5bd481a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5908bf-b1d7-4c57-9d68-6dc2713c380e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8507d883-e07f-44f5-b66f-e182340b85a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cb9aa2-bc0c-4b0e-a335-729893c95f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9710ecbf-efd7-4f57-b923-951ec2ec33e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967504a6-90f4-478a-8ccb-fadc960bb656",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1458e-8762-45ca-a24f-19a07493f81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e961fc17-6587-436a-bdc2-0e11fd444ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df26f32-5dc0-4993-91c1-f03a7539426d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a84002-4a83-473a-8bec-0c1d227c3ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca321173-166a-4d34-b94b-75b58d512b5c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a5f34d-8fe9-42a4-9782-485c714cd8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff7bcc0-853f-492e-9a54-bd27b4ed9358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88e4cab-e2c6-4e3e-aa1a-f9ac0ad4debd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ecb2de-5175-49bb-9896-3bd4caa54467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307ccca6-5247-461f-a89d-f38988d31fcc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b8e202-b0c3-4f8e-a4ac-8c4660e409f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f189741a-d151-428a-b10d-fe657e68b7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355e792f-0396-4e37-ad47-f75e16f5b5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f72975-19c6-488d-b547-7a8d899d5955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927bda29-c57c-4609-a63e-be2fdfcca78d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf802066-b010-4890-8810-b7595ac19fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c944d64c-8853-474f-b911-755154d91cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86319f81-5468-417f-a233-ae45f019ee00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b021542-42e4-461c-8388-3e118892b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0920c2-6998-4ae7-a8c4-5fe3b1705b1f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7145ae08-ebb6-4adb-8ec5-cc6dc887efe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e1b217-1707-4c5d-b7ae-85e558dcf404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd09ea13-b160-416f-b997-eb8af55590f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82f79ac-84ba-493e-a124-07a5838b415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5201d3e1-64be-4858-afdf-3dfe22e8d0ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1912c7-3465-48dc-95b1-06ba136260f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60859b5-491e-4561-94d3-9d774c6ae561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8031ac-42dd-4d09-bcec-07b49493dbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c2a3dd-5cfb-4c19-bd8f-de7f66466168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc35d006-c48d-4942-ac25-ce3d0ed6ce9b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faa42ec-0b67-4f8d-bb33-96916c395d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab77d156-a7e9-4264-94e1-a0a75a96936f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbb5586-40bf-4d71-a5a6-fdfda88ff150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45af1295-9c13-49cd-acf2-1f9b359dd603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b6b039-ab87-454c-b3a6-8655641477c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69bfbd-29e4-4d91-bac4-ba35c45da257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6723c97d-e98e-4ac8-b61d-0136ebe6f8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc52d31a-43a2-486e-976e-20ebaf65bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc02ed-673d-459b-b040-a7128eb7a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59123f39-0853-43ad-aaed-0b4a81bae00e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a1f376-039c-4479-a59c-75519ef59ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26efdb6d-1b2d-4140-87fc-8bb74f00daed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e3b36-a117-411c-a6ec-480d51ca4066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cf8ebd-32a1-4e88-8fb1-42c53760f304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf13a303-8d31-40e0-a772-5cf9396e5013",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadc8ae1-8969-4f3b-9d39-20b237d2047a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e546b2b9-364a-49e5-b3ca-95d579bc9b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07de5acf-d3d4-40ce-9bec-c2331a947270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82f7e13-bb25-41f0-af7c-d2722b05887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e818df-746b-46df-8fa3-9397eb4219d5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d204dfa8-ae4e-448b-a622-6678da70d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a34901f-8d3a-453f-8f3f-51346154a2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989880c3-6b22-47e4-b8eb-a7c6cab7987b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457ebf78-470e-42c9-adaf-75ca8aea1d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b438e895-0d5a-4293-a108-a9def7ab7cb6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c3b18f-aa5b-49a6-81b0-d6e8c8d69b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2f2680-8a2a-4d14-b936-91619f6c1a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95a283a-e6b0-4a83-a700-4ce67ba5d872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d85a0b5-afe9-422e-b37a-388ae04d860f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339c9b68-44b5-4658-8cf6-bc44697f0e93",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cb71e4-92b4-4811-92e6-857f714c3070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7025b764-1ec8-4d10-9358-19c5fa78c493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0f402-2f91-4e9d-b806-a94e47175b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800ecfa4-973e-4b0c-8a2f-cdb8ec22387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04156281-8f6a-4d68-8021-546ed4551ec3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f9e91-5e96-4cb0-818d-7618136da872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3025bb-949a-43ae-beae-4ec5351cba9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b83283-c06d-401c-bac3-1c461acf91fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318a9d14-1ed4-4742-9744-208e73d695e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6755e3-d31d-4c77-bdbf-31a109a97c06",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a748eb-3f4c-4285-992e-29abb229cd94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41cc39d9-05d8-40bd-9feb-150023f5f253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0427f-d4a7-48a8-99e8-c05938dde288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1177724b-fa42-4837-8fc6-d1b65f3f8ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19fd624-313d-4590-8603-0d6a4e1590a4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278cb3d4-b3cc-409d-819b-b4f76f9275ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b994b589-ff01-4a15-ae10-e89321f3da62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f44245c-5ece-4fa7-871e-53a3688a884b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80581d2f-3ea6-4e95-92c6-232a68fa5763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8115197-ddcd-4124-8843-d939f4780985",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102a744-3dd3-4cf3-81c1-1fad644522d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd105df2-8737-4d3b-80d4-f4dba5ea37f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f7ee32-ad4c-43bf-9b68-496512fb599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438ec4a0-7bd6-4861-90cd-10124873caea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82548ca1-0d62-49a2-9339-3f209beaedd9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d544fbb7-413e-455c-b303-56f19e425530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4dfc93a-9f0e-4b02-b7f3-c853f4df9ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eec38b-d86a-4229-b948-bc08094bc411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab50139a-9d44-4a81-8d3f-d28afbefe2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c2c43f-230a-45db-aaea-c341c36f7d81",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99954aa-0fd4-4712-8685-a93b16bebdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c04da04-c714-4155-8f29-f2179f820639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f24703e-5901-4824-9fe8-57c76e94eb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed35406-8b08-48e1-847c-448bef6575fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008f9c9b-c4f1-4c2f-9383-5ca30f53834f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929eefc9-a78a-4a21-a6d2-66fec6e067ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8afa44ad-6062-4380-a7fc-c66e97f78a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0587f6b-f109-41a8-ab1e-16a76acf5c2b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ba03f5-b16f-42f3-9c1e-073835c61dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94d2bb0-a0a4-4f1f-84b2-547a2043723c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66080ee-42d1-4789-b62a-9ca96ea5b441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0fe9e5-b19a-4487-8656-008b67a43ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeaf9e5-64c3-4032-90c2-2da73cfc8b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966efcb6-00f6-47c7-859b-d531253233ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5b54fb-17d2-409f-93b5-81c428955538",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63cd779-4339-40d4-91cd-42e3aea09d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250cf550-2dcc-4ee4-9b17-be983e764424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c691a17-1517-4a5a-883d-e3527fa5fa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84884c7e-79b4-44e1-a793-f99e646de5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad28ecab-7589-4f8c-8f0b-df388a174825",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc70dd1-1302-432d-85c7-aaf7d0221023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69c23b6-eccb-47b9-a76a-1f805958f6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc7bf83-83b8-4bbe-b514-e3116ac0ceb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80940f8-ff3c-4142-950c-c66678f3ada7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17ffca9-e150-4c83-955e-3e456266164b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac52cfa-5149-4da8-a8a3-9e4f150f9042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10350164-fd60-4682-a2ce-23cdcd039320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99055edf-c1ae-400d-be27-06e63e7dc92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bc994d-0f6c-45e6-998d-b1625ddc6faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55056d3c-f3ef-4457-a7bf-725b9689b3b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045b9503-a234-403f-81e3-9efc97a55c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4abeb3-ed5f-4805-940b-6772b30480a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ec6c95-b6d2-44ee-b198-ab2ee474933a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b0b8fb-d759-4490-8238-a952ecfa3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97260b6-ab0e-4d51-8552-4f4ad5d209dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7d4ffc-fb70-471c-be9d-8dfee48c35b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d2590f-1cd2-4125-9d31-845b1ac0f248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae10b3fb-6142-4d56-81e5-1be4c7574517",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16953edd-47d3-4302-a159-f4e4d56ee022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b150f3-8e7c-4fd7-8d98-88b97b5dad86",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d1bf64-9f18-4d35-8be4-4b97c0b0236b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244029c7-f3eb-4679-bcb7-500c2fd5a7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b79da-0d4e-4f85-8ca1-384887618042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab6b1fe-8154-4ebc-bf6b-cb157ecebe89"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a886b51c-5422-40a4-b7ab-ff41af4b7ce9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d335bb1-9541-4298-ad0e-0162b399609a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d379c4-5ee0-4f47-a72d-9edc26f9fd71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c8e7117-52d9-481b-8fac-fb11a197e82d"
                    }
                  }
                ]
              },
              {
                "id": "c5d18caf-b040-48d8-aeea-27891abb8414",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d77c2026-5bfb-4dd2-bafe-4165d4ad4817",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b83a26-9398-47e9-9ef0-455f9fb0d695",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44105d14-c27e-4d51-bcbc-0dea8e3300f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ba56a-4f74-403e-8df6-51e63a07097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04df6025-c920-4358-a3c3-e6b32321b9c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddf60882-4c83-4fcc-8476-28cf0840cd43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "586d03c4-33a2-47ea-8c93-78bb5b9a370b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf96575-988c-4c96-88bc-cf0ef2f155be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d16ee29-c176-4f9f-bd5f-61adc7c4f679"
                    }
                  }
                ]
              },
              {
                "id": "fc79081b-9c4b-4052-b603-a0de468d3ece",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cd3241c1-5fe6-4243-b65b-6d0e78e73b62",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb03fd79-3e34-4939-8060-24630ebc6d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a607671-77ac-44ed-911e-fe42d4b47e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f9be85-9f41-4feb-8729-9607633959c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ed194f-f6a0-4ba0-b74c-f49ada5f2067"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e509fb4-c802-4446-80a7-2f5052d8a620",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7afe6244-6ef3-486e-a1d4-66f305b12eac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7cfc21e-7cd4-49e3-9214-760f79e72d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68250a72-cb58-469a-922f-b2bcb4c44443"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b77a372c-171f-4470-bdb4-00c90cb04ed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639ecf0b-7fd2-42b2-94aa-f69635aca01d"
                    }
                  }
                ]
              },
              {
                "id": "7e15f2ed-df18-4e5b-a798-8917a99363e1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be28803a-df87-4a0b-9046-74edd243dd38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9433e6f9-abac-43d5-a040-21395ed1b337"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c7a3f1-2441-49fd-83b1-165ed622d57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "399e5a3a-da57-4ae9-9ddc-f804aebc478e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "362dbb21-a88d-45b8-b570-0e6c5cbff56e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b261396-cc0b-4157-acb1-a38b4848e70c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7963ab6-15bb-4934-9645-be4e54b17bef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fba272a-2a89-4902-8e11-8abcd7b6c2fc"
            }
          }
        ]
      },
      {
        "id": "ef6c975b-1806-4596-8e0f-61ea40ec3eb0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "84780893-eecb-448b-9b02-b5af0863c963",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51008924-333a-41aa-ba2b-9fadcda91d34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e590381a-b24c-4069-b915-bebd219e400b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc06c53-c5dd-4387-b2f6-530a4d8fc7cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf5448fe-e2d9-460c-89d4-d67d451b86e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af101f3b-11a4-43c5-ae06-c9ecf5082081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "625a05c0-39e5-440c-928c-9ea78478e455"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "978ead6b-7e3e-4861-a183-9f156052ffc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eadaaea-c6ac-46fa-944d-73c3d8b6f4a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de59085-460b-492b-819a-8ad3d83a0808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7825a97f-9010-41cc-a864-8b3599d4bcbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85e54d1e-3d42-456f-841a-986476922222",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a7649292-5912-45d8-a081-7e972c334333"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da19cb4d-000f-4c89-9128-030a8726e94e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51096189-4dd4-43fe-b8a0-204a3bff1cad"
            }
          }
        ]
      },
      {
        "id": "420c2720-71fb-49e1-9698-c0ab11da10e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a38195d3-94e7-471b-99f7-e3fa2c29b61f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33346745-c098-4130-a93c-eca6d176be64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e8b5dd7-34fd-4839-b51a-94f7a82db70c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233d879-d9a6-49da-972a-d8e26dc0488b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9e170c6-830a-4ce6-9731-6eac6be8f141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661b7604-d6bd-484d-a4f5-380d32bd3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4699d19f-f727-4ef9-a7d9-3d5eec04fe22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd2d36ac-c8ad-46d9-afe4-75708ffd1bee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842ae2bb-4734-4266-af9e-94ceef94c90a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6373fb9-7992-451e-925f-fd1a40559596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89b8eba-c779-4147-9afa-1e49702b8501"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a8dedff-2a9b-4d04-bea2-8971ec8359b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15cac0c2-6198-4929-8cc0-d0d074fe2d86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3a60a4b-6555-4305-b171-9d296f88bab4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c64231b-9cb0-4abd-a92c-c0054d558923"
            }
          }
        ]
      },
      {
        "id": "4681b976-b777-490a-84bb-dcc668b8421a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5eed32a5-1b3a-4182-b58f-3c807db587fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130ea288-28ba-4024-afc0-dadd913ea387",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d6d4b34-16d4-4800-98d6-3236fd2918e8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502ef18e-ccc2-49df-8d78-8be97ef6e447",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e47258-69d3-49ae-8513-36995b0c4e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bc0320-313b-471b-a263-49419715fec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d05ac09e-8ef4-475a-b3b4-39d9280c0c1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "702fdcbf-354d-4820-91ab-1a1658dba2f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed194fc1-7525-4e64-81d1-ca951b3d2b66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "938c4a86-43cc-42c3-b360-43f356a40788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fc733d2-13cf-40e6-a2c9-6d38d1f71952"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73b29bfe-895a-4f5c-8673-da445f51eb25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3aeddc48-c8c9-42ca-a3af-26058ac07854"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f7f1f70-5ae9-4b15-a8a0-d1dc5e22a4da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6c217bf-9387-43c7-b531-10e2209e657b"
            }
          }
        ]
      },
      {
        "id": "06e9e9ff-2e55-4714-97da-16d42c5b4d80",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83aeeeb8-1333-4dde-a183-affb38c141e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2c3478f-01f3-4732-a26f-9b4616f399af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55305d03-7e9c-4c83-b4a2-35fb1969cedc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ab91488-9b46-4ed4-96c5-bf0b355c84a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f49aa98-1eee-419f-a79b-6796d40f8817",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.084507042253534,
      "responseMin": 20,
      "responseMax": 278,
      "responseSd": 20.847701584988023,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687999562655,
      "completed": 1687999588515
    },
    "executions": [
      {
        "id": "f5d720e9-22de-4811-bdf1-56a2eb2c27aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bec915bd-7b79-4f79-829b-9a39e9687e14",
          "httpRequestId": "dd62094a-29ee-4b22-b06a-e5ca473b609c"
        },
        "item": {
          "id": "f5d720e9-22de-4811-bdf1-56a2eb2c27aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3196978c-4a71-4f61-878e-a0349780aca3",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 0
        }
      },
      {
        "id": "749c1fc5-0ada-45ed-bf01-db922fd9a4ef",
        "cursor": {
          "ref": "e6dff89a-27ba-4bdb-90df-ec420348269c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "defcfcba-a2bd-4fe0-a5c7-d35aaa487081"
        },
        "item": {
          "id": "749c1fc5-0ada-45ed-bf01-db922fd9a4ef",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e4b49462-fbab-4b41-90bd-5185401a74f3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "fec70566-b96d-4474-a8b3-ab9b033c0cf1",
        "cursor": {
          "ref": "fe852fc1-b92b-4e8b-9104-aae206f2d9d6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d7e27271-0b77-42c8-b65b-58c7a0d95e7f"
        },
        "item": {
          "id": "fec70566-b96d-4474-a8b3-ab9b033c0cf1",
          "name": "did_json"
        },
        "response": {
          "id": "46cd4e2a-fea5-48dc-b36c-4c40f87fe80c",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ee1a4a-e25f-46df-9cb6-b186b78f1718",
        "cursor": {
          "ref": "d9ade790-8b21-41b5-be8f-c52bfbdae3b6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bb8adc8-bd1d-4525-9349-3a66b73d332f"
        },
        "item": {
          "id": "c7ee1a4a-e25f-46df-9cb6-b186b78f1718",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ad85f45-920b-47ad-a5c6-66e3cb0bc51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ee1a4a-e25f-46df-9cb6-b186b78f1718",
        "cursor": {
          "ref": "d9ade790-8b21-41b5-be8f-c52bfbdae3b6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bb8adc8-bd1d-4525-9349-3a66b73d332f"
        },
        "item": {
          "id": "c7ee1a4a-e25f-46df-9cb6-b186b78f1718",
          "name": "did:invalid"
        },
        "response": {
          "id": "6ad85f45-920b-47ad-a5c6-66e3cb0bc51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d00d4ca-ef57-46b8-a642-78be5d47fe49",
        "cursor": {
          "ref": "ae950f57-62a2-43f6-8759-e1af2c75ff57",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2a9d5ba6-e07f-42dc-b130-0400fbf328f7"
        },
        "item": {
          "id": "2d00d4ca-ef57-46b8-a642-78be5d47fe49",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a88fdc9c-2873-4d98-9311-e3cc82da051a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f97cf9-df73-4355-9f8e-8b886eb86050",
        "cursor": {
          "ref": "69729dec-4448-4137-933a-6969cd118524",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e22678c2-93d9-48f8-b1d9-99cd1cd3ef69"
        },
        "item": {
          "id": "64f97cf9-df73-4355-9f8e-8b886eb86050",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d30834d2-d1c4-4c89-a9f9-d37c99f865f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e2939-a544-4f82-b09a-0fde460b4c03",
        "cursor": {
          "ref": "3d907995-af0d-4de9-9442-f86bfa4a2859",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "95f99694-4fa7-4512-a940-0248151f231d"
        },
        "item": {
          "id": "fe7e2939-a544-4f82-b09a-0fde460b4c03",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3c9641ae-16e8-4d49-8363-db4354050d75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e715f0e-cc2f-4afe-be3e-7b48c6439c4e",
        "cursor": {
          "ref": "83f312c6-ed71-4c37-8951-d378ac90070d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b859795-6742-4ad9-82fc-bd81db356528"
        },
        "item": {
          "id": "4e715f0e-cc2f-4afe-be3e-7b48c6439c4e",
          "name": "identifiers"
        },
        "response": {
          "id": "1b107ed9-2506-4f6d-98c5-3894a72167d9",
          "status": "OK",
          "code": 200,
          "responseTime": 162,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c81ce-d4e4-4b10-9581-81fd664b8ab7",
        "cursor": {
          "ref": "3a415cd2-befd-49ab-915c-3df1e5b2449a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3c230084-943d-43df-9136-affd622c2dd3"
        },
        "item": {
          "id": "7c2c81ce-d4e4-4b10-9581-81fd664b8ab7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "db940c77-9d4c-4e03-a3d8-ab78dd48d674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e8a74-89c2-40ed-b7c4-59aebe249afa",
        "cursor": {
          "ref": "506b3172-6119-4246-88a5-c055fa226203",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2f3853f7-8f55-418d-82bb-3ab8eda46e9f"
        },
        "item": {
          "id": "cb6e8a74-89c2-40ed-b7c4-59aebe249afa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1acd3469-74cd-47bd-8eeb-929ef0c40ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4dc6a0-7eec-449d-9dea-5b8d8d5b220e",
        "cursor": {
          "ref": "cd9fb1b6-2e88-41b9-be01-8303c2512e60",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2ecc6354-84a7-48b4-8e3e-aa842e36e17a"
        },
        "item": {
          "id": "0c4dc6a0-7eec-449d-9dea-5b8d8d5b220e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1043a9ea-f6c1-4b3b-931c-c9727f75051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef607f5-e204-4653-834c-e8df6c60deae",
        "cursor": {
          "ref": "8642dded-017e-4dc0-88a6-a6d4529b30d1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c798934f-73e1-4941-95be-11b3511c711b"
        },
        "item": {
          "id": "eef607f5-e204-4653-834c-e8df6c60deae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9e85ea64-2fb2-4d20-9437-d813e1ef0cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371bc91e-bb3a-4308-96cb-eb2f937a423a",
        "cursor": {
          "ref": "e7ef53f7-b213-43d3-bf77-c5203de3cca7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c13fe05-5561-4bd1-9c4c-5bc8a47e2265"
        },
        "item": {
          "id": "371bc91e-bb3a-4308-96cb-eb2f937a423a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc9af42d-bbfe-41b3-9ded-0f9bb71a4452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc0776-8fe5-4ed8-ac67-37dd20c82ece",
        "cursor": {
          "ref": "b4a824f7-9374-4bd6-9e74-7a2ef7a37f9d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7d3936ce-e1bd-4ada-a582-dc93171a14b0"
        },
        "item": {
          "id": "5afc0776-8fe5-4ed8-ac67-37dd20c82ece",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ae1eb369-e938-4e84-b625-e41acd60a22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc3405e-4aeb-4aee-868b-0ced4bd018da",
        "cursor": {
          "ref": "42bda63e-2e26-4af7-a084-03d4d366754c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ebf7ff18-72ad-4e73-b5f7-097d77909b52"
        },
        "item": {
          "id": "6cc3405e-4aeb-4aee-868b-0ced4bd018da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "742096a3-5383-43b5-aee6-0483d15b257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43cf234-7c69-4a7d-bfbf-20ce41c39dfa",
        "cursor": {
          "ref": "e0b194b2-ac13-4811-8062-05406b6a3638",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3aef24e8-c5dc-4a0f-9a8d-fd84816d97f9"
        },
        "item": {
          "id": "c43cf234-7c69-4a7d-bfbf-20ce41c39dfa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c732c70d-5377-4a3e-94c7-c0ae0db98692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b36ce-db00-4cc8-b934-7a16f164f36b",
        "cursor": {
          "ref": "13aba237-a835-48d8-a29c-ba0d892024b5",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a82e137-fb49-438f-b996-00817b011af3"
        },
        "item": {
          "id": "a69b36ce-db00-4cc8-b934-7a16f164f36b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0a10eab1-bc1c-4e40-8318-5ad9c4833e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2fbe1d-d459-4ed9-9e3f-cee4ac3cb001",
        "cursor": {
          "ref": "a04c8408-96d1-42b7-9fb9-d8a725d6d779",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc0422a8-2f41-43ac-96a8-28cc7de308fe"
        },
        "item": {
          "id": "fb2fbe1d-d459-4ed9-9e3f-cee4ac3cb001",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4bcc6c64-d7aa-49f0-befd-f79a5d99b121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff0281-dbf1-4616-af92-30875379ec63",
        "cursor": {
          "ref": "a6ba9df7-e6e3-46d6-a65b-4e5bd2a500c2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "65732a63-6553-4dc4-96c5-02807ab97097"
        },
        "item": {
          "id": "deff0281-dbf1-4616-af92-30875379ec63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "957c9ee5-0021-4d95-bfb3-233ff2ba7959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef3cfc7-6863-42d1-beab-85c9b714f9e9",
        "cursor": {
          "ref": "9334e1a3-a9b4-427c-a5d9-db4c606c975e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2d1b39a-a0fc-486c-a639-e8298b99731a"
        },
        "item": {
          "id": "bef3cfc7-6863-42d1-beab-85c9b714f9e9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "55324c22-bfdf-4cf4-ab1a-e4da879dbe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d37dfc-7fa7-4390-94fa-ec85525e7af6",
        "cursor": {
          "ref": "4f8d6f2d-f246-4e4e-808e-897620b63071",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f5e5021a-f696-426c-9c9e-fbc28d7370fc"
        },
        "item": {
          "id": "b0d37dfc-7fa7-4390-94fa-ec85525e7af6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2f1b2818-f847-4bd6-a849-f35b1ebcb852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c53a0-8fc5-4e15-9562-00beabe0ea15",
        "cursor": {
          "ref": "2748beff-05f2-4d21-8fad-183298efb1c0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aae88e28-f9da-4aa4-bbe2-d5953764cd68"
        },
        "item": {
          "id": "7d1c53a0-8fc5-4e15-9562-00beabe0ea15",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "386fe97d-295f-4f63-9682-48bc778e70b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204c714-a9ab-4bb3-896d-a1571518a842",
        "cursor": {
          "ref": "fd967695-e621-4e12-83f8-712da5214526",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0726093d-e144-48d6-b348-830890e8243f"
        },
        "item": {
          "id": "4204c714-a9ab-4bb3-896d-a1571518a842",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "291091b3-0fee-414c-accd-1f62969bd8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc8a35-056c-4405-bfe1-e6e50720059b",
        "cursor": {
          "ref": "af84465c-45db-424c-b2d1-25de17db7ef4",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e525d022-c9a3-49d6-ba44-eb305810defb"
        },
        "item": {
          "id": "efdc8a35-056c-4405-bfe1-e6e50720059b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb139473-1e32-4dcb-bf67-139a38564a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73489a9c-1f63-455e-aba7-b8229a688612",
        "cursor": {
          "ref": "64d121de-11db-465e-820f-20ab92d1bba5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1c2b5bd6-5f60-40f6-87ef-4c4a202f6f32"
        },
        "item": {
          "id": "73489a9c-1f63-455e-aba7-b8229a688612",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d52dc48-4b62-47dd-9144-c72df73b0ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331c1e0-be8b-4a4b-b81c-fdf8e12b0827",
        "cursor": {
          "ref": "582ee73a-8c21-4cdf-98bf-dd7761d03198",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "24ac23b1-322e-4e69-94cc-f32cb88ef2d5"
        },
        "item": {
          "id": "7331c1e0-be8b-4a4b-b81c-fdf8e12b0827",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cfbdaa52-7645-4fb4-a0e6-43672a4f4604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b52fa3-1c27-4869-aa60-88bd93bede93",
        "cursor": {
          "ref": "70145f36-b3bb-405d-906b-f3b1afd6d954",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c338c6da-435c-4f5e-88bf-4fdf2cf939de"
        },
        "item": {
          "id": "74b52fa3-1c27-4869-aa60-88bd93bede93",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cec1ccaf-4f5e-47e6-823f-966164163783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc372e2-6ae1-475e-9950-226c29db43d1",
        "cursor": {
          "ref": "20862813-7c97-410e-aa33-a53721303f10",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "46093f1a-9eb5-4beb-94f9-dbbd90b8377d"
        },
        "item": {
          "id": "6bc372e2-6ae1-475e-9950-226c29db43d1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "99a6813b-6585-40d7-b08d-bd6eef196e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf2a53-2c36-4e5f-b1f1-e9681341d70c",
        "cursor": {
          "ref": "573d20cb-c279-4323-bbd4-6aad058c846f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd88fc59-36ee-40d6-b138-5d7e88896a33"
        },
        "item": {
          "id": "c1cf2a53-2c36-4e5f-b1f1-e9681341d70c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0f941871-d0a1-47ba-9219-79fe88d4ba57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882b3415-ef03-4e45-9f90-29c0598a5527",
        "cursor": {
          "ref": "0e80f312-cf9e-4223-b15d-f305758dec76",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5d4739fb-9b85-41cd-81c0-0e2f1cb37595"
        },
        "item": {
          "id": "882b3415-ef03-4e45-9f90-29c0598a5527",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2bd83957-0028-4b4d-85a3-4a92a03f9772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6249d2-f13a-44ea-8816-8361cb4167a2",
        "cursor": {
          "ref": "bfb6964f-a12b-4b5f-954c-56405e62f3bd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "49071164-6de8-48d7-a79b-2b0d6af8ec3c"
        },
        "item": {
          "id": "ef6249d2-f13a-44ea-8816-8361cb4167a2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b1252e79-1812-42ac-93dd-e5d27d0760e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d1f6ce-5aa1-4704-927d-b96dcaaa1c83",
        "cursor": {
          "ref": "ad6c8922-2b50-4d2a-9655-bfe5b92441de",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d5369733-77f6-439d-8975-057c8ad5f905"
        },
        "item": {
          "id": "68d1f6ce-5aa1-4704-927d-b96dcaaa1c83",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "052cbfc9-3daf-4f5f-96df-47f9111097af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f33959-03c4-447a-b61c-def1649c3dd2",
        "cursor": {
          "ref": "1ed5a47a-ef71-455a-bdea-73942b309cdd",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0976da53-0897-467f-b189-483823ba4258"
        },
        "item": {
          "id": "07f33959-03c4-447a-b61c-def1649c3dd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "db78b52f-42ba-4a3f-a805-cfd3a19f6e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8065194d-32d1-4ad4-a1d9-e015d0efe963",
        "cursor": {
          "ref": "42442e27-4024-4f21-94f3-1ea02126dc54",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d2bf91bf-22ec-46a3-8155-a0655798ef80"
        },
        "item": {
          "id": "8065194d-32d1-4ad4-a1d9-e015d0efe963",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa2db8f4-bbed-4411-b9d6-6a1d2d67dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7cd121-7c91-430c-afca-c758b70e45ee",
        "cursor": {
          "ref": "93beb024-b78b-407f-9cd4-4bd3959dbdb1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a56701fd-b348-4f14-8d5f-21908db47ae7"
        },
        "item": {
          "id": "8b7cd121-7c91-430c-afca-c758b70e45ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f9c0af14-a6fa-4a8c-a82f-4b1ff718a883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae72fef4-2a8b-4c63-857e-6c57125d1b1b",
        "cursor": {
          "ref": "7016abeb-70e2-48ab-9828-fba1a523c47e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ed353bfe-05bb-49e7-86c3-6c4dadb0b981"
        },
        "item": {
          "id": "ae72fef4-2a8b-4c63-857e-6c57125d1b1b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "62d3a2a7-4076-4acf-9ef8-1bc84a6287f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaaa26b-f50f-4450-b331-7811dc035a33",
        "cursor": {
          "ref": "01701b59-ffea-4d85-ac56-84e638ea90bc",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a91195e5-c40d-42de-93be-c5765920ddd0"
        },
        "item": {
          "id": "daaaa26b-f50f-4450-b331-7811dc035a33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6136f400-f66e-4d90-ba51-d261e79c8d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7aab03-9db0-421e-a5d5-6501d092678a",
        "cursor": {
          "ref": "ca37fd77-da62-4280-9f1d-277b5c37d148",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "716c252e-1168-46bb-8b9a-4d9d8068d07a"
        },
        "item": {
          "id": "6c7aab03-9db0-421e-a5d5-6501d092678a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c892502f-c1db-4a4b-a472-5d14b31d78e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2e1a30-634f-4d74-9dd2-94864af5be08",
        "cursor": {
          "ref": "e60d1de1-f770-4180-a28b-5b1d3da79d41",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ea04c3b-990a-4520-834e-ff2525d009be"
        },
        "item": {
          "id": "fc2e1a30-634f-4d74-9dd2-94864af5be08",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f38153e4-c96f-4d6d-bc7e-d3fa53e1d282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440803be-18b2-4405-ba17-dfbe6dd395d0",
        "cursor": {
          "ref": "e24c8629-c42c-49e7-8989-dab62726dc1c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "db3ae57b-e110-41a4-8a33-7b4e02c1b169"
        },
        "item": {
          "id": "440803be-18b2-4405-ba17-dfbe6dd395d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e325cdf4-7ed1-4cb2-a622-fdbf4cb122ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe3ff13-48fe-4954-8472-7d68d713e77c",
        "cursor": {
          "ref": "c4d0a7d2-00a9-4ebe-8658-619d020e3903",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "203d210c-8bb5-42c4-aeca-da11f530eaba"
        },
        "item": {
          "id": "7fe3ff13-48fe-4954-8472-7d68d713e77c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f241a53a-d7f7-415f-99a8-76491fdba17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bbf0c8-24cb-4e94-93f7-29d50ca6d308",
        "cursor": {
          "ref": "9dd16685-b00f-41ad-9b63-8ad1355c384c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a5f44a34-27ee-4a7c-9c20-2fac83632b3a"
        },
        "item": {
          "id": "37bbf0c8-24cb-4e94-93f7-29d50ca6d308",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1fd18e8d-cba6-4226-8118-e38bc204c029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5363ea-bfe3-49b2-8ba7-652b7f2ee439",
        "cursor": {
          "ref": "11234a95-4e38-4ec9-973f-76c6f74d3647",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2ddea94e-7e36-4ebc-8f42-78e76706ea24"
        },
        "item": {
          "id": "4c5363ea-bfe3-49b2-8ba7-652b7f2ee439",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cd52c590-ec5b-4e9a-acbc-1ca08c69ffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1fc7b0-3cbb-4d87-8951-efc2406db0a0",
        "cursor": {
          "ref": "626517a1-e0a7-4bc9-b698-e834211f63fa",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "56f78f57-bd4a-4c63-9b6c-9cbc053c4188"
        },
        "item": {
          "id": "fb1fc7b0-3cbb-4d87-8951-efc2406db0a0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "75a8d719-9aa9-4aad-9e72-6076a68f7563",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f7c07-196a-4054-909e-4bb2aa004977",
        "cursor": {
          "ref": "17225b29-9d94-4244-a557-f7d5989daa89",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14892768-2d4f-4619-875b-2e02e5dc7612"
        },
        "item": {
          "id": "809f7c07-196a-4054-909e-4bb2aa004977",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1bdf1d49-3b9d-461b-80bb-6aa28c4d2676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e1817-5a1d-4c5e-a9cb-c797421e2c60",
        "cursor": {
          "ref": "af4d9224-b8f4-409f-bfcf-ed26b8061944",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be20f784-003c-48ce-ac13-a7dc534dd575"
        },
        "item": {
          "id": "ab1e1817-5a1d-4c5e-a9cb-c797421e2c60",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f01de5be-335d-4dd3-ab2a-46eccad9b51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c160df5-ad95-4598-ba97-aaab9470abc9",
        "cursor": {
          "ref": "c89d4beb-5895-4a20-83e0-6c034cfc11f7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c441b491-a2db-444f-af8e-3226bcb99f1c"
        },
        "item": {
          "id": "1c160df5-ad95-4598-ba97-aaab9470abc9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ba3402d4-d5be-4326-b161-2d2bf15657b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeec0d57-7e70-4433-b750-8bae24735c38",
        "cursor": {
          "ref": "89e48610-2770-4198-ae9f-067e8ad0b2fb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0aa7dec3-211e-4d8a-83d5-012af5c02532"
        },
        "item": {
          "id": "aeec0d57-7e70-4433-b750-8bae24735c38",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4abca39d-c882-4b26-b825-c4bd93c076be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4693cc5-d926-4683-8691-8fb55a8d537a",
        "cursor": {
          "ref": "970c8cff-30b8-44d2-8bd0-dbc20f0afb39",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3d728cbb-2b41-4615-8a2f-f01be914038e"
        },
        "item": {
          "id": "d4693cc5-d926-4683-8691-8fb55a8d537a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2b977460-6767-4b7d-95ad-82386efbb562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c12992f-d9a1-468c-893a-cc5d1a4f364b",
        "cursor": {
          "ref": "5dfab79d-6de8-4744-98a2-3bccd5892913",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8d022af8-b134-4ad2-b6b4-3a4a1196f900"
        },
        "item": {
          "id": "4c12992f-d9a1-468c-893a-cc5d1a4f364b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f8fb3fca-7d5e-473d-92fc-fe34896073be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d800b-415c-4da0-a255-327c2d7c88bd",
        "cursor": {
          "ref": "675dfadb-558a-43b0-acbe-801b0f3e3dac",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7441a965-8411-4f20-a0ff-de60d6671434"
        },
        "item": {
          "id": "d56d800b-415c-4da0-a255-327c2d7c88bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "12ed9ec2-93d1-49ad-9408-87e4624e76cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e2098-d6b1-4b28-9bd6-fda88597a50a",
        "cursor": {
          "ref": "52183074-5d05-4110-b4de-9ce26ba4f214",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "deb938a7-7961-43c8-9221-d179eb17e33b"
        },
        "item": {
          "id": "c37e2098-d6b1-4b28-9bd6-fda88597a50a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a09a60d9-b3d8-4fbc-8c10-a748064459c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863bba35-9471-435d-869f-690a1acadbfe",
        "cursor": {
          "ref": "ddd5009e-7986-4755-b4be-ce612560405a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1d690712-e4d4-4374-ac5c-2be18db51dce"
        },
        "item": {
          "id": "863bba35-9471-435d-869f-690a1acadbfe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "88872312-7092-4748-949f-1825586f33ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ea764-2888-4357-8985-ba4acdabcdc6",
        "cursor": {
          "ref": "e2fced1e-a762-4752-8506-71ffcfa9d272",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8c701aca-f2f6-489b-bb05-b9fe03c0b193"
        },
        "item": {
          "id": "7c0ea764-2888-4357-8985-ba4acdabcdc6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5b902a09-b88b-446d-953c-d70e12f728f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db104276-21ca-40d7-b266-1b1e36d592f1",
        "cursor": {
          "ref": "61c714c9-7bc5-483c-b657-1dc15101d82c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3ca00d43-a0d6-4a6c-8055-b0bd56cb8f45"
        },
        "item": {
          "id": "db104276-21ca-40d7-b266-1b1e36d592f1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "344d5445-175b-4145-a444-7c512dc5fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11a6809-c67f-470b-bf30-335e5ce63a8d",
        "cursor": {
          "ref": "a46810ac-1c8f-45f6-a79b-1f611d1f9979",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "456df09b-83e0-4d2f-a9e7-6981938f1668"
        },
        "item": {
          "id": "b11a6809-c67f-470b-bf30-335e5ce63a8d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51681867-801b-437d-8ed2-f5bbab2552da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7918e70f-c80e-427b-bc87-d098a59d1d17",
        "cursor": {
          "ref": "b55c1c01-a136-4b7b-ac4a-8b7b61ee6770",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a958ed89-1782-42dd-880e-a346a792b893"
        },
        "item": {
          "id": "7918e70f-c80e-427b-bc87-d098a59d1d17",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff717da5-ee92-4ae9-ab4f-b6734ae396f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fe5e74-deb1-412b-92e2-69907e416439",
        "cursor": {
          "ref": "bc1fdd6a-dec5-4b54-b97a-e56e79975ea9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e3fdd02-9ff0-443f-ae7f-4090ca118033"
        },
        "item": {
          "id": "82fe5e74-deb1-412b-92e2-69907e416439",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9946f596-22eb-4ae6-b692-9c9d604b27e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab299e-2654-4af1-998b-27cfed5be313",
        "cursor": {
          "ref": "3828cd50-c24e-4be8-b5a7-06752062adee",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "afd5a693-b827-4b3d-ad9f-f4745b069294"
        },
        "item": {
          "id": "49ab299e-2654-4af1-998b-27cfed5be313",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ee333305-71a4-4dea-b116-c457db05ef74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737cc4a0-cf77-4665-80a8-21cbafa92812",
        "cursor": {
          "ref": "faa35608-10e3-4371-9f2f-d311f02692b0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fbffc861-8c08-4be2-aea7-a7b9175c3f7d"
        },
        "item": {
          "id": "737cc4a0-cf77-4665-80a8-21cbafa92812",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "41fc8358-a31e-4b63-8045-28c963e1664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c74ab5-0898-44f3-8087-b66bc54923cf",
        "cursor": {
          "ref": "02f2f872-5126-4577-9810-4cf7fb35eb42",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b4676517-93d0-4405-8b4c-b592a77531ba"
        },
        "item": {
          "id": "55c74ab5-0898-44f3-8087-b66bc54923cf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3c0c471e-906d-43e7-8d84-69979b2585a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbba2ea-4173-4541-9dae-12925f3d18ee",
        "cursor": {
          "ref": "f82ed7d5-b1ef-41d2-86d3-127e77c26104",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "da5f15b3-28f4-4c6f-8c27-0c98e833d839"
        },
        "item": {
          "id": "9dbba2ea-4173-4541-9dae-12925f3d18ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "18970d6e-0a59-4475-87ad-876406351c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b1665-1377-45b2-85b8-b6f13937b42f",
        "cursor": {
          "ref": "eebdced9-2ebd-4e34-a9dd-728f5fbecffc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0bf0740d-2afc-4c9a-984d-9d00334b999d"
        },
        "item": {
          "id": "cd6b1665-1377-45b2-85b8-b6f13937b42f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a0de9a8b-ea6c-4ccd-a329-ff58192ec428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057169e2-bced-443a-ac9b-b22b526e319a",
        "cursor": {
          "ref": "750f73cb-876c-4382-b22e-e98584116cfb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "578570d1-77e9-4528-bd13-91a13b5bd1e0"
        },
        "item": {
          "id": "057169e2-bced-443a-ac9b-b22b526e319a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8ffb99df-f415-4eab-ad51-0a1b4f74be4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679f8c85-2d75-4858-b683-ae8601855238",
        "cursor": {
          "ref": "fe896e3a-72b7-44dc-81ea-0064802a9457",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "93e03f3e-8cc1-40a3-93dd-4b9e6d8f4d9f"
        },
        "item": {
          "id": "679f8c85-2d75-4858-b683-ae8601855238",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "513b596e-3770-4cdb-b600-7d90af290f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f8f822-40a6-4a7c-8c4c-9316673d2d24",
        "cursor": {
          "ref": "f2558d59-fea8-4d9f-b607-4815f7c6da90",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "781009ba-e0d4-439d-861b-993ee9e0326a"
        },
        "item": {
          "id": "30f8f822-40a6-4a7c-8c4c-9316673d2d24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b7f5997d-9ce7-4f4e-a802-afee040226f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8560fc2-084a-4ea2-8123-44dd9ffbc61b",
        "cursor": {
          "ref": "9484a93a-f857-40d9-a22a-cd508c409491",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "87351fd1-3bb4-4b43-8e3d-a230ca61fa3d"
        },
        "item": {
          "id": "c8560fc2-084a-4ea2-8123-44dd9ffbc61b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2d500fd6-8781-4bb9-ae36-451c8efb14c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e062ae-95fd-4eae-a7cb-e2f591989423",
        "cursor": {
          "ref": "b76e769c-1938-4481-aab2-63d1b4dbc380",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8f825355-fd46-4de0-aa57-8529a2242217"
        },
        "item": {
          "id": "48e062ae-95fd-4eae-a7cb-e2f591989423",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "df21d64e-d5a7-4d4c-98b7-da370077dc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb63e2e5-1b52-4683-ae80-fd8a205e21d6",
        "cursor": {
          "ref": "26fada19-1723-437d-859d-6cb01b565121",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "37e6dd37-252d-4ae6-a463-fba43846f8e5"
        },
        "item": {
          "id": "fb63e2e5-1b52-4683-ae80-fd8a205e21d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "589ee383-1164-4a50-b990-86231a37aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372c79cb-98ac-4bd2-8798-e55b456dc3f0",
        "cursor": {
          "ref": "4d28618b-6b19-4b17-a40a-5e47cd616d75",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3e4584ef-65f2-48a1-9418-935a25cc6820"
        },
        "item": {
          "id": "372c79cb-98ac-4bd2-8798-e55b456dc3f0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c63c1303-37af-4543-ab52-d8a557344344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0f019-6500-4366-bd17-15c368d3f6fd",
        "cursor": {
          "ref": "4866a2e5-ccfe-4a6f-844f-22298ff82c70",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cfc25a3f-e8ec-4bd6-9c7c-701365b77165"
        },
        "item": {
          "id": "22d0f019-6500-4366-bd17-15c368d3f6fd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7d7f460e-7d61-4b28-a347-5dd164e10325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90df625d-bfd7-4a1f-9284-8ba36cee9d13",
        "cursor": {
          "ref": "2730c6f0-b217-4a2f-b12a-2f2fc6d0ac72",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3720775a-9aec-4d6e-bfa5-e2454a7d227f"
        },
        "item": {
          "id": "90df625d-bfd7-4a1f-9284-8ba36cee9d13",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "03f34f25-b518-4778-a403-258bfa934c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be8032-58d7-405b-beac-2337d91f7bd9",
        "cursor": {
          "ref": "a6aa9a2a-c5de-4df1-b2b4-e2cfe868aacc",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2266261b-ee1b-4e51-902a-86d16f6dc6d5"
        },
        "item": {
          "id": "32be8032-58d7-405b-beac-2337d91f7bd9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5e5354ff-14c7-4e5b-8026-8619be4bf067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f200e53-34e4-44b2-8619-8ab9f6360b67",
        "cursor": {
          "ref": "22f25d26-0286-40f2-9b77-4968d6d4bc36",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8d0039e5-2507-4456-81c2-e1eeddedfc69"
        },
        "item": {
          "id": "9f200e53-34e4-44b2-8619-8ab9f6360b67",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ceb949a2-e225-47d6-be31-a7e4ad3ae5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9304054-a16b-4b04-9dc7-efad9b2adc17",
        "cursor": {
          "ref": "807696fe-1a89-4648-97d8-676472db9589",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "780bbb06-5ff9-47b7-9fd9-780696d7ad7f"
        },
        "item": {
          "id": "e9304054-a16b-4b04-9dc7-efad9b2adc17",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ae3268f-f401-4d17-9dfc-de360faa1479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9165f0ce-fa0c-4874-87b7-3960501f9c92",
        "cursor": {
          "ref": "8f06d689-6a77-4d9a-a273-91b0b6dbb8fc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a0967af1-ba87-4246-a6ee-f614db314bd2"
        },
        "item": {
          "id": "9165f0ce-fa0c-4874-87b7-3960501f9c92",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "050b5215-5b5b-45fa-baa3-626b452aae45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0add3c-1a47-4b12-a0ea-42a945b54a7a",
        "cursor": {
          "ref": "02ead7f5-f48f-4791-a9ae-619314738338",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5062f2c7-ef10-4cd5-a6a6-10436977bd1c"
        },
        "item": {
          "id": "1b0add3c-1a47-4b12-a0ea-42a945b54a7a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "367e20a2-b4ba-486b-9735-1fa37c4120f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2e9611-223e-48a8-8449-546cf825438a",
        "cursor": {
          "ref": "27c725ff-addc-4d3f-90b5-068a34c49b56",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2c4ad25-fea1-4a2b-9ca6-a0fa32c65e6d"
        },
        "item": {
          "id": "4e2e9611-223e-48a8-8449-546cf825438a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "107d1155-12c9-44f5-9e29-3bdf68183861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0001650a-ab6a-4890-9fa0-e86d9fed5b78",
        "cursor": {
          "ref": "aa7325d3-e5b7-4afd-a20b-f53902f4f387",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e4e45134-024c-408d-9edb-c25ecdaec419"
        },
        "item": {
          "id": "0001650a-ab6a-4890-9fa0-e86d9fed5b78",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bec64c28-f90d-45b4-8592-3e3946901ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e44e8-7391-4a4a-8035-2273bfe8188c",
        "cursor": {
          "ref": "a7e831bd-c216-4a6e-a52a-72f5cc2cc204",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fb9dcbbf-9749-4ff5-95fd-b45b89afb894"
        },
        "item": {
          "id": "9d7e44e8-7391-4a4a-8035-2273bfe8188c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9100102-38a9-4db2-886f-6afb96754dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52995f19-6706-4df4-b045-f1f2981c7ee9",
        "cursor": {
          "ref": "d42413a5-06aa-4e7d-870d-168e4feeb71a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5bfddc8b-5794-4587-b3d4-8974710ecba8"
        },
        "item": {
          "id": "52995f19-6706-4df4-b045-f1f2981c7ee9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2f8251d5-632e-4c32-89dd-d8f1aa28b02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e45fa4c-937a-4403-a171-df4c690cd2d5",
        "cursor": {
          "ref": "3fbb42e6-ed14-4b33-a185-f9a367cd68f2",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4b3d19f6-1889-4099-a986-4c9fa2bdbd4d"
        },
        "item": {
          "id": "8e45fa4c-937a-4403-a171-df4c690cd2d5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b9c6eb3-abad-40d7-b7ca-e9fc292f201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d0c739-28b0-45db-8e80-13752fcbe1d6",
        "cursor": {
          "ref": "b2cc4de8-fb7f-4f24-81e3-5fe58e740602",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "becb6a8f-3729-4d7f-8599-8f7547d1a3e2"
        },
        "item": {
          "id": "a8d0c739-28b0-45db-8e80-13752fcbe1d6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7a045ce5-e7c4-4f2f-9e99-c680dfa90720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8898af-6ef6-4235-9af6-f1feee64ba64",
        "cursor": {
          "ref": "7d84c47c-c2de-49d9-b930-8f9eb3e68ace",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b93c0b00-6600-4012-aabd-d2aadd2048a9"
        },
        "item": {
          "id": "fd8898af-6ef6-4235-9af6-f1feee64ba64",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f02a9075-9d7b-4ee0-8528-99c68e1e7d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd4936-0b4e-49d2-b9e6-12f107d97635",
        "cursor": {
          "ref": "d1ed2c37-ea89-4177-b072-ed9b9c01b36f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e3065e7-198a-466c-af4d-9cf575c67757"
        },
        "item": {
          "id": "1bcd4936-0b4e-49d2-b9e6-12f107d97635",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bf914edb-5e41-4cf4-97d9-f261f6c3c100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd256464-d07e-41e6-be26-7faec8850bc9",
        "cursor": {
          "ref": "c21b6d62-8fdd-4d5e-977e-7ac63e59d0ec",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c1bf995-225a-46cf-9493-8cdf60e12965"
        },
        "item": {
          "id": "fd256464-d07e-41e6-be26-7faec8850bc9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4d1d2d82-882d-4ce2-b8ce-15f4d604c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8182bd8-3220-4dbd-9f5a-961800c02208",
        "cursor": {
          "ref": "c637fc98-0669-4d79-99d9-ac01aec9c36d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc9d018c-ea12-49d1-a6dc-0ed3c4b51e2a"
        },
        "item": {
          "id": "a8182bd8-3220-4dbd-9f5a-961800c02208",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "65462c87-d0ae-4e74-8f36-294430cc358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac5f7b8-1a77-480c-af57-5363ec701506",
        "cursor": {
          "ref": "40a9ad4b-09e2-4105-8aed-81000130901d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eb0faea9-c616-4f12-a2ba-7e2827cd6250"
        },
        "item": {
          "id": "8ac5f7b8-1a77-480c-af57-5363ec701506",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "13ae9670-7296-4bd3-b714-926695495c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22db2a14-f3e6-44a0-ad07-2e459556e669",
        "cursor": {
          "ref": "8e556b07-2fa6-42d6-b43e-3abf42f4c97f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6d87ebb5-ac25-4b80-97bb-0bd9bac76193"
        },
        "item": {
          "id": "22db2a14-f3e6-44a0-ad07-2e459556e669",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38339511-f7b0-4437-9704-50ac4216eeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce7d156-08da-42b0-b2c6-dc0aee30f586",
        "cursor": {
          "ref": "d050f6ac-cc25-4faf-a3c5-29adada9a7c6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "37465395-bd01-4f71-ba58-17886749e3a0"
        },
        "item": {
          "id": "9ce7d156-08da-42b0-b2c6-dc0aee30f586",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "03bccd5b-877d-4132-aee1-f7e63c7cb00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d40cfef-459d-4e8c-be75-b9f713017ee2",
        "cursor": {
          "ref": "5d79226b-2590-46a7-a102-4bcf57efefe5",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2213e5f0-a564-4ac4-8ba8-b0ecf3437419"
        },
        "item": {
          "id": "6d40cfef-459d-4e8c-be75-b9f713017ee2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05396573-bd82-4091-9039-b687f6f4b0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1432905f-90e3-47c6-a2b2-86e4d1849bd4",
        "cursor": {
          "ref": "9d8f90a9-c2fb-45c1-b4ff-70aa009a9845",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f114aecf-c06e-49e5-8adb-81faf5ffb1e0"
        },
        "item": {
          "id": "1432905f-90e3-47c6-a2b2-86e4d1849bd4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b3cdcca-7f2a-4990-b220-9cb1bc4393fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb86847-9418-46d2-bf14-a97be3731528",
        "cursor": {
          "ref": "b9cdf51f-ed76-4f8a-92ab-b6355e1f2ea6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a741557-81ab-4070-bee9-9d24cdea9e49"
        },
        "item": {
          "id": "8cb86847-9418-46d2-bf14-a97be3731528",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d46da97d-8eb1-48e7-b9c1-ddb482ac4061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235eab03-9393-42f5-a7cd-dd60163e71e1",
        "cursor": {
          "ref": "29b95345-171b-4e50-ba8a-4f3e10d5ee1a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b62cfaac-4747-47f1-a47b-d48fc641d342"
        },
        "item": {
          "id": "235eab03-9393-42f5-a7cd-dd60163e71e1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cb8686ad-186d-41e7-8aa1-30d8687d1016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a471e105-e9a9-4083-8236-57ed60b9c095",
        "cursor": {
          "ref": "c7b56bbe-f726-4529-a476-88218b6939a4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "97f0e2b7-4598-4199-b396-ef5da4340ffc"
        },
        "item": {
          "id": "a471e105-e9a9-4083-8236-57ed60b9c095",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bf151c41-f69c-418c-b1b9-97e68b4c92d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c55d8e8-0cfc-487d-b16d-9c7552fc7c00",
        "cursor": {
          "ref": "3fcef414-fb75-4872-8dc9-f7b319695b8f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "94619753-a8f2-4776-860d-47201eb4ff07"
        },
        "item": {
          "id": "9c55d8e8-0cfc-487d-b16d-9c7552fc7c00",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7a47c525-a146-477f-bce0-cbee1791ad69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda4f8a3-60f4-48bf-8e62-ed870c6f5e83",
        "cursor": {
          "ref": "d4c25723-2c59-4d1a-9e13-18035f072caa",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "51a384d1-7bac-4280-a179-0164a7c3db63"
        },
        "item": {
          "id": "cda4f8a3-60f4-48bf-8e62-ed870c6f5e83",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5b651d9d-2516-4978-bae9-1c96c2feef9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e525b16-2849-4252-9156-53e95860d40a",
        "cursor": {
          "ref": "afc7aed1-299a-4fa0-8b7d-f6a97ebd48e6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e3d583ec-9484-46cc-887c-d7a7010fb2c5"
        },
        "item": {
          "id": "2e525b16-2849-4252-9156-53e95860d40a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26f692b6-2326-4deb-9539-793d0e5c2e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b918c533-9820-46a3-8b3d-8552d519ee91",
        "cursor": {
          "ref": "ac957b34-1476-4505-bae6-eb4446119007",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2a510da8-639a-4166-8001-e57cff6e862b"
        },
        "item": {
          "id": "b918c533-9820-46a3-8b3d-8552d519ee91",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b6012288-bc74-4e60-873f-ffbb97f96a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8087fd-ed05-4ad4-8e3a-b96cf933f67a",
        "cursor": {
          "ref": "63ae5298-510b-404c-8f0a-478c5298261b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7a72aebb-04e3-43b2-9b0c-380284337fbd"
        },
        "item": {
          "id": "7d8087fd-ed05-4ad4-8e3a-b96cf933f67a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d751fd05-55b8-4fad-8328-4092c9f294d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d21059-2771-4de9-8cd0-8e089ccad00d",
        "cursor": {
          "ref": "9f9cd09d-33a7-456f-b19d-ec38dcde0a76",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "816e6854-04fd-45dd-8df3-22d8bd8c5a0d"
        },
        "item": {
          "id": "a7d21059-2771-4de9-8cd0-8e089ccad00d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b396974d-8383-44cc-bea4-febeede5a75a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800edb39-72d6-4282-9a89-415ae708be11",
        "cursor": {
          "ref": "a96197a4-8e6c-410e-b5f3-1e9a0f710462",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b6d5bd3f-50de-41c4-ab0b-a5050c097e4c"
        },
        "item": {
          "id": "800edb39-72d6-4282-9a89-415ae708be11",
          "name": "credentials_issue"
        },
        "response": {
          "id": "51b2ccba-4d26-476b-b11c-b3a8b46a8f6e",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae57212-8a10-47b8-b2fe-2e366c114c35",
        "cursor": {
          "ref": "1fa36a9a-7bcf-4175-bff2-2fe2f745f34b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db880b65-a355-424c-934c-077bef8658b2"
        },
        "item": {
          "id": "3ae57212-8a10-47b8-b2fe-2e366c114c35",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5f420ae7-bcb6-402e-89d7-0295ee20c776",
          "status": "Created",
          "code": 201,
          "responseTime": 144,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd92eacd-6c23-402e-a467-2478e024eda1",
        "cursor": {
          "ref": "03c38cef-c0e7-4e0e-a9d5-727e9dcc9103",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d1a9691a-22e8-4e0a-8a27-60e6cea3b7df"
        },
        "item": {
          "id": "dd92eacd-6c23-402e-a467-2478e024eda1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a47e58b2-ba7a-4cfd-91f3-11f32dd3d0b9",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec77ea39-74bb-4696-878d-15238050342e",
        "cursor": {
          "ref": "09a40b99-df8b-4e84-9d58-5b1f20472b4c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1bf52223-991b-41a7-ac80-96b03fb8df1f"
        },
        "item": {
          "id": "ec77ea39-74bb-4696-878d-15238050342e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9287c6ce-b007-4386-a170-5ddd73622e94",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffdb90-29e6-45b6-a435-77ed02d0b645",
        "cursor": {
          "ref": "d2297a6c-bbc0-4a8f-8f08-87bc4b7dd99b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bfa96456-d9b8-4b01-a444-b9fe5d7f3d3d"
        },
        "item": {
          "id": "a9ffdb90-29e6-45b6-a435-77ed02d0b645",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b9f7f22c-6155-4397-8c3e-92940dd69283",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc9315b-1f9f-431f-a3e3-db9c0d47c38c",
        "cursor": {
          "ref": "10d106ee-6a85-4636-bfbc-5bd6a4a38935",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "add56d69-6666-44db-9885-d8bcd80fe0d6"
        },
        "item": {
          "id": "5cc9315b-1f9f-431f-a3e3-db9c0d47c38c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc87b407-f82e-4eaa-94df-6b1fdb19e3b4",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc658407-7dd8-48b9-8447-2a380f721f1c",
        "cursor": {
          "ref": "5a97082b-f2b9-437b-9f4e-a700a0362b61",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "29e2a1b8-7cc5-4e32-9a83-27e21fcc0861"
        },
        "item": {
          "id": "fc658407-7dd8-48b9-8447-2a380f721f1c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afafe2c5-8929-4917-ab91-a53f0d50e769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb6d723-43e6-4ee3-ba6d-c8772978f868",
        "cursor": {
          "ref": "ff474ea6-d41f-44fc-b964-bf281b0af2a0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bc044a32-ffa5-46de-badc-1b1585dc803b"
        },
        "item": {
          "id": "efb6d723-43e6-4ee3-ba6d-c8772978f868",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca616788-8f73-48f5-8096-0bfcea5a2962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b05913e-da88-4982-a3e3-8432241d82b1",
        "cursor": {
          "ref": "f23b0311-1c40-4293-8cfe-f7ac202480d6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51848636-c51d-4ab2-971a-f24d3bbc3fb1"
        },
        "item": {
          "id": "8b05913e-da88-4982-a3e3-8432241d82b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "899e0c45-fcf8-497c-b1f2-efebffc56436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0212a73-6fb8-47a4-84c5-981c89697a47",
        "cursor": {
          "ref": "c9be6e3d-64e6-493b-938a-7395a9482c12",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "775892a2-0132-4698-a8d7-f44058db05a6"
        },
        "item": {
          "id": "b0212a73-6fb8-47a4-84c5-981c89697a47",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f50bfa3-5d7a-43a6-b5f4-e3dcf0a7f493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e00f4a9-233f-446d-92cb-1b75d34ffe52",
        "cursor": {
          "ref": "a9af884e-4314-443c-8828-e2e4823502cb",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "248c46b4-875e-45d9-b2d1-60e09959a4e2"
        },
        "item": {
          "id": "9e00f4a9-233f-446d-92cb-1b75d34ffe52",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad685c36-1972-4c63-be2c-82035cb4115a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d3eaa7-84e3-4f5d-9a75-5eae2f6a1367",
        "cursor": {
          "ref": "6acf1c14-53ce-4335-b342-ea05b851ce59",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41eeb9c8-cb0a-4b97-a827-2a10f6d36d27"
        },
        "item": {
          "id": "c2d3eaa7-84e3-4f5d-9a75-5eae2f6a1367",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bc3c0d43-236b-4ad8-8f71-3c5ab3074e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d66d32-0576-4096-90ff-fadf195a1b91",
        "cursor": {
          "ref": "b4f22240-aded-4710-98b4-f4c5987e2ed4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9a6982c2-6886-4dac-89bf-4ea141556b9b"
        },
        "item": {
          "id": "02d66d32-0576-4096-90ff-fadf195a1b91",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6a8be33-7d56-4fb5-9e1b-383ed143ca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47672f2d-61d1-41db-ae0b-5447a630c395",
        "cursor": {
          "ref": "06828041-5844-4e30-ac93-1f2a97e80874",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ea796be-05f2-4065-8a92-417a8c5692ae"
        },
        "item": {
          "id": "47672f2d-61d1-41db-ae0b-5447a630c395",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d794b6b7-5b12-4cb7-b961-a90aede50c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd8339-e3c5-4180-b1ee-9a1ea1b2b566",
        "cursor": {
          "ref": "15d27a04-36ec-42f3-9af1-99109914b36f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "607642aa-e845-4d1e-8a45-b767fcdf4e75"
        },
        "item": {
          "id": "87dd8339-e3c5-4180-b1ee-9a1ea1b2b566",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d51cd75f-299f-408d-99c5-4e09b46ccff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f5caed-fb8e-46e5-8241-c06acd3f9576",
        "cursor": {
          "ref": "9b6578ba-81af-4c35-89a1-c96e42344422",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "681c3f25-28f2-4bf3-8300-f6d88e14f390"
        },
        "item": {
          "id": "27f5caed-fb8e-46e5-8241-c06acd3f9576",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bb2ebb3c-3ea5-4e33-8ba4-216b71b1ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5f85b-47c8-4b44-bc39-061d40582037",
        "cursor": {
          "ref": "9c9739b7-d07e-4e11-8f25-0f2826f21ee5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "41972e5e-1555-48a5-9878-2e6f519d3176"
        },
        "item": {
          "id": "07f5f85b-47c8-4b44-bc39-061d40582037",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9f94ba1-dea1-46ff-8abb-e8e49561c4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b4983-b790-4057-9bfa-b1e09813b3f7",
        "cursor": {
          "ref": "547fb6ff-9cd0-43a9-aef2-dcbfce34e50f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7cf62373-ec21-47a3-8ca4-2fd9cdc3f7a1"
        },
        "item": {
          "id": "c80b4983-b790-4057-9bfa-b1e09813b3f7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5fc1dabe-31a4-4ae6-906d-c1deba0c9105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ae24d-0b42-413c-96b4-c81091b12e94",
        "cursor": {
          "ref": "c5caee52-a6f1-4ce9-8940-02041baad6ee",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "28f99648-26c9-4a14-98cd-9139534454f7"
        },
        "item": {
          "id": "2a3ae24d-0b42-413c-96b4-c81091b12e94",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "06c94f37-4e17-4b36-b3c8-5aff91511e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6336cfb-7673-4fbe-861f-c5502fd07061",
        "cursor": {
          "ref": "e6f27638-4df4-4198-9dc2-65870a6df917",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce7d3692-9553-442b-8ed5-bc54733902fb"
        },
        "item": {
          "id": "b6336cfb-7673-4fbe-861f-c5502fd07061",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "29832f1d-2023-466b-ae2f-0c048e545278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936c9d29-0e8d-4ba9-bf8d-10954a5c8c06",
        "cursor": {
          "ref": "83e9e80e-1b90-451b-ad40-e48e68fb4dbf",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3ebe5438-4b90-4c50-90f1-5e577137823f"
        },
        "item": {
          "id": "936c9d29-0e8d-4ba9-bf8d-10954a5c8c06",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c00aba9e-b18e-4697-a0b8-6b33a5f07f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d3a34b-d3c3-4de0-91c1-bf436577b95c",
        "cursor": {
          "ref": "571ba932-3073-403f-bb0d-f55c35abc879",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b5758eda-0538-4907-8582-9bb33d97e051"
        },
        "item": {
          "id": "38d3a34b-d3c3-4de0-91c1-bf436577b95c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86fd90a8-dc96-4a0f-b652-11792f7f0466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf656e-714d-4f17-a109-92600688be92",
        "cursor": {
          "ref": "aae5a159-f6c0-4b8d-8cc0-c1dc84a4324a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2ce69e96-ae52-4e41-abc2-87ee43292139"
        },
        "item": {
          "id": "9bdf656e-714d-4f17-a109-92600688be92",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f6bf5f2e-3710-41ad-95e4-aea9380f680b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6415295c-15d2-48b0-8246-04b215eb03ae",
        "cursor": {
          "ref": "07aa613b-4163-4c75-99a5-6bbb961cbc7a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1087de93-ee07-40f4-88b2-e0b950c57c58"
        },
        "item": {
          "id": "6415295c-15d2-48b0-8246-04b215eb03ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3740ccf7-4441-4668-a79c-57ab69dfc87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b6b284-ebcb-42cd-9d77-019ebac21938",
        "cursor": {
          "ref": "bcd35099-e7bd-4a6b-9f53-ea1ccc3b0cf8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "230b337e-45bd-44f0-80b1-e0e33a289589"
        },
        "item": {
          "id": "c7b6b284-ebcb-42cd-9d77-019ebac21938",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "330d9478-94e4-491e-8d47-0e969476d693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9761d2e-e0c1-4d79-bb0e-22b56dcbcec3",
        "cursor": {
          "ref": "c609e869-588f-4f31-85d4-4eef121404c9",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7ea8e83f-7a5a-4752-9651-1480c951be86"
        },
        "item": {
          "id": "b9761d2e-e0c1-4d79-bb0e-22b56dcbcec3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "978eeec5-d96a-424c-b6a3-3d210f46a875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8123e8f1-fba6-48ad-a62b-21da9cf349f6",
        "cursor": {
          "ref": "3488dbbd-bb30-48b2-ba71-41892d779579",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "25ea49bd-cae6-4f1a-ada0-0e1884892fee"
        },
        "item": {
          "id": "8123e8f1-fba6-48ad-a62b-21da9cf349f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7cbe333b-3c50-4018-b6ed-c6c2d9a5429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7671e0d0-aaf4-4aa5-81e9-a67c7140da17",
        "cursor": {
          "ref": "0c92aa29-11f9-41a4-b838-2bc2837fb228",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a73c4731-20fd-452c-9eee-4bf5dc2a64bc"
        },
        "item": {
          "id": "7671e0d0-aaf4-4aa5-81e9-a67c7140da17",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41fb953f-8d38-4b47-9e62-39157b9e0bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d97941-e490-41ee-a657-d29c9e20d48f",
        "cursor": {
          "ref": "35a25b34-8fbb-4f9b-8af8-abe22a6cdfb3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0ff0871a-fe8b-4590-8dd8-03bcef273863"
        },
        "item": {
          "id": "12d97941-e490-41ee-a657-d29c9e20d48f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d42da5c6-acbe-4e29-8e00-54620463b119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4501b759-a777-457e-9c8a-170d9be9ea03",
        "cursor": {
          "ref": "06078d3a-fac0-41ef-a3d9-9f9a48fdcedf",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2cd7fb74-22b7-439f-ba30-e6228d57c12a"
        },
        "item": {
          "id": "4501b759-a777-457e-9c8a-170d9be9ea03",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "00b4653c-546c-4c47-93c7-5fe165f6437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38f5fd-c075-4598-bb24-244ed5c0e9fb",
        "cursor": {
          "ref": "96959409-ab9a-465d-b3ec-d6d5f37dc4d5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "88757836-cf5f-48d7-a769-314b73089c97"
        },
        "item": {
          "id": "8b38f5fd-c075-4598-bb24-244ed5c0e9fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "139245d1-ab6d-454c-adce-2063c9bb259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b1e90-2baf-4b3b-a20d-a1ffab5033e9",
        "cursor": {
          "ref": "1f3b05f2-bc47-4dd2-bc2a-6caf3c983ae4",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "83215200-dc61-4fc4-8eea-b6b9ac008579"
        },
        "item": {
          "id": "507b1e90-2baf-4b3b-a20d-a1ffab5033e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14a2f60c-4cea-4249-966b-209ec8cdcc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e0a92d-73cb-4b18-af77-d2ed54a7e408",
        "cursor": {
          "ref": "2da9971b-d44c-487b-9cb5-2f206375e104",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8e49545b-e0ea-45c4-9601-295b09d3acd3"
        },
        "item": {
          "id": "31e0a92d-73cb-4b18-af77-d2ed54a7e408",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a27e4bcf-d2e5-48e3-b1e5-aeab6541fe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835bec45-3f99-4966-95f7-6aedbd6fc943",
        "cursor": {
          "ref": "8a23b7ad-66b2-4a9a-abcc-a91505355bc9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d964a7fa-9c2f-43be-bc46-8f59d2a0293f"
        },
        "item": {
          "id": "835bec45-3f99-4966-95f7-6aedbd6fc943",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0cde7fa2-e83c-4a01-9c87-725bc81a9f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e7c99d-655a-4a78-942f-633c63f0da56",
        "cursor": {
          "ref": "b6697f8e-c2f3-45ce-bc9e-11554c0126e7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "67ce9416-608a-45bf-bf36-b9b46fe66f9f"
        },
        "item": {
          "id": "d9e7c99d-655a-4a78-942f-633c63f0da56",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c368c026-168b-4c15-9aba-35b88bd6e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216838d-5b97-45a1-a9ff-6c7369e1bf62",
        "cursor": {
          "ref": "9670e6e3-0cca-4c88-85ba-0d160627296d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f331db1-a259-427c-80dc-3b1305bae613"
        },
        "item": {
          "id": "c216838d-5b97-45a1-a9ff-6c7369e1bf62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "571b90f1-b452-48c9-a00a-31dbf7e3c9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0e9267-88ab-469b-97bc-b556e5cd331d",
        "cursor": {
          "ref": "051275fe-0a78-4c50-82b4-2136e0d22e95",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5374840b-4ea9-4178-a1c3-613a3770bbdb"
        },
        "item": {
          "id": "bc0e9267-88ab-469b-97bc-b556e5cd331d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9cf1ed5-b7d6-49bb-bf40-07f70f286c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02334122-217f-4578-8a7b-9d668813c5d1",
        "cursor": {
          "ref": "b9a6ab96-fede-4ffd-85c8-3092a7c458b8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ffb4a7b0-416f-4c54-9fe6-0ba8768d86bd"
        },
        "item": {
          "id": "02334122-217f-4578-8a7b-9d668813c5d1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9d9f6cf4-3898-41a3-90e9-f04563f21661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba01ca65-b884-44ed-be9b-2cdde7908580",
        "cursor": {
          "ref": "d6524277-6035-4508-83c4-23a9aa91522a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "052ef675-ef7e-4f01-8e5d-7e9cdf12b128"
        },
        "item": {
          "id": "ba01ca65-b884-44ed-be9b-2cdde7908580",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ef541a5-8ce3-4a62-b72e-78688f4af80e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82cd8c4-6203-4fbc-b4af-4125c1248888",
        "cursor": {
          "ref": "57574f1d-5472-4353-b524-633cc53af031",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "21d48324-c1c5-440a-9c05-0d3cbf081361"
        },
        "item": {
          "id": "e82cd8c4-6203-4fbc-b4af-4125c1248888",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9d007ac4-e424-4f8e-ae5a-95df3b840820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce56171-26da-4730-9611-c422f274c969",
        "cursor": {
          "ref": "d60ff637-aeea-4e5c-9a69-311973a07988",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9d372a78-25d4-4ecb-b9cc-08e69d3a3ca6"
        },
        "item": {
          "id": "dce56171-26da-4730-9611-c422f274c969",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45d8883a-1e75-46d7-9393-fb9097135eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b4d2c-3204-46ca-8c0e-47a7f8377e38",
        "cursor": {
          "ref": "50ba855a-13b6-4304-8ecd-3d94349d6c6f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "48c103be-6715-46e9-8a07-f87fd3ea746e"
        },
        "item": {
          "id": "073b4d2c-3204-46ca-8c0e-47a7f8377e38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d6602f9b-0a21-4069-a45b-6883297e5ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88316e-0fc4-41c1-8c68-80d878c8058a",
        "cursor": {
          "ref": "0aafc134-1bdc-4487-8c9f-6bfaf86ee491",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba0a75fa-943a-41e7-94af-28e7765c23e4"
        },
        "item": {
          "id": "0d88316e-0fc4-41c1-8c68-80d878c8058a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9c94247d-e26e-4184-a745-37cc528ae0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b8000-d373-488f-9685-b69940c680ca",
        "cursor": {
          "ref": "5e015286-1c98-40d0-9978-7ae3d17f1093",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbaddb41-75d7-4e3f-b3bc-853392b8368d"
        },
        "item": {
          "id": "c57b8000-d373-488f-9685-b69940c680ca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1ec3e82b-181f-4306-a1d8-0955e016fbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c99684-b4f6-4838-9d84-d6831d8f64ec",
        "cursor": {
          "ref": "3a19ebcb-27d5-4627-9260-76727f03f2f3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f7bb656c-2d2d-48ba-82ee-f498d59949a5"
        },
        "item": {
          "id": "b6c99684-b4f6-4838-9d84-d6831d8f64ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8807969b-690d-44e6-99db-b5f8b993316b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61635f5b-edf1-4b87-a587-fe57b27cde88",
        "cursor": {
          "ref": "728e72fe-62ef-4666-9411-4e608d09c57f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c6e7f0da-2c3b-4d67-a94f-237a89dc4f22"
        },
        "item": {
          "id": "61635f5b-edf1-4b87-a587-fe57b27cde88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2ee38479-5fc7-4274-b784-45c2f9f693ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313abe1a-76a8-42df-add5-567e5b12a59b",
        "cursor": {
          "ref": "5cdedf65-c000-4134-bc44-165922b8ee00",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a883db5c-9726-4098-b0ce-78266ca2d161"
        },
        "item": {
          "id": "313abe1a-76a8-42df-add5-567e5b12a59b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1a60d163-0aa0-40aa-8d1c-b048c36510c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45baf6fe-4c80-4380-96d7-9582cf02a589",
        "cursor": {
          "ref": "6e090cf4-45c1-43a3-8909-13418eaa8fae",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c8757140-ef7f-4c32-bec1-5a85dc38c783"
        },
        "item": {
          "id": "45baf6fe-4c80-4380-96d7-9582cf02a589",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96523022-1c7e-4893-aeab-49dc89b0d9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc5139f-7639-452e-8a91-522d731fd77d",
        "cursor": {
          "ref": "5632e6ac-2fea-4e66-84fc-8f399c9910b6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9c4cca7b-f419-4b25-a07c-1c7216b2ce6a"
        },
        "item": {
          "id": "ddc5139f-7639-452e-8a91-522d731fd77d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2ebb5f8-ea55-433e-823d-c81cc8ca7710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93b9bd-1593-4cf3-9ede-da6cbd64b080",
        "cursor": {
          "ref": "69b1937a-5655-49a8-bde0-64f6a5e71eb4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "87a558ee-0f33-4e4f-8067-6839112a72f8"
        },
        "item": {
          "id": "7f93b9bd-1593-4cf3-9ede-da6cbd64b080",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5fe8be6b-69e6-4060-b872-cd8a7b32dbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af48224-a01f-432b-9609-f75904d20108",
        "cursor": {
          "ref": "695cf0cf-75bb-4085-a652-0b7c5b97a8e7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d4255f21-cd18-49b2-b11e-afa3b94b5599"
        },
        "item": {
          "id": "6af48224-a01f-432b-9609-f75904d20108",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "639374b2-1f30-46dc-b7cf-e9f75596d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb797f5-18bf-4364-8ce9-ccbfd90f0aef",
        "cursor": {
          "ref": "ac23e8bb-1a16-494f-81bd-275b3b81e071",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c38e7b7a-c415-4fc9-83cb-be6feaba8850"
        },
        "item": {
          "id": "ebb797f5-18bf-4364-8ce9-ccbfd90f0aef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "828a0a10-ca43-4403-915d-d7b164895546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087f33a6-1c67-4382-b1c1-d43568967953",
        "cursor": {
          "ref": "93a5a300-4966-40e7-a43e-992ee73471fe",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "95d7c8bd-bbdf-425f-8c67-d9c8d4b3bf01"
        },
        "item": {
          "id": "087f33a6-1c67-4382-b1c1-d43568967953",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f68b315-754d-469f-964a-edaf49f244f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f450c1f8-2642-4aef-94c4-48529b8044d6",
        "cursor": {
          "ref": "89e0245b-b118-4fc1-ac64-427b606881a7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bcb069a4-9768-4c71-9519-028463d7dab3"
        },
        "item": {
          "id": "f450c1f8-2642-4aef-94c4-48529b8044d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fb00e7ea-a32f-45d9-835d-0aaab4c9e0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a043ae-1291-4be3-b55b-d7c949bf8e43",
        "cursor": {
          "ref": "5cd9c2d0-5aa8-4b28-8ac8-0c75b36abefb",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7de2f899-7c10-41d8-8f6d-3818455cd2c4"
        },
        "item": {
          "id": "a6a043ae-1291-4be3-b55b-d7c949bf8e43",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c08eb34b-dfc5-4207-ac45-8465d5b7e434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb38d812-c86c-4c9d-8bc3-91b2cb0115cd",
        "cursor": {
          "ref": "9d2fad95-38cc-4490-98df-54126df596f6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f1683e4f-5243-4e95-9892-da8c918657de"
        },
        "item": {
          "id": "fb38d812-c86c-4c9d-8bc3-91b2cb0115cd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e1d6358-c979-474f-ae95-8885100ade83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8fe33-26da-46e2-a843-9f129972b3f0",
        "cursor": {
          "ref": "caf39360-09b0-490b-a3c7-0885a9cd2313",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e37fc458-8b86-46d3-926c-13e4d02caa89"
        },
        "item": {
          "id": "09e8fe33-26da-46e2-a843-9f129972b3f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44dde8f2-9b9e-48a3-9bbe-11a0ce88ae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afddd43-928b-4137-84bf-5a4ff6d65f33",
        "cursor": {
          "ref": "06f9b2c7-1ca1-448c-a155-69e650457990",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f00d4ba5-4f38-4674-a4d5-9e3a572f6ac1"
        },
        "item": {
          "id": "0afddd43-928b-4137-84bf-5a4ff6d65f33",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3a63d762-2385-4210-b559-1c76934eef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0621fcf5-a496-44d3-ac81-287bc24f7fbe",
        "cursor": {
          "ref": "0e6e6a19-ab65-46c0-905a-9833eb2642bb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0a426e8d-3750-4a31-a18b-1c43a834bcf3"
        },
        "item": {
          "id": "0621fcf5-a496-44d3-ac81-287bc24f7fbe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9d2f69a8-c4ee-4815-8207-5c120753561e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd73ed44-19f8-4c04-aac4-024c666a7e5d",
        "cursor": {
          "ref": "43173f3a-92e9-4464-86d0-89afdc6dff26",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f04a605a-dedf-402d-b488-a3b4e03db960"
        },
        "item": {
          "id": "bd73ed44-19f8-4c04-aac4-024c666a7e5d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3e4682b2-d1b1-4a8d-9396-c50799a3b4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c8f2e-2c48-49f3-a573-9091bb87687a",
        "cursor": {
          "ref": "52cca731-dd28-4ea2-83d1-5ea7de09d0ec",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a2a20a2e-6270-4c06-bea0-9c3ae2635de9"
        },
        "item": {
          "id": "109c8f2e-2c48-49f3-a573-9091bb87687a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b6506a1d-2b71-4978-aade-d070d61938f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ead5b72-aaa1-4045-8294-698332470948",
        "cursor": {
          "ref": "c0b9806a-3e62-4d59-90ea-34fd652a84b2",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ed032b6-4517-4ff0-a0b6-f28a366a7e3b"
        },
        "item": {
          "id": "5ead5b72-aaa1-4045-8294-698332470948",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69cf8df0-24e9-47dc-a4ff-dfe21aa15a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9613bccf-748b-4639-ae3a-5aa6b0b5096a",
        "cursor": {
          "ref": "d33126da-bbe9-47d1-8f72-f3de19b740e9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d93993fb-d2e7-4f3a-bc0c-d20bb8374870"
        },
        "item": {
          "id": "9613bccf-748b-4639-ae3a-5aa6b0b5096a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a976878-e115-4da6-923c-5a803c108df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a2cf72-45cc-4feb-a2ca-060b41de9743",
        "cursor": {
          "ref": "9006dfe0-b148-4711-949e-f79590925947",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1c5e5997-2988-4464-8c8f-cc9f30e4b1c1"
        },
        "item": {
          "id": "37a2cf72-45cc-4feb-a2ca-060b41de9743",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e28c09d8-8baa-4fa8-a042-2eb8d2f1e32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef8a38f-e397-4336-808d-d7db807a7ca8",
        "cursor": {
          "ref": "8e65574e-e1c2-42ce-8dac-732f00311025",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c6ddb666-2667-4b74-8e7d-83a5ded862ff"
        },
        "item": {
          "id": "5ef8a38f-e397-4336-808d-d7db807a7ca8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e358d44-05dd-4083-8028-148e333dfe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c95dc1-262e-4ed2-b1c3-eb4c297620b4",
        "cursor": {
          "ref": "85dbfd61-8e36-4085-8ccf-f6ea6b12d7a1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "55c7d9f9-205e-4a80-a14b-e8b62b67585e"
        },
        "item": {
          "id": "c9c95dc1-262e-4ed2-b1c3-eb4c297620b4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4714d561-3eba-4c1f-b6d1-ab2f4973c629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e54d52-b3bc-4b95-af9b-c367a1590c8f",
        "cursor": {
          "ref": "503af8b5-e38a-4a93-bf09-520c5eee58d2",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9701009c-0f17-4d30-89ae-4ad5bbfacd39"
        },
        "item": {
          "id": "19e54d52-b3bc-4b95-af9b-c367a1590c8f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d835959-6029-43e4-9b57-20059e3daf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49685fc-b951-4f21-aabc-cca6e57daa37",
        "cursor": {
          "ref": "73304b01-a54a-4892-8089-a581c53ef6a8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1ea87bd3-1037-48b2-8263-ac287ad78dc3"
        },
        "item": {
          "id": "d49685fc-b951-4f21-aabc-cca6e57daa37",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e822f849-ed80-47d9-a28f-1009640829c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e450551-213c-42f5-a097-1a6f7138d9f0",
        "cursor": {
          "ref": "512e5287-66f4-4711-bbde-7cd14ca37885",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6aa073d6-11e3-4895-99f7-600a7dc41165"
        },
        "item": {
          "id": "8e450551-213c-42f5-a097-1a6f7138d9f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b819b8bf-b628-4390-8308-e97152698850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227b6cc-9ce3-4fc8-9653-ff51147d2026",
        "cursor": {
          "ref": "82978d5b-9cc0-46dc-b28d-a7c988547256",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a087b438-2452-4e79-bd06-2591a457bf34"
        },
        "item": {
          "id": "c227b6cc-9ce3-4fc8-9653-ff51147d2026",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "223fa5d2-9aef-4e97-8fc4-e3bd190728b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690e6cec-83fe-4815-8b37-2ff52af02396",
        "cursor": {
          "ref": "8dbf8210-e6cf-4d8f-a868-81bc566998b2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3412e6f5-5981-4c6c-8523-50318dd6aefa"
        },
        "item": {
          "id": "690e6cec-83fe-4815-8b37-2ff52af02396",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "970229ff-d59f-48eb-88d9-b9bdef43d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5eb528-f298-4573-a1fc-a721e91d2ccf",
        "cursor": {
          "ref": "36356163-23aa-4bd5-8e5b-869ee19fd78e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0da3d029-55d8-47be-8cb8-21ed9397164d"
        },
        "item": {
          "id": "ec5eb528-f298-4573-a1fc-a721e91d2ccf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8628e1b7-df24-47df-9707-9c83276ef2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811eccdf-0809-4f5e-b900-2610b655c610",
        "cursor": {
          "ref": "b54c53e2-9ab2-458b-b016-3c5f56fcb262",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3426866b-2b0b-4100-9ba7-773996e2dd03"
        },
        "item": {
          "id": "811eccdf-0809-4f5e-b900-2610b655c610",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d20b809e-78b0-43b9-9416-33828e36faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f829d6-a1de-4bbd-b5b1-5770a0a6067e",
        "cursor": {
          "ref": "d995325d-468b-4d2c-81e9-82aaec0148b0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67db2343-7d73-462a-b069-516784fbe1f3"
        },
        "item": {
          "id": "94f829d6-a1de-4bbd-b5b1-5770a0a6067e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "038b6489-874f-4706-ab10-0be4378cdf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abbf372-0ee8-48cc-b81d-d4407edea5c0",
        "cursor": {
          "ref": "6743f254-2662-4273-8648-1795409dbba1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5fbbd6a6-af96-4d25-8536-8cd6719ef4ab"
        },
        "item": {
          "id": "4abbf372-0ee8-48cc-b81d-d4407edea5c0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c212395d-40b4-4122-82cf-23270c884fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b474b3-98d9-4089-a191-a76e7afaa2c3",
        "cursor": {
          "ref": "270c0ea8-2076-4094-ae5a-49874a4450ed",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32512de0-64fc-49fb-910c-41a2b359df5e"
        },
        "item": {
          "id": "e8b474b3-98d9-4089-a191-a76e7afaa2c3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "048d6db8-dedb-4971-b638-c04328b58334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b9a2c-6071-4ef1-ab9f-b39f0a7a9d71",
        "cursor": {
          "ref": "c339787c-865b-4d95-84d1-fc3f63945196",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9c94e0df-1d37-4937-921d-6f822868bc96"
        },
        "item": {
          "id": "2f7b9a2c-6071-4ef1-ab9f-b39f0a7a9d71",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4fd336b6-efc6-483a-932f-a0e8d9872143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8560a47-e109-4e09-9d3c-cd878cf454ee",
        "cursor": {
          "ref": "5432e7af-a5de-44cc-a124-2174f5ae5657",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0e61591-118a-4b24-8da9-41f03bcde5e4"
        },
        "item": {
          "id": "c8560a47-e109-4e09-9d3c-cd878cf454ee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "197b7b7b-07a6-4788-ae98-655946a9127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7f7c42-609e-44e4-93f7-410e0aad2bf0",
        "cursor": {
          "ref": "f93257d3-9d40-4ed0-96d9-c8f691960393",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d9e0d25-bd1c-4dcb-bd5a-42ac071ad077"
        },
        "item": {
          "id": "7f7f7c42-609e-44e4-93f7-410e0aad2bf0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "67e8dee8-b971-498d-ba64-d0ada9597f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51ba6c-be10-457f-bdbb-22b659f33483",
        "cursor": {
          "ref": "8ca4697f-ddfc-4e97-a742-83786a71514d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "090c9e4e-c54b-4e69-98b5-124c059c6c79"
        },
        "item": {
          "id": "ff51ba6c-be10-457f-bdbb-22b659f33483",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1c7bf0c3-0c6e-4df2-bd85-b5a333b9ce34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67deeb97-6b37-4c7d-ade3-79fd3f54121c",
        "cursor": {
          "ref": "e134384f-54cd-4143-8ac1-760958fc30f6",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b90831b-30bf-479f-a6d6-dc83af3dfca1"
        },
        "item": {
          "id": "67deeb97-6b37-4c7d-ade3-79fd3f54121c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a6343fa3-6ac1-4703-87f2-222721e59a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e49c7-bcb6-43d2-889d-8aa8b6b1160e",
        "cursor": {
          "ref": "143e5d15-ff59-48da-b93e-a7ec8f021251",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e879677e-10b4-41b2-8b37-9f9d3fb552f0"
        },
        "item": {
          "id": "dc4e49c7-bcb6-43d2-889d-8aa8b6b1160e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "07d9accf-16df-40e2-8510-9fc820752eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c7f30e-2799-41c5-899e-70027cdc4eeb",
        "cursor": {
          "ref": "acabef23-468f-4edd-9d19-6a3b32f8f58e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "33dda1cf-0280-48a9-ae1a-2920a7f129bb"
        },
        "item": {
          "id": "76c7f30e-2799-41c5-899e-70027cdc4eeb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6d2188df-b344-4944-8d8c-4cfd00428f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588fbca9-fcb7-48f9-91d0-8a0b13d4a190",
        "cursor": {
          "ref": "e45528f4-ff7d-42b4-bf60-a88c8a4d9a94",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ba1043b2-6f68-4541-ad06-0b8f20ff90c2"
        },
        "item": {
          "id": "588fbca9-fcb7-48f9-91d0-8a0b13d4a190",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ae10e43-154d-4093-b7ba-d192c985c9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05524ab-1713-45c6-b289-a8850feafbec",
        "cursor": {
          "ref": "2ab22bdf-5a79-4bb6-86ac-4924f423fa8a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1b3a012b-f17e-4aef-96bf-46d44e0f172f"
        },
        "item": {
          "id": "c05524ab-1713-45c6-b289-a8850feafbec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9b343b73-dd9e-427b-9f5a-a10286d35d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e8047f-230e-40b9-9c79-648495448248",
        "cursor": {
          "ref": "5bee506d-bc1c-479f-ad34-0237b6381b63",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "62130e2a-1a69-4989-9295-5a0021341039"
        },
        "item": {
          "id": "f3e8047f-230e-40b9-9c79-648495448248",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59a35624-90a3-4f55-a2eb-3f3fbea3e202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b0eeb1-e802-4fe8-b638-4e3b867bfd02",
        "cursor": {
          "ref": "eacf434e-fb31-49b7-80d8-0253c79dc183",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9480aa8a-8fb0-49b6-8b93-d86c64ed6724"
        },
        "item": {
          "id": "22b0eeb1-e802-4fe8-b638-4e3b867bfd02",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d00c7af-c1bf-4061-99f0-9b275d8423f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f3a50c-e5b9-4271-a311-57cfa8491b9c",
        "cursor": {
          "ref": "1f5d51e9-d18e-430d-a3a1-9ce455a51615",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "192d0def-9716-43ae-8a18-63b65fec7040"
        },
        "item": {
          "id": "a5f3a50c-e5b9-4271-a311-57cfa8491b9c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f020f9dd-a1ec-4f4b-97c3-95cd9916a672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa6bfdd-af54-4a29-a6fe-ff2d425d114b",
        "cursor": {
          "ref": "2497a11d-e24c-44ed-b5d0-6813797bb041",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dd383ad5-b743-4039-979c-a136ac378d3f"
        },
        "item": {
          "id": "1fa6bfdd-af54-4a29-a6fe-ff2d425d114b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "045f9d4d-d988-495c-bcee-ea09fa53c1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92026203-352d-4ab3-9cd6-6c6b49c36122",
        "cursor": {
          "ref": "5dd026dd-c24b-4106-b175-4b91429d26f4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "99222cee-569d-4071-95bc-b39a6d96881c"
        },
        "item": {
          "id": "92026203-352d-4ab3-9cd6-6c6b49c36122",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "21db6f19-3b75-4b38-becc-dd6564f4754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b327b45-f842-4d78-902d-76587f9b835d",
        "cursor": {
          "ref": "3f04e088-5c27-4e51-a0ca-8ca618a47094",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "63f90f4d-c16e-456d-801d-61caf25c3b4a"
        },
        "item": {
          "id": "8b327b45-f842-4d78-902d-76587f9b835d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "93ce633e-6eea-4cc9-8a88-0695389e5241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031ac4fe-8568-4c0c-91ca-aa3296479d69",
        "cursor": {
          "ref": "68e80930-77e9-43c9-aac7-3d4b2bb51a98",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0ae177af-a556-44cc-a80d-f7f3c0ef8ff1"
        },
        "item": {
          "id": "031ac4fe-8568-4c0c-91ca-aa3296479d69",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dd934e7a-50c3-49ab-8c1a-fe27071d93e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe356c10-bb8b-42ba-a250-5449434e9e01",
        "cursor": {
          "ref": "961669f9-723e-4a9e-84bf-fe5598486f4d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6587fbe3-4326-476e-9963-ddf70c235fdb"
        },
        "item": {
          "id": "fe356c10-bb8b-42ba-a250-5449434e9e01",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "98e5cd4d-2fbc-46f8-9af6-ee69c13e0fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0319c46a-5f8f-4369-b38d-94b6fc67a188",
        "cursor": {
          "ref": "274638a0-871a-4d15-826c-f89c19cd0889",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "24c18279-5011-45f9-8aef-8077a43e4c20"
        },
        "item": {
          "id": "0319c46a-5f8f-4369-b38d-94b6fc67a188",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d22c17b-2e80-4c38-b4c0-5d9cba55f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb646177-4a07-4f2f-bcdc-a23d5ab5a01d",
        "cursor": {
          "ref": "901c0be9-f22c-4f40-85b0-d6412f828fd9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9a7fc1e0-14f1-4a7e-a0dd-82a92cce5668"
        },
        "item": {
          "id": "cb646177-4a07-4f2f-bcdc-a23d5ab5a01d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa81565d-e4c6-4e77-b720-f1bbcb3edd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6866e16c-6266-4b88-bace-a387892f82c3",
        "cursor": {
          "ref": "79a6d9c1-965e-4f5f-a42f-4666a77b8506",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "59e5d602-344c-448f-8d73-1b36053bb175"
        },
        "item": {
          "id": "6866e16c-6266-4b88-bace-a387892f82c3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2a5ccaf4-16c5-4845-a57e-9bee2cd41854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3fae41-e6de-486b-ae26-c95ce686f2a2",
        "cursor": {
          "ref": "aca3f99f-84de-4303-8007-7fd0362a0450",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2019f4fd-53c6-4ce5-bdbb-9eb08512e5d0"
        },
        "item": {
          "id": "dc3fae41-e6de-486b-ae26-c95ce686f2a2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7a2e76e1-bf90-4f7a-952a-92405c569bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0d52b6-b82d-411a-994d-370e91e2cb61",
        "cursor": {
          "ref": "719b0822-3bc3-4f0e-bb64-8a27ade32e3d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8ac6d912-a280-4269-b3b0-66c70a88b219"
        },
        "item": {
          "id": "fb0d52b6-b82d-411a-994d-370e91e2cb61",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6cd93e6-fcdf-43eb-8d85-c802422e0fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce640bc-b02d-4524-9766-28473b26911a",
        "cursor": {
          "ref": "7f62ce79-5c69-48de-9fba-c9e0a612f4ea",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b9ee437f-1d2c-4e16-92db-15c4ed4459fc"
        },
        "item": {
          "id": "8ce640bc-b02d-4524-9766-28473b26911a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f1bfd952-a520-4386-ba3a-6d8337f572b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cfd6d5-2ed9-4836-9bf1-ca66a139a6e3",
        "cursor": {
          "ref": "8929fa7a-77f1-46d3-a834-186b8ae1d250",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c259e06-40ba-4da0-94be-d3e1b5079e7d"
        },
        "item": {
          "id": "f9cfd6d5-2ed9-4836-9bf1-ca66a139a6e3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bcc2cc5d-cae1-4857-a9ec-509beff93056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde8f7e-c29c-40ba-a083-a07fce4377a3",
        "cursor": {
          "ref": "de256bfc-e69d-4392-98bd-9b8342321eb2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b1a7141a-74d2-4635-95df-a7720a564a9e"
        },
        "item": {
          "id": "2cde8f7e-c29c-40ba-a083-a07fce4377a3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "56fb99b0-414c-48f3-8842-9006cc08f0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9598ed46-c1e0-48f9-9bce-94247743c3ca",
        "cursor": {
          "ref": "127d3dc8-465d-4f48-82ea-94b11c059fd7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "59d3d67f-874b-4e8e-a8f5-9b0f669b9abc"
        },
        "item": {
          "id": "9598ed46-c1e0-48f9-9bce-94247743c3ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8de68623-afa1-431d-b91e-30aa690a976b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad70c892-38d1-4c85-a36a-ef5d05d2f23c",
        "cursor": {
          "ref": "c5721083-71b8-417b-b606-16682fbd6f74",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "616468f9-c314-4ee3-ac53-4c2e94e7d72c"
        },
        "item": {
          "id": "ad70c892-38d1-4c85-a36a-ef5d05d2f23c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "235eb548-c5bb-41e0-9751-59f45a853e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f648a7-8186-462b-b498-e3c6700cf779",
        "cursor": {
          "ref": "36b6a2c2-f020-4dd2-af65-b6e901926374",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0ec6e954-9d7f-4df3-91e4-61a9c897bc92"
        },
        "item": {
          "id": "12f648a7-8186-462b-b498-e3c6700cf779",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5b13f26e-3b73-4390-b6af-03155d61d190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc6fbbe-dff0-4849-a3e4-ac01c350d474",
        "cursor": {
          "ref": "a950fbd0-9322-4822-99d9-786e051770ab",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b6cccfe3-a8e2-4f48-b88f-55d2601b216c"
        },
        "item": {
          "id": "2cc6fbbe-dff0-4849-a3e4-ac01c350d474",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "25f22971-26dc-49b3-ab68-8d53ae007315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e35f9-eef4-44e4-afcf-955afae532c5",
        "cursor": {
          "ref": "15530605-70f5-40f3-a1a1-03adc25a790c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eca9bb8a-8919-408a-b997-af2e0bccf50d"
        },
        "item": {
          "id": "246e35f9-eef4-44e4-afcf-955afae532c5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "52e02882-5303-4b2d-9983-1c251848eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddc42c-7a7f-4700-8cef-82ecfe6f0d8e",
        "cursor": {
          "ref": "c298cdf3-bb8e-41bc-8c14-5e6ba182ba94",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "31ca08e4-c8cc-456e-9ad0-f995d4749655"
        },
        "item": {
          "id": "09ddc42c-7a7f-4700-8cef-82ecfe6f0d8e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "367a6a1c-c314-4096-9420-452824bcc186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9345e-e7e6-4979-8a06-4c489199622b",
        "cursor": {
          "ref": "e3f3bf0e-e78f-4b77-8e0b-a3d478a56df0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71ae6aaf-df54-469a-b8ef-4910f15911ae"
        },
        "item": {
          "id": "ece9345e-e7e6-4979-8a06-4c489199622b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "78e4e213-eba1-469e-adcf-230e58e7d282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd93fb-d59e-4401-87d7-f17345b1d8f0",
        "cursor": {
          "ref": "0cffd383-2e61-4b1f-8ec0-3984da13939a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e64a2b8c-241a-4633-9e78-4477623e5063"
        },
        "item": {
          "id": "1edd93fb-d59e-4401-87d7-f17345b1d8f0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dc3f7bdd-d9cd-4fab-8031-6c814974bec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6b8b21-98a0-449e-aab3-6675a3a7a44a",
        "cursor": {
          "ref": "8473702e-0e0e-4ae4-bae9-24a268e71e4d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e4f1f6e3-b749-4801-bb13-fb5b93cec21f"
        },
        "item": {
          "id": "3b6b8b21-98a0-449e-aab3-6675a3a7a44a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eb3d9a6c-6bc6-40c8-aa66-bee2e93a193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d36fd4c-292e-434f-8a50-f7ac7d9f9403",
        "cursor": {
          "ref": "2e547206-b188-4f46-b1ea-ea288092d26d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6f55d2ac-5b32-4912-85c1-580b96e3f1d8"
        },
        "item": {
          "id": "1d36fd4c-292e-434f-8a50-f7ac7d9f9403",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8e418c7c-7b74-40ed-98d2-349c2e8ddedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850964f2-0c55-4b12-ac01-2d5d1900355a",
        "cursor": {
          "ref": "8ce4dd5a-55f7-4d17-9ec6-329fe4c61bc7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "064d54a2-6f9a-4cf8-b938-db9fdcf5fc3a"
        },
        "item": {
          "id": "850964f2-0c55-4b12-ac01-2d5d1900355a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e49b9879-8c59-418f-b9a8-13afb95df12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e807b172-04eb-4ead-a69e-0fcd3d3178d8",
        "cursor": {
          "ref": "7a429c4a-12ab-45f1-a040-64df809e18cb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5ee191db-c0b6-4753-b7ea-4521a3161ddd"
        },
        "item": {
          "id": "e807b172-04eb-4ead-a69e-0fcd3d3178d8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a82e0380-fcd2-4c5c-b4ac-6cc93d9320b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bd7cf2-14f3-4778-8fd1-ad395cade10e",
        "cursor": {
          "ref": "26c9e1ea-7807-45a2-99c7-bbdad76fb737",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f87e8ace-9c39-4df9-bfd8-f450a065aab5"
        },
        "item": {
          "id": "97bd7cf2-14f3-4778-8fd1-ad395cade10e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54eb8d46-3f40-4a98-96f2-d9982ab137e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ad52e6-2645-4c03-8d58-56af5d776df9",
        "cursor": {
          "ref": "041384f0-5cc4-43bb-a7db-bfa9163ed196",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1736922a-9ae1-443d-897b-adedabdf726b"
        },
        "item": {
          "id": "98ad52e6-2645-4c03-8d58-56af5d776df9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1aad0f3f-f45e-45e9-bf6b-1ab4f94df2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f06be3-b945-40b4-8559-419546d4fa9b",
        "cursor": {
          "ref": "d8c2c77e-34d0-40f9-8ab3-6cc21d0a0313",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a31e2d27-316d-4cf8-a98a-9e4f03d3e6ad"
        },
        "item": {
          "id": "85f06be3-b945-40b4-8559-419546d4fa9b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a842a80a-6c6c-4e6c-8c8a-c4be29b485e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f64ebb-2656-4d5e-9b78-6ed7bb7b42c4",
        "cursor": {
          "ref": "c388c8f8-8052-447a-aa6d-90be36839070",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "615e492a-5909-440c-81fd-bccd5f941412"
        },
        "item": {
          "id": "09f64ebb-2656-4d5e-9b78-6ed7bb7b42c4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8f77abc0-d29c-4b01-b49f-4b0233e1e71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b13df45-c1a2-4b58-bdf0-1ca3cb017fa3",
        "cursor": {
          "ref": "58f8f218-71bf-42d1-8c8c-40911004a209",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d8e8b95b-c074-4dfc-9b92-86ef65984f0e"
        },
        "item": {
          "id": "0b13df45-c1a2-4b58-bdf0-1ca3cb017fa3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dbf82858-df85-45d5-8fe0-b62c3a7e5f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda4b53-a38a-46f8-bd0e-a66cd1a9f38d",
        "cursor": {
          "ref": "d4ba49b3-96eb-49af-8296-0d3183670afa",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a22ee4c-6cc4-4ce8-8399-d5517604f6b4"
        },
        "item": {
          "id": "5cda4b53-a38a-46f8-bd0e-a66cd1a9f38d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9c46d5dc-23ba-4a44-ab27-13aba5600bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e4f77c-55e9-4b56-a318-2db8a1204d38",
        "cursor": {
          "ref": "2eb12c02-6656-41ea-b47d-4f5078fb8ff3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fb39a42c-e23f-4ed0-bd0b-d8f379052958"
        },
        "item": {
          "id": "e3e4f77c-55e9-4b56-a318-2db8a1204d38",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3e8a9097-095b-49e0-884b-fd4f0b39a222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df00c3e0-3b5e-4885-a93b-432ff16cf731",
        "cursor": {
          "ref": "93c24c94-7141-4ec1-b9b3-1501933eba5c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "85e5cc65-672e-4503-957b-c95304ad757f"
        },
        "item": {
          "id": "df00c3e0-3b5e-4885-a93b-432ff16cf731",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "72b5783f-cbad-4af0-9866-b6d1c768c3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf40a60-b700-4231-9472-7caf16c397f7",
        "cursor": {
          "ref": "14800184-caef-43c4-a30e-7ed4d1c4582c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd2a3c45-c101-42d1-a088-5bb6e1e35184"
        },
        "item": {
          "id": "dcf40a60-b700-4231-9472-7caf16c397f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "14b2a86e-9500-4145-8f8e-d318a87d0004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb73bd-0b24-4e31-a50b-22d0ae49f71e",
        "cursor": {
          "ref": "971caef7-820e-4448-9dea-84632a90b2cb",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "987252d5-eda7-4570-9fbd-a802dcd2008b"
        },
        "item": {
          "id": "4cdb73bd-0b24-4e31-a50b-22d0ae49f71e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a83c8686-33cd-4440-be0a-68c681d85a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117a7392-9137-49df-8bf2-3b0ab7e7cf91",
        "cursor": {
          "ref": "1171f406-6084-4abb-8d87-822b16fc7419",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "55369288-143e-4b6d-b295-7b1d7fc22a6f"
        },
        "item": {
          "id": "117a7392-9137-49df-8bf2-3b0ab7e7cf91",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8b5ddab1-38e1-4290-93cc-9df495d4d81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ef2dc-98ef-4a42-91d1-c7c8c59bc8d8",
        "cursor": {
          "ref": "04b034e1-12db-4ab5-b1eb-6a7fd9e97c14",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a224ff9-1fe6-4011-af61-1ae112817cc1"
        },
        "item": {
          "id": "565ef2dc-98ef-4a42-91d1-c7c8c59bc8d8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1aeb43ca-9aa8-46f9-9915-8c189bd020ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71327283-815f-4121-bcb8-c0ac3db80806",
        "cursor": {
          "ref": "1403acbc-5057-4f58-aed4-77046dab5a7a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d4665fa5-1bc2-47bf-812d-fe35bcc98dd6"
        },
        "item": {
          "id": "71327283-815f-4121-bcb8-c0ac3db80806",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9b7a8f5-ca83-4a0d-aa32-d8ea8e61784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41b3af0-c6cd-4803-9ef7-27a4a0c2d5c7",
        "cursor": {
          "ref": "60538cb1-040c-422f-99d9-e2dc74fa6b20",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2af2a296-61ab-4995-abb1-dd0745a5a128"
        },
        "item": {
          "id": "e41b3af0-c6cd-4803-9ef7-27a4a0c2d5c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d179fea7-fca8-4bd1-bae6-0cd20c12280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ae8bd-5434-485f-b85d-3990c0280b8f",
        "cursor": {
          "ref": "ec4f7970-6342-49e6-94cf-07bd627d88b7",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8703b3fb-8346-4236-9bf7-5c342c102f77"
        },
        "item": {
          "id": "2a2ae8bd-5434-485f-b85d-3990c0280b8f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "156a4669-f809-4bcc-b5be-a82a8e1d1d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30681dd2-fc6f-46b6-b05a-90a8d94163d9",
        "cursor": {
          "ref": "1d943232-91e3-46ac-82a0-cbaf42482134",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cde98051-a2e3-4eaf-b45d-2f99f87ccab2"
        },
        "item": {
          "id": "30681dd2-fc6f-46b6-b05a-90a8d94163d9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3fa820d0-9fe8-417d-b5a8-9fe217046178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9325637-8f38-44cf-9c0f-6ca3e330c3b0",
        "cursor": {
          "ref": "e60730da-947b-44dc-99b6-85a33fe62757",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd46aeb0-fed2-4d40-bf8a-96f57e188da5"
        },
        "item": {
          "id": "c9325637-8f38-44cf-9c0f-6ca3e330c3b0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dd83b38f-89af-49d4-b1c2-15cde18a1ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954106c9-3489-4ab0-9d25-0789f9d13769",
        "cursor": {
          "ref": "3f9d8dd2-ad18-4727-a567-ff29339ccbaf",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0e43c8c2-7918-4bf0-b12e-086c2d6f72d5"
        },
        "item": {
          "id": "954106c9-3489-4ab0-9d25-0789f9d13769",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9e158382-587e-4b92-8584-bea225822a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f0b947-a0a8-4143-b717-3d5372a8e7df",
        "cursor": {
          "ref": "49274a71-d21f-4b44-9f29-f7920cac4dec",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a7130b82-cb15-4c84-8f83-1215ca5575f3"
        },
        "item": {
          "id": "44f0b947-a0a8-4143-b717-3d5372a8e7df",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9250e4c-ed5d-4901-a98d-60fe19f39647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf224e1-26d9-4053-ab77-624052b19677",
        "cursor": {
          "ref": "5e167751-8fdd-446c-9b11-f4f0fcbff1ff",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1bf9671-13d8-472d-8b78-39ea715569f9"
        },
        "item": {
          "id": "6bf224e1-26d9-4053-ab77-624052b19677",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c79c51b5-e9af-4cb3-ae41-86e4cbc4fcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3ea33d-643d-4603-a00b-e9618943d3b4",
        "cursor": {
          "ref": "8e10fb95-8422-4caa-b0e8-d0caefec1891",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "75ca3051-5327-4b0f-8dda-0c29b19d4174"
        },
        "item": {
          "id": "fb3ea33d-643d-4603-a00b-e9618943d3b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d02d09f6-7eb5-4abc-b5ab-bdee357ebec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39da9478-d2b9-4a6d-bcbc-8414479999e3",
        "cursor": {
          "ref": "c5fcde7a-26e8-4904-9c4c-305b6b20033c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ed0f582f-adae-48b7-804e-327a45dda897"
        },
        "item": {
          "id": "39da9478-d2b9-4a6d-bcbc-8414479999e3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3afdfece-5dc3-4465-b2a8-1ff0763445d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9930c4-683e-42dd-a403-ac4c2b97aa6b",
        "cursor": {
          "ref": "60895d1e-a322-4dbb-aecb-057c3b444014",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9c39d385-d7d8-429a-bc06-3985d056f7a7"
        },
        "item": {
          "id": "cb9930c4-683e-42dd-a403-ac4c2b97aa6b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "39915c19-7f59-4bf5-96b6-df7417bd4df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1638c45-f8b3-4968-aaa6-64ffafec4547",
        "cursor": {
          "ref": "6b004af4-a261-4263-902f-ea3b31e00ea6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3f5851a9-6d80-4873-b5ea-ed5bd111c33e"
        },
        "item": {
          "id": "b1638c45-f8b3-4968-aaa6-64ffafec4547",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "77602419-1e1e-4908-a8e8-6d30b20f4189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e864e2-e085-42c8-bfcd-427f5add99fb",
        "cursor": {
          "ref": "be30183d-937a-4cd9-a0d0-21de4523817d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5671afb0-78db-4795-84b3-c3599e00162e"
        },
        "item": {
          "id": "d7e864e2-e085-42c8-bfcd-427f5add99fb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "81b6d154-914e-4ea7-9932-d01811342007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b8dc02-366a-4640-86c0-381906a9eee4",
        "cursor": {
          "ref": "cfaaf0aa-67df-4f95-b442-76b421d9d491",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c61d661a-b722-47df-a3b5-17ea5355d1a7"
        },
        "item": {
          "id": "47b8dc02-366a-4640-86c0-381906a9eee4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f4729c3-48c4-4a65-af4f-28d776adc90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528f6404-0140-4edd-bfa1-be36e3bead23",
        "cursor": {
          "ref": "c7174187-64f6-48f0-b099-223ca1798478",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "82ef01ce-675a-4524-9b48-ecca6f257e6e"
        },
        "item": {
          "id": "528f6404-0140-4edd-bfa1-be36e3bead23",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a5dc54a0-e8ae-4014-90f0-f601be022952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d63dedc-fbb8-40f7-9ca9-0a06d2710a75",
        "cursor": {
          "ref": "747423c0-19c5-4cb3-aff5-d33d75f5fcdc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f98ba0bf-be62-4fcb-8ea4-c790a98ae029"
        },
        "item": {
          "id": "5d63dedc-fbb8-40f7-9ca9-0a06d2710a75",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fae2dd78-d71f-4dcc-815e-dad5cf035dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb7fe3e-63f0-4917-b264-43ceeb8914cb",
        "cursor": {
          "ref": "168a83dc-42b8-440a-a6ce-c73f57828905",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1dda5183-b2b8-4c40-87d4-07154e6af50c"
        },
        "item": {
          "id": "6fb7fe3e-63f0-4917-b264-43ceeb8914cb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "49834ed5-029f-4506-9d38-0706bcfb77b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88f51e7-1750-4875-9fc2-b317e5f2eb4d",
        "cursor": {
          "ref": "0883684e-7da5-4016-b882-9b1385c7543f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d5ca6a6a-83fb-4e5a-a75a-e47968b3877e"
        },
        "item": {
          "id": "b88f51e7-1750-4875-9fc2-b317e5f2eb4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f117a2d7-998f-47dd-8467-fcaa185edced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589de975-d911-4fe4-b5b9-2ba7ad1ddd36",
        "cursor": {
          "ref": "6343c42b-4373-4fe6-9a41-c7dbf16ac99e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f7a03b3b-6dfd-4eee-99cc-df023d150ddb"
        },
        "item": {
          "id": "589de975-d911-4fe4-b5b9-2ba7ad1ddd36",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f9a0c72-b748-40bf-aae6-58001a01aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde0a402-76cc-4e0a-b47b-9bc31576133a",
        "cursor": {
          "ref": "b4fc4fa3-1482-4044-9525-156cb8d9cce3",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b3d070f-c480-4e7c-b5b0-e6188cdb8771"
        },
        "item": {
          "id": "bde0a402-76cc-4e0a-b47b-9bc31576133a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "33d9c561-e013-47ca-8abf-219162179514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ebf214-bdea-4e86-92fe-81bf389f9cb2",
        "cursor": {
          "ref": "27ef8774-f20f-4fe4-8dc6-e49985d6d1a5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "def5bfb5-3aee-401a-97f5-5fda6ecaf7b6"
        },
        "item": {
          "id": "a4ebf214-bdea-4e86-92fe-81bf389f9cb2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8d434247-6562-47de-9db5-31a30523d155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a969702-9301-4adf-ab6f-57cb5bd481a4",
        "cursor": {
          "ref": "28ce2983-edc8-4dc0-9bf1-11a69cdcd62b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d925f450-65c0-4b00-b9fc-61ae9605f05d"
        },
        "item": {
          "id": "9a969702-9301-4adf-ab6f-57cb5bd481a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1764e2b5-ba6e-444d-b8ad-711de18cda1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967504a6-90f4-478a-8ccb-fadc960bb656",
        "cursor": {
          "ref": "cc976bc9-bc76-464d-b5d3-1fa6473b6db4",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "04f85d31-f11f-4752-9f1a-523660d764ee"
        },
        "item": {
          "id": "967504a6-90f4-478a-8ccb-fadc960bb656",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "759241c0-0402-4ff8-adaa-70f8e5b57590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca321173-166a-4d34-b94b-75b58d512b5c",
        "cursor": {
          "ref": "a4bab408-9342-42a2-a220-7b1df58b6e75",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "530355e5-a733-493b-879f-0bfc14cf79ea"
        },
        "item": {
          "id": "ca321173-166a-4d34-b94b-75b58d512b5c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e32da1e3-7abb-460a-8f5a-2a97b53a1e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307ccca6-5247-461f-a89d-f38988d31fcc",
        "cursor": {
          "ref": "8ac040cb-9df0-43d7-a029-08e3db9f361d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "45bc8c58-6111-4176-9dab-8590a77891f6"
        },
        "item": {
          "id": "307ccca6-5247-461f-a89d-f38988d31fcc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "60fd04ed-732b-4cd5-90e5-eb4610d64aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927bda29-c57c-4609-a63e-be2fdfcca78d",
        "cursor": {
          "ref": "8b3a2656-ad95-4e29-943b-e41de76fd691",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a71f0291-0e41-41d7-99cf-314a39d06f29"
        },
        "item": {
          "id": "927bda29-c57c-4609-a63e-be2fdfcca78d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "03112f32-dd59-4c53-a634-9ccc18470f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0920c2-6998-4ae7-a8c4-5fe3b1705b1f",
        "cursor": {
          "ref": "26fbaa6b-9bad-406d-bbfb-32893bae6a92",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9837bfd6-a9d9-4a8e-b875-d092b198c9c6"
        },
        "item": {
          "id": "5c0920c2-6998-4ae7-a8c4-5fe3b1705b1f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e16430e3-9aa7-4a1e-909c-43e70441dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5201d3e1-64be-4858-afdf-3dfe22e8d0ea",
        "cursor": {
          "ref": "0e7bf4d7-098e-4c14-8692-acdf9a792e4f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e2b19351-1306-4d1c-866a-7dbd0de10961"
        },
        "item": {
          "id": "5201d3e1-64be-4858-afdf-3dfe22e8d0ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa9e4324-f641-4956-b501-32da6a29e9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc35d006-c48d-4942-ac25-ce3d0ed6ce9b",
        "cursor": {
          "ref": "3bf9eff0-7c75-4a94-abef-8d6d4d495a34",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9bc4a746-6990-4faf-90cf-6e8544f27b0d"
        },
        "item": {
          "id": "dc35d006-c48d-4942-ac25-ce3d0ed6ce9b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f42ee59d-6d94-448b-b86b-8fcda1199e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b6b039-ab87-454c-b3a6-8655641477c0",
        "cursor": {
          "ref": "ab8a3831-da7e-4e76-b39a-853407913673",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2bf7477-d471-43ed-92b4-7cbb4ddc74c6"
        },
        "item": {
          "id": "b7b6b039-ab87-454c-b3a6-8655641477c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "31300e88-9856-478e-99a1-aabe158ab192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59123f39-0853-43ad-aaed-0b4a81bae00e",
        "cursor": {
          "ref": "de6e5832-43f0-4d46-b442-7e0927dab29a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "04701e1d-54ec-4a16-b1ab-2dea5559e9d7"
        },
        "item": {
          "id": "59123f39-0853-43ad-aaed-0b4a81bae00e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a0cfe458-6ce4-4117-8644-4ccd8f3c0ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf13a303-8d31-40e0-a772-5cf9396e5013",
        "cursor": {
          "ref": "5df5c144-3d2e-4f93-82a7-436cbf28bc07",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "76494aef-a6bd-485e-928d-558aefd8955e"
        },
        "item": {
          "id": "cf13a303-8d31-40e0-a772-5cf9396e5013",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d12c75f0-59fd-4430-8755-60b9cd683b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e818df-746b-46df-8fa3-9397eb4219d5",
        "cursor": {
          "ref": "5a96924b-2409-4c82-9e88-8d8c402f39c9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f449291c-bc4b-47ae-bda9-02765683dbc6"
        },
        "item": {
          "id": "28e818df-746b-46df-8fa3-9397eb4219d5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbf530f4-8409-46f9-9323-11338cfe08bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b438e895-0d5a-4293-a108-a9def7ab7cb6",
        "cursor": {
          "ref": "a706c237-2ba6-4c4e-ac27-8395a2105f79",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "44b79002-926c-46f4-9d9c-5cfc2a93c2c8"
        },
        "item": {
          "id": "b438e895-0d5a-4293-a108-a9def7ab7cb6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "107dbdfd-1b4a-434b-8173-26dd72f22daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339c9b68-44b5-4658-8cf6-bc44697f0e93",
        "cursor": {
          "ref": "d2196902-b1b4-46e4-bc7e-feb7e3eb8cc3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "41e8d559-5ab4-490f-8079-d937d9cb42f0"
        },
        "item": {
          "id": "339c9b68-44b5-4658-8cf6-bc44697f0e93",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00b15681-fc61-4754-a41c-fdac7792b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04156281-8f6a-4d68-8021-546ed4551ec3",
        "cursor": {
          "ref": "dfa20192-394b-4c3b-adaf-796fb820e532",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "69f6bdc7-ec4c-4c1a-b3ab-610c0ee7f998"
        },
        "item": {
          "id": "04156281-8f6a-4d68-8021-546ed4551ec3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1743fb9f-3415-4799-8c89-bbe0f491c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6755e3-d31d-4c77-bdbf-31a109a97c06",
        "cursor": {
          "ref": "e4708322-e12b-4f96-986f-b9a4528c832f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ec977d42-89ca-4064-9fcf-d152728c5f2e"
        },
        "item": {
          "id": "6b6755e3-d31d-4c77-bdbf-31a109a97c06",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c93c94ff-712f-4b8b-acbf-5c9015f63b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19fd624-313d-4590-8603-0d6a4e1590a4",
        "cursor": {
          "ref": "dbd3a713-745b-4b19-9605-4a14de4a685b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d5856858-f262-48df-940d-a76d941e34d6"
        },
        "item": {
          "id": "a19fd624-313d-4590-8603-0d6a4e1590a4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6bbde251-5071-46ef-aaae-c2ef42f95463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8115197-ddcd-4124-8843-d939f4780985",
        "cursor": {
          "ref": "dd8aa037-c2fc-48b8-85ad-8825a8dd9c3d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "974f749f-8d75-4b05-9e37-0c538ded0f19"
        },
        "item": {
          "id": "c8115197-ddcd-4124-8843-d939f4780985",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "897a0881-fdad-43f4-b340-42afedb240e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82548ca1-0d62-49a2-9339-3f209beaedd9",
        "cursor": {
          "ref": "e6762980-ef34-47f7-9e36-2285ba700609",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e3c95b8b-ba52-49cc-9348-84ea1bcaaf62"
        },
        "item": {
          "id": "82548ca1-0d62-49a2-9339-3f209beaedd9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e6c1f88-5d29-4566-a111-bc35be492783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c2c43f-230a-45db-aaea-c341c36f7d81",
        "cursor": {
          "ref": "a86dc609-c33b-4ce0-b783-fd60f4250b97",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5f4017fa-d8bd-4270-bf72-33500a17e79f"
        },
        "item": {
          "id": "b1c2c43f-230a-45db-aaea-c341c36f7d81",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0d63eb39-37dc-44a8-98b1-f738fa7eb6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f9c9b-c4f1-4c2f-9383-5ca30f53834f",
        "cursor": {
          "ref": "fea9fa93-ebc2-4ee6-b995-f3fb13cca17a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d0d8dac1-ffc4-459d-8f0a-bdc54067af17"
        },
        "item": {
          "id": "008f9c9b-c4f1-4c2f-9383-5ca30f53834f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5704b0cd-fc81-4b54-9551-def8f31e01ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94d2bb0-a0a4-4f1f-84b2-547a2043723c",
        "cursor": {
          "ref": "655a3861-7c48-4f17-aad9-36e04cbd64b3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "229d35a5-0922-43fa-a264-7ecbac66cab6"
        },
        "item": {
          "id": "a94d2bb0-a0a4-4f1f-84b2-547a2043723c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3330d960-d830-475e-afcb-2277e666c798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5b54fb-17d2-409f-93b5-81c428955538",
        "cursor": {
          "ref": "1424fe83-f4a2-4540-ac61-f76bde21dc11",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d3a20b0a-85a0-4d2c-a20a-e9d726c9d1f3"
        },
        "item": {
          "id": "bb5b54fb-17d2-409f-93b5-81c428955538",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c2a17a00-8f98-4338-966d-572826bc514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28ecab-7589-4f8c-8f0b-df388a174825",
        "cursor": {
          "ref": "6f2efc48-ea2a-4dbe-bf78-68b1e2fd19d9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e4308ce1-b3c1-4d6b-a693-4d42113084a4"
        },
        "item": {
          "id": "ad28ecab-7589-4f8c-8f0b-df388a174825",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5766395c-d86c-434d-b0e7-6d3be1c54e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17ffca9-e150-4c83-955e-3e456266164b",
        "cursor": {
          "ref": "4bb92a13-b99f-4d5b-b607-b4ef1e4b3209",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "02e4e6d8-1788-43f5-82c6-28543df9c938"
        },
        "item": {
          "id": "f17ffca9-e150-4c83-955e-3e456266164b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46d8592e-92f8-4d35-9242-931d979e3100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55056d3c-f3ef-4457-a7bf-725b9689b3b5",
        "cursor": {
          "ref": "63c103a3-2fb9-46d5-9af4-87a21b31e27d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f844dd74-f55c-4531-866c-ecc9676fc99f"
        },
        "item": {
          "id": "55056d3c-f3ef-4457-a7bf-725b9689b3b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7930dc27-1c03-4da7-a813-f199bc0bbda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97260b6-ab0e-4d51-8552-4f4ad5d209dc",
        "cursor": {
          "ref": "e3bb04cf-4a2c-4e13-ad47-549caee6383d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c03f4968-3c7b-40bb-8c17-8c15e0e9bf58"
        },
        "item": {
          "id": "f97260b6-ab0e-4d51-8552-4f4ad5d209dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87070f13-bce2-41c2-ada4-c6cc5d6c4ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b150f3-8e7c-4fd7-8d98-88b97b5dad86",
        "cursor": {
          "ref": "bf6ba9ad-1480-48c6-a4c1-9b16ad49eb36",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c379f830-6bfd-4641-aa59-387bfb5db72f"
        },
        "item": {
          "id": "61b150f3-8e7c-4fd7-8d98-88b97b5dad86",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "672db865-2a7f-4740-b0a8-d5d35b014277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77c2026-5bfb-4dd2-bafe-4165d4ad4817",
        "cursor": {
          "ref": "be18c92f-1ad3-439d-b8e7-33ae6232caa6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ac512fd6-fb6f-4554-bbb7-0d5365387902"
        },
        "item": {
          "id": "d77c2026-5bfb-4dd2-bafe-4165d4ad4817",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fb8a8478-25f5-46e9-925c-0a635d09633f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3241c1-5fe6-4243-b65b-6d0e78e73b62",
        "cursor": {
          "ref": "234396a9-52cd-4410-bf63-07beb55012e6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7f91444f-ef45-4276-8831-a2490d378438"
        },
        "item": {
          "id": "cd3241c1-5fe6-4243-b65b-6d0e78e73b62",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d28d7ed-e388-4729-9f83-d268cc0aea44",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afe6244-6ef3-486e-a1d4-66f305b12eac",
        "cursor": {
          "ref": "a5313d1f-ea79-4f68-a917-1cd4d3234014",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ac9cfd7-492a-42a7-a7de-62d9fb1405f7"
        },
        "item": {
          "id": "7afe6244-6ef3-486e-a1d4-66f305b12eac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "56c06b55-b7c5-4b2e-93a5-c8f59b09c0b9",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e15f2ed-df18-4e5b-a798-8917a99363e1",
        "cursor": {
          "ref": "813e303d-6ab8-4eef-b17c-3c3b6c7c290c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c1d28d3a-b714-47aa-9b5f-76be2edbf18a"
        },
        "item": {
          "id": "7e15f2ed-df18-4e5b-a798-8917a99363e1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b29b5de5-0a6c-4c84-b7d8-53decee92df9",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590381a-b24c-4069-b915-bebd219e400b",
        "cursor": {
          "ref": "49943f4d-7e3a-4ac4-9708-f6053bceeb66",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "128d89b1-829c-465b-ab0b-96823161ef87"
        },
        "item": {
          "id": "e590381a-b24c-4069-b915-bebd219e400b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b7de8da-4c69-42f4-85c7-bdbe376a900c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e590381a-b24c-4069-b915-bebd219e400b",
        "cursor": {
          "ref": "49943f4d-7e3a-4ac4-9708-f6053bceeb66",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "128d89b1-829c-465b-ab0b-96823161ef87"
        },
        "item": {
          "id": "e590381a-b24c-4069-b915-bebd219e400b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b7de8da-4c69-42f4-85c7-bdbe376a900c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8b5dd7-34fd-4839-b51a-94f7a82db70c",
        "cursor": {
          "ref": "251b3041-0d58-4869-b515-481b20134598",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ab4fdf4e-3c7e-47db-aea0-2b50c95cc145"
        },
        "item": {
          "id": "9e8b5dd7-34fd-4839-b51a-94f7a82db70c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2b08f52-f7d3-4ffe-8edf-9534c3c40ef5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6d4b34-16d4-4800-98d6-3236fd2918e8",
        "cursor": {
          "ref": "1e6a0dae-aa7e-4277-a8b7-9031f05cc2e5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "15ba46bd-a6f3-4bf4-bce4-5e5625dbd8f2"
        },
        "item": {
          "id": "0d6d4b34-16d4-4800-98d6-3236fd2918e8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5751dac3-164d-46cb-8e9a-deaed602dbd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}