{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "771a6396-ac73-4408-97bd-a9281e21e023",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9d1c9ee6-9b9d-429d-bc59-ff74bbf1621b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ee5975d-b6f5-4bcd-81a1-11ca407d84b3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a2dcbbf8-71f3-41f7-9e97-ee39923fc961"
                }
              }
            ]
          },
          {
            "id": "3ce3fde9-9ebd-4225-a0de-d3759d869a7a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7e1a51a-2465-40b2-b8fc-d52494188aaa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "597a8b83-85b0-444c-a86d-02d77fb13f54"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6a19580e-2f2f-4a33-890a-af5a2f8a2d12",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1cde9ada-067b-48e4-8595-f86aaf6d9838",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc511322-2565-4a2a-88f5-270dade03b67",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "104514e3-e5a6-412d-bafd-9b3da33bc253",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c5ab66c-20e0-40b4-bdb2-4524c60eca73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3be01e5-ca9f-4dc2-933d-0d72761ae99d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5638a898-a8fc-43c2-9ba0-d96b28a61df7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72f96a19-8d67-407c-9616-057df67f49ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6725ad9-4ea7-43f0-bcb9-e955bd73b255"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90e9ea34-b3bb-4b69-a9ac-93cddf409111",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6c34f7b9-0a5c-4367-97c7-78a3a2192a54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d61bf145-068b-4ada-bcc8-7b55f0b3b853",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "817ec674-4184-443f-81df-453ec30c5101"
            }
          }
        ]
      },
      {
        "id": "c0e6aee4-b18c-4ec1-b635-c2a468d1a724",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed2950c1-2000-4a08-a2e6-7f00642d3abb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb9ad72e-cf95-4bf9-8ae1-e414e648aa9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43787a30-d7a3-47c7-b321-20ce6463a7b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518a6c5c-88d6-4395-b588-8a22393c5dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4f8e38a-974d-491e-8229-28e2a149f0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292a7d7-317f-48e3-acd6-6190f791af08",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1111631b-9379-453a-a5d7-8c696c6591fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cc0e0a7-3848-406f-aa47-e62eba9cb29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a936c01d-bf10-4030-97c8-07677e0a103c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6375d893-2752-4705-8ff9-871f062f12ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2faaf36-ba1c-416f-904d-857f42685a28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01104563-c9f7-4b77-a393-52d94a91e150",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd1eed8a-e734-41b8-9ce1-11de95f12050",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6f5de5-f047-4a26-9de3-dad32d3f18d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba839ac1-42ce-43fb-8292-6be56fae3dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223a210-f4df-4aa6-acb9-b1a7f80e567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cc9ceb-7564-4b97-be24-d074383957de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "963bfb2c-3b9f-4449-80eb-bd38ec3485dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "648dd41b-e850-4ccc-8119-b34929248d81",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d8b167f-0bee-421e-87ff-82d1c226f98e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5b847203-08ba-4bdd-8756-aa97d5db428c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0489829a-c790-4a8f-af19-6c0c00d007ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bf68578e-3029-49c6-b4d2-f3e7306c046d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dd51d9f-b7c1-450d-8c61-f41d2c21fa41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23bb28ab-5add-4e5c-b170-ba44bf397f64"
            }
          }
        ]
      },
      {
        "id": "98368602-2951-4ce0-9765-fcfda238abf8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "876a4fbf-b0f8-441b-9e0d-d51976829148",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2a4fab5-485c-465b-99a4-cbc7f60071b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b5a20754-0ace-41f0-899c-af55e11bb694",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c0b0f-b938-40b8-95fe-fab9b9073e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672222dc-4212-419a-9852-639abf329c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48870e0-c335-4429-bd21-54633c45b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0858eeb5-62d0-42d5-93de-a9894b22ef9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c236d8-2dd8-4ed3-8748-24f857172900",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaad33a-d11d-4e6b-940a-6103709d9247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451d2870-a8fa-4d02-81a5-14e20f130562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5772d1-40e4-41be-9b20-ad3e617e8e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74943211-eca9-4445-bdce-83f87e0ab2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dccda3-cd50-4b05-8ac6-8efb9905e80b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc70d27-6d51-4c0d-8d7d-34dec63aacaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95359e3b-adf5-4715-a750-73a0de89d0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ea9f12-b8f4-4a4a-a71a-d9e47850d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98c8bdc1-7a0a-43e9-baee-620f01fe1486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c887cedc-d296-4350-99dc-459c14b2da1d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ef100-9c64-4c35-b596-112e9b438e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae93b6f-6b4a-46fc-9a28-c3d0c41afdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365ebc76-5694-4500-9e25-49b5b972a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bef70b48-a5c4-42a3-bf3c-a5c0d6076cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e8c13b-c563-45f9-96c0-470539a8330b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ea327f-204d-4e12-817d-d30b4aa9e3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f18c968-9ed7-4feb-8df6-c3315d047de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab8a467-5164-42d7-ba41-a9a924d39eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b68a9cab-e02c-4279-a2c3-a34d464ff0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72870b55-9048-4365-8fd5-d21ecc1f2911",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92849c7-427c-4145-9474-4d702ee3d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38fa0c2-d861-4c79-bf70-7052117b941a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd5985-f6f5-4e6f-959b-36f1571ca93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4abde4-13ce-4cfd-9135-bda37c9c9773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b41220c-8528-4bd6-a421-ad53e79903ba",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f98b34-7f61-487e-b8ff-966a8822a60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d2c7a2-9a18-40bc-bbff-5ffb88d40782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a33b7-b180-4711-8a5e-7ff309598883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8df49d84-516c-4a43-aa77-ebfe0f9fada1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a53dbb-5160-4db4-9f04-2b8d4563ba58",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d904007f-180c-4532-841c-ed5bfc1403f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91adcbbe-6273-46d1-b5c4-c6b714554a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e2300-68be-4deb-a682-2427d9e2bd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03de4359-9371-4df2-a60d-bf6ba3aa1d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acd2c9b-b9a0-4241-9788-e60d270b68c3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ceb2c-3e88-4363-84ac-f17a97adc8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67604e29-f81d-43c1-a186-e47db668a89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff4b9d-2dff-4812-ab97-d1dc5db3ce20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba3530aa-3b8e-49d0-98f5-3ffaf4e0cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57de01a-de78-4d47-aa58-17b22a6cd2c9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bf3afc-6f53-40e8-8a97-9fbf57deaded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fea7d3-6bea-420d-8fb2-41dffcaa71dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9968a6c-6c82-4ddf-afb9-5a3849cb643b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c9da665-5433-438d-903a-a584fff7839a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08818701-4a85-4f23-bf5a-22ec56ceb20a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba2edff-1a1a-40cf-aa84-2f8e51a8aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3d29c6-3966-4aba-b167-23045104c1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb86ef8-d750-4c3f-acef-9b761f0adf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e167c7-c717-42f3-ab15-3951799830aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c5fe4-a112-4405-9e55-9cfbc9749b3f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ee11e6-8183-4751-995d-678a2e217546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99ac9fa-1586-4535-9841-e291992c2492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557a8514-9329-4bc6-a87c-b0433f82fda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d8cc777-13fb-427a-9bfc-faa68ef0e4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380a0a92-62ec-4c32-887f-172e44c984e8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d00132-7b99-4c1c-96f0-3f3b307b0edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3177835-26f6-43f3-aaf7-9bcfb28ff84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a55326c-cd13-4f45-addb-463593cf3ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edf41841-f29d-4804-802f-bd27273512a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b723f3c-deb7-460f-9447-2df52a366eb2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b0a31c-5d76-4b08-a8ee-77de0c80c336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4c2215-b106-42b5-8fab-04ba505710a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e72d2-aea5-48ff-a805-bf7123f988c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c712f4c0-bc8f-4f23-adf0-7b35526638f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e532ff2a-5aab-4fae-9492-650611810987",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6304f621-4e05-4cb4-802d-6dd60ecef7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6a9a88-e1c5-4053-b9b7-aa0d35c4c67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a1f87-7613-40bc-a54c-6cc290ac33d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a6f7d96-04e8-4390-80a1-5a25d4a7de96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d6085b-d744-4964-a3fc-088eb7e25be1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e509a7-0d41-45e3-bd0f-8befdeb94b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde578d5-90e4-4f28-a72c-8c27ecbc25b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e65102d-c26e-47da-b67a-a2022644e74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43207ef8-5072-40c7-a75f-92929751a3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d64923-e13e-4788-84d7-50868424b396",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469b0d72-6352-4300-8c02-82e938e510ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e453503-707c-46bb-a4bb-b139551a015d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a6d61a-808d-4ff3-84a7-3acd9acbe374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a0c1b5-8c6f-40c6-892f-b6cc01ff2523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c222e81-5980-4b76-bd8a-f2414cc58f79",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6991bc46-525f-49b0-92d3-a0d25c308cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf4867-612e-4cfb-95f1-43566bdaf022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e90de2d-6165-46c0-86bb-aa560eee122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce3ca68-4c29-4109-89d5-a8bb0a8f7fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e2731c-9452-4b8a-9a78-b0f984aedd54",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdaeaae-8b43-43ee-be83-075c5fe83229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ed03b1-cc60-4751-87ae-4c97b3bf516f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d357a-4398-4164-8a67-31c0bc4f846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4ee34f-1ec5-4f1f-af35-05bf68116a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fc63ba-1d3f-4da8-9849-5d33039591b8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33a148-56e9-44f0-ba75-682f4d26ad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1a4258-275d-41f2-b310-29097330e723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe3d4b-a0a9-4d3e-a48f-53690c7860dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "536462f5-b3e6-4e56-8fe4-379036964617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b606c95e-2620-4e75-ac77-e93a18dfe711",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8bb7ad-e7ab-4fa3-8ff6-aad43e1d5c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2b2412-533c-49c3-8d0b-7571df3e0d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa0ac98-4c4a-4be0-9e62-557a7dbe87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b95b90-d1db-4865-aae5-a1d5efeaba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbdab37-11fc-4029-aceb-46f777fbefa2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1455fe7c-5078-4877-a576-a9b25d285541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2d61b-23e5-4ffa-8e1c-cf676d1bcfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5a6887-7a8f-4544-868e-68b8fe2cd57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fc5ff1-ec26-4c87-95fc-4a7323dab083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3108cb56-9a3c-41a9-a657-fb0ce5e5a00a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caefe6f-0102-4b5a-a49a-b9f470f78cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b9f959-bcb1-4b26-8d8f-9c147403a622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011ba657-6ce0-4194-a71e-c4441178ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1849817f-d3b4-4473-82e0-b9ddd888bb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7671b4e-f30d-44d1-9a7d-28e259d1967b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84b1ad7-3b61-4a0c-b812-59e50af05c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdf7e37-5b14-40ce-8aa1-62a31169f7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3510f92d-cf9c-4bb8-909e-9840900df50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "535a0521-fc25-4c6f-9b11-ecb06fdf940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4b1ce1-93f4-495e-9d6e-25a18d945b62",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7b594f-fdfe-44ec-b205-e0e16480c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34f023d-999c-4f68-b8db-32dff60c99d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86abbf7-3ea2-4858-8e80-f0a9ec4ae4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8915f29-f8a9-404f-8166-f8c4373dfe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b7359-0071-4d2b-b237-8c9017a4c87f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cca176-936e-47e2-a70c-54d63ee83adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228b94c5-a57c-41d7-98ef-9622ed7c4bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef339e5b-1ac1-4448-81a3-66c6ea52f858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9cb8d5-72b7-4ab3-90ad-ce436c307cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9f6fe4-d062-4ad2-a98c-793a717dd3cb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b1ef6f-2f96-46f9-97ff-9351d3a8645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe67e62c-c1c6-4209-8e46-259108c4404c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06111192-183f-4793-81d2-94df577e4e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7289de-7bc8-4fec-91c1-1d337a5d8714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f931235e-9ed6-477e-aa09-0d1c0cf6131c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76974e13-0980-40fb-8d3f-cdf7d3d5097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9781b4-c76f-45b5-b05b-a76928c0fd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72385503-bd62-492b-8eff-0980f439a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8172efc2-5eeb-408f-8772-91055a81b31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be8c72-e3f9-4fcc-b2b2-c22869e69a7e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9407e055-725c-463a-9e01-ce85c5b1c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c7c53f-f86d-49e4-8d38-81b27297d71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23e62a-2ca6-42dd-9526-836292781270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ba0723-dac2-462f-a4b0-cc9d77b8d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2697387-055d-40ed-8bec-ffd70a5f7902",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8707d699-8079-4fb3-b24c-f675843c9cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dff656-5f81-44c7-bab0-994c343b4ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabe01a9-3597-4fd7-9c92-f1251ffdb821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4793644b-ceb6-4763-aa08-4fb69997a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166cdb56-6f3e-4514-8877-0b4febe855c7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c262a167-0be0-482f-80b0-cb30f2135f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7cd554-be3d-425f-8fb5-5f0ef97efe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d497f459-7bff-4240-913d-88d01dca8c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb76e78e-6731-4ba9-b88f-2ba81c542340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c4dff0-6e2d-4a94-a554-76171ad23d25",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c71e6-d29f-47bc-8bf8-8232d6defe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb58318-e2a1-48bc-ad63-f3e70d52b8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b977c313-9a86-4b51-a3fc-8d6e88db84d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a0d11c-e91b-400f-97df-e5612ae6e17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f771e9-03b6-456d-88a8-284fa823b051",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1485afd7-a382-4e98-a467-a128665c81ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fcaad8-b957-4aab-9ecd-66832fa3691f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29334b9e-0f5d-41b7-918e-700b74076c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4869d9b-5fb3-4d1b-9b9b-cbf05efcd827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2759724-0421-46a2-b399-ab9929e56cc1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba0f79c-5d64-4f94-998f-1e9e962d0ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcf9c7f-ff45-45bb-9d01-e44701475fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe5863a-55b4-48f6-8c8c-80c4992062fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15b79393-cd61-403a-91b8-d3909f513d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338d61f6-30a1-4065-a235-8f33080438c4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc484a2c-75e4-4949-9dcf-821af902cf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d3094a-b2c0-413d-990a-e2ff0ab593db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335c7c50-087d-4219-b658-6683c20a52f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "be71382e-c77f-4168-a405-a94383c16937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5e6bb5-8ccc-46bb-902e-409f1eedce4f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a68d00-207b-4967-8b78-08871fec74a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d4988d0-ad55-4e23-b94f-5dff0ddeb318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47401bf-419f-4ee8-803c-501c08bb1cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec77ffa-5654-4879-9328-32f52b146c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512bf643-1bff-498c-8bf1-a1cca38f4651",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bf7d79-0646-4e12-ba43-28710af155ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35582e7b-e41b-4b09-81be-fb1423d61963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb1d171-9962-4d18-84f5-3440413f3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0858f2-8b03-4cd4-b2d1-4351369c52f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf8cc5-f965-4575-87af-e1dfb5024696",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d688029-8076-4857-a916-0e4a0f4e4f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c66650d-381c-40f6-a0d7-ad7d29e7ffd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80bfae8-b572-4d4a-9d2b-87312943fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b811afa-1254-405a-b040-187427889e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383c6a7f-edcc-45f2-921c-e9e6ffb44c5d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae55fa8-e553-4a6c-b21a-543c451b70a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970bee05-88fc-46de-a2bf-e97f6a8916fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75162e9-1655-46c4-b67d-cff8d743e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a28d554-34bc-4006-b2b8-34a6951005fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fc0f96-ac63-47d7-80a9-77255de54143",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d7ccc-84dc-48ce-9300-6984cccbfda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81327a9b-abcc-495f-83ed-7a4b68a049ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf6ab05-ffee-43db-9b58-204b1a82fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb35bd3-d9ed-44fe-8dfb-35f034b8b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8ca24-415a-4d3a-af7c-64dc49c37252",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7cfe3-248f-4b67-b079-3d6021c3cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4af2f6-042e-48d1-a86a-37fad4aa861b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3f0768-c3a3-49ba-a0d1-293fe7e87f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db3ec48a-80f7-403d-b221-b4ad373db6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98aa908-db06-450e-a814-f2e0f791f537",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbcd126-0b3d-4725-b084-153be2362d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef046215-bdfe-4826-88c7-823da1111be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8005b291-12b4-4316-b681-24b89760b861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3bbeae-b963-4b2e-bb19-83935ca9de4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8dbeb-b64e-4333-a356-ca4b6f43b2ba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90d87e-e05a-4289-b35d-0ca7823e1d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d4c232-fbbe-4939-b3b1-123c317a363a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17d989f-01da-4795-a132-d2c18c53fd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e386ec-54b1-463d-b6d4-81fdcc24dd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ecd319-a299-4401-8959-24350a89adf5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4f7adc-2865-4a70-8a60-5ec6594a851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a100c294-da59-437e-b7ad-35dbfb288ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d90b48-be66-46c0-a2fe-093cd684c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f17e532-0cd6-4edb-acaf-b25a86545da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3d8cdc-d390-483b-9959-4c9a9d459ba7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d7f7f9-78ec-4ee1-b7d3-5780782464f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62145e4b-c325-41c7-b032-c971eae70b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225526b8-bc24-40aa-84e6-9745ce62ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a23e733-ba2e-4d41-8204-9b43c88728b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d61846a-fb03-44cd-b579-e14673103631",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af50d99f-0d3f-4784-a224-a4cc9b2d859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc938bc2-2841-4798-a127-6eb9808799aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e3106-51c1-482d-8054-5ea89e786018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c360c72-0fac-4e20-abb6-6fc952d4a268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8e15a3-9154-4421-9945-b9fbff44d881",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b091e0e-0aca-43fe-88d7-7cbf64b71c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73699144-50c4-401b-9278-86fbb42a0545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5070a-d6a9-42f2-9712-65cc970125dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "046952f7-9280-42aa-9b81-7a49f1dda5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789affac-320a-4436-a56d-c3b53cf589c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb586930-947b-464d-a77e-31b1567dfc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5649d7e2-8b56-4aa0-b776-c85a64d97da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24b2d5b-2c66-4070-ad04-4579a9087ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53654964-333e-429a-880d-8e33a688e484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f25e0e-4c3d-459e-80b6-166f3a5b04e2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd32ce80-0330-4185-a28f-ac6c0d5080a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e5e6d6-c725-4b64-9e02-e20f7e7bfb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98484923-cf02-4ddb-919f-05822ab4c51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e455d-6b20-43e7-bd1a-b0ac3d8ed6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf70ef4-b9c3-4655-ba5f-74311b670ba1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1279619a-07b1-43f0-9ff8-f24958271c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f821f-7f31-4053-932f-55b56c4dbe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea3c30-94f4-4dc1-a28b-35fd0de5da15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6d2a41-8a93-49bb-b540-47c735f31398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e0bae0-feb8-40fd-b74a-b1b0e7e607dd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc187a6c-b3da-49de-a533-04b0899ba041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483bc885-06ea-42dd-865d-71ca368e5548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c92ca2-0e76-4575-95cf-a5853e750d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b77684-d873-4e54-96da-ea40a87ab9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4858a3de-4d68-4a15-bd2e-49e8af2ff9cc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3971e58-ce52-45c8-a1b1-b8447b91ef91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56609dac-0615-401e-928e-806b23fe2400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8508f303-572d-4eec-9a1f-a82ad4889e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a971916-5162-4b79-9f97-56fcc9314488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6efd3f5-aeab-4874-b5e6-125fbf0addc5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f2cdb7-57bd-4da7-9ff0-a6ce3058e5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe929a6-1eb8-455d-8a59-0e56d4fb6751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837d7557-7686-4678-8356-9389f3f9a6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e356c50-410a-4a1b-b1a4-b0f3279bbb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b89a12-1b8f-47d0-b561-78cc7845ee8c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96a413f-7647-4434-bfb9-dfbf1b5d16f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31dbe71-3baf-4eff-975e-f6da80bd88b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f6ad2-07d9-4c19-9682-928d93764429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f13a8eb-e098-4e49-98be-54eb23d4e3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1707c481-de02-4357-ad18-d606878b75f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4d248-976d-4804-841d-33ff892eab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a856051-9cf9-438d-8598-da72218d801f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7b8a40-41b0-4133-8f47-1975d98ad9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36587085-d062-4012-a0fa-6fb79fbcfac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30369b2-c89d-43d2-a9cc-73cf778df91a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea44240-c919-4e27-a805-ed2e0b279536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c266357-d62e-4225-b201-aae6cd391806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c536d-ccd9-4042-9943-3581eb93d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d578eaa7-f4e2-4860-bb7c-86b977cc42c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6a1a7f-2861-4f89-b87f-2d9aacc3e5d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c0c287-a462-47ac-9748-62d6130c8724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83182750-748c-4e8d-bc80-60e0b0946b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3d1779-006a-41f5-a2e2-3cadf19e0954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47520856-3be6-4cc4-a0f7-c009c6f6dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506a92de-b1f3-4fa1-bfed-3666296f10af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a5ee34-7f22-4db2-9d2a-39f6c9de98c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d864ea7-c989-49f0-a409-e08ff0dbcf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95da0fc6-d750-466c-92b1-f97ae7499445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eab6848a-abb7-4d24-a234-aba02a34ff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c810d5e-bde1-426f-98b7-dd1a928c6a9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05129e9e-f977-4a7d-b136-eee82bc9e608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2251a1e-18f1-4b82-b032-6e83d1fcbc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d81d8c4-eb5e-4fe0-869a-c862ed40d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "650ed21c-8696-49db-8b8e-068e0cb7fab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d31f2a-8682-4f28-a759-d91b572c180c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bff4354-41a6-4984-9117-27cb18779a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1f083f-4cb7-41da-a950-562dc66c46d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecae58ed-aa52-4146-ad12-e6ca5b347b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87715a33-6dfa-4c47-8f2c-66376d37dd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0138652d-4e2a-46b4-beeb-f8f28c719ac7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c2c07-77cd-4f83-9f2c-f2c8d8d10e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25206867-1645-45a4-bb76-e53a0af9634c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af34959-2bd5-473d-b6ce-6f7ad6b01383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "549dab31-534e-455c-abe5-d48f46a046b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8104803-e5a3-4666-857f-512bceb15897",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ced527-4eeb-4e15-be1a-5823de96a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e6f892-ba16-461f-a2fd-11d4a33aa9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bdac0e-aec7-4354-a8e0-ca3c569660a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6685c168-024e-45c4-9d92-b66c2070b421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92006166-3765-48b4-ba95-fb3ccf12fe08",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32737a6-669d-4657-a2f0-24a6d4193e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c37599-db56-4f7c-a07e-ab370803ecb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af569158-50db-47c1-8093-b3c3e064b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "149fff17-a11b-46d8-af09-478d391d3835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb73053-09af-49cb-8aa8-14a15982a6ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bae723c-fc98-4ea9-90f6-9a4a8b7f5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4495df-6aeb-4354-a829-1df1b9b63154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5642c2da-3a0e-4523-9a6e-4b35b76e2c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe05bf1-f8ae-4201-9e8d-318ead6674c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b61ebd-76d5-4ed1-9afd-582284299f83",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbfea48-2a5c-49ce-ad85-d16eec93e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3a1b26-d59e-47d1-b2eb-25df64b34fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8a668-cef8-4ca7-9dac-43875a208f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87e36d2-c09f-46b1-88f4-54403be3073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a02ab86-2277-4556-813b-d8524854507f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6c3a35-44cd-4581-bb5f-888d7a3293f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfd0fc3-8c81-4fa8-84d8-c770a762f122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f6210d-1e30-4fba-adb8-67e59f709030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "222406ce-c7cd-4354-a6c6-44ff0538b785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ae4649-7954-4057-a96f-40979fd502b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3ec0a2-125c-4106-bf7c-1c956243c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1793633a-977c-4f3f-81aa-fc8723ce9836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ed4dc2-783c-4489-8c12-64947ef9a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2bd600-8d99-4161-9ca6-5300c3e3b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddd310c-2071-47fc-a052-75129f22829d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6796d04-f7df-493a-b353-364f4aeca0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce76f7d9-9c03-43eb-b95a-a8292bbe9589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754eba98-7578-4293-a82e-36dfc4fb375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f175526-3924-4934-87fa-5955ccaf44c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e879dd76-901e-4a31-ba23-cca2a78861d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769de94c-5bca-445c-aac8-227aa8ac6cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842121c7-de4e-44f8-8714-6348154e1ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fccdd62-d40e-49f0-bc99-4b2c3977343d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6610ea74-ffa5-4a1e-b6d4-bd6ee1975e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40df17c-c34f-4e4b-966a-4cac6b4b3218",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fa0c14-87b5-4dc0-b349-074b8ab81e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c909c6-5e78-404f-9e60-dfe7ce77dceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb814274-dd26-4044-a6d4-44273c9e5a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb252ded-06b6-460d-a009-148fc74e7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442ff5b9-0909-4b39-981b-c310f09d1460",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e931d8b-2236-4f42-9636-b2dda7934a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281aef97-9796-4db3-959e-93b9c3794ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0d8ceb-301a-44ea-a1c3-a88b02395c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e43add-b91d-47e6-8454-871bd88ebff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213621c4-9fe9-4e83-a4ef-b9fc7b24ca07",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a07007-09c1-4a77-aa05-ff3510f3fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b702249-5109-4ca5-a3fd-060e31f19782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfbbb82-24c1-443d-83c0-566be27704de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b977504f-d91e-4773-81a1-320e780bf17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6e798b-3484-4646-8dc2-a1a067d131e7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb41d68e-9afd-48a3-a171-ffd4a6e29705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c707f22a-54df-41eb-92e3-d08b5e023102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0461f55-da23-40b6-b6e4-cdd023878851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e71b9c18-a63a-49b9-82f1-d38b1646ce73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c000b88-ddbd-4bc5-b710-d5d6dbfd1d2a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18824a-d799-4577-90d9-bb35a48f253c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412b7521-4784-4030-8f65-d36b9542bacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97557ba-995d-45b3-8b8d-5ab3d7bc8d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf9821b-aba2-47f7-9eb0-95e86e72c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d0c7e0-2a20-4a8d-9a0f-6fcb9a30f2fd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c56733-c423-455b-ac18-ab6b41d5204f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7153bd0d-5f8b-44a6-9639-61a21fb61638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4f2a6-9d71-420c-8b0b-932357a229a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66b27ac-3cfd-4e60-9bec-cb8596aeaa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b74ea9-26cd-4e72-a2c6-0fe119be7809",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb3867a-c74f-4d99-bda7-fda52c2990bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ebaca6-3c86-4b67-b20c-677ccfa332e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7202b528-c264-4f35-b5a1-d9cc50dab21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba24936c-e90a-42fe-af6b-1025fcf9581f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428d1f21-b620-4bc7-8a94-15a11a1dd21a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea4e439-bf92-419d-b99b-84c2413fde7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50a076f-b695-450f-ba63-885e784b7240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d21d2a-a462-44b0-9013-7c6492f86a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8f0ab8-5870-40fe-96db-a51defe57b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b2bf66-d296-4e4a-9360-f4ca5273367b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299826aa-ecc9-4da2-95ed-153884e93af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38b52aa-4653-4851-9719-39586536bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849c3dd1-388f-4516-abf6-69fd8611e3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdc6d80-c1dd-4941-995c-7b1c847cbdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3899754c-4434-427b-8db0-d4f8e65db127",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14699a19-2e0b-4010-aba1-a1cd84e3433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de28d902-4504-41d6-a829-85df31c66457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc3bde-5984-4882-a9ec-f09348c81283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4521d7a3-b90f-40a4-a88b-94c38806f39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcfbf65-fa40-46cc-8ec8-844ba81b75c0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aa0b7a-bf50-4eb9-a811-90420c05acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a3f9c-6048-4ab6-bd7e-915991a141a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c89822-7f2f-4152-acd6-ec44a7de8694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c97cc9c6-8c38-4320-99c9-c44edaf746cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466b42b-1dca-4a57-9be4-5f8341b39a7d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af597da4-6187-4765-9707-517ef0da0790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4816ef7-c4bb-48a1-b423-f22a8ea10c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487de695-8788-44e6-9f59-6c974d0ad3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "803ae9c1-be10-42fc-a762-5a997c824c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4274d4c-d9e3-4f65-b824-8675489d7f72",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9b1ae4-0aba-441d-971d-0b91bdb09bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a76bf21-bb4f-44b8-9b19-d0006a43e882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feeb173-8d81-4e88-a0f4-cfa78cdfb520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b10a9d0-7e26-44e3-a485-a8b5ae5e00c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfbb8a1-4748-4a18-ba80-093dead46d5c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9746b-5153-426d-a06e-1c1129b5c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28f27c6-14b7-4ae6-981a-241fbf6fe155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d460702a-5b13-4689-93d7-347dfe3929f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "033c65cf-9260-4f83-ae72-7bcfa85c7273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e95dc9-4e18-47a8-a432-efaa8de6f637",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74a92a2-c45a-4cea-bc55-a275f89afa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1e6557-d49f-4229-a428-0543b5643ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21288d99-3bce-4dc3-9ae7-3fea2c662feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1d40d9-4821-44e5-877a-b2e8d70e2fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8837c1-12a2-4296-8240-a3295d964ce9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1536c027-1d2d-4a79-9269-c7f6aae6cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8c1de0-a9a2-4ab9-b8f6-e61071a9bf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb0b6d5-4902-4397-9976-4d798347c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f657560-02a5-4422-89fe-161975d3a741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e95edf-6d77-431d-ae6a-f8ec2fd0bf23",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7740680b-fcab-4c4a-86a4-2f6c0d2ce789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8834478-bdad-4383-9f9b-983e565c3081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784c963-44f6-4ff7-9cad-4caf696a3e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2af9e15-d95b-4681-9f38-aae3eb3c43e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b3bcaf-f967-46a0-a6a7-aae27969f82a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604bcf0-f14e-484f-85e6-24a223b8b420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b257ed7b-69a8-420d-917e-1d11463e9db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872cd42-ef70-4318-94df-b1f62192f615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1964cc-e379-4add-955b-f83d711ae847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbb870a-550d-40b9-9571-c4610db2d426",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17815ac-f9c1-4a59-97ec-b1e38f311195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c30b07-7407-4935-ae2b-5ef9b5226ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62fce71-1c7c-4ecc-ba5c-a6ffebf9f244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0164cda0-dd2f-4d93-a4f2-6af080500de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304574f0-b74f-4f46-af66-b9b9867bd4bd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365e5da-fe4e-4cf1-b28b-f5afa927a3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f745c3a-ef2a-4be5-8730-537c4bd2e75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d93ad5-8d97-4fd3-875a-d0b7e2a5de5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9279943-1a31-440c-b7d2-07e1eee91d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156f0cd5-1e8c-4fae-bf10-7f58109f6ec2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8208570-5d61-4fe4-84bf-5412aa8d4034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e28f63-c033-41ae-8f51-3a5eee064bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8847d8-5dc8-472b-8f38-1f79479a1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92197e49-53a7-441b-8133-8608d342b922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014bcaa7-6107-4e80-baca-20db1778bde5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef24b34c-330f-4942-b42d-cf8fc6988b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1daba34-fc92-4947-acc9-c3979830111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bfcab7-24ac-4a9c-9ede-64a0c33f3696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "497d6cd8-eeb1-47ed-baa8-e708d5f520a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e281472e-e8ad-4d26-8efc-50a808412edc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b74e6d8-b47d-45c3-8558-c9627c3f2082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55cc5d3a-37e5-47f6-b3af-f3f63e0303cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2076cb97-6ca3-4795-8e5a-19967e5a118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58b04df-c395-42c1-acc7-b43d085b8f73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d00636ab-523c-43fe-85e5-39f1ab4affbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae9c9f5e-2528-4671-bc42-eaed6ddd23a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f823a48-5e83-4406-b375-f4cd4facc6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9c1fb9e-ec54-4ada-89d5-582807e4800d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56675f6a-152e-41b1-bd2d-dfa429c41104",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f630c177-9593-4031-aba0-7e32d300bb9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93f6e9bf-add4-48aa-b916-8472bb3479ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25034fa1-2abe-4d46-9fff-5a98ade406cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5d2189-13c3-4f4e-87e6-0872c1ee8c59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3b457ac-9cf6-4686-a831-3bd2e2925b67"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c65cf000-030c-47ea-a3cb-662bf1fede59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eece9c4-1e60-4c78-b005-5338179b9a1b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f08a8bb0-6f75-4ea3-9955-737f433ceaf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55421b01-13f2-4d81-9341-4f2c3dc59c74"
                }
              }
            ]
          },
          {
            "id": "b10dc3f0-f0f2-4b32-8758-d5981362aef6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4718b119-1087-45ff-922f-ab5b0cea7cd8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24ce72ac-07f4-436e-8005-75bc82e5fd74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c46d56e0-c5be-41a9-b3c6-ae41f0df7389"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78fa92cf-c56a-4a58-acf6-414cb958c3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf74ce3f-eaa1-40da-8586-daccfcca92f7"
                    }
                  }
                ]
              },
              {
                "id": "566b335a-281d-4627-9abb-b24e3c7baec3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89418f7-1583-4bc1-92c7-c969ee7fa27b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bc7d695-3d94-4384-8ee7-970a569fa3d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96fab644-84ea-42c5-9867-f56b4e1912cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfea2fc9-ad35-4658-b243-cbb2191df765"
                    }
                  }
                ]
              },
              {
                "id": "3366df7d-de51-4dc3-961e-d3e961d3dd6b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a80e7bf-53da-4b63-a4a0-7acd0f4bfe71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd42576c-b5a4-4a19-96cd-9954e10b545c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dca5560-1b34-4633-9433-a30a99b01dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82d488cf-c448-4544-b971-ca981f309b01"
                    }
                  }
                ]
              },
              {
                "id": "e4d969fd-9b76-45b3-b1bd-1cc0d764b6ad",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f4ae4d-b41a-471a-92ad-5c8adeccf959",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0ecb452-0e62-4fae-aad2-ffb847cc63ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97af08ba-c326-43f2-98ca-cf5eb251f8d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ec00bcb5-5fb2-4017-abe3-21ee50c10b64"
                    }
                  }
                ]
              },
              {
                "id": "bcc62031-5f4f-42bc-989b-328a4cd7e29c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa55081-55ae-40c9-944a-03142c9fae5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7b0d214-c5aa-40c0-b18b-d11219930cf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee124ba6-0f61-4323-9f71-f6d01398188f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "38c16d2e-085b-4ed7-894d-8097b4942448"
                    }
                  }
                ]
              },
              {
                "id": "57948960-a97a-4fb0-ad6f-5b44d97a0984",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6c1cdaf-3a3d-4088-8718-1d00f2112920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eea160a8-dd29-471a-b4f7-743811080902"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "210b447f-d04e-49ee-985c-061f7f99fcd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa2d7abc-95bf-4698-925c-e04901b3c7b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e66fd95-e040-4b28-bcd9-98c3beaffd6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7d66547-5589-45ae-8894-babc97474e4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20cc659c-4af6-416f-986f-37c74aa5b51e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6153614b-66df-4f45-a3b4-d29a301f17bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fe75b68-686f-4b5b-92b1-8666892e220a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "441f2482-6349-4e97-b4a5-0f95a5235279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f635a805-da81-451f-9ffe-6575e3ad5548",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f94694a-5975-400b-a7b0-a6475a5c38a2"
            }
          }
        ]
      },
      {
        "id": "ff97365e-bbc7-4401-8341-17f166c65ba4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e6d6967d-58dc-44f3-a77d-7a8e8f7e88e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b0fe79a-3d20-4bfd-840e-190dbbc9c957",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a4e2aac-6d1e-491b-a38f-7eb358a6bdd6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f841141-071b-4b55-b425-ede10e8ea859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8995c7b-1f74-40a8-bdcc-327d649ea590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fef690c-447c-4e05-8096-0f2824f7583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1326941b-6a24-4456-b68d-9e822cdf090a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7c8717-2a0a-45ae-86fa-62c9c21b0021",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271a1104-66e7-4bb8-b96f-43b2cf720594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dc5633-5d1a-49e2-99a6-ee3fcacc8ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e5683f-9a10-4c9a-8cb7-227cedb087d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "527e1ac2-935a-4fcd-b2d5-d5647b30b6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2434046-8104-416a-b8f8-97c217b1ecde",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350d5fc-8c0c-47b9-8217-3deb4adeae8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c997f4-bdc4-4c5d-8590-80e1cd4fa843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22005c6-41b6-46e6-adc2-71ce5154a7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c487439b-0914-4fba-b93f-d43e019bdb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbb9a05-7d1a-45fd-a017-d0ca57cfe293",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17619f4a-aa0d-43c3-98b5-48f00775e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41fda38-7fd8-484f-8dd5-8a13a26aa700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19c3d0a-74c6-4247-b0c4-b076724f5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b9a1a7-e5de-4f1c-a3c5-ccf241b74f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c36adaf-f12f-4f98-b6d1-7e41cefdd009",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c41f01-f877-4ee7-a04d-70aa9a2f95ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ab8688-9fb4-4c47-9b45-ccd39af7c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2f92f-94e9-4b9f-a1ce-a51565a4c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb8b0b2-a09c-4599-a8c6-33a7d4d3eff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4db1c2-e9b9-4753-b128-7841d48f3691",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fa4a32-a83f-4969-9b1f-e290c4b76589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773803b5-2c3f-46ce-9615-bf81cf219fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c63701c-76fe-40c3-a0b7-47cfaa2835a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "888f4103-97c3-449d-9296-28273d097396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe5a56-bb68-4337-8a4b-2f6ca5475e68",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d1f016-c538-4abf-a122-eeb365d0aee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bbde69-1835-4582-8d42-7f988539f8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23695589-966f-4e92-8f93-cd1845663e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce478c3c-dc66-4bd6-ae3a-4e9333a6ca4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e985aa96-4295-401a-8f4e-7da7d515b090",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc1a94f-3f79-4d96-b071-7c38442582f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de655d91-079b-496e-9b36-a70341583b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dd44e6-922c-48cd-b9e1-f1a4e1bbf5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7f94d3-25d8-4ca7-84e9-3aa7ba670b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b63837d-2204-4296-800c-20f41438040e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa685e-bd20-41da-b32d-bc32cd306684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b9b887-c744-44a1-9977-cf5e395b4454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddd6266-9de0-4342-9488-613fabda0844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c02a48-3f3e-4132-b0a1-94bce6570997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c51f59-667d-4510-86ae-ae871253bf38",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d977f6-d3e1-4fca-8b52-40afa5fc2335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edf3413-d06f-4d6a-ac12-0a9ad6fdb02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ee2e30-fa40-41f3-82f5-7fb5cdad808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6715ed-9cfb-45f1-838e-d33af5bca24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e5609f-c9e2-48be-9efc-413786009373",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4808de93-f926-447b-a203-a171372752f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa59aff-9098-4573-8a07-b75e18d9eba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ea1e16-5015-45df-bc3c-299b7c01fc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "291a8881-d6af-43b6-9bce-be0cc6b5a4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30accd5a-6fbf-468b-8402-81e91bb240a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef6300e-eb91-4e5b-8c8c-c1963cd335f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d842f59e-c1b6-49a7-a847-29e483564ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3c8237-4cb9-4530-8e36-d1672e79e761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3de33270-f39c-4276-8110-349af6ea382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920deda6-f5c3-4925-ac8c-0f8adfb16b46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a64d8b-2778-4dc6-b898-c9d6620e84bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9deefd-ad0e-477d-98ca-e8391a8c1d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea13660-616d-45d2-88b9-f509fcd7491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06582fe4-f613-4732-851d-1300d2505075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee8c674-6766-42c6-a51a-f17cb9c77383",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d14a88b-7846-4761-b109-e13cc086bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0128bf29-f603-4683-bac8-a34d162bdf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23d0f51-daf6-4665-9997-91a673bc0d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe17bdd5-ae9a-45c3-9aa0-59a536f1ef9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce0d60d-0825-4ae6-b486-77d5377361a4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5243a59-0df5-4fa2-aab4-76fdf2dcbb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4876d3f9-de4a-4d72-beae-f3f0e0f19b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0278bda-bbf3-47ee-92a3-b41a67613ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a98559f-5c6e-420a-921b-24f301700537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a26f6-6bc2-4c2a-9340-cbacad290762",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952a0bcc-2d5b-47b6-a601-460e1fb5317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed221d0-f1a2-48b9-89eb-47483525ae85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b833c1-8faa-427c-8dd0-8be393e841a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ae4f3b-50a6-4ea4-9e40-ae7e4cb1e8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abe18cb-7b4f-4032-800d-5e837bbc2336",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f307d3-b57b-4424-90b2-d2eaf5950d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b130ce-92fd-4a99-b3c3-efec150aa6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f523a74-1a0f-40cf-bb97-cb4ceda56556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3a2c4f-59d1-42f0-9e17-50ca8a03ee25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3dcf1-d19c-451d-b2e5-5908931500b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e07c88-ccbe-4498-83ce-0bc45c20f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baecaab-5034-446c-8bec-9ecbad6e4600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae0294a-5a88-4fc8-8df6-0064af2609d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "301bbd3e-449e-40eb-852e-99264198d303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0082f0-aecc-490e-9960-240cb00c3506",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706c4d78-5ee0-48ab-b098-d6d56b78883b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8f4eb4-6138-48d7-bdb1-1f4d28797f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbef41c-df54-4e44-a36e-7fe4428dd870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfd5ac7-637c-4d20-8f7a-9214dd8d95be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be60211c-848b-4834-a4d3-1fb425a53e4c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6702a69b-9058-4f25-9b21-f8f402ce218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b88dfe-c55b-475b-89dd-99a9010ec236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed1c8b9-c72e-4951-988d-8f487334b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfa60a9-af2b-44a2-b99f-2ac2c499e98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea07860-af25-4f4e-bd10-3adffebb9575",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49b1e47-3c08-47e2-a6df-85e1b638477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0db62be-54a9-470a-9aeb-31413dd5bb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c93586-d08c-44c8-91a4-84436f45558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ce8d99-4362-453e-9ac7-e2f7fbd94de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0409ca2-32d8-4270-bf83-f6f088279914",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166f7bf6-0e13-4c12-83d5-0f33b29a59ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65e3709-e64c-455e-b15d-9d1576cc81ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b834b29f-59de-44eb-a79b-74cc50d680da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8902ac6-b457-4356-a176-37fc86bb4e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78890f-1e37-4e12-bbdb-6a68a4bffcbb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d841f8-7a98-4ed6-94ec-e543821d3d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d518388-43f4-427a-94f5-617107034586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e199f93f-9405-4c96-814b-9aa5d1f4a15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39bc31f2-27a7-4cd7-98a2-adf8f80c371c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae5681-2b57-4580-a1d9-6079d2eb50b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d01cbd-7bdd-4c1a-88e0-7e250a9b15d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ec4026-b4a4-44d6-b5ec-0870accdeb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7ce421-939b-4cbe-b0f7-e5c106f01718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10864670-1641-4c9c-a390-359a33669690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7617a8c7-b9be-400b-9bfd-1fcff4f1cf1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e3d16a-5aeb-47d1-ae92-fec05ac57799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783755dd-ac1b-4ccb-9fde-fc6428bf26d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032df2c-f4bd-4d8c-9adc-8ae2a000a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca030e3f-82c9-4079-aa76-6c9b22dadd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3aa155-7b48-4937-a0d9-949c72d00c60",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdc3aa9-7db6-4aa9-a0dd-4ede8eab82f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f168ab89-1a2f-488e-835d-3b253195518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b885c8e-b504-4977-85c7-474a5f7dbf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6bf1f5-62ce-467b-8b98-12c0c140c949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc4c829-0205-48ca-874c-0d8d55173730",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995aa7c6-b780-46db-ba07-87f008157e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ca9532-ef86-4679-ad56-28e2a5aa3be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc52bfe-a713-4fe0-a67f-0feba59e7b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd206418-eba4-4dad-904e-56d74703b26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd5888e-3f8a-4084-a138-dea56d9aabb7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf0141a-3bb3-427e-8d33-eb1fc78d7536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b39078-de34-4fa7-8822-c2ed0179f8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5f890e-1147-468a-b40b-42e107f1c375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5f5547-4abc-4fdc-ad81-91a078916f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aab1ed-0123-46d7-bf61-679379d40d97",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3150c1a-6c93-44a6-8b91-3a706cfd4953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df49adbd-1288-47d7-b74c-8e09401a7e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9aedf9-dade-4a7f-ab63-21ebb529c835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa70b90d-d53b-4d39-8684-66e74bb096c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb00f40-f6dc-4bb5-9dea-98f35427513d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8445380-af77-4f2a-a648-3900545abe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663994dd-0ad5-425d-9837-866750df38f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9158f6c-d2fc-44d9-ab3f-791209955cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c3af2b-e680-4008-8bc2-874542afdbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a7f3c-ee3d-4118-a6c0-f00494b52764",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777d7e5-6d5f-4bc7-9f34-c85ec5da61f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37372e59-157c-41a2-a70f-a5de7f7a31f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599161ca-badd-4442-a7c2-e37380fffbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c42d262-f5bb-4f1b-9956-9951d95ec6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcd751d-07c5-4294-a40d-32011b2d8564",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c509475-d835-47e3-979e-45bd4c1bafbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6714663e-f89d-4376-8a52-9a1ff2670fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d208c6-e893-448c-9ce7-4b28588523bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b925a9ac-4589-4737-a4ea-98a3c7645f02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a83490b3-ed90-4e94-9cac-a1bdbdbb8f34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1067d728-7d7a-4d21-8bdb-3f6d86f2e44b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5be630-f606-428d-b112-8c3719098a4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2c0921-f200-468c-8b44-1cc6c1c44b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf72f3-d72d-40ca-826a-9f513000ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "049fe395-6bdf-452c-b6fb-f250b1039bd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d82609b3-d87d-411f-980d-67bbe532e32a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1fe5d46-354f-4bcb-abce-da490ba94019"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b7c63f-9095-4c22-9f0e-77429a70769d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "414057c0-7a5e-4440-a516-8feda242a158"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcda0362-674f-4d42-a9a4-db36cdfb3504",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89cfbd2d-bce1-439f-bfd1-e4c0fd53d2fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f75555fe-64d1-492b-8425-4d1cd6fc9276",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1a47664-2296-4d74-82e4-9ee8791ec3f4"
            }
          }
        ]
      },
      {
        "id": "bd48ebf4-4f0a-40fc-8665-6dd6f20b8167",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "28123d27-ccb0-4256-b12a-954ace5c822e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbf5f821-2b81-4bdb-b0fa-a4448b3f0f3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ba6fc87-5db9-4613-ab8f-24dc16eae577",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9789b513-a16d-458e-8783-a0fed5e56e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fde4d7-3b6c-4d7f-8869-dac7b1375a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10515b6e-dd25-4a47-b687-0ba2e36eecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da7e58d-9425-4b4c-89af-94a9411b275c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb100d9-6535-4ffd-a778-0b7f8e8f8768",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cebe197-3436-41be-a744-76d9031582de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b981fd41-efeb-424b-a1c6-4a8d75b70924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f353a3c-a64d-4f1d-9dd4-3410ccedd133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a75bc9-a9c0-4eb6-8448-15e0e0b92b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7129e2-a023-441a-a864-00aafa5d6942",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cb324c-c5bb-4795-bcc9-c385c2e08540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4204ec82-168a-4944-9c06-d36ed4b84636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bc3c25-91df-45d6-9805-d64865484041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfd7dfa-6b90-4c6e-b400-b24eb5ec2e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9d2e83-f95c-4c11-83d7-33e8f04802af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a817cd-0860-4a0f-b6b1-853498226213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440af1bf-fd22-42d1-a30b-6b04dbd61b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9861ac01-5960-4439-86c4-88b73e3cfc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49365510-63ca-4b7d-91c2-88b1a88fe4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db68ba-4c64-496d-831d-35e0d44bd191",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2960f95-b586-4054-a431-07433e274ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4f079-8d4a-440b-bd36-8f21d06ac329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174dec92-847b-45de-a728-9e3e70be50fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa8db47-9206-4795-9e5b-f36ed5b16e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885eb0d2-29f7-4034-b11d-3708736ff259",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a32af3-2da7-4160-a8cc-653f088f3423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d31926-4d27-4872-99ef-46276acfedb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8a8450-2a3d-4f6d-ad2e-1792d5b0b46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f91d29-1d72-4517-929b-2e301ec7ce37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb19d96b-a0ae-4fe7-bba2-9b1b06b76110",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dccd739-be33-46d9-8174-d9152022e23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e7f7a0-306d-43af-9a02-92112a680c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b997150-a511-489a-b940-62da8e721f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "256a0a4b-56ec-4714-8e88-1e99d0754930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e605f09-c9b1-426f-8ac5-c609b6c54e70",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf4d78-c327-4d7d-9c93-f37bc1f00dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb2a545-dce9-4a3e-99df-901e3feefb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a20574-ac96-4c48-8f78-5c40716375b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecebe25d-26f6-4e25-a4b8-182c36645c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5aaf1b-fd68-4fcb-9103-f465ab8cb384",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336ea13f-93b8-4e63-893b-9f5efe79fb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61871ce-f988-424f-a318-6673f530320c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe955121-c9bd-4737-bd68-6e16f12ce0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c1ed99-9b31-422c-b9cf-d093d953902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1231f2db-61ca-45cb-837e-88e65c02ce6e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c563d6-788e-4599-84c8-00609068615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794df65c-ab2b-466c-9c1f-1e1f71d19e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1f539-2faf-4186-b33e-e4bb8064d8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d577646-59e1-4822-8940-7612f85edda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a01586-5f7b-4346-a803-8296994920b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a417428-efe3-47b1-b6f2-268de7295c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2432942d-bc7e-4978-989c-6da441b5147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b2b3c4-571d-4cd9-bbe5-5d1c79b3f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0ce84e-b9e8-4397-82f3-8a1c6aac2de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489fd9e-5bf8-4998-8868-8b860ce12ee2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082504b5-7cc9-4fbb-ad1e-a0c34659030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b399a38-9ad2-40bb-9648-addb14506dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c21540-f45b-4d56-b123-4b381826b76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26c9cfee-2ba1-487e-833e-a54b18f7583c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece4084-7491-4623-847f-2856b5a8f8ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c8f2b6-84fe-4923-9b1c-b6ae682d809a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6bb35e-b560-42f3-8b6c-584a5290735e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375bd1f9-001b-49e6-8ed8-f762020c093f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e312befa-d337-47e7-a5c0-ae6a3d25bb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47667ec9-e6e8-4c0c-8412-9147ca51211c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0dacba-ec1a-4bd1-8db2-b98c97dd1af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2537ee28-6da9-45fc-b30f-c8bd29867f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa706c2-79b8-4369-9667-c2032af7ba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e530e53a-327d-47b8-a3ad-b7668e2c7bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f237092-df4e-4468-a2d2-64daaf69df03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d967161f-79f4-4ae7-af40-f7d3d6fc271e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bdaff9-f8ca-4723-8be6-b7ceea602a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a25709-ab6c-42d4-a1d1-5c128517f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6882d8f7-67fc-40c7-b6d1-709c35ba011e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd51123-be9b-442f-8eff-de307757cf63",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc7cd7d-6bb7-465e-9fd3-95d489ddc53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a5ab9f-6fd2-4b0c-84f6-70cc585113cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f27cad-56e5-4dd5-880c-6e4eeedf7380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45da9fe-c6dd-4974-a9ca-a7d1d4ced959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657aa706-176a-4a0b-9824-5f2c11eb6573",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b66ffc-3abd-4d60-bd04-1429240be7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6513c2e9-80a0-4639-a399-481e7dfcbc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458a91c9-9453-4428-94f4-fbf4124bac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c31e819-70f3-477d-9041-6d700b747dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab26c1f-28bf-466a-8e70-09e2722fabb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90496e83-e746-4442-9985-fcc82f94d029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b83f17-96d4-4917-8968-752624bbd436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e9ca81-c465-46d2-88f4-c3f221fd2624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29cf230-9c4e-4764-8bff-3a5c5c7c67a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c791d76-ef65-49e2-aa9a-b480eda6cc3e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1d2f5-6c39-44b2-ab4a-b43fc61433bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81717c9c-f7f2-48a8-b8a5-c6d33b69be83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec9410-60e0-482c-ab34-013f63c2f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0e356a-2f0f-4e6c-86ce-34a9e7e8dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f8263-690a-47ff-af3a-d5967e04d555",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1243c73-c41b-44fc-aa54-f973da8597dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14008a0a-e440-4ba1-a3f3-6cdf115055a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0326857-a187-4499-a7a5-44b4324a5313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9504ba-9c68-4962-8e56-ed3817b545b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18500758-1be6-4dc3-aed7-8f6b3192ec49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ddf843-4254-4df1-9cd9-fe367696b4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0d7801-b17c-42a7-8a2d-bac58fbcfdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca377735-429b-4e96-aac1-65d8d722381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7cd764-691e-4015-a1bf-e2bf03800451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f887d78-0e01-4326-bd3f-0529092f4143",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da730b39-8f43-4956-acd0-2f61ad311257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42163d1-fe09-4056-9e64-f3509fea008e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4881326-36df-4c0e-8950-7df7b0a7d13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df3ea78-7f4b-481e-882d-627365250061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f892fa35-1316-43c8-877b-168d21d0951b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c07239-ebe3-49d3-bac1-7611fb99b842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f194bc-f7c5-4b8c-b2fd-f5e67f3886d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef439c7e-aac5-4f13-a1dc-d57abfab4369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed55b5dc-80b8-4b61-a43c-7f3a91920977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daaf7d8-77ec-4520-8982-9112fcbae464",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acec122-093d-4af1-b2ac-6605ac6a13bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32e9843-0c9a-443c-a956-c8a2d29f7f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63484f0c-db0a-47c2-ae3f-777d87c368b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57afa4e6-5ed6-41af-a9d3-7b0a33b84a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23675c0e-32ea-4963-9162-1604563e08cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd791975-abed-485c-b694-f805e0a19423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5465e9-6f8c-4a7d-84ea-cd634e2188e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967cf7e8-cbde-4abb-9242-8b6424f26b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa65e54c-8c40-4e04-bd3d-f6bceebe9730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6be7be8-f144-4b3e-ba25-392a25716746",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf8baa0-41d8-45b6-819e-fa75baec9fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8123ab-c491-4479-b3b1-146e9c914e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62720ded-eea7-424f-bf07-291bb765f1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "264af602-b39b-4229-ade1-3817588e12ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df6850c-771f-4beb-878c-90a798b461b4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac988697-60b8-446e-a3b7-8f5eb549f1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff2e691-d3aa-49a0-aca0-d120d25a9808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97aed0-365e-48bd-8b48-13e4b939a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a6d689-c601-46b2-9c51-cb71af902d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20486b11-3ac7-47e4-9ef9-89ac96cf0de1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603e1bb4-37d4-417d-81f3-88247500bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42024ae4-38df-4198-bf94-0ed47fd1ea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a581ce20-2a35-4b0b-87ab-3ccd54c03392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c77a046-45c5-4a39-939a-11cc18a93654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15db5544-dce5-4d3b-acd9-66bd0e98ff99",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3e3de6-3e17-4c1d-be4b-89762dfe8b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135e5799-c0f8-4641-bfae-9ddf4b534c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b9e5a6-fae8-4c26-a4b2-2cd6b1b3bca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2903253f-82a4-47b8-ac98-c4ba796b71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9471b64-b6a2-49a7-af6d-a27be1238175",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85474f96-50df-483b-bdac-8575c931ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c6c5e8-cfbb-4be9-9798-8e94d0c698b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60591b7-9a1c-4c9e-8a22-0b9db4530308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7101c9-709e-4562-a1e6-88eb89706112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be40500-e7cf-44c3-a3ec-198de103b6f4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d4400-a8db-48bf-a918-19cd6dc01bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a115eacd-de3c-42ba-937b-9724a811813a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb00c1c-bf27-487a-ac66-d4cf63b1cd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b1d8ca-3fc1-4732-befe-95261c5f52c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9df9f37-8ad2-45bc-869e-bab24b6f2904",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e862a3d-ece9-46eb-b50e-ea86c7d71e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12916204-2a45-4373-b9bf-88315f754f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4f5cb2-a52b-412c-afbc-c64e53d3ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53f5665-8305-4b87-911a-b3c8b0c55ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a986c49-daf6-4919-8e1f-59bfbe97ad9b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c688133-37cf-4863-85fc-76247686a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65802539-f60c-4012-a532-b680530b2249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a71c00f-0e39-4724-adc9-00efa97acfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57561d72-1764-4b3d-9396-5da1fa096a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9ff2ab-c333-49fd-9feb-746b3d18800a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581be858-a2de-4ada-8de7-570474d387a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3d59e8-1e6a-4fc8-a4bc-60ef48125832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4026d1e0-34dd-449f-9489-deb2eef86676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c38b2a8-c183-42fe-b7a9-5cb77047ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b384dc8d-b31b-4d4a-96d1-b0bc38f7942f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99cc28c-7f23-41d1-a836-138380258d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29d51e3-92c9-42a9-bcfb-d52d42b7b172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275e43d8-aff8-469f-926f-a62233c3552b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5683d1c9-ef69-46f9-b743-0738e24de022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cbd923-7928-472b-adaf-0631f51d5cc2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50a140b-4e20-441e-a8a7-76fb4416a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1011a45a-40b6-4af6-88b3-d4347343cdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df8b4da-d46c-4baa-8dc9-74c98585b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7b3d5b-b2da-42a1-aeb5-b40afc04b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e843f5d4-5bde-4c7f-869f-f92b63c51100",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed46108-5089-4820-bf61-4a0a2476c196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d7773c-7844-4040-b637-1fafaab3631d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c49505-66fb-4db2-be5b-b21909ec2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18155b0a-f159-409c-aa77-a2d973245d65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b502345f-e992-4d30-933f-1760c3a7d814",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5275645f-7e1b-46c8-86ec-c663f994be3a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6449bf2d-0e72-45bd-86c2-1c926329c621",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f0b709-c1e3-4289-a254-4ad9ccd9f1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81df44f2-4fdb-49db-9b57-8c114d46a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bf4762e-e6dd-4d1c-88f4-40ec81bab5bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5b25e28-424a-4cee-8dbe-6ca8e385ce48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f409375-1a40-46da-8e2a-29783a2d5055"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba75d01-9f6d-42d0-af00-49779efceb09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdd4e3b9-a5f1-4d0a-8095-03a66ee7322f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12ab1d24-be34-4b29-9051-812f1fe6e1aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a70ec6e0-8dd5-476b-94f2-fae0bf4c881c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbfecc2d-fd1f-4c3e-85f7-41d45a511417",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "492afdc2-c40f-425c-b34a-f05300cc3289"
            }
          }
        ]
      },
      {
        "id": "e52c3d7d-f1eb-46d8-ac9a-16ed0987a0f6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fdbc3495-c58e-4a92-87be-3d70a80c706b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b16256e0-0504-45d1-947c-8735f4ae445c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cda7f84-db17-4aeb-968d-9dc5b75b9010",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f6cbc0-68f9-4da9-b387-02215dc7244f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19833b80-f56d-4133-b3d8-936cdcef6a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfbfcc6-3806-4fc9-92ca-3d92f5dee43b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7272b59-542a-4018-a940-e80fca8b57bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc16223-7aff-42ab-9008-cb3fb232615c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61f0400-c35e-43cc-aaae-d0ba219fb4e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c001a31-ca73-41cd-8774-9c9afc1fc102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09148c08-9335-4652-9ae0-665ff1266b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603046a9-a03d-43b0-979e-82da2e5e0fa6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bcba4f-8344-4732-802c-ba6a333f5d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c4b9b7-bb78-4365-a0ac-89939cc03b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e1e083-fc2f-4474-8dc7-10bf056357db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3fcf8d-5983-4262-8ef8-2f1460f5bc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d2adf6-3c63-4318-b95d-e5ccd39dbbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a787e4d-2a17-4739-a8d8-b2733efe0739",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d64ab9-2efa-451c-92b0-dc47c11f0046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a6b662-f90b-4649-a5e6-1999afc1a210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735dce80-7a69-4b51-aed2-ce662595d3c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a9d4b6-69bc-49f8-ab6a-a94fbcec9dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c599898d-e34c-41ef-bbbd-839b80d82d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deec2e7e-80a7-48aa-9629-c5a2c9263ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97daddf5-1f3d-4dd6-862c-74c5c6578331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3cc700-43f9-4b57-9516-3c29d2c28a58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e7bd7e-9eb6-4a62-8532-f1d0f90f0796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e383676-032a-4e43-9ba0-b77a6aafeb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5395d7e-9da0-4f30-9c3d-cbfa8fb22721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e731aca-8f3a-46fa-b208-fe7495729815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab401541-001f-480d-8664-afe6f0407fb4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9090342-f2f2-43ea-b922-a39594a05fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4887595c-3c23-4d94-b3ca-8cd210103110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48b7c3a-4930-4857-b37d-75dbe42494ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a6b884-1684-4007-9cab-44e60a3baea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bbbc41-58f7-47d4-97ae-cd22e33695b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef6a320-14dc-4f68-9b25-6ba94ae7475d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3647162e-3e40-4f28-8c63-74022f4d8a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934efbce-d751-4460-af19-ffbb38aef3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0828911-6041-4db4-9251-0eebc6beaf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5996b772-6fa1-4a88-86f2-5e5a03433301",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6545ff0-802a-4b10-9ea4-b19c6934f1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64148d6e-b181-42ac-8f43-ea9effd646ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fd72de-c08b-4857-a280-7abeef5f0a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f08829e-b91e-48b5-b084-2eb7bbea8842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5dd3a7-d44c-43df-badc-9cd550dc469d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bc8518-76d3-40f7-9b9c-d92f7fd8ee53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1829555d-d666-49e6-ad93-e3283415405d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f29ce-38e1-4ebe-b190-39f8985b1c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa59b6a-3dad-4520-9527-21be591e9e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b331ba-61f9-46e2-8747-cab12d9113ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7379be5-3f92-4f2b-bdd8-1067e16468c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83b2fbc7-6c61-4ed2-86ec-811f62e4441e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec605e0-65bd-4888-a8d3-fc9c72314a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94bd926-efe0-4d66-a316-170307364b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9864b965-7216-44ed-a566-2e315332e80c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c76544-086f-459e-bc08-6c7b6225691b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a16ec0-fe3a-4725-bcbb-f0b3ea3480a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07874901-599b-4756-8966-f2f23b912a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46459258-dea6-4276-ae1d-2e43c99643d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6628042e-286e-4633-a581-4529a3d05557",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7549c99c-3baa-4db5-bfc0-c144b1d57893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620a2d07-9ffe-4dea-b6b1-22d66decc650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcf2d0e-1a77-4cb1-8e8a-6bcf35d653ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4bdb25-2ff3-4c9d-8f03-a9266fc9912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d32a7c2-da8c-4c55-b87a-1d69d90abe1c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c26d45-eee6-4b5d-8c5e-ef14917b70f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77411fc-7b4b-4fae-af55-32ec8b59282d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e190c-fe6f-4ca8-ad01-d2ebf7408e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf64b8e6-e3cf-4f3c-ae6c-5d7969cd88e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab1b26e-cfb1-44d4-b96d-84edc0459256",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d9b2ca-736f-4ba1-bc11-1c563d243413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a6346a-99de-4bba-b4d5-a2fcf833bf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c010523d-8785-4329-9897-653161fd9457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082b6fc4-c80c-445a-b634-1178bccb595a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f368acd7-7947-4e8e-9ba3-b3edbad3f26b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf9bf6-c67b-4be1-98a9-a620eb72087e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f7e0c2-5519-479a-81eb-0791eae42209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b5b328-c028-470a-b297-77d00aee35d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a97208-8a8d-40f2-84b4-3084f2ee8741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e2de69-cbae-4fad-aa0a-dc52eda8c8d6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3990f8f5-cba1-41f0-93e6-8245873c9742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c436be92-02af-49e9-94d4-f51e965d4014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e8e16c-5ab5-4817-a8df-7d3951ffd6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c56516e-6ac0-42f1-a9a5-700cde1e6e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b0d905-4bac-445a-b57a-05b0fd774060",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0162676d-2bd4-4a5d-8331-a15e1136b57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d781e3f-1de8-406d-b2bc-d4f768fce917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8090ba9-13b9-43fc-8799-2774c8ccf29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd924d-8fad-47e5-bf35-031e1b407ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fc183-a38f-4d27-a42d-d539641a4e1e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf95ac-bce6-4f2f-9477-5c0d6f07240d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1638d22d-27bf-485f-af59-622ac409654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41378d5-d1ee-44eb-a41d-1a0a4da8d2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cf4546-7ec9-4c22-b3d4-6662b5851ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf817a9-542c-44b8-8e21-2fc63dfb1094",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af354b8-c3b4-4a24-be2a-388b68b788ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2952ecde-e718-4951-94f7-04a397eb7279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c633dafa-6b9d-4871-acaa-c47a464399dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15e8c00-8037-42de-a590-5be53c5d82b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbb023c-d27d-4c3c-9c6f-fbc26330e1a8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93485bca-c0bd-4717-bc27-af3c1cba07cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723e1232-b6df-405f-a501-e3faf5197b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34334588-ad9c-4cca-bf6c-d8f8e3fcdd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66d7b9f-ff7e-41eb-bfe3-49c2096ab3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aed85a-ed90-4733-a682-dfd8c640e9fe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82760285-dbfd-4056-af54-8a31897cd6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f7097d-177f-4119-83de-778c4145ade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dbc95c-2dbf-45e3-9e81-10925fb2f6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498626c8-1f3a-440b-8606-3f62fd6d7b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91776d76-9970-410a-8e01-36d3b93519f4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f3ec0-4c09-4748-94a6-1b83b0bd86e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f27c01d-d822-44d5-b794-5c3740bc38f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d029218e-6e36-4ac9-99d8-539fa4b42004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fae4acd-ebb1-431c-bb5b-cf96a6e1bec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbe0c2a-dbed-48ff-8ea8-1b5d5250ee2e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80751b2-0c8d-4f65-8ffd-e2238a0e345a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ead186b-2a19-42e0-bfe4-640812e52c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e96764-c10b-4bdd-8e45-ded15b7a1db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053c402d-505e-4bc4-afee-0a692dab8557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7a786-41e6-40f5-a462-ff461c38cccb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569753f7-1955-4090-a0bc-c80f804789a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b9d86e-2d28-45e4-80cc-0aec4c5c597a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf761b-6748-4527-a6e2-f849814c7380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe2bbb9-88e5-407c-8c11-40ebaa2b9646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8266e43-a6da-4ddc-a1de-36cb228cccc1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875951c2-fe3e-4b0f-b653-460af97c95e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991a127d-5001-418c-8aac-404d9f93647c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4591ae90-cfb8-421a-ac47-38f2fbd1873b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef06a2b-b96f-4b7c-8232-769886400cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bcff3d-e073-4877-9e7f-23393f04cd39",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b090c1a-51eb-4507-8c7d-223ce8377718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354e17da-f689-47c5-90db-e16f81293f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963131d8-4818-4978-a270-ec5b644fe175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6afb96-1045-4098-8cf6-b193a86c7d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70f987d-b5f1-4036-b73e-b781f0f2b778",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdfaa23-4d38-45be-ac51-d1aab35d3839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00cdbeec-2a0a-4ae9-bd45-61af3ec1c2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8335ff-4585-489f-888d-f00b903dbc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73019dab-95f1-4e4e-ad7a-937696658e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b094c52-52fd-42e7-8442-ba7c65d82830",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddf3c63-75af-470f-b955-c295aba2957c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0a2a6c-03f0-4b57-aea6-b121c890478a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ccd966-673d-48cc-ba41-8ac05fe6497b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7f290f-a039-4299-b2ef-f8042e8d8619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4cdf9f-6fe4-46d0-a16e-43a1aa4103c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193e8fa-c3e2-4729-90bc-5ebdc7a7e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8820308-da53-4d91-bf9f-7c428621848c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf03e452-007b-4e98-bde3-1d506c4575f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349aa3c4-6154-4b4e-9479-78fad8dca17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f047e1-2128-45c3-8ff1-b820a81f2e67",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d636d2c-63c3-426a-ac13-948361e200f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f294a0ac-05ff-4418-8d13-7dfee3117c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835e550-99cd-42a0-b256-05c870084743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2091a7e8-ad85-43ae-a5da-97ae7a8c6f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adb6ad7-7d95-409e-bce6-9cc9d9144ee7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0286c82d-6142-4e13-9f31-213260b5a383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c01aad-9665-4c99-8e1a-e194a1a9a11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4af223-fd1c-40da-b6d7-80d0819ad212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bbffdc-179d-4a12-807e-8dee555ae40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d8a893-ab66-47b8-a9d0-0ef2d03332b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b550209b-0a12-4870-84f0-40a02ae37b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ac992b-fad3-48d3-a237-dcf12051848a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c26f291-970a-406d-9b6f-7854c4fc3219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de907de8-85c6-4b14-97ac-85a6e25784ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48152ff-fb5a-417e-9131-722144c242cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e150db44-cc2d-4aa6-972a-0c787167c74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da003d48-b5a3-4be1-ba6c-541f25fb4c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918ad360-6bac-4938-975d-7e5b3c9834de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74e9617-caae-4624-bbb4-bc6b473fcef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cb5674-d1f3-44d8-9a8d-7ee0b86642bc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f256ead0-64d6-400c-acdc-3273e935c644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cea6ec-cac9-46a0-805e-6457f42e4da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547c93e6-ded7-44f1-8788-6152c99aa831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee5fdf2-3c3b-4a45-a5d1-4fa014c121c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3095ea74-d7df-47e2-87cb-ae40a74dc2ce",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff603eb-01ce-4e8f-a186-a44aeb501f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c854f9b6-ea3b-4755-a8f3-b916a6a9d202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635f4a7b-9393-4442-ad26-7274314cc551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afba4000-04ff-414d-82f1-b2bd797e80f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02625b68-41e0-4c37-9175-500f4c8411e8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff6d91-7bcc-4f77-8950-e463619ee932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb00d4de-2751-4cc9-b9de-49dfadc7f7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca8e7a-12bf-4c45-86c0-e618335be714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c85f8f0-89a9-4334-a441-665a0a7f8643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0380d74-3329-4f43-a9e7-6ae76b896db6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91aeeb6-5fa7-41c7-b004-173262c26990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21af109-2bf1-4a65-96e2-398de631bef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae3de00-7363-4b73-bdbc-d75a994db1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a01b582-87a3-4c6e-9991-66de6e07e341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed6ed81-2cd6-4312-99b5-d6a53e39f9c2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b4aab-42a4-46f2-b89f-ab792b8033fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c0ad32-f0e1-40ab-b45e-8c46a9366bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fc4682-3f16-4c14-b33b-cc958e3a689e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1aaf5f-21c4-48f4-a72c-cebea228c745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ed722-1082-4133-9124-895374aca296",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6de812e-2f8a-44b9-a5e9-4db46e846ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58358265-97ab-4f07-ac95-aa5af1d041b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0fc518-4cb7-45a2-9e16-6ec7208e6332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06703996-3021-4fe3-a5ac-4b8dbcc54f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b6dbfe-447c-458b-b261-71e74ac7fd35",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf832d4-0d42-4acb-86d7-85ba4359f01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5facdb46-29d5-4ab0-9231-f2f9964b649b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520d7372-133a-4444-bf6a-5d3190769f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b2b077-3d80-4887-a70c-e501f6c12a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50237c40-8283-4302-aaac-5315b6951bb4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60be7f62-b0eb-490a-bab8-cb3362dc0083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691e2a61-d987-41e9-8abe-a386ad15484f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074b5b46-5675-41f9-a6ba-c35a2c9f54a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b9d2ae-a959-4451-ae61-a06a9a79f2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150a9dd2-3590-4411-a84c-06138ee768bb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4532ed6-d82e-4f38-b9b4-11398f1c67d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddec672d-850d-4c95-a139-52b3fac49e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461cc07e-8e96-46a9-af5f-f52caddd258a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0035b422-4a66-4bd7-af85-e107d8f5c8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f06b8a2-f327-4947-83c7-2def5af7a854",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54d086f-3d16-44da-a267-ec0dfbb7dba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea0d6ab-40f2-4354-925c-5fade30e3cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafd276e-7dcb-441e-a54a-ae94b9a6650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be042e86-85fe-485c-9a0a-3e180ae3828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eedb146-f933-49eb-b517-93c282174e21",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b81eb0c-0d83-46be-bf6d-33d2bcda323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecddc28c-fa6d-4084-9f93-b4c56422e5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d74c0d6-3773-4279-a98e-73628f1793b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4bc449-5fbd-41ed-96ac-5877cdb2581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3dbe3-9640-4712-8947-b420d44b8600",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaca8d1-5106-48c1-aa5e-7480c76d1fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6aff498-1ca0-492e-9098-27be6ac49d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d99ea-7326-41c5-b405-b47c103fdb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0650e8bb-0506-4cce-bc55-e9050d55ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c459f1a4-f398-4f70-8336-048eabce6b62",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f64b98-5984-4dd3-8116-522dfd7d2f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94906c03-9f4b-49d6-bb2c-cd78fde7a798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4eaa10-0062-41f7-9f01-eda61a2742b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711387ea-a0ea-4ecf-8894-e9300d22b6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcd19e5-f182-46aa-ab06-e82bc341f560",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd0f40d-9a3d-4f93-ad86-b8bea47aa155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bca271-928b-4b49-8632-8a059dbac346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daf3ec2-c903-4843-9e32-c5f26e972f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b731fb0-5fc3-4233-9d54-6375e477a548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b888186-1d5b-47d6-8903-447a718dacd7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08269552-5ce2-4286-8448-fba78e99546d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c695ced-ee0d-423a-b6da-ff1d3b64d73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f630c7e0-ee9d-4207-ad5e-5b871e2de6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74b75e7-d654-415e-95bb-fa638d97880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b94cc1-fc5f-47ed-a193-f05f78e57489",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641519b9-2db3-4270-aab2-eab06eb17e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba8c399-4e56-4403-a0c0-08b289296b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7289f6-48fc-4c5e-936a-2d5c32f56a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aee5304-097c-4f8c-87a4-90121c0d9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e9032-42fc-4d80-8fe6-1689a4c586fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925ee870-957c-4441-a0c1-afafc49e5dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56467600-f4ff-4f9b-ba8e-22a1c0e270ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48149659-b910-4943-8ffb-37b4966b57cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aa85dd-ba97-452e-ac7f-c49b01e05760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16809655-852d-42c8-ae0b-4fed4fe9c2ac",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228f23b8-7a15-4d74-a31f-6cc7074fae72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e92935a-1f34-40a0-be69-e3b77e531169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07fbcbd-7ff6-4cda-9749-c3473bfa3003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5909aed3-b128-4376-bbc9-fc4c98941e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7862d7e-1650-40d1-8fbe-4cbeb30c248f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8d30f-06c1-4102-925e-e91ffab0592c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a938a0ac-15f4-4f9a-9431-e4d136a54f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2b9eb1-bbce-4098-954a-2aefa4ee0145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bd8e9c-8548-44eb-8d7e-69f26e11b32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96411491-9d24-4f4c-87c0-3b94f65a4d94",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76705560-e04f-4d34-a425-73fa4424fae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85983655-18c1-4d92-b651-74c9a88692e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e36dad-2856-4086-9fa0-ed8df1f3af13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267c6ec0-01bc-4d6f-9ef8-38aa2fdb7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be0474-e5e7-4161-b70f-14d2414a4bc6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51be8c6a-25bb-45de-aafe-87562d9f0992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473915ec-bc7a-45c6-bc17-d0c6b1db1cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e38463-10ad-4907-9ce8-b6fd1284c135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6a36f2-d150-49b9-b244-9db0265c1f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062a064b-3728-4f5e-ad55-4e40b1dd9064",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5195cf97-9fa7-4a38-b83a-24dfb0681688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65bfc9a-a8a6-44a2-92c5-317ace01af35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02699b3e-fc14-442c-adc0-c6027fe23d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bfdeb8-1f81-43dc-8a51-ba8ca2d7d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977b0cc8-fbb9-4207-858f-e486b7178f13",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543f210d-83b2-4422-8bf1-534be3b307a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486ce882-5db2-49aa-b24e-332daa063ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a8a61c-5a8b-4dda-8621-0f5d3f9244d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22de1ae-c4c2-448f-9127-98099f16bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3887526-7a4a-494b-b9df-d3eb753b3933",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cdb72a-64cd-43ae-8c44-03866c59cc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea78387-1f68-4ebc-951d-84a27c4d4fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9209a63e-d28c-4b7f-a83d-b6d330ac7bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eea29d1-4cc3-43d1-abe9-05019799bf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f446abef-057a-437e-9435-a6ceaa256ee7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a8dcce-7c87-473b-84ca-d424abf0bdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd44159-c785-4a8b-8d78-9a1af57aee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01394782-2546-41d6-a5c0-50be4433fa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5c9e5a-76d1-4b9e-85d7-daecd825ccfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5ce537-ac64-407e-a369-7f77a8f7362b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe6fad1-4163-4f7d-9f33-088431a0e8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7a4f43-331b-4f67-9eac-1700db9bea34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb75175e-040d-41db-8af8-6ffb20057fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ab4287-21f8-44b4-a140-88a9700896aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31acde23-f9a1-4656-a02e-cbfdb3bf95ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c7203e-e71c-4a2c-8a2a-5d9e70944b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8504ec54-9282-4f93-8e65-7a247ff8ef2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd354e-30aa-43ea-8407-c08ad332fb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb67acf-e837-425f-a494-604072a64def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9dc147-d773-46af-bba2-41b9b873fad8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2f6742-f5eb-4ed0-a76e-73575480936c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f661171-c5a9-406f-9060-c900a8cabde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed52ec-48e7-44ca-8682-08a9e45ad829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c4b394-262f-4308-8842-1313c4905330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c430e5-f2a7-4ca5-a8e8-c8b2bd196876",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bfd381-edd9-4711-b4c7-36cfb766aa32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1ceec5-fd52-4bad-b3ed-b3a74e863207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c264922-72db-4eeb-aad7-035411f13f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527089bf-44e5-4dae-acea-7ae172f19fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a126a30-26aa-483f-b2ac-789c71efcc1e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a290702-00e7-4666-9bec-cf1b8f3a127c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4927c3-a286-415c-be67-9ee046e8bc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7f840-4f1b-45e2-b15c-545aabcc3e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fd3546-124b-475f-bc42-3dfa13ae7d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea575639-076b-46e6-8279-3c37fd8130c7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71075448-9f7e-4275-9aff-c6d78ea96d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb53428-49ca-462f-8247-9bed7e5519ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f953b-aa90-4444-8f38-94a3e17e3ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c75c387-dbce-4753-b56c-04d9861baa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8307236-64d0-4b89-b2a9-3723a19d336f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ecbb0a-cbe4-4aae-a586-8e906ed79e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce768e80-4bcf-4614-9d75-26b759e43e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8fb83f-ddd7-428a-9196-178ebb62f58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e1626d-75ae-4a7b-8f95-f85c21b7ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772c0abf-8a6a-44b2-8162-d0c35400deb6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e1f844-41cb-45a7-9489-7bab47646cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e14ec0c-c263-4a61-9e8e-d01b2fa2af28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e68cb5-f0c3-4eff-a910-778479eceb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ae2f61-5f41-44ac-804b-ca1f38995475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d999c83f-6d4f-4775-aaa6-d20bd8e1fa7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f503bd50-5e81-4f3a-8f19-a3be3f11ade7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c61f0fd-2643-4a6b-92cc-537939052037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fdd012-45db-43b2-a1e8-343521a19b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431dfc08-e854-4f20-b881-621ee2237b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b046f24d-35af-4439-ba61-f776a289499d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4722a8b0-8028-40a5-ad0b-dc48f9061bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b356f282-86e1-45ca-be61-b81e49222448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32d2579-0504-42d8-81a9-bae1c0e91528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90c8084-9817-4cca-9c6a-0eba2232195e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a8572-239e-4fd5-aa6a-aef2e2193841",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2aba990-e3aa-4566-aa51-a4a4a191aace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f967836e-3d3c-483a-8b34-454676ce8fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157a13b7-7ff0-44b7-978d-396d1906d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1244ca-24af-46c3-ac7d-b0a1323b50af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68503c21-60ed-440d-901e-67b04a9d3864",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb0ac69-b452-4f09-8992-5d7affac159e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edc2175-8663-460f-ac89-10784ecd67ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe9dc9-f10d-47c9-82d5-2161bc655d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10691279-54f7-422b-b9d0-97e393618e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac8456-fc00-4241-ad43-223695a0283d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb95d97-3318-4204-be39-f3ab9befd611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8bf3c07-2b21-4be5-aad4-12793af36d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6590ad-c82f-4477-96e9-c0c8236c08f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9eb08a2-ff01-4fd8-9bc7-9bb9748658db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df36b1-f3ff-43ed-8632-6c7beb9ea264",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609c2942-c611-40c3-a32e-42b9a5d562fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a20784-0042-4723-8e2a-44c3ec8e40c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e53067f-4daf-4ca8-9e63-c0e26842aa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6da056-7bd3-4e81-ae70-862e8e5d3103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7270bd-3d73-42a7-a022-382b0bb37af6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70d529-5ec1-41d7-a7e9-e4e984aad140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af832b5-dd19-4e78-a8f3-a444d28d49e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe37770-a6d3-439c-b789-573aa1ed1325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb86cd42-430c-463b-b367-d1af168c50c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f99e6ee-1ecc-4cea-b1dc-7eb662a0606c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caf489b-ec4c-4f99-8543-c4ce35b78d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f56bc6-4ee3-40fa-ba8e-6f2e3463e389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddaf552-02aa-4bc2-8b22-771e215e7db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d9047-5c9a-4468-859c-23c433be0fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7dd6c2-cc8b-4905-b066-a17d32797731",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9e0f3-998b-4aef-bb24-e1b65f1bce21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8f6d48-263c-4940-bd56-b8b70f1213bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da18e528-ddd7-47c7-8a0a-dc11f852c83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0aa8255-ac22-4b10-90f2-32815a795293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3aca71-1620-4d30-9e39-d9e79a9f36d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25653f13-20e9-486b-8311-ebfcbcafb914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2323d618-e059-44bf-a727-1a8ea951b217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35837d93-6541-42bf-bc2b-1a62f3fe4ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfac047-97c4-4fe6-8682-b8008c9e288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4978f24-4a18-4f9a-b4be-28770c059977",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baccc29-8c17-4293-bb69-3a82a6c9da34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0273f116-cf34-4046-b922-8233777ebd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801a104-3a50-42e9-9671-546aed772008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34f5552-651d-49db-ac74-5d793dfa1769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d4de38-9919-4021-a82a-5b024f61e6b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee013887-ff97-4bc3-ad34-05628c410c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4483e81f-7101-4dd9-8051-70d562936a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae0c73f-9c2a-4ee9-a4b3-46020f75e78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e372bed-6a5f-47da-8e81-3a2b858c3559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313b038b-6be9-4a24-a11c-f3e781076323",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba535213-cc10-48e1-b8e8-1df4f49214cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce325e8d-5fae-48ae-b1bd-1de4ff75ceb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a974b1-699f-4fe3-934f-a9e949a48d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e997f232-fa72-4e49-aea7-34e257c4faa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854b1e71-1556-44b0-ab63-dc224a1d7d33",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3e3168-31ba-48bb-a4aa-dbda851fa9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a737f59-1e40-45c5-ac5a-499c573a7ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3d0c1-4774-4d7d-845f-621c774da777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb990ea1-1822-4e2e-92a7-965c32de4591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654d537-3120-4af1-984a-a7a9bddd69fa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c11d6-7c8c-4d9b-ac41-9e749d51c757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e07ea6-c8b7-49ae-83a1-b11344fcee46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0170d0-c9c0-4ef8-aa5c-ac82617958a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142bfb23-7a2a-481b-937e-5d074537a093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed23d979-b360-43cd-ae4a-4d00c41d7d31",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63392083-a377-4c05-a7d6-bc49460dc567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1144a1fd-cff0-4f4b-88ef-de25a7ce974c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ee28ad-605f-4867-ba0c-e9da5bb0afa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3f6286-03ca-4cdd-9df4-6362fcf00279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbc3967-0859-4311-b6f6-ec6297849740",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f14be62-49de-41bb-9918-ef8c769c0524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6349fd10-070f-4905-886a-282fa3ed9164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c7b404-1354-4b38-8dbb-d1a6acdc4711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0265b7a6-0d21-43a0-8c64-3c0464090c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e929ca4-cdc5-4109-a912-a7002e8606cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cbc014-4ae0-469f-9c36-4a898dea84c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da3ed3e4-50be-429b-b2fd-89a3fc538f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc74010-6b03-4db7-b301-66b05442b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe143191-5775-41f2-8b11-be7260d1a89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b3bc18-82ba-4ff9-ac85-a9ad5048dd01",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a70aa9-8e18-427f-b25b-da2cc6cdfd94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce83bec-c1c7-417e-a2bb-b785aadfe8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079dfd1a-d361-40df-b051-fe743564bd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df62c1e-dd8b-4e6a-936b-a50f9c0b2eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08337640-a663-4a23-bf05-e8b6236b308a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a300d-a48f-400c-8465-d194a1cc256b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebfe365-1a37-441c-89f4-ebc9470faeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38120a0f-7f36-4913-bd3b-233274e9d6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69c9bf9-c5a4-4d81-9df0-6e4078e2f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d11394-2a74-474b-b042-d7cfd82ed4e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b099158b-cfdf-4d29-95b5-4a2029983d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba275f9-2c5f-403d-8462-abc044ea6101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0190df3a-8674-4661-adc6-84895addf86b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f2707e-1585-4317-b307-bbb41a3bd21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f2894c-a003-4b84-bb97-02d1c2589e05",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e2e40-07a7-4f49-95bf-fb9a17a6ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4172595-4ea4-4011-9870-c59d9e07971c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff182de-fdce-4fc4-9a0d-d1ddd798aa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d0b6fe-16db-458f-bb85-8aaf7a593299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a0d17-d4ad-4ed9-ae32-7d25ad7741a4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e1ab96-1398-48d8-af8a-03b055c42465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880a0c8f-2240-4307-a1aa-7138445100c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e676318-c77b-40b8-b03b-29c0933ba65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf82473e-823e-48ff-811e-dfb210ed2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da571937-27dd-463e-8d7b-2edcaef13fe0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f64de57-77bc-4237-8ea7-f3f5e954df2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1710d1-56e8-481f-b6bf-d43846cec04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70021d3c-c97e-484b-b854-8e0604c05e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f44380-df40-4b5a-b139-270a81cbbb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c293c-1fa3-44ef-8f68-517ae68ad955",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199f042e-090d-4015-b436-70851c6607b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19c4e38-5fe8-4778-b467-a11acef0acb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d294e4-c203-451a-821e-b0cf603225fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd49d75a-b215-47ab-9943-da41026c40ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff19c7-9a77-4c16-830a-d776d17d7d2d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12b2e9-7a89-4824-96ee-a898591ff872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb2c7a2-12df-4d2b-89fb-be481ebf975f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64f5f27-ae5d-41b5-bd2f-d2b9201148ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca9785f-4500-45ed-8867-d744d0091ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcb90b9-6e5e-45cd-b6a1-dd06f430f90a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ec39c3-6a56-4eaf-bc91-ecdd52873464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e5d8b2-3a62-42a6-9314-08eb630835e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2998b18f-156e-495b-b4ad-1683428b3296",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f1427e-62c5-4726-92a8-b7dbdae88d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea43cab-14fb-4a6d-ae35-0ed8e12a7f20",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c225345-1a01-48f6-8cc8-8cee3fb3b164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3078b9-4087-4c15-aea6-5d95e7e11abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1427659b-2e1f-406b-9832-c065bb91be5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e220faf2-df23-47d9-852d-4521f26d0523"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78aa9278-4d95-4153-8bf8-2ea398bb52e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a80514b3-3e39-43f6-828e-4fed35044429"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "636e087f-6c6e-46a1-8200-649c93652db0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a05eda36-cc13-4123-b9eb-3c4ef934489c"
                    }
                  }
                ]
              },
              {
                "id": "201b3dde-3662-423a-bbac-89892c8f7bc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9328a729-d36c-4de3-a867-8570173efa04",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff96842-8050-4a9c-815c-6608a86135bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b50eb8b-49dd-4ea6-aee0-b40a1c61b384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c86e2e-9097-4512-91c6-a03d19d929ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d652df3-2cbf-4a63-a28e-b34e5a517bb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb6934b5-883a-4f63-ad8e-b10accb81677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf766de-b901-4aa6-9337-33c66785be2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e76d90b2-d82a-4acd-b1f2-dff363fbd9c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da5fbbfa-f98e-49c3-8000-1feddc08acdf"
                    }
                  }
                ]
              },
              {
                "id": "31880c0d-4a8c-41ea-9497-99d7bbe56eb4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b81ff5de-c7f2-4ae7-9952-061f3b488175",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228b774d-af4a-46b5-ba94-353161267c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e5fbb561-8ca2-42d8-a41c-c0283f362e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88e0868-a3df-4f4a-9cfb-de2ed55049dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21096f39-51f1-4988-9a5f-4a6fa168c200"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e1cdb61-b702-4214-97e7-61d7eb7aba7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2fb29a0b-ab50-4248-88b9-427a536059db",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2760f17e-a25e-4800-a477-ee75c673bd13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37516b70-0741-4eff-ac6b-ff5034bb1cb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef71152c-9a0e-48b3-b964-612ca16991ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82aca11-2e0c-43c2-a22a-c97f33da5733"
                    }
                  }
                ]
              },
              {
                "id": "64e84885-35ce-41c0-adbd-94b0f1ff4ac3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76724898-1e36-4312-b6bf-edcfca8bd103",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a33c0777-467e-463e-87f6-8b2e135f0c85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41b0069-5f83-47cf-a6ab-86ad506e1628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17d03c39-4e26-46f8-93d6-57267ce0a943"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27db35dd-7307-4293-8763-9828bb0f69a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d89d43a6-07b4-4ea6-bc71-caf24f902980"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e27ff8-8e07-41bb-bc6e-c7016c60f767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df48f2a9-3ba6-48f0-9b23-289dda5501a3"
            }
          }
        ]
      },
      {
        "id": "1996f9aa-d0c2-4bfe-b9fc-756d52988096",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aa846042-bddf-41c9-bb80-b3e29326cc5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4586b3b-0651-4c84-bf19-948ed9912f07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b86f00a-458b-48d6-90df-0202b51d7cf7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1198398e-a20b-4e43-9390-1f54c136bd96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12852ec9-3461-45e4-a879-b1e3911dc5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1b1f09-6f3f-4bd0-be89-5e7be4d79070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c36b852-a401-4e68-9d0e-538ec2140f1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6673006-262c-45b1-acd4-770c04cd31e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65422b9a-4f8a-4fb6-88b0-e1a6df8c1466"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d5ead14-94ff-4835-a281-8bb8808f8482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bff0d8e-da16-458f-9389-b18254a5d55d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09eabdad-f099-4b28-9a67-da745f1c3bea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a246bff2-fd99-49bd-8e6d-27e6f1a1b75e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20f3b49a-c400-40d5-9890-562a505cdb02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdd2e258-3f5c-4be5-a9c5-3113203b3473"
            }
          }
        ]
      },
      {
        "id": "7c61ba66-1102-4431-8227-fd415a702f0f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "473e81b0-9f21-4b64-a135-01424cc5fe9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f7a1876-7298-4bcb-9696-e5aceac4b634",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "969b592e-fcbb-4609-9eaa-030d2e99a216",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a231fa80-2c3c-4ebd-9ec3-52f4b3d25cba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cab5e481-b4c4-415d-be83-b63dcd319aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2473fdc7-a60a-4692-8f54-07481f466b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20d32052-5553-42fe-b169-7eb1b5cd882f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29772e12-f340-4b93-bd51-94140661daec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1393bd7-cdc7-4d61-b566-52addf1bc41a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69a7d02f-7c5e-40ee-b32c-2ee1a301e46b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86749565-03f5-4634-9e10-4266bf961d14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33933772-cce3-4b74-b14f-1c8ad60a91a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca0e4300-1ba0-4b2a-8be7-c1d8f9260882"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02db834d-f11b-4b4b-99c1-bd8051b53ee8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bff8332a-785b-46b5-aa98-896a08fd4df4"
            }
          }
        ]
      },
      {
        "id": "91791d5e-4503-4b90-931d-b53d47601a9f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "677fb66c-ab9d-498d-afd2-51521b1c719e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e196c22-0f55-4fd5-b20d-94c3b7c25463",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18f986a9-15fa-4ec9-a4c1-35cd79c60842",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0f763-0ebf-437c-9812-f8c8ef8f5085",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5262858f-07cf-41d3-a2b6-c754e5682535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65074f91-603f-4187-b819-cc2bf0eba26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e86be58b-7d48-4fb1-8b6c-c85bdc508930"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1db8af14-4438-45c8-b039-5ba90ae8cb2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3388527-eecc-4acf-b5c7-329cd8f24c7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a29833a-5a39-4623-94e3-d716bfc743d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220ff7e9-8fcd-402c-b663-b6609751369c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "103506c7-a59a-437e-a0c5-963cc919baa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccb1b718-add4-4b85-89b9-aefe56308c3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3850325-8ed0-48e8-a68b-2e270a8dacf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57c7e15c-1fa1-452c-9678-1f8322c7ed47"
            }
          }
        ]
      },
      {
        "id": "9d62df96-7a90-4911-865f-8c58452ccaf2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a47afc2d-4c99-4332-8d04-ef60adc1b9c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e91abd58-c334-45ac-894a-bfe49d3891cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "31bd265a-4cee-4c57-a21d-dd389bd98c61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8538ba65-ee51-40c4-a8db-797e308a8535",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "717f7be5-f5f8-4ba8-954b-8b48c9a6823a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 311.48943661971833,
      "responseMin": 21,
      "responseMax": 7916,
      "responseSd": 870.5777524884567,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693096469853,
      "completed": 1693096572912
    },
    "executions": [
      {
        "id": "9d1c9ee6-9b9d-429d-bc59-ff74bbf1621b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "25ff5dda-4373-4613-bfa7-0d3fc49abf46",
          "httpRequestId": "f7bc52f6-fb31-48da-bbd6-b0d2029793a2"
        },
        "item": {
          "id": "9d1c9ee6-9b9d-429d-bc59-ff74bbf1621b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7a5578ba-d436-4750-ab44-a036691cccb0",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "3ce3fde9-9ebd-4225-a0de-d3759d869a7a",
        "cursor": {
          "ref": "8549b302-56da-4305-b8e8-35f606bcd260",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "05417526-d4f0-4ccb-8f85-6f21eaac09ee"
        },
        "item": {
          "id": "3ce3fde9-9ebd-4225-a0de-d3759d869a7a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8a2f576e-daa2-4fd7-891f-a5c9a18e0879",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "fc511322-2565-4a2a-88f5-270dade03b67",
        "cursor": {
          "ref": "a412a42e-c329-4960-829c-e9e344a1eec1",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dff3e0f5-f2d4-47aa-9ea0-2d8d614cbbc6"
        },
        "item": {
          "id": "fc511322-2565-4a2a-88f5-270dade03b67",
          "name": "did_json"
        },
        "response": {
          "id": "849b048b-4584-401b-8604-39a4267abd99",
          "status": "OK",
          "code": 200,
          "responseTime": 1155,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43787a30-d7a3-47c7-b321-20ce6463a7b7",
        "cursor": {
          "ref": "7c64be27-1fac-4d02-af39-09ef767e3ecc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a13a3866-85b6-4ba1-be33-c03b67e9f75e"
        },
        "item": {
          "id": "43787a30-d7a3-47c7-b321-20ce6463a7b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "19c5403a-3036-4e8e-bb39-3fcd8518e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43787a30-d7a3-47c7-b321-20ce6463a7b7",
        "cursor": {
          "ref": "7c64be27-1fac-4d02-af39-09ef767e3ecc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a13a3866-85b6-4ba1-be33-c03b67e9f75e"
        },
        "item": {
          "id": "43787a30-d7a3-47c7-b321-20ce6463a7b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "19c5403a-3036-4e8e-bb39-3fcd8518e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292a7d7-317f-48e3-acd6-6190f791af08",
        "cursor": {
          "ref": "207e08aa-c2d8-417a-b95c-81350df87e04",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88939a60-689f-437d-bb69-f8380879110c"
        },
        "item": {
          "id": "7292a7d7-317f-48e3-acd6-6190f791af08",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6e4a79dd-8a16-4bfb-8b77-7d27fcfc293a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 362,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a936c01d-bf10-4030-97c8-07677e0a103c",
        "cursor": {
          "ref": "57d7399e-1c1d-4d54-870b-88209fb75a11",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1097d8b-e462-4e4e-ad26-7da617679325"
        },
        "item": {
          "id": "a936c01d-bf10-4030-97c8-07677e0a103c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "beb4e7e1-e8f7-409f-bb2d-bcb9e72ed53a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 338,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1eed8a-e734-41b8-9ce1-11de95f12050",
        "cursor": {
          "ref": "15ef1ee6-da0e-4ecc-acba-1f9e51c319e0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a46b3925-a1a6-4bc9-a521-8078ed2bc825"
        },
        "item": {
          "id": "dd1eed8a-e734-41b8-9ce1-11de95f12050",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "25007e29-a459-434f-9458-b9c549bf3316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648dd41b-e850-4ccc-8119-b34929248d81",
        "cursor": {
          "ref": "faa3261c-658e-43bc-b652-6c1a12712112",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47531f6a-3e7e-426b-8748-007bd671e27d"
        },
        "item": {
          "id": "648dd41b-e850-4ccc-8119-b34929248d81",
          "name": "identifiers"
        },
        "response": {
          "id": "8b750404-e203-413b-a564-a9ea7c7a42fb",
          "status": "OK",
          "code": 200,
          "responseTime": 1118,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a20754-0ace-41f0-899c-af55e11bb694",
        "cursor": {
          "ref": "76a69af4-a3e9-43b2-942e-c627d55d1d99",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68a5ba57-b313-4b2d-8b98-3e6aa5693a5e"
        },
        "item": {
          "id": "b5a20754-0ace-41f0-899c-af55e11bb694",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd092785-94cb-4408-ad4e-4f553d0e3bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c236d8-2dd8-4ed3-8748-24f857172900",
        "cursor": {
          "ref": "63d42592-5f04-49de-a298-3ec209b77c40",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dbab2172-5425-4dca-b319-c206becc0b3d"
        },
        "item": {
          "id": "c0c236d8-2dd8-4ed3-8748-24f857172900",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6767ed8-b76e-40d0-abe5-94e8f03dcf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dccda3-cd50-4b05-8ac6-8efb9905e80b",
        "cursor": {
          "ref": "f688e72d-644c-4b7b-8728-309714c4d92a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bf330ceb-26cd-4b3b-b46d-4ca7d9d98cfe"
        },
        "item": {
          "id": "23dccda3-cd50-4b05-8ac6-8efb9905e80b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6c82d815-97b4-4d34-84ff-bb0ffcbce8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c887cedc-d296-4350-99dc-459c14b2da1d",
        "cursor": {
          "ref": "b290c5e3-190e-40d6-9b17-5661f06b70e1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "07cc561a-b57c-4984-977b-7c4b05913efe"
        },
        "item": {
          "id": "c887cedc-d296-4350-99dc-459c14b2da1d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5473aeb0-d772-4a65-8032-cb5f3f443346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e8c13b-c563-45f9-96c0-470539a8330b",
        "cursor": {
          "ref": "793890b6-6e07-4a01-9dd5-b5e635613ebe",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "60a0733d-0979-44fd-ab25-ec42fd82a69e"
        },
        "item": {
          "id": "21e8c13b-c563-45f9-96c0-470539a8330b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9431f989-5437-4932-8a5f-c14ef30ec387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72870b55-9048-4365-8fd5-d21ecc1f2911",
        "cursor": {
          "ref": "08a186d6-5c89-4643-bb22-6534e7e862de",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f4a69344-7d73-4e41-b063-ab75dbaea0a5"
        },
        "item": {
          "id": "72870b55-9048-4365-8fd5-d21ecc1f2911",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be25fa11-6ca6-47e4-b0b3-95ef3c6f8b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b41220c-8528-4bd6-a421-ad53e79903ba",
        "cursor": {
          "ref": "a29fcd61-82e7-46c9-b97c-6d732b1e16aa",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6d20083d-c5d9-43d4-a255-c0cefcee68f7"
        },
        "item": {
          "id": "6b41220c-8528-4bd6-a421-ad53e79903ba",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6e003199-9452-4411-9158-0cc4274d2f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a53dbb-5160-4db4-9f04-2b8d4563ba58",
        "cursor": {
          "ref": "6e31f136-139d-42a2-bdc9-b625560dcb05",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c0c1b9a0-bbc3-4232-8ce0-b2ecad441a5c"
        },
        "item": {
          "id": "e2a53dbb-5160-4db4-9f04-2b8d4563ba58",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b9e3fef-a7eb-4f96-8c7f-34aa68f24de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd2c9b-b9a0-4241-9788-e60d270b68c3",
        "cursor": {
          "ref": "ab22b25f-a56d-4caa-9ee8-e32e9f302361",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ac42517f-c85f-4a8e-a19c-e9b14e18c533"
        },
        "item": {
          "id": "0acd2c9b-b9a0-4241-9788-e60d270b68c3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6f7e8f3-03bd-4b23-a8c9-854fa3bfe18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57de01a-de78-4d47-aa58-17b22a6cd2c9",
        "cursor": {
          "ref": "d8ac60d7-31d1-4108-8960-706f841cac03",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d2b72ec2-f92c-424f-914a-046781c2b1a1"
        },
        "item": {
          "id": "f57de01a-de78-4d47-aa58-17b22a6cd2c9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "16c0c9a1-d755-4a38-a19a-1beab88b1715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08818701-4a85-4f23-bf5a-22ec56ceb20a",
        "cursor": {
          "ref": "c0dce1f0-82c3-4b0c-a4bf-067c788b5631",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d1a30b75-7e36-40a4-ba63-8860709cc0af"
        },
        "item": {
          "id": "08818701-4a85-4f23-bf5a-22ec56ceb20a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ca46db13-5eb1-4498-9ab5-6855ca8f127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c5fe4-a112-4405-9e55-9cfbc9749b3f",
        "cursor": {
          "ref": "c6444674-cd9f-4cd1-891e-5d53e2a759de",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7cc341be-bce1-40a1-8ce9-f4ddacf1582d"
        },
        "item": {
          "id": "9e8c5fe4-a112-4405-9e55-9cfbc9749b3f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "51756d91-92b0-4282-937b-4eee6d4db196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380a0a92-62ec-4c32-887f-172e44c984e8",
        "cursor": {
          "ref": "48964469-6263-4aca-bbf6-fb0917abe885",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ad10c9dd-bece-43ec-a267-6176deb9bf44"
        },
        "item": {
          "id": "380a0a92-62ec-4c32-887f-172e44c984e8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ed91a097-7eba-4ea7-99ea-0be594c8d9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b723f3c-deb7-460f-9447-2df52a366eb2",
        "cursor": {
          "ref": "f96a4723-bde1-4a9e-bce4-f241f57f6436",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fe60677b-8b53-4432-bce0-fe05bb72ef6a"
        },
        "item": {
          "id": "4b723f3c-deb7-460f-9447-2df52a366eb2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2db5c1ba-c05f-437c-9b7e-af241c77241c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e532ff2a-5aab-4fae-9492-650611810987",
        "cursor": {
          "ref": "6ba6d953-62f0-4c2d-81a1-ea984bc0e284",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a7a4cd9e-916f-4c2a-8ebb-66c95200f94c"
        },
        "item": {
          "id": "e532ff2a-5aab-4fae-9492-650611810987",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8b6e7080-e020-4ff3-9b14-9e3a0b339e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d6085b-d744-4964-a3fc-088eb7e25be1",
        "cursor": {
          "ref": "fcc3e979-c2bd-47f9-b46c-eea35abcb87a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7f8bf564-990b-4f4d-b9c3-944cff09ea0a"
        },
        "item": {
          "id": "79d6085b-d744-4964-a3fc-088eb7e25be1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ee232aa3-465d-4b1f-a43a-492b5b6364a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d64923-e13e-4788-84d7-50868424b396",
        "cursor": {
          "ref": "a656143b-972c-4ff8-b60b-859a41fd8a2b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "196022e2-b40b-4af6-abca-7f85be2c9f3a"
        },
        "item": {
          "id": "b6d64923-e13e-4788-84d7-50868424b396",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d854cf24-d662-46d4-95b4-b637f9d7a722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c222e81-5980-4b76-bd8a-f2414cc58f79",
        "cursor": {
          "ref": "e6d01983-5b6c-40cf-839f-abc03f131ed5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "409e2e8b-3bba-4aa8-b5a2-9b1636c3345c"
        },
        "item": {
          "id": "3c222e81-5980-4b76-bd8a-f2414cc58f79",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a98d42f5-b8a8-4b07-bddf-8a1fe6b3827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e2731c-9452-4b8a-9a78-b0f984aedd54",
        "cursor": {
          "ref": "b6e23c56-3a82-4a4e-a800-4165ab99a118",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "96b02d45-27b1-4fbf-9dec-8d2d1aee5f13"
        },
        "item": {
          "id": "44e2731c-9452-4b8a-9a78-b0f984aedd54",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "689c0c6e-969e-4930-9fab-f0aff33a591d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fc63ba-1d3f-4da8-9849-5d33039591b8",
        "cursor": {
          "ref": "187b02b6-eb9d-4131-b35c-20de1bcc2738",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d06a5731-db85-4800-9eb6-981d063fbab7"
        },
        "item": {
          "id": "86fc63ba-1d3f-4da8-9849-5d33039591b8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "54509e8c-2fd0-4bd2-9f84-7cb9c4ac1efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b606c95e-2620-4e75-ac77-e93a18dfe711",
        "cursor": {
          "ref": "7b858f2a-8d4e-44e2-ac40-606e8a3e17a9",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ac202866-a273-45ec-a47e-ebfce34afa7b"
        },
        "item": {
          "id": "b606c95e-2620-4e75-ac77-e93a18dfe711",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0986e29d-f007-4771-8fc3-b23a4f3aff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbdab37-11fc-4029-aceb-46f777fbefa2",
        "cursor": {
          "ref": "11ee23c4-7f9b-43a3-9275-3756bc0fe9bf",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "212c0c39-8240-4f5a-a111-cd701b3d0879"
        },
        "item": {
          "id": "bbbdab37-11fc-4029-aceb-46f777fbefa2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6672bc76-7689-4ed1-b1f2-d5a9a83159d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3108cb56-9a3c-41a9-a657-fb0ce5e5a00a",
        "cursor": {
          "ref": "38667b52-1c18-455b-b424-58c2dd91147b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "af2a081a-2bc5-410d-8e1c-ca89359f8750"
        },
        "item": {
          "id": "3108cb56-9a3c-41a9-a657-fb0ce5e5a00a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6d1088e9-4a68-4eae-a36a-9757419a034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7671b4e-f30d-44d1-9a7d-28e259d1967b",
        "cursor": {
          "ref": "19349c86-f380-4da3-a12a-6b600249d238",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "25e2ba29-7e60-4a0d-a041-be5a8171c1f5"
        },
        "item": {
          "id": "f7671b4e-f30d-44d1-9a7d-28e259d1967b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dfb27a5b-56c5-48be-806c-8931afa438a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4b1ce1-93f4-495e-9d6e-25a18d945b62",
        "cursor": {
          "ref": "1872c476-611f-4194-ad67-66e45a7411c4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fd8b5b4d-df1a-4f30-809e-dd56c7427c9a"
        },
        "item": {
          "id": "bd4b1ce1-93f4-495e-9d6e-25a18d945b62",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "074bd2a9-a82b-46f2-8f47-0603841840d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b7359-0071-4d2b-b237-8c9017a4c87f",
        "cursor": {
          "ref": "fc240185-dcd5-48d8-9b67-c7833d8c7cdc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f4a7668-43e5-4419-a70d-d7977dd9c9d6"
        },
        "item": {
          "id": "f49b7359-0071-4d2b-b237-8c9017a4c87f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "be227897-880e-4429-9fa1-27f50210c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9f6fe4-d062-4ad2-a98c-793a717dd3cb",
        "cursor": {
          "ref": "cbee2c92-ac39-43f0-b1c6-2a2a0648ceb0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b772a6f-b791-40f4-a024-1d19fdc909c3"
        },
        "item": {
          "id": "de9f6fe4-d062-4ad2-a98c-793a717dd3cb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6aed8398-0aec-43c3-9c08-dcbb12c0b837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f931235e-9ed6-477e-aa09-0d1c0cf6131c",
        "cursor": {
          "ref": "4e73c61b-49fb-49e4-bf9d-c249c4174818",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7a15c799-78cc-428d-9f33-7004bbd4c064"
        },
        "item": {
          "id": "f931235e-9ed6-477e-aa09-0d1c0cf6131c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "68e7d0ea-aea7-47bb-b374-30af10af878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be8c72-e3f9-4fcc-b2b2-c22869e69a7e",
        "cursor": {
          "ref": "4ec13de7-3542-4070-946e-74266a9b2d29",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6df87989-be51-4b48-adba-16c500ded8c2"
        },
        "item": {
          "id": "43be8c72-e3f9-4fcc-b2b2-c22869e69a7e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b14af143-5ef9-4a3d-8bfe-23c65db7cc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2697387-055d-40ed-8bec-ffd70a5f7902",
        "cursor": {
          "ref": "4ea855e0-d1a1-41be-b28b-d042ed512abb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9adc5f87-17f1-4121-a2a0-7500af5123a9"
        },
        "item": {
          "id": "e2697387-055d-40ed-8bec-ffd70a5f7902",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9e3bddac-2fc8-4c5c-9c73-ec19d0da2ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166cdb56-6f3e-4514-8877-0b4febe855c7",
        "cursor": {
          "ref": "5dde88b1-39e9-4526-aab0-52233fa76def",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8cacb841-9061-4e2d-b0de-328fee3ed4ec"
        },
        "item": {
          "id": "166cdb56-6f3e-4514-8877-0b4febe855c7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f374b0f-d3e8-4009-a9b2-98667e1a32f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c4dff0-6e2d-4a94-a554-76171ad23d25",
        "cursor": {
          "ref": "2c980fbd-fd3c-4f99-9343-34c7436165b5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f1495b1f-a180-4feb-92b8-5802f3649496"
        },
        "item": {
          "id": "74c4dff0-6e2d-4a94-a554-76171ad23d25",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e25d315c-53c9-47e0-8aa8-e969020f8f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f771e9-03b6-456d-88a8-284fa823b051",
        "cursor": {
          "ref": "55475d62-cfee-47d8-9565-01628d9835cb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "62504ac9-2a48-4210-87fb-fbfa3e8a9006"
        },
        "item": {
          "id": "63f771e9-03b6-456d-88a8-284fa823b051",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ccf8e3b3-f7f0-4630-863b-673b3b2231e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2759724-0421-46a2-b399-ab9929e56cc1",
        "cursor": {
          "ref": "fb2736d9-d35d-4664-b3b8-a49700dc6073",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a9d04fac-5701-493d-8069-ad816b67325f"
        },
        "item": {
          "id": "d2759724-0421-46a2-b399-ab9929e56cc1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2ba42076-837a-4500-9712-8c4d1898b4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338d61f6-30a1-4065-a235-8f33080438c4",
        "cursor": {
          "ref": "11a832f7-73f1-453b-bb5d-871052e7825e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a673bf5b-3c2f-4718-99f7-a39ae62cb26e"
        },
        "item": {
          "id": "338d61f6-30a1-4065-a235-8f33080438c4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8e28ed02-7571-4ab1-900a-e19eeedae068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5e6bb5-8ccc-46bb-902e-409f1eedce4f",
        "cursor": {
          "ref": "9fc9df06-7e4a-435f-bc7a-8808df3f06e4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "12108033-83d3-4437-ac3a-bca4fcfde859"
        },
        "item": {
          "id": "4c5e6bb5-8ccc-46bb-902e-409f1eedce4f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ff78b563-2395-4ef4-a086-8eebea73726e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512bf643-1bff-498c-8bf1-a1cca38f4651",
        "cursor": {
          "ref": "0655d7d3-d1a7-4490-aeae-b6ffe45d128e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "55d7f550-9eac-4501-bd62-b1bf2c8a98a2"
        },
        "item": {
          "id": "512bf643-1bff-498c-8bf1-a1cca38f4651",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3ceecee1-892a-4977-b68a-4dd0cd8c2091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf8cc5-f965-4575-87af-e1dfb5024696",
        "cursor": {
          "ref": "a56ef403-6de7-4a1f-a58c-98695af301c6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "54c2ea87-8c77-42a8-b7af-b090dae585d9"
        },
        "item": {
          "id": "6fdf8cc5-f965-4575-87af-e1dfb5024696",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "59db2df0-097d-4058-a4c8-9f3b2b9b26ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383c6a7f-edcc-45f2-921c-e9e6ffb44c5d",
        "cursor": {
          "ref": "2a1e8ecb-8964-406c-b536-65a827002ca7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9efa93b4-62db-4e21-93a1-0d3493338e6e"
        },
        "item": {
          "id": "383c6a7f-edcc-45f2-921c-e9e6ffb44c5d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3f7aa0a7-73d5-49d7-aa5e-0ee6c359e447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fc0f96-ac63-47d7-80a9-77255de54143",
        "cursor": {
          "ref": "cd324b80-cc3d-46f7-b7e6-22f464089433",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "65122cd1-4e81-4094-a2df-f947cb99702e"
        },
        "item": {
          "id": "82fc0f96-ac63-47d7-80a9-77255de54143",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee4673e4-8a24-4e09-a768-9f695ff6e2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8ca24-415a-4d3a-af7c-64dc49c37252",
        "cursor": {
          "ref": "4d7750f8-11af-4b38-a81e-e137453d1618",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "646ef3e8-ec3e-447e-9388-f4d70e0d24d0"
        },
        "item": {
          "id": "a7e8ca24-415a-4d3a-af7c-64dc49c37252",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73dd02bc-2dd8-47f5-82fa-b862e2906fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98aa908-db06-450e-a814-f2e0f791f537",
        "cursor": {
          "ref": "48800c84-dc92-4ee8-be4b-f7e4a35ff84f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2b627dcc-8a4d-4b58-b154-1d287ef90873"
        },
        "item": {
          "id": "c98aa908-db06-450e-a814-f2e0f791f537",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "65ff2709-cc12-4f06-85da-23565289a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8dbeb-b64e-4333-a356-ca4b6f43b2ba",
        "cursor": {
          "ref": "25c5a5ac-2c7e-4981-99d5-cefbfc2e6343",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5be89076-f75f-43a4-94d6-0794d294aead"
        },
        "item": {
          "id": "89d8dbeb-b64e-4333-a356-ca4b6f43b2ba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "21835aa7-033a-4bd3-ad4c-4d4182f0d6a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 603,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ecd319-a299-4401-8959-24350a89adf5",
        "cursor": {
          "ref": "13990576-68ab-4d9e-8795-4c75c03d00ec",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "664eea88-87a6-42ce-8627-09e90945664b"
        },
        "item": {
          "id": "83ecd319-a299-4401-8959-24350a89adf5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "770fb71a-aebb-40fb-89cd-fa41eda55131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3d8cdc-d390-483b-9959-4c9a9d459ba7",
        "cursor": {
          "ref": "3cf177ab-5dbb-4bbb-9111-731d94561e7c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5d836246-6b52-4f4c-95af-7843a37b74a9"
        },
        "item": {
          "id": "3e3d8cdc-d390-483b-9959-4c9a9d459ba7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8aff820c-c0b1-4b48-81d8-0286cc35bd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d61846a-fb03-44cd-b579-e14673103631",
        "cursor": {
          "ref": "69bf7929-45c2-4681-9605-b41a4e277f7a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "222a082d-f6e9-4001-86c1-91a78a899f8c"
        },
        "item": {
          "id": "1d61846a-fb03-44cd-b579-e14673103631",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e0a36189-ddf9-4af1-b5fc-8abe32ea1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e15a3-9154-4421-9945-b9fbff44d881",
        "cursor": {
          "ref": "d35bfd12-73c6-47d7-a6e1-30d8e9544a0f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3739f794-24c3-47f2-9c7b-53c7dae1eab0"
        },
        "item": {
          "id": "6e8e15a3-9154-4421-9945-b9fbff44d881",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "11044c94-8b22-4154-b814-b1a5941233d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789affac-320a-4436-a56d-c3b53cf589c8",
        "cursor": {
          "ref": "9b7aa628-db05-4fe9-bc39-e6806d69d1ee",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "18fe414a-01ae-4802-8be7-bf67d47b1fe4"
        },
        "item": {
          "id": "789affac-320a-4436-a56d-c3b53cf589c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d313a59a-053c-4773-abc9-ddf21042c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f25e0e-4c3d-459e-80b6-166f3a5b04e2",
        "cursor": {
          "ref": "2a43d243-637f-47a9-a732-4bcfabf3b0e7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee8e9a18-0cc7-46b8-a80c-61a06ed354f2"
        },
        "item": {
          "id": "55f25e0e-4c3d-459e-80b6-166f3a5b04e2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4780dbf5-c465-4b63-8bd7-bdab89ab05a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf70ef4-b9c3-4655-ba5f-74311b670ba1",
        "cursor": {
          "ref": "3221c09d-0743-46b6-8e9d-30074e2eaaa4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98cc59a5-b2c5-478b-8668-3bc160733e06"
        },
        "item": {
          "id": "1cf70ef4-b9c3-4655-ba5f-74311b670ba1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e0e799bd-0251-49b6-bdb1-36482f86740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e0bae0-feb8-40fd-b74a-b1b0e7e607dd",
        "cursor": {
          "ref": "3373893d-433d-48ed-97ed-acabb0811f2a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "665c49cc-b4d8-4be8-b570-b4a4560243b2"
        },
        "item": {
          "id": "12e0bae0-feb8-40fd-b74a-b1b0e7e607dd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bc005fcf-63e6-4811-affb-35eb65de1e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4858a3de-4d68-4a15-bd2e-49e8af2ff9cc",
        "cursor": {
          "ref": "241302c8-dfe6-44ba-a21a-50bbea0affc4",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0614d64c-8b3d-46d5-8c67-9e83bd579c96"
        },
        "item": {
          "id": "4858a3de-4d68-4a15-bd2e-49e8af2ff9cc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ffa81b08-be13-4baa-b2b1-adb28ac61877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6efd3f5-aeab-4874-b5e6-125fbf0addc5",
        "cursor": {
          "ref": "c645bcdd-babe-440b-8933-dbb240b4a593",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "046bc0a6-c021-45c0-a656-32d2c6fcad35"
        },
        "item": {
          "id": "a6efd3f5-aeab-4874-b5e6-125fbf0addc5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "671b2835-1304-4b73-a154-8a1342fa6ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b89a12-1b8f-47d0-b561-78cc7845ee8c",
        "cursor": {
          "ref": "ac0f97d5-2ef4-4428-bbc3-c4bdb9be1194",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "83c35e0b-a8fc-4764-854e-3a51f7ce80a2"
        },
        "item": {
          "id": "02b89a12-1b8f-47d0-b561-78cc7845ee8c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "48eef865-f86e-4cdd-a42c-92119fcc70a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1707c481-de02-4357-ad18-d606878b75f2",
        "cursor": {
          "ref": "a338f122-ec3b-4e9d-baf7-cb3fc2852540",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1cdef6bb-c341-48f3-9065-36efd6877d69"
        },
        "item": {
          "id": "1707c481-de02-4357-ad18-d606878b75f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1f284288-7606-4b25-af3e-8b6ba1f982bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30369b2-c89d-43d2-a9cc-73cf778df91a",
        "cursor": {
          "ref": "0e4f0714-c280-479c-8373-55eb51714bf6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4ca773be-2e2b-4943-9680-48ad2c963d53"
        },
        "item": {
          "id": "a30369b2-c89d-43d2-a9cc-73cf778df91a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "829e8c67-a145-4ae3-ad69-4873324d862f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6a1a7f-2861-4f89-b87f-2d9aacc3e5d3",
        "cursor": {
          "ref": "c7efc1db-ac48-4ef6-bac8-a7a1e7644efc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "792b4dfb-7dc2-48f7-9c52-31b220cb10ac"
        },
        "item": {
          "id": "4d6a1a7f-2861-4f89-b87f-2d9aacc3e5d3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cab1400a-3309-4cd1-b892-d47641495706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506a92de-b1f3-4fa1-bfed-3666296f10af",
        "cursor": {
          "ref": "31c031b8-35c7-4a27-b675-80b7fbf8a738",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5f7da9ee-d5e6-4dd8-bfc6-11c0dd1cad79"
        },
        "item": {
          "id": "506a92de-b1f3-4fa1-bfed-3666296f10af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5725a14-38d1-443b-af32-771cad4ef90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c810d5e-bde1-426f-98b7-dd1a928c6a9e",
        "cursor": {
          "ref": "13fee8bf-fa01-458f-a93e-af689a0a068b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "640889bd-8e41-43ff-81d1-d388ef831bdb"
        },
        "item": {
          "id": "7c810d5e-bde1-426f-98b7-dd1a928c6a9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fbfc078c-a5dd-4ecc-b218-c91244328b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d31f2a-8682-4f28-a759-d91b572c180c",
        "cursor": {
          "ref": "087f14f3-3083-487e-909c-e2dedcd50f60",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d31f6da-2cf7-4d51-bf2a-afcaf8e97929"
        },
        "item": {
          "id": "56d31f2a-8682-4f28-a759-d91b572c180c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e9db0c2-51f6-4fe7-abb3-a28c23d472b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0138652d-4e2a-46b4-beeb-f8f28c719ac7",
        "cursor": {
          "ref": "58b82358-57cc-46ed-a49a-26742c9673bb",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f5f70a30-9f4d-4eba-abfd-31c7ae0b13e7"
        },
        "item": {
          "id": "0138652d-4e2a-46b4-beeb-f8f28c719ac7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0a04cc3e-28b7-4173-8d0b-21e2ba172b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8104803-e5a3-4666-857f-512bceb15897",
        "cursor": {
          "ref": "58e944ec-5912-4431-9f43-6e6e59caca41",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a10d538e-1cb5-4109-865b-a6325ab01e4a"
        },
        "item": {
          "id": "a8104803-e5a3-4666-857f-512bceb15897",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "11f6a813-ac4a-4436-8f8c-ce13a8ca9c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92006166-3765-48b4-ba95-fb3ccf12fe08",
        "cursor": {
          "ref": "9037fef4-dc6d-481d-8615-6e906e923bce",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a231f4c7-38bd-4b51-8ebe-336f1d1bebd0"
        },
        "item": {
          "id": "92006166-3765-48b4-ba95-fb3ccf12fe08",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4fff7325-26cf-444d-b9c0-b7df0a1c8144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb73053-09af-49cb-8aa8-14a15982a6ae",
        "cursor": {
          "ref": "7b1bfb40-feb0-42b6-98d6-a402bf4c8e99",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e3e76782-0053-45b8-b94b-b47330fcfe4d"
        },
        "item": {
          "id": "6bb73053-09af-49cb-8aa8-14a15982a6ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dfa369af-ce23-4a82-b3c3-0af1c4a6a93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b61ebd-76d5-4ed1-9afd-582284299f83",
        "cursor": {
          "ref": "ada72396-e84d-4832-8b78-b41a69b07427",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ef4e94be-06e4-4789-8c98-433140e7dbd5"
        },
        "item": {
          "id": "a2b61ebd-76d5-4ed1-9afd-582284299f83",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "200d6b0a-a4d8-4534-b821-e4d8d8658e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a02ab86-2277-4556-813b-d8524854507f",
        "cursor": {
          "ref": "00e51392-fb62-424c-8851-0be216791fcb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cf0a0b96-9dcf-46b5-97a9-bdc2bd985940"
        },
        "item": {
          "id": "9a02ab86-2277-4556-813b-d8524854507f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "30f48ece-c53b-47f2-aa26-8718a4afdbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ae4649-7954-4057-a96f-40979fd502b8",
        "cursor": {
          "ref": "4c8124fa-ceb5-4b44-8ae5-8cdf6e50d38f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6df2d305-fcc6-413a-80a5-099f6ef023ca"
        },
        "item": {
          "id": "03ae4649-7954-4057-a96f-40979fd502b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "91e88564-58a9-40cc-b154-1a17741ccf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddd310c-2071-47fc-a052-75129f22829d",
        "cursor": {
          "ref": "2176e77b-b14f-4ae9-9b82-419125ebca84",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6970cb0-3c4f-4aea-959a-20ce7d53114b"
        },
        "item": {
          "id": "fddd310c-2071-47fc-a052-75129f22829d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0ea6eb18-c234-474d-a84a-5fdaa1178465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e879dd76-901e-4a31-ba23-cca2a78861d4",
        "cursor": {
          "ref": "7910b262-53ad-4450-92ff-9ad5aa34563d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7da6832f-1c8d-422b-9406-b57817bad882"
        },
        "item": {
          "id": "e879dd76-901e-4a31-ba23-cca2a78861d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14ee4407-2f74-41d7-a5cc-2cf890b66254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40df17c-c34f-4e4b-966a-4cac6b4b3218",
        "cursor": {
          "ref": "3451c122-3213-4fea-b6bc-9eb88587ecc0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9581fe21-05a4-475f-acfd-710bab0594df"
        },
        "item": {
          "id": "c40df17c-c34f-4e4b-966a-4cac6b4b3218",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5288e879-4cb9-4729-93e4-54cc827aece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442ff5b9-0909-4b39-981b-c310f09d1460",
        "cursor": {
          "ref": "dc7b6597-d7b9-4cda-b96c-7f73e486d851",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4463f6c7-4cd1-48ea-b178-e390514e4a78"
        },
        "item": {
          "id": "442ff5b9-0909-4b39-981b-c310f09d1460",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7a285bf7-4e7a-4a6a-a1c7-1f1427ca14f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213621c4-9fe9-4e83-a4ef-b9fc7b24ca07",
        "cursor": {
          "ref": "b6b34270-001b-4f9f-bbcd-debb5b929534",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5780da5c-16f0-4696-9676-660328ec6d98"
        },
        "item": {
          "id": "213621c4-9fe9-4e83-a4ef-b9fc7b24ca07",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3009fa9e-80c3-4cfd-9edd-e8fa206e1341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6e798b-3484-4646-8dc2-a1a067d131e7",
        "cursor": {
          "ref": "3922682f-8faa-479a-b0fc-b4a0b6367fb3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b2934f39-7d80-47a6-9e41-0a14a5b0bc3d"
        },
        "item": {
          "id": "6c6e798b-3484-4646-8dc2-a1a067d131e7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6f752016-ef0d-4530-8f45-cf3048ff75fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c000b88-ddbd-4bc5-b710-d5d6dbfd1d2a",
        "cursor": {
          "ref": "be941ee6-b0a9-470b-bcfe-60542361bfde",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "99b7636c-e71f-449e-9176-32f364de5e21"
        },
        "item": {
          "id": "0c000b88-ddbd-4bc5-b710-d5d6dbfd1d2a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c10af65-9edb-4b1c-beb4-c3c1b82a9d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d0c7e0-2a20-4a8d-9a0f-6fcb9a30f2fd",
        "cursor": {
          "ref": "8ca35602-e057-4333-bb09-51c3b79f0df1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e304e24e-b001-450d-815b-e50bebc83a7f"
        },
        "item": {
          "id": "d0d0c7e0-2a20-4a8d-9a0f-6fcb9a30f2fd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "730d1623-9ca5-4a69-993f-a46d0fefcddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b74ea9-26cd-4e72-a2c6-0fe119be7809",
        "cursor": {
          "ref": "c0926039-d58d-4157-9f4f-7a3d3be30516",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f08d2628-7635-4c5e-9140-5d3d7d032075"
        },
        "item": {
          "id": "74b74ea9-26cd-4e72-a2c6-0fe119be7809",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "44b7eda8-aca0-4a2d-9acf-e29b73133875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428d1f21-b620-4bc7-8a94-15a11a1dd21a",
        "cursor": {
          "ref": "9c4ae03e-6c6b-4deb-b2f5-68011f6920d1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0f7448bd-a91b-406b-ba6d-29a3f2a21109"
        },
        "item": {
          "id": "428d1f21-b620-4bc7-8a94-15a11a1dd21a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1a314d4-94b0-462f-9191-be128a4e9056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b2bf66-d296-4e4a-9360-f4ca5273367b",
        "cursor": {
          "ref": "ba3d7ede-c822-4536-9324-7cb6a64eb4ba",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2fbf6ecc-c413-4d23-b94a-16abaee17ba5"
        },
        "item": {
          "id": "88b2bf66-d296-4e4a-9360-f4ca5273367b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ab5ebf7e-9575-410d-99e2-89b7e90d3813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3899754c-4434-427b-8db0-d4f8e65db127",
        "cursor": {
          "ref": "16c691ab-892e-4e63-bf2d-2f598d15baaa",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "760d4f26-8773-4d97-b0a1-53c34b541383"
        },
        "item": {
          "id": "3899754c-4434-427b-8db0-d4f8e65db127",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a0d00f1-3e47-4f23-9539-ef0f9522a70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcfbf65-fa40-46cc-8ec8-844ba81b75c0",
        "cursor": {
          "ref": "a602691c-444e-40d8-83eb-ea351385be6c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c5cbcb97-b537-45c9-ba98-36c19022de0d"
        },
        "item": {
          "id": "2dcfbf65-fa40-46cc-8ec8-844ba81b75c0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f8811dc-14d0-45fa-bf95-c7f84884a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466b42b-1dca-4a57-9be4-5f8341b39a7d",
        "cursor": {
          "ref": "240f7b55-306e-476e-8581-6abcb18b7c01",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3a0da831-8d6e-4ea3-a396-af6abc9370eb"
        },
        "item": {
          "id": "9466b42b-1dca-4a57-9be4-5f8341b39a7d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "99d521df-cde1-49dc-a241-78ef4a0a4216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4274d4c-d9e3-4f65-b824-8675489d7f72",
        "cursor": {
          "ref": "52ade767-8a1e-4df6-a567-1bafdb31d20b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "86aa409d-a23f-4a62-be0c-d016022bd419"
        },
        "item": {
          "id": "d4274d4c-d9e3-4f65-b824-8675489d7f72",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3c4d95a7-23e0-43c6-ab93-a883c2d1456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfbb8a1-4748-4a18-ba80-093dead46d5c",
        "cursor": {
          "ref": "39de84a4-8f52-4b2b-95c5-fc91c1076e65",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e88dfe8f-410e-446a-b9a6-a1833dddce13"
        },
        "item": {
          "id": "bcfbb8a1-4748-4a18-ba80-093dead46d5c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d836bff-4110-4e48-b0d8-56667d20bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e95dc9-4e18-47a8-a432-efaa8de6f637",
        "cursor": {
          "ref": "6f88de81-422d-4d7b-9eef-8616ab5dbf66",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "18251a98-5e70-49b8-8708-4da2466c24d3"
        },
        "item": {
          "id": "81e95dc9-4e18-47a8-a432-efaa8de6f637",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f25e97ee-75b4-46b6-b8ef-9a73494f3a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8837c1-12a2-4296-8240-a3295d964ce9",
        "cursor": {
          "ref": "940c7918-daf8-4381-8a44-d0a6e3894f58",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "afbd6164-13f4-4914-ba13-f097496c0605"
        },
        "item": {
          "id": "4a8837c1-12a2-4296-8240-a3295d964ce9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "78c85c25-8571-4308-ae24-823a4075d22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e95edf-6d77-431d-ae6a-f8ec2fd0bf23",
        "cursor": {
          "ref": "eea24fe4-2d0b-40f6-a3bf-815698f22c3c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a75b5b0e-3c50-4c06-811e-2d21b7f64e9b"
        },
        "item": {
          "id": "99e95edf-6d77-431d-ae6a-f8ec2fd0bf23",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "25f3a303-b286-4470-96ef-33160fa03820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b3bcaf-f967-46a0-a6a7-aae27969f82a",
        "cursor": {
          "ref": "676924e8-59d2-4a5a-828f-e518232d2616",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8f203326-deb3-47ba-9447-0dcb839dba80"
        },
        "item": {
          "id": "76b3bcaf-f967-46a0-a6a7-aae27969f82a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3bd9e148-f715-4e1e-9e24-adf2a7f5d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbb870a-550d-40b9-9571-c4610db2d426",
        "cursor": {
          "ref": "0b471e74-7ff4-4882-926c-15564e3843cc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "46dd28fc-f98f-40ee-8f93-dc665ffe7725"
        },
        "item": {
          "id": "9cbb870a-550d-40b9-9571-c4610db2d426",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d1caee20-bfc8-4ebb-a768-c945cf5646ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304574f0-b74f-4f46-af66-b9b9867bd4bd",
        "cursor": {
          "ref": "530acd4b-224e-4eac-95b1-2dd433b46d00",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a042fa4-7b6b-4b2e-a4ec-1ea23aa11191"
        },
        "item": {
          "id": "304574f0-b74f-4f46-af66-b9b9867bd4bd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ec0afa14-9ae7-4f3f-8e50-a789183c321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156f0cd5-1e8c-4fae-bf10-7f58109f6ec2",
        "cursor": {
          "ref": "c8c57d5e-1664-4e9a-bf64-ba5b1db026a4",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "20d05bfd-31bc-4485-8815-a2ee8650853c"
        },
        "item": {
          "id": "156f0cd5-1e8c-4fae-bf10-7f58109f6ec2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "13c59bf3-77e2-43fc-90b5-9ab415bc98bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014bcaa7-6107-4e80-baca-20db1778bde5",
        "cursor": {
          "ref": "28792034-05cf-46b2-ad06-a388ec6baf4a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63fabd93-0db6-44d2-a5bf-7c130b98f41e"
        },
        "item": {
          "id": "014bcaa7-6107-4e80-baca-20db1778bde5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd7711a3-3b64-49fa-9698-565fcff3e2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e281472e-e8ad-4d26-8efc-50a808412edc",
        "cursor": {
          "ref": "ef21678b-14ae-44d2-ad1c-4aa1e5ad4d0c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6cab65e8-03f0-4921-b98d-e3b8cb07ab8d"
        },
        "item": {
          "id": "e281472e-e8ad-4d26-8efc-50a808412edc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "db079b09-0b56-4654-a3e5-0d9682866fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9c9f5e-2528-4671-bc42-eaed6ddd23a9",
        "cursor": {
          "ref": "fd4a629c-b6c8-441d-bac8-545607235ceb",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "23ffb363-dc0f-428a-ba51-a5a91c257e88"
        },
        "item": {
          "id": "ae9c9f5e-2528-4671-bc42-eaed6ddd23a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0269fb50-500f-489d-92db-87cebb4957c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4718b119-1087-45ff-922f-ab5b0cea7cd8",
        "cursor": {
          "ref": "6f26acde-792c-4af1-9594-215f6b4f4728",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d82634fd-c00c-47a3-b78e-edc15f016ff7"
        },
        "item": {
          "id": "4718b119-1087-45ff-922f-ab5b0cea7cd8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7d8f7853-a8c8-4495-9074-fe9daeda14b6",
          "status": "Created",
          "code": 201,
          "responseTime": 7875,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b335a-281d-4627-9abb-b24e3c7baec3",
        "cursor": {
          "ref": "8bbb498d-5790-4500-a111-9a5d21ce270d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a748dad9-96b5-4a91-82de-a97b50eaf854"
        },
        "item": {
          "id": "566b335a-281d-4627-9abb-b24e3c7baec3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64b81bab-5e90-404c-82b6-29c527a98bb6",
          "status": "Created",
          "code": 201,
          "responseTime": 7916,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3366df7d-de51-4dc3-961e-d3e961d3dd6b",
        "cursor": {
          "ref": "e6420d34-b0e8-4503-91d2-a476286c63d3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5de937c4-75d5-47ab-8a48-51e65f5f3a75"
        },
        "item": {
          "id": "3366df7d-de51-4dc3-961e-d3e961d3dd6b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6869dc4d-a837-48ae-ad7d-880e3b80057a",
          "status": "Created",
          "code": 201,
          "responseTime": 5613,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d969fd-9b76-45b3-b1bd-1cc0d764b6ad",
        "cursor": {
          "ref": "25f9fd57-184a-4254-97f4-3772fd0b947e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "66c54a54-2d6f-4d3e-8987-e50e11f060c6"
        },
        "item": {
          "id": "e4d969fd-9b76-45b3-b1bd-1cc0d764b6ad",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b185ef4c-51e4-4948-97a9-00258eea0eb3",
          "status": "Created",
          "code": 201,
          "responseTime": 5473,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc62031-5f4f-42bc-989b-328a4cd7e29c",
        "cursor": {
          "ref": "103dace1-c243-4b93-b2cf-ca722433dee8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6b22c15f-e0ad-4143-a3d1-1d14bf05fbcb"
        },
        "item": {
          "id": "bcc62031-5f4f-42bc-989b-328a4cd7e29c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c6d5e25b-22db-40fd-8674-b98f81bef264",
          "status": "Created",
          "code": 201,
          "responseTime": 6124,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "57948960-a97a-4fb0-ad6f-5b44d97a0984",
        "cursor": {
          "ref": "f62f6dab-ad11-4094-afdf-20f2ffd26d24",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "428f6754-82c5-4459-b984-02d625bb25e4"
        },
        "item": {
          "id": "57948960-a97a-4fb0-ad6f-5b44d97a0984",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "27dfc3b0-939d-4498-9f10-d92ba93c84f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7a4e2aac-6d1e-491b-a38f-7eb358a6bdd6",
        "cursor": {
          "ref": "ecf0cd2d-cff2-4368-b5e2-a2aa78c1e155",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "abcb9cdf-e5c7-4496-924a-48a726199d44"
        },
        "item": {
          "id": "7a4e2aac-6d1e-491b-a38f-7eb358a6bdd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ff348d1-b26e-428d-b4fd-181aa61dcb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7c8717-2a0a-45ae-86fa-62c9c21b0021",
        "cursor": {
          "ref": "5b56be3c-28ad-4c0c-969a-bc0cf608a6ea",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed3a9621-c433-4749-9e09-b51080e9d2fe"
        },
        "item": {
          "id": "6d7c8717-2a0a-45ae-86fa-62c9c21b0021",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eaffd420-511e-445c-bae7-ea5bb3311b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2434046-8104-416a-b8f8-97c217b1ecde",
        "cursor": {
          "ref": "0e22285e-adcf-486a-9be4-6e1144567152",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51d9b9cc-0d05-4001-a2d9-76c83ffdb117"
        },
        "item": {
          "id": "b2434046-8104-416a-b8f8-97c217b1ecde",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a45363b-61cc-4b10-83a0-a4583058fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbb9a05-7d1a-45fd-a017-d0ca57cfe293",
        "cursor": {
          "ref": "983d58ad-7065-4b71-8686-d00dd8437814",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b62b8816-3023-44d0-8fe5-6371a9094de9"
        },
        "item": {
          "id": "0cbb9a05-7d1a-45fd-a017-d0ca57cfe293",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5aeae84a-61c4-45de-992b-2d55663ff3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c36adaf-f12f-4f98-b6d1-7e41cefdd009",
        "cursor": {
          "ref": "3d630514-d376-435c-bae4-2e9c09cc3a45",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7b87555b-fc2b-4cb8-9249-f00ff948534a"
        },
        "item": {
          "id": "8c36adaf-f12f-4f98-b6d1-7e41cefdd009",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99bc749f-e58a-40c3-a2e4-ff682ed1fea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4db1c2-e9b9-4753-b128-7841d48f3691",
        "cursor": {
          "ref": "cf2bfbda-78c0-4eb0-8b17-6f850574de25",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fb30eaa-0c04-430c-8103-57f1cc15712a"
        },
        "item": {
          "id": "4b4db1c2-e9b9-4753-b128-7841d48f3691",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e48bef9-32e9-45b8-9d9c-a2a908185251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe5a56-bb68-4337-8a4b-2f6ca5475e68",
        "cursor": {
          "ref": "2ab305c3-7c09-435b-ade6-bd0bc7e2ac79",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9ce19aa7-eaef-497c-81b8-44aa1e80bab1"
        },
        "item": {
          "id": "c4fe5a56-bb68-4337-8a4b-2f6ca5475e68",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6dfcbc6f-7fc3-4064-9c87-da3ddcb146ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e985aa96-4295-401a-8f4e-7da7d515b090",
        "cursor": {
          "ref": "fe229ef4-2e63-4f88-8e80-9737b535bbf1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b5d049ce-d08a-45fc-988a-4174e26942f3"
        },
        "item": {
          "id": "e985aa96-4295-401a-8f4e-7da7d515b090",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dcce511d-d5fe-405d-b35e-157f6826c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b63837d-2204-4296-800c-20f41438040e",
        "cursor": {
          "ref": "477559dd-35a3-48ad-bc7a-efb4d29c552d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d2f61bb-e1ee-4def-a9a0-aad2a5545ecf"
        },
        "item": {
          "id": "2b63837d-2204-4296-800c-20f41438040e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4795bf52-ba80-4cef-a784-ca6374b33a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c51f59-667d-4510-86ae-ae871253bf38",
        "cursor": {
          "ref": "2dd88215-7d3d-4460-b99e-d512a3e99c6c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cc6509d4-c0ad-4ff2-9459-1218be183600"
        },
        "item": {
          "id": "13c51f59-667d-4510-86ae-ae871253bf38",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fdc186f-2d97-4bb9-b52a-92185dd16ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e5609f-c9e2-48be-9efc-413786009373",
        "cursor": {
          "ref": "426a7ccf-e504-4d32-9ff8-e69ff37c9f8f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "430c8182-d606-4606-85c6-5862dd1d5df8"
        },
        "item": {
          "id": "c5e5609f-c9e2-48be-9efc-413786009373",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72f5ecf4-9756-4412-aabb-6fcce521a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30accd5a-6fbf-468b-8402-81e91bb240a4",
        "cursor": {
          "ref": "a1e54d68-5500-40e8-80b9-95d71db07423",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d49e457-c491-45fe-b66d-feae6fe925ea"
        },
        "item": {
          "id": "30accd5a-6fbf-468b-8402-81e91bb240a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f3c5ba1-dc61-438e-bc72-e7e41eb79032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920deda6-f5c3-4925-ac8c-0f8adfb16b46",
        "cursor": {
          "ref": "b615d7c1-0031-4bfe-be8d-d04a08baefcc",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69a05bc1-5357-498d-9ab6-133fc410a047"
        },
        "item": {
          "id": "920deda6-f5c3-4925-ac8c-0f8adfb16b46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "74df04d0-7ea8-4064-93bb-1bcf129b0887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8c674-6766-42c6-a51a-f17cb9c77383",
        "cursor": {
          "ref": "169cbdc9-daad-4172-af04-5f99f2e4a015",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1ccbb8fa-56b6-4c93-8c88-163cdd9a3d7c"
        },
        "item": {
          "id": "eee8c674-6766-42c6-a51a-f17cb9c77383",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a4d8b37a-02d5-4b13-ab0c-2cf2de74cb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce0d60d-0825-4ae6-b486-77d5377361a4",
        "cursor": {
          "ref": "722dbc54-db96-48a5-bd83-921d5cf77ef4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f17378c1-dfc8-41b7-8310-f14a6812ab0e"
        },
        "item": {
          "id": "1ce0d60d-0825-4ae6-b486-77d5377361a4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "10a32c72-f34a-43d0-a9fd-0765f25a8d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a26f6-6bc2-4c2a-9340-cbacad290762",
        "cursor": {
          "ref": "c51abfa6-1cbc-4fff-8431-39024550f156",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "728cbe27-07a9-4767-89c5-919e20a7e6a6"
        },
        "item": {
          "id": "439a26f6-6bc2-4c2a-9340-cbacad290762",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "257aa7aa-8892-4909-bacd-8ae106cb9358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abe18cb-7b4f-4032-800d-5e837bbc2336",
        "cursor": {
          "ref": "c31a21e8-83e4-4d9c-a3ef-8d551914269a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c1181d8-46b8-4f58-b5c3-2d68cec88093"
        },
        "item": {
          "id": "0abe18cb-7b4f-4032-800d-5e837bbc2336",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "510c014e-cf84-440f-850a-36b916731800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3dcf1-d19c-451d-b2e5-5908931500b1",
        "cursor": {
          "ref": "fe6ccfac-6676-4373-82a6-227689383aac",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f334fb7e-41d1-473f-a2e1-52a210a6ce03"
        },
        "item": {
          "id": "2ed3dcf1-d19c-451d-b2e5-5908931500b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e29c9cba-2de6-47c5-8152-5f761ef4a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0082f0-aecc-490e-9960-240cb00c3506",
        "cursor": {
          "ref": "f9f5128c-1823-4fd7-89e5-8e91a1a2b9fe",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2793e8fd-b09b-45ca-8d57-209a137a7160"
        },
        "item": {
          "id": "bc0082f0-aecc-490e-9960-240cb00c3506",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "070aa9af-9874-4243-a810-f481725497e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be60211c-848b-4834-a4d3-1fb425a53e4c",
        "cursor": {
          "ref": "70667591-33e6-4bc2-a5a4-d4a3f374b875",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba9a7db7-d40a-4ab3-9615-1183b567b430"
        },
        "item": {
          "id": "be60211c-848b-4834-a4d3-1fb425a53e4c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "531b4ac2-eaff-4248-8773-104eff580ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea07860-af25-4f4e-bd10-3adffebb9575",
        "cursor": {
          "ref": "b1211681-bf43-4f3f-afca-00f9dddaa148",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0e14f800-1d90-46b8-a0b0-11d7da42ed0c"
        },
        "item": {
          "id": "0ea07860-af25-4f4e-bd10-3adffebb9575",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfdbf85a-49f0-4ae1-853b-aafc87081e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0409ca2-32d8-4270-bf83-f6f088279914",
        "cursor": {
          "ref": "795130f7-f0f4-4a21-bd02-2f7aa3f3dc34",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1537f2e4-70d7-4f12-aad6-3ebd7cf29503"
        },
        "item": {
          "id": "d0409ca2-32d8-4270-bf83-f6f088279914",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b60e268-e3f3-401b-b60e-574c7d44f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78890f-1e37-4e12-bbdb-6a68a4bffcbb",
        "cursor": {
          "ref": "545ab0e5-df11-436c-a47d-eb31e7e3532f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "91cfc9c9-ea7f-430d-948a-c94860a8fe83"
        },
        "item": {
          "id": "ca78890f-1e37-4e12-bbdb-6a68a4bffcbb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "644b73c1-d837-4f8c-8349-76c46eeec585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae5681-2b57-4580-a1d9-6079d2eb50b1",
        "cursor": {
          "ref": "2f5e896c-68ae-4d65-962d-8756640eccb5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5d842738-a540-4dad-a73e-7ea19de399a9"
        },
        "item": {
          "id": "22ae5681-2b57-4580-a1d9-6079d2eb50b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "731e3341-3c29-4270-8acd-a1bfd27913d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7617a8c7-b9be-400b-9bfd-1fcff4f1cf1f",
        "cursor": {
          "ref": "02a4b593-0fa3-44bc-8693-7974560d3786",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ee81de75-338c-4050-8fef-1279c0a21847"
        },
        "item": {
          "id": "7617a8c7-b9be-400b-9bfd-1fcff4f1cf1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4f565a49-ee68-4891-93c3-0434f29d1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3aa155-7b48-4937-a0d9-949c72d00c60",
        "cursor": {
          "ref": "19ba1b89-5206-4aaf-a898-76e2c614b417",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "66c4241e-640d-4efd-bae1-ee793f74d79a"
        },
        "item": {
          "id": "4c3aa155-7b48-4937-a0d9-949c72d00c60",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0fe5376b-338f-4abe-9eca-f922b63727bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc4c829-0205-48ca-874c-0d8d55173730",
        "cursor": {
          "ref": "92528b38-85fc-4729-a74f-97a761211ec6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e18ae2cb-5dd3-4800-9d57-9569a0395610"
        },
        "item": {
          "id": "0fc4c829-0205-48ca-874c-0d8d55173730",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "07d7a24c-cd46-48c0-bd17-9adc4dec6365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd5888e-3f8a-4084-a138-dea56d9aabb7",
        "cursor": {
          "ref": "a3a89b1e-d3ec-4a6d-a593-378aa5d8b936",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "201c9562-5653-4c98-980b-237a47a5e9f6"
        },
        "item": {
          "id": "ccd5888e-3f8a-4084-a138-dea56d9aabb7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "034b4985-a87c-4957-89ee-f7c0501c561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aab1ed-0123-46d7-bf61-679379d40d97",
        "cursor": {
          "ref": "f8287521-2174-4d53-8f8b-8c57e6b36a53",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0a8bbd58-9d82-444e-be90-71d504a4c008"
        },
        "item": {
          "id": "94aab1ed-0123-46d7-bf61-679379d40d97",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5eb25bec-6991-4751-ac82-f1b19d5b0d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb00f40-f6dc-4bb5-9dea-98f35427513d",
        "cursor": {
          "ref": "3db0c568-3db1-4d3a-990c-fa2722a4f299",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1b57f853-98aa-4c1a-b6ca-294e78f0c8de"
        },
        "item": {
          "id": "2fb00f40-f6dc-4bb5-9dea-98f35427513d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "365a0939-5c91-4865-87d9-c93e8829a96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a7f3c-ee3d-4118-a6c0-f00494b52764",
        "cursor": {
          "ref": "fd9a8757-110e-46f0-b33c-c3026b42d8bf",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "55f5f10f-3b78-42ec-8b58-8ab2de1bd62a"
        },
        "item": {
          "id": "8b2a7f3c-ee3d-4118-a6c0-f00494b52764",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3869e0cf-f42d-4947-bd28-146470525dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcd751d-07c5-4294-a40d-32011b2d8564",
        "cursor": {
          "ref": "f304a3d2-251f-4294-a4ca-e8126db71ff9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3d4bc8df-9269-4d07-ae9f-f18dcda8a6bb"
        },
        "item": {
          "id": "3bcd751d-07c5-4294-a40d-32011b2d8564",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dced2624-b724-4852-82fd-ba25b450b98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067d728-7d7a-4d21-8bdb-3f6d86f2e44b",
        "cursor": {
          "ref": "f5d1a86a-9c4a-4952-b966-50cfd23ad45c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92a28398-a091-41be-9345-3189c83dfd65"
        },
        "item": {
          "id": "1067d728-7d7a-4d21-8bdb-3f6d86f2e44b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e90d0076-e438-43a7-818a-d10d19740246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba6fc87-5db9-4613-ab8f-24dc16eae577",
        "cursor": {
          "ref": "351a7ae1-dfd0-48da-86d1-20dbcd2adc93",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cade4228-ce99-44bd-83b1-40427a6af0fa"
        },
        "item": {
          "id": "1ba6fc87-5db9-4613-ab8f-24dc16eae577",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a9372ea-37d2-410d-b8ef-5a54a5e8c114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb100d9-6535-4ffd-a778-0b7f8e8f8768",
        "cursor": {
          "ref": "c474d24d-55a6-4502-926c-d4b6c9356919",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b8767a5-2944-49ce-8cf4-ef866a19723a"
        },
        "item": {
          "id": "cbb100d9-6535-4ffd-a778-0b7f8e8f8768",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "666a2b42-ae84-4bf1-bd82-cc23306ba79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7129e2-a023-441a-a864-00aafa5d6942",
        "cursor": {
          "ref": "1b67b18f-b77c-44d1-be62-86ce7f6f2710",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "134d75cc-a037-4c55-b979-c38168552bcc"
        },
        "item": {
          "id": "6b7129e2-a023-441a-a864-00aafa5d6942",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51b8bfdf-388d-4fae-89de-945e17282e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9d2e83-f95c-4c11-83d7-33e8f04802af",
        "cursor": {
          "ref": "b7270a50-db01-4243-9321-fa3be25069d4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8f4121d8-ae6e-4ec8-87eb-7da0222f2219"
        },
        "item": {
          "id": "3c9d2e83-f95c-4c11-83d7-33e8f04802af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc664339-01eb-4925-8e9f-55ac6df8c7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db68ba-4c64-496d-831d-35e0d44bd191",
        "cursor": {
          "ref": "55a4dae9-5e56-40be-9cd2-75a63323389a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1c91513-a46c-4f05-bf8b-1fc22e5f4016"
        },
        "item": {
          "id": "e2db68ba-4c64-496d-831d-35e0d44bd191",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef64db7d-be43-49cf-81a0-d75e775b1300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885eb0d2-29f7-4034-b11d-3708736ff259",
        "cursor": {
          "ref": "adbfbb28-85dc-4659-b5d3-a80f46e8077f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1f208f54-2945-4d74-9a17-40008b50e340"
        },
        "item": {
          "id": "885eb0d2-29f7-4034-b11d-3708736ff259",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9655e22e-4aa8-4424-8631-200f934f8874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb19d96b-a0ae-4fe7-bba2-9b1b06b76110",
        "cursor": {
          "ref": "65d33273-d4ba-4cea-805a-1805c9abb140",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e114b5f5-ddab-4e27-a8c3-5d32a27509c9"
        },
        "item": {
          "id": "eb19d96b-a0ae-4fe7-bba2-9b1b06b76110",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4ed1d925-690b-4887-81d4-0389a5b944a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e605f09-c9b1-426f-8ac5-c609b6c54e70",
        "cursor": {
          "ref": "1a62f3ad-3547-437f-82e2-63fafad802fc",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f4987a64-89ac-4454-81b3-1b2c46bc04cb"
        },
        "item": {
          "id": "6e605f09-c9b1-426f-8ac5-c609b6c54e70",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "66b44fd9-8479-42c2-8c3a-435c27f2a4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5aaf1b-fd68-4fcb-9103-f465ab8cb384",
        "cursor": {
          "ref": "48f5a2bc-8eeb-4b4d-8580-d3cf7b0c63e0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3768da0e-7221-4c5e-9842-f9b4aedc17c5"
        },
        "item": {
          "id": "ec5aaf1b-fd68-4fcb-9103-f465ab8cb384",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ffee2c7d-4530-416f-a653-98710211aeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1231f2db-61ca-45cb-837e-88e65c02ce6e",
        "cursor": {
          "ref": "a44366fd-7ec5-4ff3-acb3-b9d84295c786",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1a59aa28-5423-4c05-83f6-140a93df2048"
        },
        "item": {
          "id": "1231f2db-61ca-45cb-837e-88e65c02ce6e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a05fb77c-9ff2-4090-8440-92c1977f9694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a01586-5f7b-4346-a803-8296994920b9",
        "cursor": {
          "ref": "5f9cf116-06f4-4b89-a0e4-ff030136d4c8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5c14b3e9-8e34-484a-a3d9-7bc6d1848bc4"
        },
        "item": {
          "id": "c6a01586-5f7b-4346-a803-8296994920b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e0fc1a51-ac6c-43eb-a666-c4195a7a815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489fd9e-5bf8-4998-8868-8b860ce12ee2",
        "cursor": {
          "ref": "f70c7ae5-1726-4ede-8271-fc892843dbbb",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a44a4bda-43ad-4d32-baf8-9a7d4e6ff530"
        },
        "item": {
          "id": "1489fd9e-5bf8-4998-8868-8b860ce12ee2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3a908f08-7aea-4317-80fe-0d593cf21223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece4084-7491-4623-847f-2856b5a8f8ec",
        "cursor": {
          "ref": "a338ddd5-63b5-43ec-81e6-ac8db27a2272",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "665cfc37-2926-45fc-817a-1e66fb05c303"
        },
        "item": {
          "id": "eece4084-7491-4623-847f-2856b5a8f8ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c3087481-f591-4181-8df2-1668460ba57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47667ec9-e6e8-4c0c-8412-9147ca51211c",
        "cursor": {
          "ref": "6ce17818-3d64-4a68-84e6-e4e5e688d414",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cca7d37d-6139-4756-97a2-5a543a5a5409"
        },
        "item": {
          "id": "47667ec9-e6e8-4c0c-8412-9147ca51211c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a726a1f-9ba2-4332-9378-9c656442a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f237092-df4e-4468-a2d2-64daaf69df03",
        "cursor": {
          "ref": "8223915c-a3e7-4351-8b20-ab98aca53022",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "073a6cf9-a504-4d83-a336-830458c178bb"
        },
        "item": {
          "id": "1f237092-df4e-4468-a2d2-64daaf69df03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "723381e5-deaf-4e94-b2f5-47043ea489c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd51123-be9b-442f-8eff-de307757cf63",
        "cursor": {
          "ref": "7960698f-1331-4674-b0a0-aa9322cd4adb",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3122d1e6-4e8a-4dda-b341-225c34d7c191"
        },
        "item": {
          "id": "2dd51123-be9b-442f-8eff-de307757cf63",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c83cb57b-d7e9-4c89-825b-5cbc6cf1fb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657aa706-176a-4a0b-9824-5f2c11eb6573",
        "cursor": {
          "ref": "eec9eee1-7dd9-4d6d-ad1a-f402c4f234fd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e68a495d-7bbf-4526-9e93-280b2d854174"
        },
        "item": {
          "id": "657aa706-176a-4a0b-9824-5f2c11eb6573",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "826166e7-46c4-4e89-bca9-ef9a57f11fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab26c1f-28bf-466a-8e70-09e2722fabb3",
        "cursor": {
          "ref": "68e3fec1-a4ee-4997-b299-cb0f37700cf0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34c15203-d9ed-4166-8906-219735bc6cac"
        },
        "item": {
          "id": "aab26c1f-28bf-466a-8e70-09e2722fabb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f9cb2741-704d-44d7-9985-1ffc78369a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c791d76-ef65-49e2-aa9a-b480eda6cc3e",
        "cursor": {
          "ref": "086ff01b-68d9-47ba-a6c8-4f25503d746a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55135903-e00c-4be3-a35a-fbc743b2bc43"
        },
        "item": {
          "id": "6c791d76-ef65-49e2-aa9a-b480eda6cc3e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15f532b5-7b4a-4e33-afea-5058888e1385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f8263-690a-47ff-af3a-d5967e04d555",
        "cursor": {
          "ref": "70800f1e-635a-4c43-bfd2-9aa60cd30861",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4b22f23a-4507-4404-b516-69a5463e18d6"
        },
        "item": {
          "id": "f13f8263-690a-47ff-af3a-d5967e04d555",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7109af48-e176-41c2-bc2b-9283c33908bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18500758-1be6-4dc3-aed7-8f6b3192ec49",
        "cursor": {
          "ref": "9a15e65e-57bc-4099-8bac-7270879511e8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3fd54afe-396f-4449-bdc2-cd0544f4a27d"
        },
        "item": {
          "id": "18500758-1be6-4dc3-aed7-8f6b3192ec49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f97fe725-febe-4991-8454-1816c516e7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f887d78-0e01-4326-bd3f-0529092f4143",
        "cursor": {
          "ref": "b2ee4166-6c43-4cfb-9ddb-384e4071050e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b7770f56-0510-48f7-b0d1-86097fb6e9f9"
        },
        "item": {
          "id": "4f887d78-0e01-4326-bd3f-0529092f4143",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b4098a9f-6e64-4625-b1d0-ffc3d3ec6127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f892fa35-1316-43c8-877b-168d21d0951b",
        "cursor": {
          "ref": "e9290c06-f04e-467e-b685-b09972ec5b61",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2c8cb0da-d106-474b-9edf-dfb0e0ebb67b"
        },
        "item": {
          "id": "f892fa35-1316-43c8-877b-168d21d0951b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "76221a7d-9b49-4f32-b203-bf892495cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daaf7d8-77ec-4520-8982-9112fcbae464",
        "cursor": {
          "ref": "6f5fb1e1-1ba1-48dd-baff-a6b1d82302b4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e80ae17b-93b4-47c1-8950-2e53b6742a8b"
        },
        "item": {
          "id": "5daaf7d8-77ec-4520-8982-9112fcbae464",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05ef6ae6-84fe-4cbd-b5b7-ce90aa0e8fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23675c0e-32ea-4963-9162-1604563e08cd",
        "cursor": {
          "ref": "07087538-c3fa-4bf6-bd26-f0d497825aa0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f7c9e55e-1d3b-4098-8506-9b0909f97749"
        },
        "item": {
          "id": "23675c0e-32ea-4963-9162-1604563e08cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27d9af0f-d505-49a3-ab65-46da17adf128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6be7be8-f144-4b3e-ba25-392a25716746",
        "cursor": {
          "ref": "5971695b-03be-489a-bf72-173a82a1bf00",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1cd48f99-307b-4b58-85b2-062ab87e7159"
        },
        "item": {
          "id": "a6be7be8-f144-4b3e-ba25-392a25716746",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "77d3f7ae-d738-40dc-a8cf-6831a180d9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df6850c-771f-4beb-878c-90a798b461b4",
        "cursor": {
          "ref": "c5a17a01-7a20-4e8d-b2dc-4173ae4bab25",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cd5e95a7-8a47-4f98-84f5-af8f0024f9ba"
        },
        "item": {
          "id": "5df6850c-771f-4beb-878c-90a798b461b4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10ef1331-9311-43b8-99f4-19f90b55e5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20486b11-3ac7-47e4-9ef9-89ac96cf0de1",
        "cursor": {
          "ref": "a0a71bff-0952-48fe-b13a-233dfcd46265",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d8c0f6fc-2f9f-4eff-9358-eb3e4ec23026"
        },
        "item": {
          "id": "20486b11-3ac7-47e4-9ef9-89ac96cf0de1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7c50a133-7ef2-4147-b39a-655124435fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15db5544-dce5-4d3b-acd9-66bd0e98ff99",
        "cursor": {
          "ref": "5e9615dd-222c-4eef-b360-1aa7dcd1769a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1e39f12c-493a-4191-b880-bf750eb4c9b3"
        },
        "item": {
          "id": "15db5544-dce5-4d3b-acd9-66bd0e98ff99",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d0a81e9-4487-4e10-90de-73523a52bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9471b64-b6a2-49a7-af6d-a27be1238175",
        "cursor": {
          "ref": "66ffd5a2-5508-446a-a95f-6db5dfd4d788",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b3de470-1f8c-483c-8167-9d3c362091d0"
        },
        "item": {
          "id": "b9471b64-b6a2-49a7-af6d-a27be1238175",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba583c64-9550-4a4b-bc52-b7f163337ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be40500-e7cf-44c3-a3ec-198de103b6f4",
        "cursor": {
          "ref": "b23a577a-6e66-437c-be9c-215a4632527a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cbf88481-b7da-4e28-ad53-f4284a59427d"
        },
        "item": {
          "id": "6be40500-e7cf-44c3-a3ec-198de103b6f4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0af74251-4743-461d-a763-d10a20610a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9df9f37-8ad2-45bc-869e-bab24b6f2904",
        "cursor": {
          "ref": "1a5e87be-e661-4cb7-af44-852d43f58336",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f8314fc7-49f1-4872-a6ac-9661545f7750"
        },
        "item": {
          "id": "a9df9f37-8ad2-45bc-869e-bab24b6f2904",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "00fc88bc-142a-4010-ad4f-af40d44c0064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a986c49-daf6-4919-8e1f-59bfbe97ad9b",
        "cursor": {
          "ref": "baf35fdc-4bcc-4f9f-842b-c3b6391aaa38",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4186fcfa-3e6c-42f2-a0d3-b8876542d466"
        },
        "item": {
          "id": "2a986c49-daf6-4919-8e1f-59bfbe97ad9b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dd3153e7-4d7e-4343-a7af-f2144146a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9ff2ab-c333-49fd-9feb-746b3d18800a",
        "cursor": {
          "ref": "ddf44ca6-98c0-4415-b757-126cab93b78c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8a12fb06-67a1-4419-916b-216b4f743f09"
        },
        "item": {
          "id": "ff9ff2ab-c333-49fd-9feb-746b3d18800a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "edd53273-a815-4654-8bc6-6b668b2b5c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b384dc8d-b31b-4d4a-96d1-b0bc38f7942f",
        "cursor": {
          "ref": "43dded04-72b6-4027-bcd6-c62ae6207e34",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "88519e2b-d594-4074-874d-987160a49147"
        },
        "item": {
          "id": "b384dc8d-b31b-4d4a-96d1-b0bc38f7942f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f922d697-c434-47a9-9974-126b4b1a5c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cbd923-7928-472b-adaf-0631f51d5cc2",
        "cursor": {
          "ref": "4202ab62-0d77-4a17-a894-d11a69896559",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "260617eb-ea0d-45b7-b95d-19dacd8ea9c6"
        },
        "item": {
          "id": "27cbd923-7928-472b-adaf-0631f51d5cc2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "52fadb53-1a1b-41d6-a6ce-1834a0f0eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e843f5d4-5bde-4c7f-869f-f92b63c51100",
        "cursor": {
          "ref": "fb0faafd-072d-4f62-8af5-976f260e0a13",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e9498954-e1fd-4a00-bb58-ea7e7facfdcd"
        },
        "item": {
          "id": "e843f5d4-5bde-4c7f-869f-f92b63c51100",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5461913c-bfda-41c1-8665-65ce54f3e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5275645f-7e1b-46c8-86ec-c663f994be3a",
        "cursor": {
          "ref": "6eaf73dc-bcdd-4dc6-9754-78b129c9449c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "670cba5e-9189-4690-a961-196090f9f056"
        },
        "item": {
          "id": "5275645f-7e1b-46c8-86ec-c663f994be3a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "954447a5-a705-471e-ab64-10c88caf72fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda7f84-db17-4aeb-968d-9dc5b75b9010",
        "cursor": {
          "ref": "f7ded3e3-4aa3-4851-925a-9c2b80069e27",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b5dc7523-7300-4367-bff7-11c827c65380"
        },
        "item": {
          "id": "5cda7f84-db17-4aeb-968d-9dc5b75b9010",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88227833-bef7-4c9c-ae03-868050973086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfbfcc6-3806-4fc9-92ca-3d92f5dee43b",
        "cursor": {
          "ref": "e8cf7ced-59e9-47bc-af0b-c2e0dee25a68",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "066a055f-3dbb-4898-9c68-6c1d41d2c51f"
        },
        "item": {
          "id": "bbfbfcc6-3806-4fc9-92ca-3d92f5dee43b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "913749d7-5772-4645-96f2-33b1916636e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61f0400-c35e-43cc-aaae-d0ba219fb4e3",
        "cursor": {
          "ref": "63067cce-2041-46f9-a526-bafd9d1d9017",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "129d3460-43b8-4834-b204-baaf945fbc64"
        },
        "item": {
          "id": "f61f0400-c35e-43cc-aaae-d0ba219fb4e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d1b255b6-df03-4fe3-9767-76046b4824cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603046a9-a03d-43b0-979e-82da2e5e0fa6",
        "cursor": {
          "ref": "fc41e4cd-c03f-442b-b128-e24966511701",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "24911d01-77f3-4ffb-83cc-2157fb1f7403"
        },
        "item": {
          "id": "603046a9-a03d-43b0-979e-82da2e5e0fa6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ee2f79f8-c6c7-49a8-bad2-04d7689a6478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e1e083-fc2f-4474-8dc7-10bf056357db",
        "cursor": {
          "ref": "87d9dcad-fd37-4349-8402-bde68dd70435",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78c04fd8-524a-44e7-a6d6-93994baa6096"
        },
        "item": {
          "id": "b1e1e083-fc2f-4474-8dc7-10bf056357db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7b68460f-29ac-4157-991d-415765c235f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a787e4d-2a17-4739-a8d8-b2733efe0739",
        "cursor": {
          "ref": "e350936a-dbe8-4d05-bea2-3da21d0c6114",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "567c5ad5-960b-40db-bab1-36f065dc82a7"
        },
        "item": {
          "id": "5a787e4d-2a17-4739-a8d8-b2733efe0739",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a4b154a-d4de-4525-948a-a7e491409787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735dce80-7a69-4b51-aed2-ce662595d3c9",
        "cursor": {
          "ref": "176d65f4-2717-467a-9d84-4686e6e7ef94",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "43662556-73e6-4b01-9c57-a11d371a37f1"
        },
        "item": {
          "id": "735dce80-7a69-4b51-aed2-ce662595d3c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fee82cfe-e799-4f84-96bf-80122206bbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3cc700-43f9-4b57-9516-3c29d2c28a58",
        "cursor": {
          "ref": "b5007cab-bb45-436c-8bf1-54615bcb9060",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6c99916c-689b-4330-a014-b6ff5b6cf0bd"
        },
        "item": {
          "id": "3f3cc700-43f9-4b57-9516-3c29d2c28a58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0d72d9c8-7690-4c82-9936-0fd229da9948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab401541-001f-480d-8664-afe6f0407fb4",
        "cursor": {
          "ref": "acdf8cc4-50c7-4fbf-8cb3-10e906a823d8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2a1ccda6-921e-4ca2-90ee-9381490e7ff5"
        },
        "item": {
          "id": "ab401541-001f-480d-8664-afe6f0407fb4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd2fcead-e3c4-439c-84e3-be79403f18d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bbbc41-58f7-47d4-97ae-cd22e33695b2",
        "cursor": {
          "ref": "429f1c21-0859-4965-80fa-e5aeefd1cf33",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "056ecf25-7b64-4db5-8c9a-db0b6b05f2a9"
        },
        "item": {
          "id": "31bbbc41-58f7-47d4-97ae-cd22e33695b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f5495606-ad63-433c-9215-19844882e9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5996b772-6fa1-4a88-86f2-5e5a03433301",
        "cursor": {
          "ref": "4abcc12e-50ec-46ad-9e28-0dc4a9925737",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "088f15dd-4c25-428e-aa30-f937b119e253"
        },
        "item": {
          "id": "5996b772-6fa1-4a88-86f2-5e5a03433301",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a5cf1b87-586f-450d-9486-36f3f3e80598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5dd3a7-d44c-43df-badc-9cd550dc469d",
        "cursor": {
          "ref": "77967901-8a5b-4a4a-a3ce-7dafc03ce36f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "929fdad2-319d-44c1-80c4-ac4d1ac72732"
        },
        "item": {
          "id": "2e5dd3a7-d44c-43df-badc-9cd550dc469d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d7a36ff8-4adf-4493-bf98-a9b444688b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b331ba-61f9-46e2-8747-cab12d9113ed",
        "cursor": {
          "ref": "796077d6-174a-4b9b-aefe-d80c565c4528",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f51a6495-fc2c-4fa2-b482-40274d943d3b"
        },
        "item": {
          "id": "d7b331ba-61f9-46e2-8747-cab12d9113ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "333b5d17-4e4c-4194-89fb-a27cd81c84cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9864b965-7216-44ed-a566-2e315332e80c",
        "cursor": {
          "ref": "40a2af46-a501-4f4b-92a0-85da96492159",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ff2e9f7c-214f-43aa-9d35-9326b32b38ea"
        },
        "item": {
          "id": "9864b965-7216-44ed-a566-2e315332e80c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "26844fbf-a81e-414e-a447-1287b89ce69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6628042e-286e-4633-a581-4529a3d05557",
        "cursor": {
          "ref": "02e62a8e-1ffa-49d8-9921-09af061eae2d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ec7fc7d8-e6c0-4521-88d7-cd5edb4ff805"
        },
        "item": {
          "id": "6628042e-286e-4633-a581-4529a3d05557",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9ccbe561-50c5-4185-a16c-280075e6fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d32a7c2-da8c-4c55-b87a-1d69d90abe1c",
        "cursor": {
          "ref": "ec0abaf2-b168-41ba-ab1d-ba8a3730c234",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fc5b7a97-bce4-4d0b-aa3d-b4817888131e"
        },
        "item": {
          "id": "9d32a7c2-da8c-4c55-b87a-1d69d90abe1c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3960c1be-f5da-4120-892c-c0d041c868e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab1b26e-cfb1-44d4-b96d-84edc0459256",
        "cursor": {
          "ref": "0ce36d7c-c17a-4503-9f91-272f94119ecc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebbd62cc-f67a-4299-9e59-5c90f74c9d58"
        },
        "item": {
          "id": "fab1b26e-cfb1-44d4-b96d-84edc0459256",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fce5bc88-6440-4594-a37e-66fba65f2176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f368acd7-7947-4e8e-9ba3-b3edbad3f26b",
        "cursor": {
          "ref": "f9e708ff-4e67-4601-8dde-4f94abd8d740",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16266aff-a1dc-4658-b4c9-5f209bb3a393"
        },
        "item": {
          "id": "f368acd7-7947-4e8e-9ba3-b3edbad3f26b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "99721f75-afa8-4ab3-b511-7fd15c5793e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e2de69-cbae-4fad-aa0a-dc52eda8c8d6",
        "cursor": {
          "ref": "22cfd4f2-97d9-4184-b6a8-b0e239356974",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3409fc81-acc1-41dc-a4e1-fd29a161d132"
        },
        "item": {
          "id": "77e2de69-cbae-4fad-aa0a-dc52eda8c8d6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9922fe7a-ac45-479f-b7a8-3888404a92c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b0d905-4bac-445a-b57a-05b0fd774060",
        "cursor": {
          "ref": "2f70571a-0145-4191-a514-6fc387d1c21e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5654c6e7-442d-4b2b-b1d5-39f06d77c0a3"
        },
        "item": {
          "id": "51b0d905-4bac-445a-b57a-05b0fd774060",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ab05f1e3-72b7-4ff2-8611-e95767a8ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fc183-a38f-4d27-a42d-d539641a4e1e",
        "cursor": {
          "ref": "0aa3a8ec-a6f1-4724-87f7-505bdb07c70d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9a4ce173-496c-493b-bb9d-fd7e297fca12"
        },
        "item": {
          "id": "944fc183-a38f-4d27-a42d-d539641a4e1e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "55133849-a250-4541-ab15-4326d3a3ceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf817a9-542c-44b8-8e21-2fc63dfb1094",
        "cursor": {
          "ref": "38dd51a4-cf03-4f0d-842c-e6a57279291f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5acdc6de-7146-47f4-b2c3-a8648a557085"
        },
        "item": {
          "id": "ddf817a9-542c-44b8-8e21-2fc63dfb1094",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ba7b6a7-fb25-49b6-9379-29168efcffb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbb023c-d27d-4c3c-9c6f-fbc26330e1a8",
        "cursor": {
          "ref": "562c5f69-4b86-4fe3-b46b-ae1c86da6234",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "78042f1e-c306-4747-8d29-1ce1b0e5abb8"
        },
        "item": {
          "id": "bbbb023c-d27d-4c3c-9c6f-fbc26330e1a8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f9635d3c-35d1-4725-96c2-fa33a9c31552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aed85a-ed90-4733-a682-dfd8c640e9fe",
        "cursor": {
          "ref": "d8eb4609-b947-47b6-8987-420778e1f15b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "87f4dcf6-0674-440b-9694-0a920ff69e91"
        },
        "item": {
          "id": "c3aed85a-ed90-4733-a682-dfd8c640e9fe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cacca86f-6d77-45c1-b4c9-72c3f1df1208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91776d76-9970-410a-8e01-36d3b93519f4",
        "cursor": {
          "ref": "443db072-ea97-4579-8301-8db469e7873e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2aac9f6b-a838-41c8-833b-89897e20940f"
        },
        "item": {
          "id": "91776d76-9970-410a-8e01-36d3b93519f4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "acd498f4-61ee-478f-9fc5-1d0e5ad35cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbe0c2a-dbed-48ff-8ea8-1b5d5250ee2e",
        "cursor": {
          "ref": "b5d0041e-9159-45e9-a524-a65330afe02d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40f0d2d5-39f9-450e-af67-d93fc16955c9"
        },
        "item": {
          "id": "3dbe0c2a-dbed-48ff-8ea8-1b5d5250ee2e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "75d1cdbe-a295-43bd-ba7a-6a66515fd954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7a786-41e6-40f5-a462-ff461c38cccb",
        "cursor": {
          "ref": "bad4b84b-2d2a-4572-9a04-61899af90ab1",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "216b87c7-d268-4cfe-9211-9b751f2d377e"
        },
        "item": {
          "id": "0ba7a786-41e6-40f5-a462-ff461c38cccb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d5fe5af0-df3e-42eb-b015-ebcd6e049508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8266e43-a6da-4ddc-a1de-36cb228cccc1",
        "cursor": {
          "ref": "dcddfe45-5b2e-4016-8646-da20c916e7fd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eb7e5c03-efd4-46de-9fac-d1df6e9eb661"
        },
        "item": {
          "id": "c8266e43-a6da-4ddc-a1de-36cb228cccc1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e2d6c4e2-fb37-4ebc-b41e-a966af753f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bcff3d-e073-4877-9e7f-23393f04cd39",
        "cursor": {
          "ref": "cd2499a7-18a9-46f0-a9df-34b0bc5dd68a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ea1fac8-fd2a-4a8f-8db0-acfcee71d290"
        },
        "item": {
          "id": "13bcff3d-e073-4877-9e7f-23393f04cd39",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc0540b4-b2ef-4582-8c27-ef397b2b92b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70f987d-b5f1-4036-b73e-b781f0f2b778",
        "cursor": {
          "ref": "19caf663-1eea-4f8c-a179-79e9dec3f7a0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "614cf587-d930-4fae-aa05-35147e33dd7d"
        },
        "item": {
          "id": "b70f987d-b5f1-4036-b73e-b781f0f2b778",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "73bb4a0b-a7ba-4c3e-8054-e528a9fb56d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b094c52-52fd-42e7-8442-ba7c65d82830",
        "cursor": {
          "ref": "87bc4fa1-426d-4025-b19a-e40b6f2fdf88",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5fc10a76-b384-4fae-81db-eadfe25e5177"
        },
        "item": {
          "id": "4b094c52-52fd-42e7-8442-ba7c65d82830",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c314788a-06b0-450d-91e2-d71e7dc642a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4cdf9f-6fe4-46d0-a16e-43a1aa4103c2",
        "cursor": {
          "ref": "facc9d1d-c6db-4155-9ed2-3e99b5a89f30",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "943c63bf-5d75-46f6-b898-2087034d5ce7"
        },
        "item": {
          "id": "db4cdf9f-6fe4-46d0-a16e-43a1aa4103c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c396bd1b-c3ba-44ad-b412-6db3f3a32772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f047e1-2128-45c3-8ff1-b820a81f2e67",
        "cursor": {
          "ref": "24ef173b-6691-4781-8381-af7abcb16edb",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "87c03bd0-977f-44a7-9f36-318ec44bb0f0"
        },
        "item": {
          "id": "05f047e1-2128-45c3-8ff1-b820a81f2e67",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "77e67d10-e7c5-417a-8f3e-07f5b8d5debb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adb6ad7-7d95-409e-bce6-9cc9d9144ee7",
        "cursor": {
          "ref": "8d571ac4-5c7f-4779-8f9d-5e538db8f935",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b308b382-dd6e-4b6d-8dca-f961d4e07627"
        },
        "item": {
          "id": "4adb6ad7-7d95-409e-bce6-9cc9d9144ee7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e802ee40-72bd-48bd-9d01-7c7007464c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d8a893-ab66-47b8-a9d0-0ef2d03332b3",
        "cursor": {
          "ref": "8fa8561c-edf4-418f-846e-402a84c1af22",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ad68e1e-b756-49da-b866-2567913940f9"
        },
        "item": {
          "id": "a9d8a893-ab66-47b8-a9d0-0ef2d03332b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "288f254a-d7a6-4719-a591-d033f451b844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48152ff-fb5a-417e-9131-722144c242cf",
        "cursor": {
          "ref": "8f547f73-3b2a-4734-b086-51658632fe9b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "202acd48-0d25-44c6-8527-5af4b3d9ce67"
        },
        "item": {
          "id": "f48152ff-fb5a-417e-9131-722144c242cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2af086c2-b0da-4284-9a9f-4fe34a15257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cb5674-d1f3-44d8-9a8d-7ee0b86642bc",
        "cursor": {
          "ref": "3b964bfc-74d6-4416-bac7-c0614e4a0327",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "325583bc-5ef7-459d-a54b-3d4227e32c39"
        },
        "item": {
          "id": "64cb5674-d1f3-44d8-9a8d-7ee0b86642bc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2314d448-3991-4053-8bcd-49de41cf6232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095ea74-d7df-47e2-87cb-ae40a74dc2ce",
        "cursor": {
          "ref": "798ada82-d902-48b8-a094-2c9eda76c38e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "34440012-bbc2-46b3-9282-27662e9dac5b"
        },
        "item": {
          "id": "3095ea74-d7df-47e2-87cb-ae40a74dc2ce",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f40f4ae4-8c2f-43e5-a9dd-c24dc7095963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02625b68-41e0-4c37-9175-500f4c8411e8",
        "cursor": {
          "ref": "93146ae5-5390-40b3-a153-c08bd7e099bf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "571bbedd-b9d2-46df-8ea0-d3e2f9abc061"
        },
        "item": {
          "id": "02625b68-41e0-4c37-9175-500f4c8411e8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7a9543e-20f9-4cfe-b359-fc79c1244cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0380d74-3329-4f43-a9e7-6ae76b896db6",
        "cursor": {
          "ref": "7d94dd9d-ee4e-4058-b1cb-5395028b4fd7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a5f5447d-0760-4174-8d7b-7ec355c92b57"
        },
        "item": {
          "id": "c0380d74-3329-4f43-a9e7-6ae76b896db6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5ef6ba5c-f8bb-4dc9-917d-d4b447c94b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6ed81-2cd6-4312-99b5-d6a53e39f9c2",
        "cursor": {
          "ref": "61296303-7768-4c2c-8d5c-72daa5d39dd5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "35e060f5-9cc1-4a3b-9a51-ea92b33968d5"
        },
        "item": {
          "id": "2ed6ed81-2cd6-4312-99b5-d6a53e39f9c2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "02de6c09-2c9f-4c75-8f52-48026a1204cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ed722-1082-4133-9124-895374aca296",
        "cursor": {
          "ref": "260eba25-c8fe-44eb-9ecf-80a349b2855d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5072349d-af9f-4d03-a1f1-6ce31531173a"
        },
        "item": {
          "id": "446ed722-1082-4133-9124-895374aca296",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9b6f2eea-c4a0-481a-b37c-aff9171d3e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b6dbfe-447c-458b-b261-71e74ac7fd35",
        "cursor": {
          "ref": "6e7de888-e591-4387-b562-1ac38c6286e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "10aa5de3-f8a3-4776-a3c5-db5d08385b8e"
        },
        "item": {
          "id": "a5b6dbfe-447c-458b-b261-71e74ac7fd35",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a1af89e2-6666-412e-ba14-b59c9019a3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50237c40-8283-4302-aaac-5315b6951bb4",
        "cursor": {
          "ref": "1a530176-7ac4-4bff-a2f3-c2e2009882a4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e904fe52-6b9d-4515-89ad-b730c2e8ff81"
        },
        "item": {
          "id": "50237c40-8283-4302-aaac-5315b6951bb4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ad9d2612-68c6-4d73-9337-470e3ad0532a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150a9dd2-3590-4411-a84c-06138ee768bb",
        "cursor": {
          "ref": "12f808c1-572c-41fd-9e89-bd152cb207f1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f935353a-1c05-4b30-bdc6-e9d2aa543112"
        },
        "item": {
          "id": "150a9dd2-3590-4411-a84c-06138ee768bb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f35df2be-139c-4009-90e5-beed3db096b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f06b8a2-f327-4947-83c7-2def5af7a854",
        "cursor": {
          "ref": "03c2eab4-8124-48c0-9265-4eafdeee986c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8587f988-6ace-4ba3-99bf-b637325531d3"
        },
        "item": {
          "id": "9f06b8a2-f327-4947-83c7-2def5af7a854",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "337730ab-dc58-4e71-873d-a0bd7e58590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eedb146-f933-49eb-b517-93c282174e21",
        "cursor": {
          "ref": "c81fbb51-fb2a-4b34-bd7a-74f68e67c839",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e3df7b07-4e32-4f3b-8a89-fdf5c213b324"
        },
        "item": {
          "id": "1eedb146-f933-49eb-b517-93c282174e21",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9fc58b57-12ee-4472-b5fc-53869d9c73b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3dbe3-9640-4712-8947-b420d44b8600",
        "cursor": {
          "ref": "885816cd-2d0e-41ac-be05-1861f95c4097",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d307079f-a2e1-44b1-a1b4-8e24b2d6dcec"
        },
        "item": {
          "id": "88b3dbe3-9640-4712-8947-b420d44b8600",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "81d61697-c457-4bf1-acf8-ec80ece1fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c459f1a4-f398-4f70-8336-048eabce6b62",
        "cursor": {
          "ref": "cec52a87-c843-4089-ac33-efcc6b53ba71",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "534b7aa7-17e9-4465-95cc-71576aa66840"
        },
        "item": {
          "id": "c459f1a4-f398-4f70-8336-048eabce6b62",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "20fc9ff5-6e5e-450b-a61e-0fa73d49fe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcd19e5-f182-46aa-ab06-e82bc341f560",
        "cursor": {
          "ref": "3c4710fa-9e53-4bc8-be0d-a8134060af0f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6cf735c8-451f-458c-aad2-e6951d8cb566"
        },
        "item": {
          "id": "7dcd19e5-f182-46aa-ab06-e82bc341f560",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aa832ee6-31e9-4714-b236-fe7519aa3647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b888186-1d5b-47d6-8903-447a718dacd7",
        "cursor": {
          "ref": "2f00202c-e995-41c6-ba87-876ace5543c0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "518e7732-b2e0-4ace-8aee-bc773746e96e"
        },
        "item": {
          "id": "0b888186-1d5b-47d6-8903-447a718dacd7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d0a03ae-5d23-4f4d-98aa-23af4e75e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b94cc1-fc5f-47ed-a193-f05f78e57489",
        "cursor": {
          "ref": "bc6254e3-a81e-4478-a23d-14cbcc1f4c90",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b5b9a2c-5b72-45cb-9c69-5327e61e48ac"
        },
        "item": {
          "id": "11b94cc1-fc5f-47ed-a193-f05f78e57489",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b76700f4-b7bb-4bcd-b663-a1b839576abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e9032-42fc-4d80-8fe6-1689a4c586fa",
        "cursor": {
          "ref": "8b56da65-3fc4-444e-8a48-346ee05d427b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e4dd3ae6-dd9e-4c5c-b5e3-aa297a07dc6c"
        },
        "item": {
          "id": "f87e9032-42fc-4d80-8fe6-1689a4c586fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d71a09b-7553-4987-84b6-1b65844be1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16809655-852d-42c8-ae0b-4fed4fe9c2ac",
        "cursor": {
          "ref": "4b6b2501-80ca-4a61-8ac6-f7ee558a2b56",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f77a49f9-d6da-47e6-8c3c-10b84339153f"
        },
        "item": {
          "id": "16809655-852d-42c8-ae0b-4fed4fe9c2ac",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a55f6cf-079f-41cd-a75b-5cdb104be14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7862d7e-1650-40d1-8fbe-4cbeb30c248f",
        "cursor": {
          "ref": "0d1778a0-7e4d-4704-9ba0-bc2d2ea3452b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c09a01e9-9850-4513-8e25-c3fc7ea55b25"
        },
        "item": {
          "id": "a7862d7e-1650-40d1-8fbe-4cbeb30c248f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cf0ae0af-ead0-420b-8796-9e15b3b46987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96411491-9d24-4f4c-87c0-3b94f65a4d94",
        "cursor": {
          "ref": "52981397-7515-439d-b20c-8f3762d59211",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1925c232-9014-4e25-a44c-96668a8f4cb5"
        },
        "item": {
          "id": "96411491-9d24-4f4c-87c0-3b94f65a4d94",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8f7c5e7-bed0-4ac8-a664-add0d3a26571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be0474-e5e7-4161-b70f-14d2414a4bc6",
        "cursor": {
          "ref": "e1bdf95e-45ff-4088-8021-ea5561c402eb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4d95c3ea-e7d7-43be-9f6d-d3309a4abf01"
        },
        "item": {
          "id": "e0be0474-e5e7-4161-b70f-14d2414a4bc6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "12a0dc98-8bcd-4819-b61a-8cffd9858dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062a064b-3728-4f5e-ad55-4e40b1dd9064",
        "cursor": {
          "ref": "7d7ba936-9e0e-4dd7-8892-65029887d0f6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2347ee5d-5257-46da-9d54-139a2bd6ca4f"
        },
        "item": {
          "id": "062a064b-3728-4f5e-ad55-4e40b1dd9064",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fb260581-f0a7-4a0a-a9dc-4e74e3c0c0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977b0cc8-fbb9-4207-858f-e486b7178f13",
        "cursor": {
          "ref": "df02d36b-daac-4938-860f-c0b83402330e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f6b0af9-86da-411b-8ecc-f3f441da5dd0"
        },
        "item": {
          "id": "977b0cc8-fbb9-4207-858f-e486b7178f13",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "76dde993-43b0-4cf7-98d7-da1b63de739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3887526-7a4a-494b-b9df-d3eb753b3933",
        "cursor": {
          "ref": "4d7b4bfe-bd34-46ef-b3f8-c2f3e61a8706",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "908ff15d-6cdd-49c9-ab59-c0a0e8227cb8"
        },
        "item": {
          "id": "d3887526-7a4a-494b-b9df-d3eb753b3933",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "62265b6e-6a5b-4d00-9dac-fc87737468ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f446abef-057a-437e-9435-a6ceaa256ee7",
        "cursor": {
          "ref": "c0d0326a-b14f-47d2-bfb6-01c033ebc0c2",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a1a0b291-cac6-462a-befb-a772c992d01a"
        },
        "item": {
          "id": "f446abef-057a-437e-9435-a6ceaa256ee7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f61476c-a12b-4879-8c20-4779e0d51e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5ce537-ac64-407e-a369-7f77a8f7362b",
        "cursor": {
          "ref": "c81ef109-caa2-4997-be1f-601eac1fb9b1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "45cd63ec-e8cd-4eae-8192-729e14b94da5"
        },
        "item": {
          "id": "dc5ce537-ac64-407e-a369-7f77a8f7362b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a3f9d9b9-79c1-4651-827f-a388cdfbcc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31acde23-f9a1-4656-a02e-cbfdb3bf95ba",
        "cursor": {
          "ref": "6919798b-4c2b-4bc5-a001-61133ecd7b1e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99bf2b41-19c2-4567-bdd7-1d70a9a95871"
        },
        "item": {
          "id": "31acde23-f9a1-4656-a02e-cbfdb3bf95ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "673b98ca-8b56-4276-852c-ca468d80249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9dc147-d773-46af-bba2-41b9b873fad8",
        "cursor": {
          "ref": "8a8bd333-c55f-45ba-8eac-6603606ad944",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1a2271a7-ca4c-4aeb-b6ae-cf829112634c"
        },
        "item": {
          "id": "2b9dc147-d773-46af-bba2-41b9b873fad8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9476c981-d506-4f8b-ba6e-e1edd46a30ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c430e5-f2a7-4ca5-a8e8-c8b2bd196876",
        "cursor": {
          "ref": "198c333c-2cb1-46ea-a3af-205eba2e8834",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1a1789da-0a33-4077-b6c8-301231a98f65"
        },
        "item": {
          "id": "92c430e5-f2a7-4ca5-a8e8-c8b2bd196876",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5ed0a865-cbc5-4fbd-a1ae-076d5b2bdc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a126a30-26aa-483f-b2ac-789c71efcc1e",
        "cursor": {
          "ref": "89a7e489-0e35-4f03-9c50-ca2de18571aa",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1a83593-3d84-47f7-89db-f49a40a83aef"
        },
        "item": {
          "id": "5a126a30-26aa-483f-b2ac-789c71efcc1e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f186ca91-e35d-4185-9005-eeeaa2a15ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea575639-076b-46e6-8279-3c37fd8130c7",
        "cursor": {
          "ref": "324004f4-fd35-466a-b5f1-98dd730c8d92",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b60f952-d85e-412f-b157-436eb595f5da"
        },
        "item": {
          "id": "ea575639-076b-46e6-8279-3c37fd8130c7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ce184ada-f15a-41f3-9df9-64095997eb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8307236-64d0-4b89-b2a9-3723a19d336f",
        "cursor": {
          "ref": "4693d150-b878-43d5-b81f-099581260640",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d1b2f247-c809-4ae4-bd83-ff2dbe212dbc"
        },
        "item": {
          "id": "f8307236-64d0-4b89-b2a9-3723a19d336f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48fefab0-e111-4d08-84fc-f69a0c2b3a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772c0abf-8a6a-44b2-8162-d0c35400deb6",
        "cursor": {
          "ref": "9592f96a-3914-4589-8bd0-8afcc17067af",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b49c6f8b-c0da-41db-b47b-de0bbfdf0c30"
        },
        "item": {
          "id": "772c0abf-8a6a-44b2-8162-d0c35400deb6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca984bd9-89b9-46ab-a395-97c945924372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999c83f-6d4f-4775-aaa6-d20bd8e1fa7f",
        "cursor": {
          "ref": "04b28fbb-e888-430a-9333-c46cc8c3ff3e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "380e70c9-dc1b-4d76-a250-aafcf69dd2c4"
        },
        "item": {
          "id": "d999c83f-6d4f-4775-aaa6-d20bd8e1fa7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "86b32ebb-523a-4dca-b866-61c048265f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b046f24d-35af-4439-ba61-f776a289499d",
        "cursor": {
          "ref": "74168cb9-174a-4e6d-9d7a-6fdf65751db0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3e453c75-690c-4c41-bd9c-ef7c993c7e7c"
        },
        "item": {
          "id": "b046f24d-35af-4439-ba61-f776a289499d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60047a60-55ca-4483-af3b-f819e4898aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a8572-239e-4fd5-aa6a-aef2e2193841",
        "cursor": {
          "ref": "95b380df-c2ac-472f-a06f-26ecf6f909d4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dc2e2ae3-29f1-492c-96c8-25bd5d2ab1ee"
        },
        "item": {
          "id": "808a8572-239e-4fd5-aa6a-aef2e2193841",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b74c3275-f422-4805-9830-43d9082ab4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68503c21-60ed-440d-901e-67b04a9d3864",
        "cursor": {
          "ref": "bd4dae28-b6d2-4623-af0d-60604bc5aac6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bbd703ca-0946-4df1-a3d1-bcaef6b677cd"
        },
        "item": {
          "id": "68503c21-60ed-440d-901e-67b04a9d3864",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "afe1a770-04fe-462e-8f44-9334f074c0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac8456-fc00-4241-ad43-223695a0283d",
        "cursor": {
          "ref": "375b3168-b19c-48e8-b7fe-309bd73592d7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "18870d06-b411-4e07-9a73-5bb82ce627b1"
        },
        "item": {
          "id": "22ac8456-fc00-4241-ad43-223695a0283d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "637088d7-af95-4832-9058-97df083efa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df36b1-f3ff-43ed-8632-6c7beb9ea264",
        "cursor": {
          "ref": "f1f8a0d9-e388-4cbd-be96-a0ac7fe32d4d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f1c78532-4125-4e23-93c6-b0294d8c7f9d"
        },
        "item": {
          "id": "62df36b1-f3ff-43ed-8632-6c7beb9ea264",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "85d84f48-d9cb-4ed8-855d-0a8f327a218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7270bd-3d73-42a7-a022-382b0bb37af6",
        "cursor": {
          "ref": "c53737f9-12d8-43cf-acde-e9869fd222b3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "531ac4d9-32b9-4c70-b1e4-0030b407cd5b"
        },
        "item": {
          "id": "aa7270bd-3d73-42a7-a022-382b0bb37af6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fd17d340-c67d-47e9-a555-ac52954c8980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f99e6ee-1ecc-4cea-b1dc-7eb662a0606c",
        "cursor": {
          "ref": "bd9ed2a2-1a47-4d54-b9a0-97b529d8a6ab",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "40728859-4d2a-44e8-89c8-f1b858c5c5ef"
        },
        "item": {
          "id": "7f99e6ee-1ecc-4cea-b1dc-7eb662a0606c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "42c4e216-646a-4a7c-a1a6-25bb01158e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7dd6c2-cc8b-4905-b066-a17d32797731",
        "cursor": {
          "ref": "65cea6bd-b69e-4a50-945e-e7575e9a6f76",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3f65c6da-8140-41a8-837f-d96dfd4dfc51"
        },
        "item": {
          "id": "4c7dd6c2-cc8b-4905-b066-a17d32797731",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cd3163a6-4a05-448c-850e-ff9f4396e431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3aca71-1620-4d30-9e39-d9e79a9f36d2",
        "cursor": {
          "ref": "a7cee660-01de-42eb-81db-db72c5bd14a4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7b1223de-67ad-4d02-a712-cab6de86139e"
        },
        "item": {
          "id": "da3aca71-1620-4d30-9e39-d9e79a9f36d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1e74b4af-7e09-4e72-8163-e2711bcfd0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4978f24-4a18-4f9a-b4be-28770c059977",
        "cursor": {
          "ref": "bcdbc1e2-1e6c-4521-b617-d4e046c10c34",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f3f6f73e-06bb-44e1-baf1-3d8e63d6a893"
        },
        "item": {
          "id": "d4978f24-4a18-4f9a-b4be-28770c059977",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "13756e4e-9eab-4ebb-a177-ef1c3cf68b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d4de38-9919-4021-a82a-5b024f61e6b3",
        "cursor": {
          "ref": "c60174cc-caa0-44dc-9910-9216b91cef71",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c8013d02-2479-498c-8cb9-9d7f32fcaae4"
        },
        "item": {
          "id": "d5d4de38-9919-4021-a82a-5b024f61e6b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "99da37c3-8016-404b-93ad-98413d960ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b038b-6be9-4a24-a11c-f3e781076323",
        "cursor": {
          "ref": "c929cebc-5b63-4d26-8dd5-7724534472e1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6244c93c-0410-4088-8c34-2c8b7989f63c"
        },
        "item": {
          "id": "313b038b-6be9-4a24-a11c-f3e781076323",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "170e8bbb-5b54-4a4f-8065-f10751410f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854b1e71-1556-44b0-ab63-dc224a1d7d33",
        "cursor": {
          "ref": "8b499dde-3f91-497e-ab13-473ba8ae49b4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "84dfbc86-1818-494e-bebf-98fbe62e135f"
        },
        "item": {
          "id": "854b1e71-1556-44b0-ab63-dc224a1d7d33",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c33df8bd-c65e-4f4c-adb7-d33c2b0ab72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654d537-3120-4af1-984a-a7a9bddd69fa",
        "cursor": {
          "ref": "32fd93c9-af4b-4852-8ae5-692524fdf942",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f6caeae3-6e0a-4a41-83d4-81d9dc79ae76"
        },
        "item": {
          "id": "8654d537-3120-4af1-984a-a7a9bddd69fa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0c355fa-1e50-41f8-be18-cc95168987a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed23d979-b360-43cd-ae4a-4d00c41d7d31",
        "cursor": {
          "ref": "c56e334e-4670-47df-a0a3-704c7a2f583d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bb0b3943-b64b-4c0e-a927-3396bd7d0364"
        },
        "item": {
          "id": "ed23d979-b360-43cd-ae4a-4d00c41d7d31",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "20885aa0-7fcc-4f26-b6a8-74e8b870038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbc3967-0859-4311-b6f6-ec6297849740",
        "cursor": {
          "ref": "f06cb06a-82ee-45f6-ab03-fce1475cf846",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "32d9a72b-e575-49e9-9490-b4ca193c6ef5"
        },
        "item": {
          "id": "3dbc3967-0859-4311-b6f6-ec6297849740",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "337ac761-17f0-434c-9999-7bcab2622fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e929ca4-cdc5-4109-a912-a7002e8606cb",
        "cursor": {
          "ref": "505edf3f-4927-4754-b208-c46f2b9a6e93",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "57b60522-fc64-43d7-b705-8bd0644d3c66"
        },
        "item": {
          "id": "8e929ca4-cdc5-4109-a912-a7002e8606cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "99c01421-65c9-4ae2-9ff4-b5b4ce05d060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3bc18-82ba-4ff9-ac85-a9ad5048dd01",
        "cursor": {
          "ref": "55027586-8f3c-4dd4-b115-b1147fbe8fe3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7a0c085d-98a7-4f46-962c-d033fdd51b6a"
        },
        "item": {
          "id": "f0b3bc18-82ba-4ff9-ac85-a9ad5048dd01",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e56dbfd-2fd8-4966-8583-bf8738a60ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08337640-a663-4a23-bf05-e8b6236b308a",
        "cursor": {
          "ref": "022af5cc-7ade-435e-81fb-34f128a3a391",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fdf851d1-c51c-40a1-934d-fe12c1770fa8"
        },
        "item": {
          "id": "08337640-a663-4a23-bf05-e8b6236b308a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d0138bf-7b5e-44e5-a6b5-d0fb44701ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d11394-2a74-474b-b042-d7cfd82ed4e5",
        "cursor": {
          "ref": "15563a3e-0b44-4800-84bc-4128e328c34a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "48283a86-58e1-4456-9364-e510ef8249b5"
        },
        "item": {
          "id": "79d11394-2a74-474b-b042-d7cfd82ed4e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa7a1c05-a085-45e2-aa25-7a7f36f2a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f2894c-a003-4b84-bb97-02d1c2589e05",
        "cursor": {
          "ref": "08fe40df-9619-4535-8e5a-f2bfa0a1dbb1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8b244562-71cb-4866-9fe8-acffcf553297"
        },
        "item": {
          "id": "d0f2894c-a003-4b84-bb97-02d1c2589e05",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ed779dc-7767-4797-bc55-55e49f3d4da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a0d17-d4ad-4ed9-ae32-7d25ad7741a4",
        "cursor": {
          "ref": "a2e5acdf-c0d8-4592-b3fb-0221077ba184",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6f526fd4-a281-4cfd-9e03-6ee7c24b814f"
        },
        "item": {
          "id": "a28a0d17-d4ad-4ed9-ae32-7d25ad7741a4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "02442f3d-e0e6-4d5a-96e6-c0152a179a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da571937-27dd-463e-8d7b-2edcaef13fe0",
        "cursor": {
          "ref": "63d5e011-e80e-459d-8793-36c646ef6c51",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "410d94a5-bc84-49dd-9c0a-b341b23caf9c"
        },
        "item": {
          "id": "da571937-27dd-463e-8d7b-2edcaef13fe0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "902e0a33-3872-4b10-8f9c-6ada80ec9b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c293c-1fa3-44ef-8f68-517ae68ad955",
        "cursor": {
          "ref": "96bad54c-503a-4e04-ba21-cfe83dd18a53",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "18aa4575-1e2e-448b-94b1-d4023648add8"
        },
        "item": {
          "id": "ea4c293c-1fa3-44ef-8f68-517ae68ad955",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6d7f4923-6611-4750-baf4-bc2886eb99c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff19c7-9a77-4c16-830a-d776d17d7d2d",
        "cursor": {
          "ref": "9d57427f-aec5-418f-9f96-70245044196e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f90f6ae5-42b4-440f-a1d2-e731db9b56b8"
        },
        "item": {
          "id": "62ff19c7-9a77-4c16-830a-d776d17d7d2d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "459c6196-cc84-4966-a7af-f556946eed37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcb90b9-6e5e-45cd-b6a1-dd06f430f90a",
        "cursor": {
          "ref": "b776003b-a8f5-415a-9692-86077ddc0282",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f0b5c02a-07c9-4921-80c4-cf67b8e82ba6"
        },
        "item": {
          "id": "edcb90b9-6e5e-45cd-b6a1-dd06f430f90a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dcfcdedc-8914-4698-b278-d1afe9e4c880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea43cab-14fb-4a6d-ae35-0ed8e12a7f20",
        "cursor": {
          "ref": "7ab7e8f1-604e-4a85-acf7-a7f759177766",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ae0183c5-da70-47c2-8108-009accb591bb"
        },
        "item": {
          "id": "cea43cab-14fb-4a6d-ae35-0ed8e12a7f20",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9032946b-e095-4ac3-97d7-09a7a7a92240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328a729-d36c-4de3-a867-8570173efa04",
        "cursor": {
          "ref": "5fbb8013-c45c-4d0d-bfe3-bcaf57bae45d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a072da97-5b32-4777-b963-7091acc8e7a7"
        },
        "item": {
          "id": "9328a729-d36c-4de3-a867-8570173efa04",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "01adc7ba-dfb8-4043-b977-d423f6b11306",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81ff5de-c7f2-4ae7-9952-061f3b488175",
        "cursor": {
          "ref": "b4e0417c-f934-48cd-8d0c-b30448fd00d7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "68ab17b8-d74b-4909-b85d-24934a6e1518"
        },
        "item": {
          "id": "b81ff5de-c7f2-4ae7-9952-061f3b488175",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b2b8d62a-9f85-4811-82d6-99e3090fb0d3",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb29a0b-ab50-4248-88b9-427a536059db",
        "cursor": {
          "ref": "5186b43b-ed8f-4c4f-90e3-8bce989dbbb4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5d9f9a4b-7eac-4b29-b937-bd09b33e682b"
        },
        "item": {
          "id": "2fb29a0b-ab50-4248-88b9-427a536059db",
          "name": "credentials_verify"
        },
        "response": {
          "id": "65b0d4af-905a-42fb-9963-16777ddb461a",
          "status": "OK",
          "code": 200,
          "responseTime": 1431,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e84885-35ce-41c0-adbd-94b0f1ff4ac3",
        "cursor": {
          "ref": "ad33dc76-0c4e-4595-83cb-f6aec5c6d649",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4c8d1ba7-1902-4c2a-a003-ac0217498057"
        },
        "item": {
          "id": "64e84885-35ce-41c0-adbd-94b0f1ff4ac3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1924d03c-a77a-43d0-a086-3064927ceda5",
          "status": "OK",
          "code": 200,
          "responseTime": 1221,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b86f00a-458b-48d6-90df-0202b51d7cf7",
        "cursor": {
          "ref": "135a3fdf-f3d0-47fa-a2f6-e5de495f60fe",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dd4db416-1b5e-4849-b837-154dde0ef232"
        },
        "item": {
          "id": "0b86f00a-458b-48d6-90df-0202b51d7cf7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a81cf584-4f55-4ab3-893d-6097c9c9bdbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b86f00a-458b-48d6-90df-0202b51d7cf7",
        "cursor": {
          "ref": "135a3fdf-f3d0-47fa-a2f6-e5de495f60fe",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dd4db416-1b5e-4849-b837-154dde0ef232"
        },
        "item": {
          "id": "0b86f00a-458b-48d6-90df-0202b51d7cf7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a81cf584-4f55-4ab3-893d-6097c9c9bdbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b592e-fcbb-4609-9eaa-030d2e99a216",
        "cursor": {
          "ref": "c18a3cd2-7d15-4e46-8bc0-5f295d66a367",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "66804b58-af28-472b-93e3-b3556b5e0f8b"
        },
        "item": {
          "id": "969b592e-fcbb-4609-9eaa-030d2e99a216",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a035906c-544d-4474-9933-9956f03c92ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f986a9-15fa-4ec9-a4c1-35cd79c60842",
        "cursor": {
          "ref": "82889edb-fc96-4ce6-a92d-4f4a8c317f72",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e21ce4d7-4321-4020-b075-80cd170621cb"
        },
        "item": {
          "id": "18f986a9-15fa-4ec9-a4c1-35cd79c60842",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aa8f5d1d-7c05-4ea8-9929-5e6ee762d614",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}