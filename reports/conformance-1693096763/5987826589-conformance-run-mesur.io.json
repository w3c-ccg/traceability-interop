{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ef3d7023-a69b-4820-836f-a4e4f86262ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9cd8cb60-8d1e-4a2a-bf00-b5bc30951fa7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a97c3f23-84b1-4b82-8bac-20390439d6f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d390e5e0-1da0-4a05-9f8a-838842ab35ab"
                }
              }
            ]
          },
          {
            "id": "054c3153-85c6-4e96-bf38-33657b5638e1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ebd0ec1-fff5-4b19-bbdb-af5f204218e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8cba523a-3e7b-434e-bb7a-1aea967c9654"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "61db8080-973b-4730-a6bc-1557ffa267ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3cd8a1f5-4cea-4e47-a146-4a9764940a77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fd01bf4-1cff-4721-a92a-00fdaf3b14dc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32066f86-a2e3-4a6b-8202-b1e421601534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0e23b51-c119-45c0-b1fb-18e9c9240b47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a95a41e-7550-4303-8c37-cdd2cdde0e15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbe8f411-0833-4969-9b01-368f340bfbc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2993ee3a-3441-4716-922d-01b618936244",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0f01e12-1395-49e3-bfed-e55df9baf254"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d64e95af-a7a9-4ebb-84ac-0b59d65a7308",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3a46c3a5-6227-48a2-a7ce-5b282702a408"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bade090-7d84-4126-89ba-6b1cff6a7da3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3efcdc7-3257-4059-bd66-399209e33d38"
            }
          }
        ]
      },
      {
        "id": "30c17b7f-1ee3-4a1a-a742-5e44fb146186",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3d9ef4a0-6a5e-468d-80bc-1e474b78e093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb2c3499-e5d3-4fa0-97c4-ec7c598d422f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff1b02ce-88f7-41e2-839f-c9899381e916",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1affed3-086b-4af3-bcbf-fce3376965a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4168e8a7-c541-4776-8222-aa92ca07ecbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb7a16e-1f03-4653-8688-5e7ff2eb23ae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d6a3fc-c351-468b-98af-d3668310f3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "180adb04-b5b7-4ab1-a456-d1e874bec2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06014733-93d9-42e0-b59c-436ae3414685",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb52e672-e17f-46a8-b15c-b22655b22c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aa8658b-c714-4c07-9bcd-0f2570d082fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edc45fa0-eed3-4870-8e11-062970c06c08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3243e0ef-1a09-400c-b19d-91517bc4f694",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f777b9-5200-4d4d-b9f0-416bf04c6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e222bc9-3cae-4410-a5d4-a9b2a4fe4986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfdd2f0-c799-4b20-8411-5046eff6e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c028633-bb4d-4841-b52f-4bf281dce354"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2fb5ba04-75c4-45ee-a9b4-0a150579f66d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65c2295b-5f5d-4829-b0ac-ed9d7ad228b2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "743f5d61-5e83-4d5d-b4bf-916a9fd82532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dbb363d5-bd60-4d7b-b168-2d087d3c4193"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b807b8f0-5b49-4a64-8217-45a7d703e685",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f0a36442-2b65-4ea6-83d6-912b708fe924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8afa4c99-5496-47b2-940a-0f237d1b88bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0e3bbab-c76b-46c4-a8b6-1da29960f711"
            }
          }
        ]
      },
      {
        "id": "26180c2e-4ea7-4e58-9559-44e5f55fff74",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8a232ea8-dcf3-4231-8539-98b4991af3ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c63d011f-1d16-4507-8d92-b2619f4edbd6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68b6617d-dc92-4548-9f4e-ca26c327222a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6f886-c9dc-49f5-8c93-60c5ba35418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a768f67-88ff-43d7-9d4b-6baedf3fa011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8158fb-7232-4952-b215-a76ff4f607ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a8dcf04-0fd1-4224-8464-10c334abb5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa67ab6-87d6-45de-b1fc-09d6445fa1ab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d4efa7-39fd-45d6-bb24-b7964802cae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf825e65-980f-4d5a-b6c7-b1298a2fdced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a60431-8f5e-4114-8bbf-98ddcb58db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cc512d1-4057-461a-b189-849dbee132d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a56d6f-d522-4bb4-a19e-f7a73210459f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50235554-7f7a-4db6-bb27-e8658a637d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bc18db-9abd-4aa9-b6ad-4f1c3a4e698f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1428ca4c-5a6e-46c3-8ec7-d2417bac3184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6586fcbc-80a6-429c-8726-3bd989df3c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1154ae3-f597-40a3-b9ab-65b88ccfebd1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c3cb9b-f29a-4ac3-8404-183f00f5425f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb1c82b-7aac-4a39-b5f2-d0565ff0b39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3887c-4b8c-4f9a-99c3-6208917370ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f9c91e4-2145-4ed4-ba64-d2d6d5460648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23f6648-168d-48e8-a187-e8c08f58e526",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01b1505-6047-456a-8c4c-d64a48436bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448cc6d3-3601-4e90-868d-156d982e1167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9079b266-fd62-4ec3-99b0-f7380fee0653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077ef87e-35c9-4293-8743-6ba586fa49b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c475ccb4-aae0-44f6-813e-acd71c1cbcd8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0c7531-ebb1-4192-b0f6-1e292972d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936fd5d3-2f2a-4500-b848-9e553133ae8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5ae63e-08f2-4a17-961a-3446b8cb1c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc155d7-bca8-4b1e-9524-5bd5df577712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5322dc-92c5-43f5-bf2d-3b77b73a2a65",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c27714-36a8-4611-9d9c-e7e6ef23ea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc492ad7-e194-4383-a557-502549ade50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af459f-7140-4a8a-91f7-a34366c7b9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18684bf3-d86c-483d-a12f-54dc32c9b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab00821-6306-41d4-88fa-08b9464cfa0d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3ae58-8464-4dee-8d75-229feef047a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d4546d-f7ff-460c-8028-b71218690d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0de67df-518e-4f64-b7c7-5a88d0b417f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db91370c-ae24-4db2-8aac-6a266ccf8767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1982c46-603d-40fe-9c97-b87943f2412e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a26e6f-4132-4816-ad72-0372823b9aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40be3c1-b866-459e-ac29-7e381975fc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba056368-b00e-4561-9ed3-51bb8d91e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "020401c2-af84-4e3d-994b-747e956fb9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f81ca2-ee3b-494a-8847-6f594a8403c0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be16d04-88a6-4d4b-aff5-11599e6a8c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4585e1-87d5-498d-9085-aa3ec5114e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d187da-3b03-4e36-9f76-c0df8eeb8fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf80f07-3a0c-4267-bd5e-a188702e174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbc806b-101f-4036-b195-39e380d96d7b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0219c377-bcd3-4546-89f2-2bfddc5c1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b770612-61d8-428b-aff1-fbabd5dbff3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9a2eeb-d233-47ab-8214-b5c1dfa0d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff6bd61c-0403-4a0a-84df-7228aabb0f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f439e-b72d-415c-8c52-ed57e8dbe759",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdae220-b47e-44ec-bd3c-6137122aaea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e27b11-8369-4f5c-972b-e900df8c458d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f62951d-07d6-4a63-b43e-441c1f635078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4421a67b-b2f3-48d4-8ab0-0ab90ecabc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3778268-0190-468c-b04b-f5c21f70dcff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6ef10-6469-4cd0-99c2-00cedc855ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0f3944-1304-4548-ae0d-df57a9e5d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bbe48b-7d05-4567-83c4-d0223d60e0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65a86760-dae6-4600-8419-a3dc47115c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cede20f5-86bd-4d4e-8ff4-0a5819206e0d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c559b047-21a8-4890-abf0-2a11bb69ffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216b29ab-8eb8-4334-8720-705abfc598e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c709d55-45a2-43bc-97ec-5822171b7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529b8a9c-41ed-43ca-bf55-7c0a1556f12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b4bc5e-6821-4bbf-a326-688aec3f184d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b062a2c-f8ea-44b5-bdf8-748c7046a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff5e494-6369-47ed-ae56-6ef0c6853d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6b530c-88ce-4444-b6ef-00a98cdca818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46c81667-222e-4447-8167-2a11fef28a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b6d3f7-d5c1-4004-b4f4-7bafc49bc604",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2bda7-b583-4934-81cd-2a9466b18011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c299673-c945-4605-ae00-33444d280e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d10147-89cc-4c3f-8815-f7fd04c550e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa64058-c69f-45c4-9685-7fecf83477d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526322c3-119e-420f-ab49-697215b0f951",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a636c280-f157-40c6-b80b-923f74739deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0786eeb6-4d63-499a-974c-37377ea5c5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e73eac5-9f54-413c-a0c7-76f95ecce0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc2ac56-9c6d-4bc1-994a-68bba0d5efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c48938-7fce-4295-b8b0-e1fc0d87ae08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ecc98-5a96-425d-9a91-d063f3b0b182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b902cd17-841c-407a-9f29-2418060adbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4d53e2-cf91-4abe-b243-bd17fcb6067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c387d5-6b69-4ad4-817b-81564c714f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ac2fe6-1412-4273-a9f2-1a1b5bcd0745",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b649ddcf-68eb-4cc4-95f9-9b384e41546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349fc67e-b214-4deb-997d-2152ebcb1706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe1cdbe-b284-4832-9c72-d233a39e8a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0eb028-64da-45a7-85a3-25375cdde9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bc5f2a-45c7-48be-ad12-fe99f3aaabb0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c9a673-602b-4295-9dd1-f36a346c11d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae20b93d-27bb-4ea5-a482-e40cac00c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788a31fd-dfd2-4130-a1d5-bbf762e25f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cefe30f-dc3c-4691-9388-047c2bf7b881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad03ac51-f2a3-495d-afc7-71b21666332d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66aaf35-520b-41c5-bfb5-5f896092a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcb9d0f-653c-4a1f-82f4-92f8c724f3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b2a804-d101-4df7-8f10-f975792a8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa1819c-698b-4801-9e1f-ae9f1b2caa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4137057-6532-4b69-a692-c8f12f61a070",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d570da84-78b2-4a62-abaa-dd5fed6558f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b564b418-577c-48de-b25f-3e19d9f67b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27edd635-7d21-4c42-8479-c69658fd5e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf57674-fcb3-4787-a2d1-fcb531262ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d547c69-5451-4942-85c0-a5c5b465d807",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47b4821-8bdc-437b-bc10-1bda661ba421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b34a58-34c1-4662-8caf-311eb0c62cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76770732-8e5c-4a23-8257-591c2d64d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3e1148-8eb4-48d9-a23c-8fd961f4b9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec634a-45e8-45c0-b96f-94e0c30ce2b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44115fe4-de75-44e8-ab40-c284b7f65108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7900285-b84e-49b1-b2a8-6cbc91516441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89da16bd-c17a-4ffb-b821-846d16aede3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bb456a-7fca-4113-9aba-4aa7d644e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6fe7a3-368b-4416-8f83-052e17bbee13",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2833ab20-cbbb-4ccb-94ad-fa6069588582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd49677a-0173-4b63-9133-88fdfa8ed201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb80bc6-290c-4385-b61b-7cc68da8b94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f20b1dd2-bea1-4e25-b5b2-a841db6f2cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da9becb-50c7-4c91-9e35-0ab7aa0cb434",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3dbab-a66f-4b79-9ff1-427260b0a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5990e6e4-2c03-4d98-834c-bf01cc7a31ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb539c-8f13-46f4-a8f8-845346f0cfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9e5d0f-c388-48a7-900d-51f12056f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5aafa8-3961-4178-ab69-f962b04001c9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270fe8e5-5a95-41fb-aa26-595498db3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5387c884-aefa-4fe7-a42a-041926cc1f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c05e34-0b1d-4b1e-9518-4b894025e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42eb34f2-f2f8-4187-9b24-d99127ca4483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6543f86-9ede-4be6-9d0b-14ac3384b292",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af94cd5-e9ea-4a49-8ef1-cea761ead9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9879fbcc-908c-4214-a242-971b79758ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71baab5-f5e7-48b0-a872-4f6d4be096c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1ecea4-56f0-4476-8939-5b164e88fb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c077b-edc7-4dc1-9c52-5586073a1230",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c61876f-851a-4bd5-af5a-a510c85a86a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00072ab-7ef1-4f49-b074-81fc17b4bc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c72c74-617f-4f55-8bdd-6f00c128ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bf287e-7056-4fdc-88b5-fb130f9c6760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7296360-2da2-40e0-be9d-d98671f257a9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851538f6-c6cf-426a-8b4e-38157eef0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e29cbe7-cf91-45dc-9ed1-5a8fa7af884f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76a6349-abbc-4ba1-b0ff-00b54a21e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c2901e-3d3d-4460-8cf3-f61b87a93140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aa351f-c453-4f91-8db4-27bd8c815e92",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d15dedb-0c32-4e5c-a2fc-46fbd94f116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0952c8c-0c70-4710-a139-6b2cfb5ff583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162ec6d0-a63d-4c7c-9c3e-adff49709db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6d3e0b-8d5e-49e7-829a-8ef5095ab215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e3c93a-41c8-4ecf-997b-a04b83acf326",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7959f00e-c8d9-460a-b266-46740e3b7a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc01832-89f5-4fdf-ae39-f2b3e80b4889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c6437c-debc-4326-9bdc-eaaeb12ace9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b6c4b2-a8ef-48ce-aca5-898bc37b557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e5362a-429f-40a1-b833-173153b6ffbc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99a52dc-197c-44cd-892e-a1b05c87e545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b82ab3-2c3d-48de-bc12-82e55bcdf4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef517443-fc5f-4c6f-ab08-7888554875a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19bbb25d-b24d-477d-9654-7730683c17c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4e9836-74ad-4d4f-8777-253f9b776ccb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fd12ff-6786-43cd-b2da-68caa7606f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d7732-9868-4ec1-a3eb-ffe9c55672c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4401e5-f897-40c1-8cd7-ecf1d03dafd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1b7e90-4661-4172-b82a-cf967f9480aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0629f4d-b98c-4bd0-ab55-b76d2fbff645",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d69e1dc-43ba-4194-9f85-dc75a259b309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eabc8a9-d78d-4301-a5d6-c71d5ea45d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c045c229-148f-49b9-b798-a6e389d87fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4267a66c-2d0e-4d40-a51d-5f6d0cd3c3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfc0863-0f47-41ac-846b-65e3c77b467d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185dcbab-d5d4-4c94-98b8-ab8218bebf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f6fa0e5-0230-4e09-8bab-fb92db1b0e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106a7bcf-de4a-429d-b3cf-a28737836edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95e2131a-219b-4281-93e0-9f06d2f5c46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032df3f7-77d6-4376-b9ff-094a9c264fc5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e23e0-23e9-497f-b6a1-204a4034363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f293a4e1-850d-47f4-82fc-46b8c64e90fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54be8a4-c3a5-427f-8fbe-173d4e040d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "248cd601-7145-434f-8a29-e1bc2a8dac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968682a9-e3e8-4f32-9370-c29b04bb5810",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69272ec7-13e3-4cc6-b77c-5005e96a2d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4648172c-fdd4-4e75-9ace-bdd9ae7ad34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162d5bd5-ec92-4712-954d-28ddfc9cde1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc117f1b-c118-4e47-b917-fc8071382c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c674d0-af90-42f8-a337-e1dfbb893261",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5300818c-8eca-41ea-8a6b-732a70c23c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aebac7-597e-44ca-814a-5dc3d19feb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00211548-b656-4673-b628-dc5d9a0a28d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "338a010e-2f35-42e9-b9b9-b788dfeb98c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f741ecb-0cfb-42b1-a214-0e8219ba80ec",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1988b46-ba26-4bcc-9a09-3e7f2029404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc3e607-f7a2-4fb3-aef9-f2d65d0c0f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1428688c-c309-4bdf-a979-4b5a5474b4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12938a39-b3ad-48a7-9000-12689bad3f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736497e3-8a74-469e-8439-6d4661492b68",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084789e-6750-45a2-bbb1-05bc4315d5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958b63f5-ad83-459e-873c-7f215aef05eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48273357-77ad-48e0-ae2e-e46d1ba386b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48873bb-61d9-4d63-a027-887e98fd8fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a19558c-3519-44c6-ba69-b6e20f892d20",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcffdac-fe11-41d5-9edd-d8d16212d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599a29e7-8e4b-4ded-b3c7-b78a6518f2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ab0fc5-6363-4919-8b34-078576a2c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df842754-0280-4fb3-b51b-390df4b935f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca1ba0d-2c6c-4356-b432-01839135576a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5987f-423a-4a88-96aa-d166197ede83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d94da3-5627-44d9-b54a-21c1388d407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849b3f4c-e0cf-4288-9302-6e07ffa6ec69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d81e3fdf-7676-485a-84a2-0a57448d124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d097469-f969-452d-8f75-3014bea0f09c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869736d1-cce5-412e-acc9-d6956bae0b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38d4251-05ba-4654-907b-e2cd362f5abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40ee107-5f5f-495d-a225-aab35e596f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8925144c-4cfc-43c8-b358-cdc01af5289d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ef546a-b596-4553-bc8c-645af5ef6a99",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eba180b-3374-4292-844d-360a3c2025c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d9123f-09c0-485f-b167-b48f5c2c4cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a81fe3-8137-4af8-b45f-3e088a401234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ce0cbc-e030-4e7e-a55e-8b6201275ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782892ce-99f8-4a17-8e15-df4a21fafcc1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295a12b2-c888-445f-a339-1ecce7862e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db834060-aae7-4d20-aa8c-5edb763f1f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59531808-01d9-4f20-b228-a81ba0ca301d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "942e2c5e-05e5-499d-89f3-503a90f5f075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b3f85c-f526-453d-ba68-4e94b725ea1d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2168c665-2d1d-425d-935b-4dca86a81767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06120147-da92-4943-ae2c-b66797d02345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ab9256-2e31-48f2-9bab-d3fc6c57f464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7cc3b8-a248-4bd4-becf-3296532118e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0491055f-019a-4b2b-bfc2-ddb197011652",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abea6c9-482b-4dfa-9ea3-1cf0a82448e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213f6f78-ff63-4158-b887-347118ab5d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74970dc-062f-4fa7-aee2-4083c446c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3bb53e-5cff-4f30-a546-a22c201c14ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3f9230-c606-4285-9bf0-2752a1728cba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a1f38f-547f-4f6d-b174-ef9cb21ef473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a188b0a1-d616-441e-99ef-017d6e16c1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b1e0cd-baae-4232-b681-7db7a5fd295e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ab7da6-f2bf-4989-8ff9-9ab2ea3fabf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c9036-4244-4f66-93ea-f41f2c6070c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d449706-0eb0-4d78-ba6f-c193db6e9a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2845e8f-735a-430d-b6a5-9f0d12cda433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a906a1b5-85ed-4a1b-b77e-ff4828a55974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "319a5bd2-6c03-4578-b8da-303c61386920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef687ad-abbb-4ddc-bb29-6d2f29628d3f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50827173-770d-4fe3-99ff-0b70da844d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9904769b-bb88-496f-988f-9c2a512b05b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ac1bce-49cd-43d6-9dde-ed522acee10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03626a8-10da-4cba-bf4e-d0be121b7a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc1601-22cc-4834-bd0a-db79293feccf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fa2059-8d45-49af-b692-fb944f336a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afeff7c-fb50-4597-b9e7-ce519fa461ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8064788c-3da1-452b-aae9-d6fa4f838f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd73de55-a41f-48f7-b969-9119e3f78568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0798357-394a-4ce9-abad-8420ca05f156",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c34ba52-6035-4905-9601-dbd429411cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d86b7d7-1e49-4f6c-91c4-2a509ce6a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e5a605-ac38-4a78-8d35-77a65ce54384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42dce46c-ab8d-41cf-97d5-455bdf587879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807100a4-e688-455f-847a-89cc7b09a0ab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1821528-1431-426f-8ae5-9055c9e936a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924a7ed-16b8-46b6-971f-9b0e74e3a674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fafdd2-4279-4449-9bd5-d98ce30d0b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e40447-f0b4-404d-8893-8469d83b8220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe21155-6f43-4728-b5ed-676351d7b6e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac36118-303b-4939-a1c9-df04b6d4446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70388a36-3bca-4011-abd1-c63119a4c3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439063df-86b9-45e1-ac5f-48893729b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a6b661-1213-448a-8e07-bedf196dbb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a4cb08-df38-47ef-b5a5-9d5d308463a8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b5788c-f296-4d6a-93a8-baaf6210b91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94be5a8f-5b35-4489-ad29-c42b12edbdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6088a40-a753-4086-bc9c-ed8f2082d414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f93829f2-afb2-4bc3-9c69-be984fc46bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa80a3e-b786-46e9-b378-618ef4b60dc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920bb5b0-58c7-4a31-8bc7-bbe756efad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96747df-d85f-48ab-8700-8ca668bffec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec2aa94-48ee-496e-9b8c-3cdebc2ddbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26c2e7bf-2579-4c48-8670-1b3619a3b7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6727374-244e-4c84-9564-a2567a067301",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f34e94-4ff8-418d-abf4-9a1a00817a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93167755-516f-40c9-9e06-81bd4ad21294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf67da0-41e6-46e9-aac9-fc6dda8c7f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e8ef8d-da2a-480a-bb2d-8b8f0139b78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947c943d-7f6b-4cab-948c-25ef6dfdcca0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb88ee-c080-47f8-bfde-5046d1cfde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca2b72d-45a5-4f55-8ffb-a90b7a5af4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4175dbdc-2615-47a6-af38-817113e2d728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68fdb9e6-7eaf-4179-af7c-eda8acbae68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c916a672-8806-49f0-b109-f628cdb10b38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e71417-7953-4c8a-9476-b8d14c1e4e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa81ed24-574b-4bbc-8075-b04658b3dd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80033dde-df70-4a68-8429-f3a1acc11d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f72056c5-f571-41a5-ac45-2f9e9df47704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82742d43-6b3d-4fc0-b151-74c56926312b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c6a789-6350-4dfe-b79c-a048f0bbb5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a1af4f-a0ae-46b0-a18e-d5f66a937dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8c9ce7-bd1c-41e9-bb17-1d82244c9c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d42ab018-5be7-45cc-b263-e50ead6ee2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fffb88-910b-435c-bfb3-665bdb43c39d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f5d28e-6b47-4c0d-9069-c706503d4717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b30cc21-5375-422e-b5ff-b025b723c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c86eb0-2082-4c7c-8985-ab61a3da2e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bd7b1f-ff50-4b20-98ea-727d927e33d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448e69b2-dedc-4d13-ae6c-420bddcf642a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436533c1-a995-4396-a825-ff59b24f6fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fe5430-c087-48d6-9513-ad7db382ce73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d823bd-2c3c-4214-9123-984049c28408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebb47c3-8dd5-4be8-b25c-b2229c254a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4e8d3a-1df1-4965-8b96-f71206c04ff8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79985e80-9c6f-4fff-8d55-f11ea1dc738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a8456f-1741-4cba-8b44-9cb6d29113cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4391b6-d1d8-4d36-a03f-24ae9e0177c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3da811f-9744-4534-95c3-69b7b9fb558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bccc11e-ab91-4d4f-9bf4-577e06cd56bd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fe6f9d-93f2-4ad4-94e5-e13da50a16cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c673873a-ef17-4f73-a1e4-472dbae11a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181568af-2fad-4d12-b955-0598a2cbf504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fccc511-13e6-4187-b777-e5e60cbe1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e454953-9e34-494a-9d28-2de63a7edd62",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5591cef6-77e8-4d7a-b670-0c0a26c206f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9e5427-a820-49f3-9abb-1a9701e31c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2104bba-c650-4cfa-91f8-e6a46e283874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "718f5906-f48d-4352-b24d-8b5ab4a208b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f557d67-97fb-4115-9072-8d41362a1562",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66397f04-bc2f-41b3-9f64-1cd1ad008e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bb72ca-0f28-492e-9416-34ee7190e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bc0166-e8cc-4deb-93b7-6e4fb0ea5dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c65c0a03-35ce-4d4b-baef-29a72081f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053455ee-855e-41bc-8612-abc6d6304f3c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb95abef-e9d5-4818-8e3c-7d2fe95f58ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f76f1f7-279d-4eb7-82b5-28a89e05d568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed10d71f-d47a-41c6-90a5-319881c3c045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68671263-eb1b-4e62-81f0-1ff431b6706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c799b-ad87-4e9e-8ca3-dde2b5d5f750",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e73a2e-c305-4074-a310-f5d6f42bddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99343b42-f73c-457c-b2db-278ebe445272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f51dca-47c1-473c-8592-41884ed8e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5adf8278-d326-46f9-8581-1e0a8d4fff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e15107d-68db-40b1-afa6-ec2e11708805",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307dc4a5-ca41-418b-9034-842287fe7f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40028f2-0d78-44b9-8b01-fbe60ee3492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77081a24-5d77-4844-8265-e7ef9910071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ea0baf-9bb3-433e-9fcc-976eec0a7499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03eafc0-3641-48fa-a9e7-8c710f668707",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b273d5-971d-45bd-bca3-7d0a71b4d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48e3675-2dcf-4fb0-9237-a9a3376e733f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb216fb-619a-4b8d-9000-940b9e575521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d19797a0-a5a4-42ed-ad4f-404a9372dc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3f2513-abd4-47af-981e-4c6f926a4400",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a110316-702b-4443-9960-0dd99f7bf17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4164752-ba2e-44d3-a304-61a2aefa6d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895542ed-45ef-4992-9a2b-cd7b419ba1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27347307-a76c-4473-8aa8-125d3f8718f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbbe76b-a3e2-45d0-9d04-acc417337891",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b06c71b-8cd6-4374-b178-8166a7c2f40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed147054-d044-456f-a537-781e4390eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31884b4-5f17-4732-8c48-581804849789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd4abd-42a4-41af-a2c1-f1daf0c83a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab4ed3-c4f9-44d8-b138-6e7b4058f60c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4534a95-d093-4c37-ac52-d4fc8141ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9745e4ed-de17-46fc-92a2-e42d05bd6078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d90f7a4-143b-4d34-9cc0-ab5d048347e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89e866f5-c431-4cfe-9779-a0aaefa38ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d8d44a-3e7f-4528-831f-49e001fadb8f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1936922f-15db-4161-97e6-6401d3574180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421db74a-c3f8-4cb6-81d0-c48961df745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950d7ea3-149d-4fc1-8a43-c1e2c9b5e79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "897be4d5-bc88-444f-a5a9-e14dddce66de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6c3a9-190f-485e-9aad-73a65fdfa7d7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3be5de-26fd-4677-a97d-7b338766f615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2c734c-4214-4246-865b-441fe4d7e366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547cd003-e812-4d55-92c4-8d98969342a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "397e60fc-738c-4f4c-9783-a2f59101b4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70050f39-c0ff-4a16-849b-a6a8c9786eeb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc08d670-401a-4df5-bdab-99477e58457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea491eb4-e335-48b0-bb2a-4a96274583f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f94717-4dcc-4141-bdf4-436dee62fd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8d7746-294f-4848-9130-ed6cdf587b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31612f8e-575a-49cd-833a-8e0ebd32bb95",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd750efb-fb56-4e49-8fdf-3a67450cca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9d4402-ffea-44ef-abab-c0f93d687f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbc591d-6d6a-4050-b810-25b0ba85d56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a090eef1-504a-403a-86b7-17ac149e6eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a974a90-a730-41d2-a338-dca14dbc5952",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eced2a04-38e5-4b33-9297-6ea988dbfbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6345bbd7-ca2d-4f31-bde3-0aef3d446451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a4914-2d98-4465-96ea-c6d27efd2c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28cd48c5-cb6b-4aa2-a029-c54c7c9c9bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c589f1fc-fa06-4905-987a-a9acf5d6a3cb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a818509-2b34-43cf-b090-52c45ca2a7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38784c70-e096-44e0-b287-5b051c7a0a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551e260f-cde9-40da-bfac-d1df4d48b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95d0cf24-2601-44e3-8fc0-4674dfdbf888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf3a956-6e75-4b0a-b7b0-cdaa3f2d20bf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00b8633-35a8-4aa7-a138-ef97c468988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b3d9ba-99ea-486e-9760-19c1a6122d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1d0c6a-87bd-48e6-aafa-49b126536258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37a3259-8cef-4359-aece-482672c489b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17419dfc-1b6e-4d27-92d4-ab0e8ac0c40c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcdd9d1-e255-46f1-b4b8-f3a5d2585460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f929e066-7be3-4079-8302-dd97d388eb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4a65e5-ef72-4a48-81e6-2e24fdbea157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "981a13d3-f526-458e-bf83-ab4489cb0880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b03e60-60f9-4627-84e4-aa8fd0844039",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f5684c-ff21-46e6-aedf-68a85ea4a017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79135245-9938-40d7-af61-ec20fc8094a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c749c685-7531-4eb2-a3aa-8726d1fc40fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11eae499-a3c7-458d-8301-f3de95446836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be634e31-8371-421d-a392-6ed014cdd11f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d1b578-f44c-4caa-8ad9-192b649f6412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20dff84-d600-48e6-adac-66d16df35d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c873a5fa-0f75-451d-80bf-fa214bc83f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c72bb0-b9b0-4a9d-9164-a553c88dd052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0064d7-0052-44cc-b093-17571f61682b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b076e423-d831-4aab-b5f4-dbc8bcec9b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90529962-8a44-42d3-a139-78461b519d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531cac3-792f-4e2e-a859-1fb6e084e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66047172-0cf6-41dc-bf49-e02a85a828a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a5b34-ccd3-4b31-b52f-1f230cc511e2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef549b8-d640-4115-8e91-ac1771fc5b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9b278e-9dc5-4d84-a050-44ec7498f72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1f454-5f19-4d19-b61c-f9b1a05caa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf821634-22a0-45ad-a3b2-9710abf5cf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32d63d7-a9cf-4af4-b8e3-be2afe93e440",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b792d8-dda3-478d-b378-d6dadd2d3d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0097f3f7-dd3b-4a7a-bbad-fae46e066efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd19f63-7984-4cb6-8f60-dd2ca16b4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5ef442-7ad1-4e1a-b4bc-c4405f986a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a787ff-eba2-4cab-b376-d8d6b7a763a2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cce97a-90b5-440a-a20d-84835a9f7a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e27a0a-fd5f-42ef-a9bd-45f062dfdb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98cfe46-dc35-4da5-b499-fd8ceccc3ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28fc2e1f-7639-4026-b59b-7e64d5cdc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7067311-c302-4452-bef9-e7435b35affe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4edec74-fd5d-4a08-b733-c22f9f88a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55557cc8-a238-4c58-a30e-74510802b5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f973e0a-0407-41e7-bf44-f7c8e47e92e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d38d9d8-a5a5-416d-9342-6c2cff2ebe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb99d8c-0b53-48ef-9839-cd4378a28b17",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79209560-8927-4108-8e7e-10e6a9b4139d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ac33bc-d4ba-496c-a34d-29ae1d283012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef26fee-66fc-4cf4-ab5f-e5913b435c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eba6665-1eb3-431e-b1e9-0d9956197135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d82dd2-2e36-425b-9ab7-0c6ca3d23f15",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f561a1dd-33c0-49f1-b0bf-6a24caa74f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521979cb-6bfe-472a-b7e3-7cef7d7b5c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e880f14-1db7-4609-b5da-444cd0ac83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "739cdaba-f71c-4083-8184-82cb58995ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f6eb9d-42b9-4b41-85f0-72aa437ac64a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0ca9d0-788e-4eda-abdb-0c9c8f197103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f359eb2b-6d83-43a7-93e2-93411d888b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c90ec6-d7ca-479a-aaa6-72928785500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c56b155-1046-42b5-b04e-cfee5d1d584a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed8ccd8e-e927-45d8-8f3a-bd598197c6ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "374d1ea3-1b06-4b7a-b5ba-93987591ce17",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efcd4db-3af6-4469-bce6-1a6d17c15b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a82a9a2-3fc3-46d1-af5a-19a0f54376bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8a0a9-92c2-4002-bf07-aa7119e24e3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "775d23fe-2fea-4f43-87bc-31990b1b7881"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1df8a3d-9982-4834-a085-2ac4bf65c054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d8c006b-7537-4c6c-92da-6b7cdc08f99f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a99c991-61fd-4077-9fd0-3bd350d61d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "765a340d-7b06-41ba-a633-33bd4c42c03e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "761f2a8d-7cc5-4064-92b8-235eac285580",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "890cd060-b8c9-463b-bce6-605caea95a4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b62fd8a1-85b0-4dcc-b5e1-c31292c40adf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "228711e0-2f23-4fa3-a624-034a3bea7400"
                }
              }
            ]
          },
          {
            "id": "2d968f5e-2b70-421d-9510-a4a7bf4a40c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "464368f7-dfcc-4863-a78e-55f093d8d5f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb487327-0c9e-4067-b5d9-04195627d685",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61d30063-9f95-4636-96ca-fb0f3283f588"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35d84cf9-c521-434a-a17b-27c14541a556",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b49c6491-2fbb-4e0c-8289-87984e094fde"
                    }
                  }
                ]
              },
              {
                "id": "c454892f-4560-4cd5-8801-7ad683176708",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca688899-e918-473e-9752-57db8a7cc329",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9390ed6c-e690-4554-bda4-df1c5ccd9504"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38c71d40-c16e-433f-a0ee-ca5095a1fb25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa3cce8a-d576-4e1a-9f62-2c8d6001e9eb"
                    }
                  }
                ]
              },
              {
                "id": "774b2500-46a1-4a1f-813e-6d46e2b6ad13",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3125ba8-8df4-4da9-a0e4-86a6910fae71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e415ccdc-a844-41c3-9b6d-648cd37494fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cc0e2db-d95f-4c9b-acca-ac801339b57b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "402aabcb-7248-4e38-bd32-feb9a94ea7a9"
                    }
                  }
                ]
              },
              {
                "id": "c121e15a-b11e-4b8d-87bb-3e8519e855b4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eec0cd8-ea16-4153-9456-920c904cf0a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ef341d0-0777-418b-952e-aad18f9685a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d793c65-0f4a-4a80-8434-5c4542082e4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "44a4fc4d-d86c-4d18-9b7d-e8769961168a"
                    }
                  }
                ]
              },
              {
                "id": "389e7fb7-77b5-48b3-8b46-2c95451dac1a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93f042f-b5f1-4e0c-bd4f-7525696fb68f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c46559a-879c-4427-8b45-d88de9f17e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea4bd8a0-37a3-4b6f-82d9-240a20d4cead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2edc3bf9-8063-47b2-ba43-b5629956dc68"
                    }
                  }
                ]
              },
              {
                "id": "79ed19c4-243c-49db-9bd8-d01de7b37eaf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e57619d-0b37-41fd-9b82-bfc2bba93054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8762161c-e98a-4a22-8a0c-f13273e7e2d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93347695-b579-4da2-bbee-af894cd4c01d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c03ae5a-88e6-4bb7-b6c4-458869ffcee8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9da243ae-0827-4f3d-b561-76364a02518b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bab49408-392d-40b2-a7f3-7438da821707"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9613cca-46df-49f4-95fb-ce87ba253f08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f98bd92f-48a6-4fbd-baf2-cc942be5a10a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5785c613-b38e-451c-a1fd-1bc817d0847a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fe4a2afb-7d75-4e21-97bd-43bca31a2398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e15e92a-c838-44ad-9d66-56f752016ad8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d011ddae-9d88-4384-b478-78b73d0d14f1"
            }
          }
        ]
      },
      {
        "id": "a31d5bd0-642f-400b-8d2b-168f1ba93cb0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ce086131-312e-4699-b9c0-ca5d61dab6d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5868361b-5280-4138-b5ec-9885444e2dc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "662a22a1-2c1f-421c-b0ed-28a718f3dd46",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7d5e3d-ee38-4f95-ad76-e62afa34e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcb6215-0086-4f26-b11a-26f157cbabea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19885ed8-edf5-4474-8b01-2d84f961eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2efe79e0-dbab-4ab3-9192-8a7e4d20562e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4646b936-9ead-4ab9-9e96-770ac9d05325",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d755a-5c16-4481-9b74-09cf871be423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fd2c0a-d48f-4593-b624-ae10afffac9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85772fc5-e177-4655-8c96-c4d008c28d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01c38ea-d258-413a-a28f-f1f5e9d9944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02254a3c-6d7e-475e-a896-065bc1f4e24c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5088eb-c21c-4340-8f75-2bff193de565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7024bc91-d1c5-49ce-a686-657674f552bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c569b2e-37b7-489f-86aa-db7415dc7f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a2ece1-ac80-4092-bd84-02125c6c65a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b2a948-a9e2-416b-9c42-3a1a723ef161",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81343409-699e-4e38-b455-ce724c20e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b482e6-e0a0-4ddf-878b-dc34ab6f5ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a57b54-378a-4d18-bb03-25c99ec826e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75a2892-ce58-425b-b864-8f67aad54cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2953b47e-b796-4624-ad18-a6e0adf5d2f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbfe44b-ca78-4882-b7e9-aac960e41b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ef4ffb-4a6a-47fb-9713-e1d77bd4f229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db1bab0-c638-4a74-b86b-f6ccd95005f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "946404dd-ef6e-4572-8438-46592669dbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e400094-fdce-4107-bb20-aeb717e02260",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e09768b-2acf-46bb-8fe6-666b2f1dc642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c89b07-0370-4033-b31c-7ec36bd99fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf15f56-4927-4d80-838c-c57376abe612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7025403e-bce0-44c5-b574-b71fedaf8f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699652ef-82c1-4591-9ec7-c1e6fbb465a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c30ea22-c5ff-4913-a89a-4e06df00b820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba71076-d3ad-4e4d-8136-3754466ec682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c387aad8-4e22-4c02-a6c1-aa2770afe4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "489e5cd3-ab39-41f2-8f8d-0e29a137f735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d554645e-6410-4674-86f9-74b819b32322",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9630c22c-c193-41f8-a8f4-0c813b9bab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fda527-f067-4307-8519-84bc46c2c114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e9c24c-56ba-4192-a4ac-6ef36a0bb18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d858aa-1084-425b-bb8b-d9a796e97322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ba03e-b995-4d4a-8352-ff30d4d3100c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e399be-1904-4be6-8b8e-7f2ad2c8475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6099536a-3191-4175-98de-ee4bc23b5f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424eb12a-de92-437f-9edc-149c72f83926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eefdf1a8-342c-4af6-992d-7cb4d31f35fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973491d-0474-4f46-957d-4fc20f392294",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e01c00-3c45-4819-a704-1836283e027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70cc767-274f-4996-bd17-d1b634b32cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1236a9-7357-4b37-be0a-4615b42fdc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e39685e-7c04-4e3e-884d-7d2a9a9b334c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecd4122-260c-407d-8b30-b21d7e8bb655",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad398ac-0fb3-4aa7-8555-f0ad26bdf7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0cf203-0f83-4d66-ab7f-fac7c1d76221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac01f39c-f2d5-4972-80f7-91976be9addb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19c2a84b-5b91-4273-b5bc-16594ef0f29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81080f1-8fb7-4109-b8a5-25669127a5b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd5a8dd-0b55-4d4a-b80a-f996185ddc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c45b8b0-23ef-4e9e-8673-adb505ab740c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d8f0f0-883b-4319-a58d-20f1b1f3198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5921db-9b45-449d-9e0d-d9e7b40aac48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e275e7-255e-4349-83d4-aa367e1d52e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff34578-57f4-4ece-9b4b-a62cd6bdde68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e79ac86-4107-49bd-ba3c-bafcb9fe97cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7439b50e-68a8-42ab-a538-748069255e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa6c6af-004e-4204-95c8-962d656bc4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c35e38-1e63-4e0c-ab78-82955818f584",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a41940-ee43-44a6-b898-bf2d15a11dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ad0031-812b-48b4-b984-c7aff926e3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2dd4c4-c611-4702-9207-a5ee66e6cb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfef77f9-e265-49a2-8127-a096c33113ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85e9d7b-c1b1-44b8-a268-73f1e5658b47",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7540d7-4677-445f-8a44-b2d8a642553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7ce2d7-cd01-4bd6-9f8a-d27fba56dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d88ad7-f538-4ecb-b756-eabe0ce9e23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd126f7b-a9f9-4dab-b124-27812476ef5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c363265e-3fb5-43f8-8786-2343febdd3d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd07ecd-fa9e-4201-a23c-c816758b0080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f92984b-2a15-4e30-beef-1eedf17ea6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b67bab2-d83f-47a8-87e0-2d743b875af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "843fad1c-14e7-4eae-abf3-8950358a4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0fc3af-48e7-4948-bd6f-58075eaf3b3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09c4ef-0fa0-4db5-bf85-0169f021498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee01e299-0e90-438f-830b-68ba18ee058d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5d1aef-2a87-42c7-8fdb-7951fda62254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "112a47b7-d17f-44e6-bc0e-8fb2a82d9bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59529018-09ce-48ef-8e6e-076cbe7458cd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37eb2aa8-0a9e-44d0-8bec-2c2fa7f56e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd817cf-409f-4942-bfe9-7acb66f4f0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7856b-353a-4303-a1f6-ac7501762658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68af53b3-bad2-4004-ae3c-bfc588f290cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4111db1-de87-44b9-9981-c7e941fd719d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b81fd6-71ba-4528-9794-ad323237ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38eb4319-d311-4de7-b65f-6daeca0784cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a68a04d-8675-4b59-a80e-658bb2fd1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43d2a5e-0099-4821-86ee-59a568ae9123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4fa8b8-1166-4f92-85de-2f71f03f7f12",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2b9fa4-07d4-48a7-804d-b8b91af36005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c214fe6-e617-4010-96a1-b415686a2094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4bde4-237c-4720-9746-cf98b0457edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab14404a-7708-4c53-a7b2-7a983b39e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e0faf2-2035-4689-8971-fd884defcaa5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc103ac-429f-497e-9547-442601c08479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78122b10-7949-4b14-bc00-c9012d19ebcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf89ecb-d3ce-4e64-ac9f-a2e9573fcbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c54b57-050e-4466-9393-1fc33a2d50f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4e089d-38e7-4c9f-a152-5b906e87fa25",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9706a09-2c74-43a1-bc45-f7f8f0fefc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269a00bb-ff93-4482-a471-58cc4ce2cb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4298ffeb-baaf-432d-911f-3a7029e33faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dc8311-ecf8-41a3-b231-67c6b0e36ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef02704-2490-4b0c-8038-a168a417b71c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f725c-5618-4c8e-9ed9-8179598bbec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4b81ce-d797-4c87-94e1-a127f1f3085c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027ac92-dff0-4e63-a776-bd902ead70b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b431c368-fe04-4228-ba60-526afe2f493d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33553aef-e4a4-4c30-934c-22b84a800fea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9971ae-1bbf-48ce-addd-62062a2f6558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6233a84c-3381-47bd-99cc-dde8a83867cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5fd285-f551-4076-a843-afa5ae45cdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaa29da-d1a4-4a61-a850-268613c587a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d152ad5-1eb0-4a44-9c85-9df367066324",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1dc76a-25ea-4d73-8637-9b1685cda088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f317c5e5-609d-4d53-b239-86324d3f3ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e35d5-3126-4216-8cf5-3f795bdb7f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25f489c-3949-48de-bfad-64aafc1c5016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5013390e-4de7-4271-8d77-5b37fbe4fe55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1528683-dd67-4f8c-a72a-740a62a36b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dda24f-37c5-4465-92f2-aa7ed13ee118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc68e375-c32a-4f90-906b-25d5d0aab2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78bb6d8-6735-4ac1-83ab-b8f5c0eddb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ceb3d1-e34a-4e00-8187-963be12492a6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177993ad-83e4-4ba8-a690-e7ab0fba335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0202bf0d-82f8-4054-918e-368754a43c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99243312-b46b-4116-a7e1-ef323dd9af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c37fa6-1140-4bcb-848b-fa0fcd3d76db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739c7f5d-bdf3-4c27-80bb-ed16c313f7c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871fa167-0140-4569-bdc5-befd530fd84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcf6c07-b636-49c4-a2fd-6fd1476625e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0176b47d-5e42-4a85-bed9-5467034af510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c93f85-fd4d-499e-bd3c-bbdd297d815e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12401e3-8b0c-488e-9aa1-c1d0c136b680",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3f377a-5ce7-4bc4-910c-1c86cc5bc9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ab8670-ce6d-4473-a4b4-b58ce0878d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2caed7b-55ff-4d0c-be19-6690daf7215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f9dc8e-360d-42bc-9193-6fbf8022a512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa98d29-6805-482f-9486-9e398e4365f7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b447617-06ae-44ad-ad46-44d8db6c8d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dd9152-655c-4aa6-b95f-284b957cf16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6774ac13-e679-4acd-b57d-778a740e5350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf02510-db09-4a61-928c-2709947e159c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9365ac35-25a8-47aa-9143-00dbf4977eb4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f485fc29-a230-4dfc-b9d0-c9ffe40391a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf8a4a0-2713-4a60-a301-cb347549732e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff6d7e-a289-4a20-8e80-35b5da938300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "940673b0-0020-42fb-a90a-f4e2a6115084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41672064-35be-4d09-bbd5-3c7ea341a07c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721f339-6951-44d8-8487-be460c3c3c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168ade1a-fbef-4da9-ba03-72d7c970624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0855f6fd-b8b7-44a3-8f3d-494f944156d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896e19a9-135a-4ed1-8998-beae611aaa61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ba8310f-a679-4f8e-9c84-405ed7e17a41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6518dd36-bac3-4b17-b921-4b51dc23a84e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3fdb90-bf23-497d-a8ff-0a15efe3628b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "047c1954-ce13-4e47-940c-a4c02c456f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5465e6ef-6f98-4b5a-bc4e-5a3ab8266311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1fc70ce-59a4-4030-8447-9b403a7e6a88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef2ae279-8a82-4820-bb92-f0b9d35cdf40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7f1ee2f-0cc0-4606-9da4-ccb4336bbda1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df291522-5006-4f00-97f9-3a6ea295122a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b09cb474-a3b8-4b46-9ead-a45520d02004"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d292801-750d-487e-885f-6b4d15639d4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdfd0e86-1a52-4443-b129-37e8c75e9dbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c071ea9f-d4cb-4bca-af2a-23b21fff1134",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "868cf535-9952-4c8a-a2b8-144a542499f5"
            }
          }
        ]
      },
      {
        "id": "066aecc5-8cbc-4bd9-8710-22d529a137fc",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5384468a-e961-497e-b7a8-5796178e689b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b642f759-3637-4c02-b442-6223196abe80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e90f752-acd4-4f6b-8c0f-8f17a030beb4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168b6ef-a48c-4c36-ae7c-ca0a6f5da323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c7705b-a36d-4c68-8dce-0ec5fb0e6849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548630da-bb5c-4c40-85b0-f151f3d8db40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7ce7a3-0e49-427a-bf04-9a8b1fce8546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf55783-d892-4379-bb0d-8a235d5f34a9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff881d9f-8104-4012-8b34-31976bf6eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a5b849-6813-469a-ba9f-91cfe59e49a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8bbea-e56a-482b-9c08-9e040a4c1abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "550ac54f-632b-4d57-b163-e6a7ad545263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196eacdd-fae7-4eb9-87d0-212d2316e557",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf6eac6-c023-4b49-8bcc-a6218f8a4a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8ea2d7-c413-45b6-8353-23b51b7a301d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7810b1e8-96a5-43b7-9f24-d16799898758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb49521-1c8d-4259-aa70-12188013b651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0257ce7-29d1-40a9-939b-5a7f6a471f50",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab958095-48c7-4689-aef8-fd9bffc94b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10d26b1-ff11-446a-ab88-d6ed5a77be54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096f4a2b-23c2-41c3-ba73-0ba1cd5ca33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2811a0e1-7cc7-4dcd-afd4-d526472e02bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4261abb-eeab-4630-bb3f-79e39c0c8e8e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319bf6bf-a222-4b08-bead-0a66e4b270e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6dede9-5ba0-4ba7-9177-27811f407213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d354e43-0549-4fba-a7cd-3d1681f3d48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efecd030-1410-429c-af5a-36fa53f6369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03385fd-a799-41df-8f42-305a68f06d0b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b600e843-746b-4e22-bfbe-bb157326024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bb3314-6c3e-4202-af66-531378b1f299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829f4a14-e09a-4af2-bd4b-5ffd4c028f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2db2587-9a72-4b2b-a9e8-5b64f1fed3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85edfc55-2368-414f-8b47-2766d22851b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a22a636-01ec-4463-8346-35bc363e1d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301816a7-04f0-47da-8dba-67b17351a148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac22b95b-849d-4db0-b940-e28991b53a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7f0269-71d0-4333-9c91-098f2d05cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c112e1de-0375-471c-a668-e0a9eb04cfa2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347d0ca-1a19-4a7b-a0a8-f239d4932b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f416dcf-cab3-45a2-a032-fcbe005c1aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d253feb0-8e8b-4ef0-9c32-24b248190f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8660f128-dae8-4553-b5fd-f7b696f957d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddefde7e-899d-49fa-8c0e-2838f89ea1ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d5b3f0-4505-4719-a64b-01cdcadfa9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b94f0e5-34bd-473d-b2f5-5837e709e761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33330ae4-95e4-4ea2-b002-48d91c9c5e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc49c16e-b87c-4852-9ffa-7642a7bfa6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693a26ff-ab39-4278-9dba-a212ac7a6ee9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d10f35-d6dd-492b-9282-1741582ea6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d06d99-d956-4113-b34f-11256b6af9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacb541d-bac6-40e4-8fb1-05f8ae9f42af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1c0d3e-aaab-4978-b317-35b394debd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ab3fd-c879-456f-bd86-9fe1a5b6d7db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5f4b2-9c9c-45d4-a9af-b62a7fed88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bef844b-13f0-416c-adf0-14a5507be251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31046481-e94a-48ef-854b-aa426eb5cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e53417d9-bf03-4c07-8f4a-ad54a26e36ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b2235-3c58-4fed-ad6d-1d3cee538ae0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60423ede-b19b-4d36-a529-2bbd7f97f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129554e1-1796-425b-8976-7ccd7849e39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9d3d59-2b25-4efe-8741-bcfbbee18312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70241af9-6a42-4c7e-b291-531176e433db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921970d2-c44a-4d80-a371-23a95e54c179",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262954ef-a82b-4a8f-8cb6-f85855f47f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db35a737-b8c7-4790-9968-acf4135c99a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f84a5d-8cf4-4ab9-b95f-858af714efbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a799ef00-1235-4fa4-a56c-cad521f76065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bca157-47dd-45bc-9708-ca8273858604",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e5a45-ef44-4905-b14c-4c93ddc244a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa783e32-0e18-41b0-ae3a-b069b9e021fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac3de3c-3965-4c77-bcf4-38b16c0fa47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "690e9985-291b-4f18-a4a5-9f8dc8a97393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e05b57-05f9-4ccb-bd58-237a1552dd09",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44ae11d-3810-4c85-9908-6c2a18417c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213acf7f-bf7d-497d-bfb5-ca64e6716d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9e7cac-134d-453d-98ae-4fd0df58df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "53418eff-4516-4e8f-947e-6246bf83ef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb27039-16ba-4cce-a231-1f47acffce12",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f89f3c1-6b2f-4c1f-884e-c7f27a559b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65ecde3-4ccb-483c-a9a8-17ba3d6c37df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961ccd3e-7615-47be-b3ab-cb376914c2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e89dc2-68d1-4d47-8f61-6e63c39eac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9ca81-6975-4124-9a65-62a09b88265e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d0897e-4850-4c19-a6e8-a2fc9cacd313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f889bc1-79d5-4143-a691-1fd95d91d985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1265efad-def8-4449-a444-932184a798ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b42554-1b68-4d57-a0cd-d70e5cedf016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4b8f74-b735-4f77-b65c-4848a4dc4e4c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef41302-cc55-4db4-8d39-641b90fe7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a820db9f-1a51-4641-97f2-5245ec10b3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9841ccb6-a475-48d1-a2e8-a4de20a364e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bcacf4-79af-48c5-8188-f6291b23ef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16844e4-de7b-404e-bb43-7711fbb0289f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad6668-a3af-41c0-840d-b4de434cad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c895eee-92be-4aa4-9457-94dd169068e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d2685f-6110-4c74-82ea-80e14b7bd076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b870d72-d949-4d69-8cfd-3a052c7ba244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a46e90b-4901-4ab4-a000-650bce0cea8a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd37de94-818c-4116-ae53-11cc3eb651aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323dbb68-a567-47df-b446-8f384866b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7652d99d-ff06-4882-aeb3-a044d1c05361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e069b52e-448d-4545-8ada-6f9f7a1f813d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dc6b08-a3f5-49ea-a1a6-0dbcd77c8591",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332efd9c-8041-4aab-a03f-a0bb7abfe263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c689e83-ada1-41a2-aefd-db8d59d3d8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e0cb0f-4fda-454f-9383-b317b477d196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba4522e-16ef-4079-8c3a-fd87df2fff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f8b3b-9be2-40b8-9264-ed01c1358de8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d6947e-a2ae-4bf0-a7d7-5308a735062b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b2e0d5-1861-4413-b281-6abbcef7eb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f65917f-f4e7-4538-91d1-a07d7708e549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e475a5f3-e3d3-446d-876e-74f54ce6cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded056d-7c93-42f6-a220-5fafd0580347",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc997a-d238-4dde-a6d3-1ab4c8c09e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615bef31-c59f-4db5-a97a-4dd3b57b5c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5cb37b-df03-4167-82c6-25a83ae43979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "634aca0e-28a5-4fcc-82ee-44ada1243ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16961ad1-c3f0-4eb6-ab03-2cb3afb82279",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4594aa5e-b536-4016-997e-559125f857fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c512fc75-1986-4808-9fcd-5f3b0f38db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991781a3-1c60-4d11-823b-03b51d011d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8999f7-6520-4550-b69a-b60d234e2520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32518341-1722-41b8-b724-5601e628a974",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720b7a46-9a5e-4430-83bb-eadc6bb17cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c33447d-8093-4e39-afed-ae8b9b522c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80321e6a-605f-4b93-902a-29f297c5ad32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c930b79-09b4-46ca-8db3-b9cd52212684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f8c86-75b4-463a-8448-a1930a018069",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935b4119-d40e-4aaa-a5ed-ab24c1d448c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546425c2-9a6b-4cb2-b0ae-db929cf707aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ffcc25-a1ae-4f6c-bb07-a8d1497b1464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c55aaa-f0f3-4b5f-8d95-717f2e94695e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8af3c9-63e7-4c37-83d5-a859aff97add",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762ac04-5ae6-44f9-b578-4c59e25369c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3d514d-1534-45c0-b22b-ad7664f93e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e740979-85a9-4aae-b96b-2e538de90b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019cdc5f-f02e-4fe9-96a7-91742840777a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f43df-7462-412a-9eae-cfc9372a4979",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ada373-45f6-4412-8e4b-2bf424acdf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994ab555-d9d7-4c19-b788-2c26ec96293d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293a058b-cff2-4d29-8cd4-96583eb6678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41cb2661-0b06-4f96-8ca7-515bdfd8fe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31481d36-c83c-4db6-8e27-8fde224d6a15",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2e4a3-d3b0-4b75-ab5c-f0ef8cc9891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0ceb53-de93-45fa-8875-c1bb1f8cc41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16910a2b-c0b0-42e8-b2a6-7901cd592cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e798678-4d39-4fe0-8ff1-0605a2013a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5b7d08-99a8-4a97-8507-46d470979d2c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967442c6-6440-46fe-a3ee-5a4b51cb2f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f98e33-8b7f-4ea8-8bf0-a9445d1d8f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06db4e6-b879-4399-9c40-73b7c4d35d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3951b991-d16d-44fc-b7ef-a9f5cade04a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ff2c5a-de61-4a04-8844-89f44fe9fdd7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100ce01f-4cda-42cc-bcae-44c687ed0a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddb054f-0c9c-4919-a095-ff4cd63704b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6f1eb7-4508-4608-aba2-19869c4ad01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1a7cc1-65b5-49c2-8bc2-9ffdefe94bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c366f48-a32c-4b27-9043-6fec86b16a0c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e9b539-16af-4fb4-97d3-de320b65a77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e67079-d5e4-40ac-8ac9-2a644670ac71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cb5573-7136-4a38-aa82-bf508fe8b2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620b1784-9466-48ac-9fa5-f1594a4a6c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13708517-afbc-4a6b-90a1-081944d13fe3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06697201-1f83-4725-adca-01f23da0ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0cec40-8c09-4907-b952-d4aa05940b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4579dc-35df-42fd-af83-9a0779964a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04c264d-74ba-4721-b8ca-0a2e52998499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a33c89-658f-4c59-8614-138ed9cfcb61",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2494a3f2-da6f-4cb4-85c0-f76f286655b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7e872f-85d5-402a-adab-cd44da60735b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c810f-d6a8-4b4b-8956-eccf50705bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f4012a-27ad-4582-af5b-4e6a0023196b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021e0a6-8d76-471a-bbcc-386858e0d978",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b2bd0-3459-4d7e-a6e5-837ddde83607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b666f-ce3e-433c-90f4-643da2bda18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3374d2f9-b30f-44f1-b0a5-4135e3579c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d81637e-4a1a-480f-8156-e81df62e681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ac56e2-d57c-4d9c-903b-0404213294a9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82554c18-0e35-4ff1-9315-d19bc77acc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384b3d8f-b1d9-402f-8623-b7b3b6f5638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8f7d06-8201-49b1-8afb-85e9b382f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba16019d-284b-4b20-a597-e024d6a0c5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e31ed54-003a-46a7-a8f4-571c9f2bcc52",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5b786-d5f3-4904-9bfe-ed8eb54cf997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be5392f-3403-4819-bc0e-03a92e1731d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3305a4-3016-4be6-8e58-b736ccad171b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d11bdb-5516-4a4f-a14e-555a740237d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d307dea-27f5-425b-959a-8a7f241b50f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "343b01d5-4dca-46e8-80d5-d5359e819a8b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f7edcb-0039-4121-8b0a-7179b27f7dc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee228039-16de-4664-9e9b-80b02f92dfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cccab55-b194-46da-9fba-d9af5b7a55e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ddeb147-059f-4840-9bd2-ca2e72087cfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6edbad9c-6cdf-471b-acc7-265c20646c81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cc266f5-35e9-4760-bbe1-0769801731e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "878597f9-0af7-479a-a6d3-808749817e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80db0baf-9849-4d26-95d1-55e9b1a2a196"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0ded58d-3f25-41ea-b172-be43fb2d3d48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e018e6b-1b0e-4778-94d2-37b2cdb6c610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ec1dfd4-28c7-45e8-8be2-a5fe542729c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff15cf81-e786-470d-963b-02367181aa29"
            }
          }
        ]
      },
      {
        "id": "a1be054a-6ba6-4cdc-9814-840eb8ceb733",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ecefd446-e8a0-494b-a333-22a4bbbc7243",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dcfafad-ac90-4dfb-9eeb-d24a39462309",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae274a18-eec0-4089-8d34-d3a4e5c2f814",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfd4ec6-1df5-4816-836b-e22a3ed36ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b80410-21db-4cc7-80e7-fcdb9e248355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26c532e-14f2-40e8-bd06-8e7bb141c4aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db153784-88eb-4e06-8252-7013a4dc5663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cad95fc-5c81-44af-bf31-6d606828fa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779cb405-05fd-4808-9751-440aa6de4028",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f2e2ab-433b-4204-934c-617e735b75b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c99da3-f551-4468-a5a8-60f31f37edd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bfb322-b6f5-4bb0-9002-c78b8595c9d7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0b2822-af4b-4860-9cf9-52ca3d306c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03ed99c-d910-4c2d-b785-d4e67ced2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefecea7-7344-488c-8465-495936acd80d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b60419-2b85-4cfe-bcb2-d19d61702a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9e893a-489e-4ce1-b4c8-9ab89e026078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7888dfb-dc59-4d31-a74c-4f3f121ce0c7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd196766-b4d6-40ee-920d-1774da16e05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbce6956-e32d-4d77-896b-09c4a2abd3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c551b54-a14f-4077-8f7b-b9a365db3691",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e8165f-eb72-4b1c-94c1-d3f9b3d0a51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bdf7fb-e14f-4275-870c-b07d5d767aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b722a79-c60f-4487-8ed6-e01b1b8de842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd4f524-986a-4bf3-be4b-790cf87ceda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a2f6fc-bfba-4b1d-9d71-b6fcfbc32591",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e050bbe-903e-406d-8f5b-da648073be89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7431587-b7a0-4c8a-842d-df64ad4a8d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcf5d40-89fe-4c4d-a472-8c8726f3832b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b568d3f-25e3-4ee0-a985-da2ab2b31ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b09102-80f8-4da5-b193-ad2311af8189",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01af874-9c50-431b-aa77-e3b5783a8b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1a96bc-334f-4207-acef-654e9a1db055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89d4a90-d38e-41a8-a866-62fb28512383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f159b8a-55f6-4fa3-a99a-2685813aa08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b8ece0-50b2-4c4c-b4a8-cfee4e89c7a1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d518a-045b-4a9f-8c17-f0a94fb1009e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8008a5c0-d326-4e45-881f-c38479bedf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ea024f-c713-4d41-ac47-d3bedc4efbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c5bb7e-d5c9-4e3a-a45d-4b4381c98d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e3d9d2-1968-40ed-8a03-961b245f39b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24c0707-122d-422c-b607-0afb41ff8daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb5c0f7-e461-4afa-b0d5-d6137a1d70c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b552b3-a512-494e-ba8c-8c02740001d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba6adb6-269b-4fa7-a895-8bcb0ab24b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a412889-683d-4f5c-bcd6-60a1595fc7f9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747f31a8-0f3f-4d24-b43e-2c4c76f77bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954a6a03-0d68-4283-aa3b-bda0a3e07bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ec4770-83ec-4835-a2f2-1d7047f27051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa85202-f6bc-4ab7-a349-199132a4c9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c680f-951d-43c9-af7a-0edca0177c7d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5677fc35-8267-4d5d-b199-32df4c585201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633cfea4-d6ba-4214-bda0-a28de11847f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebec72b-591c-42fd-a980-3c625c6eb54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb70c97-1f65-44a8-ba00-a60630fb4b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff1c989-5289-4a44-9070-8d0777c98a75",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faac90e4-d4b2-4c4c-8607-922d4e19abdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c7231b-cd66-4451-86d6-26b8bab4b337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e92d074-1de3-4afa-b42e-cb42459f955f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee12989-d8e5-41ae-89aa-44fae993382c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7f8cbd-563a-43b3-95dc-8391e18cd8be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e437798e-c1c8-4d76-aa9f-064e851d5cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b13d7c-a9b5-49ab-915b-580f473b5d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86139153-263d-4a3f-9781-177bea08bc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c5ffe3-3e93-479c-a15b-6ecb6756b65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f65270a-b6bb-4f86-abee-09254241b350",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fcc991-cdf7-428c-a615-77b229cfa6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a117a9-d6d6-48a4-b4a2-0036f1a9d875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00909ce-d1ed-4870-b1de-82a4b88e41fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57972a55-e04d-4bd7-b6b6-ced23d1c9739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21499039-40b7-4cf4-9e23-b714084df855",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4351f953-c19c-4942-ac11-f03b79b4c122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e1cdf9-68f5-447d-bf87-5547a3cefce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93fc1e6-3cde-4694-87a3-9ee79345b092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1789fe-17c0-4466-96f6-76706d60118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49acc17-8bc3-4814-ae03-6cc008eab69a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070f069e-618a-4ea1-b023-3f7ad5c32a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6911a534-a93f-46e5-8336-5445d18e2061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf0f80-ed1b-4501-bed7-a6876270cae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31171899-18c0-4e93-89aa-b65e607392a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68a9af0-8e1a-463b-a3b9-75459ee103e1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83d3853-6881-449f-b78e-33796a632942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c61100-2e4c-4d96-a5c1-6791ade070c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66820769-3fc6-449c-8ccc-c3564b73f91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc3a132-c4fd-4185-8dfc-2987e77067e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22ccf91-59e6-4212-be77-6c8313151a25",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3886379-1ce4-49a2-bc6e-ae424c14404d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c48b0-881f-41eb-ac00-a4cd09c3ae54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eaf2d3-60bc-4959-b737-743c09b93291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4c7ca8-b89e-4cd6-9974-8bf092301973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeb5f3f-5cbd-44f2-803d-2c270e18efbc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f07410a-f572-4879-9844-8f74076b1631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acb00a5-36ee-48b0-bcb3-f59e958258bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559279a0-98bc-4dee-8aa0-09510a4097db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1d86b0-ce59-4274-9d66-a18e4bef0383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f546fb52-125e-4e64-95e7-1972b8fe3c5b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a777cd7-275d-4ff8-b1fe-12dcf0084cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7a4e13-7da7-4fdb-a444-6640b7a3428c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbfaf9c-1c77-483e-8690-08584ff344bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3397c882-c0dd-4115-a1bc-7e87a8d093e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dee9378-6b13-43a7-8a2e-2cfb54abedeb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946f28cb-92bb-4bac-b2d9-5c81f0d9f2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86444262-74b6-493b-8305-3b069586ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5cc083-7a9d-4b48-8d90-dd3c31f8685e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9cf71a-c714-4b34-ba7c-d554968bfa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ed4dd8-5cea-4982-8522-a08066609f7a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8955508a-7cc8-454f-ae4f-b99f7c332442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a005071-af43-43d0-a615-aa6021f284e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aec930-39c9-4e30-8aaa-a619dd47a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4946f6-bf06-46c5-b879-b5a7f1ca66f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfa038b-1d1a-4537-959c-1fd9b23e341f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4616a8ad-e731-4c86-b557-bb3ff830e904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cca25b-d612-47f3-9439-b4a6b0301597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd2f24-006b-4567-8def-23d66a2930f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f9d114-2af6-4c52-9f08-c5f1ef83869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474e2a52-be58-4c96-b6e9-b623cca98b9e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6fe8e9-9a7c-4f81-9602-9b123c26112b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8856f82c-e466-4e32-a7ca-341327c58112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1711d6cb-624d-471c-b1c8-9ea32b26ed15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65e4a09-1c29-47a6-87a6-334228b0fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a657cca3-1225-4180-9eb9-33a873ca1be3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbcc047-48cd-42d3-a3e5-eafb6be1ce89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96bd5e91-7764-42ae-9780-0f3f8b1342f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb7066-6c4e-4924-a018-2caba4128ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd54a223-c633-49ee-b234-e51987c1e36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26566225-4388-43b7-a9e8-0c03ae7fafb4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ecb84e-5d04-4bb0-a094-479b847bfe4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5c067d-505f-4e76-bcdd-7f3206d6943d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c02b2f-56af-4aba-abac-665f0ad39faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da0189-e4c9-4701-825f-cfda24d2266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6875a840-b6e2-47a9-8bd5-b2d3ff66e306",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b403cc-ecdf-4548-98c2-45f650102dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eebb195-2acf-49dd-95b5-3c84237990b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3891dbb4-d5b8-40a3-9fc6-07c360a9a492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a80cf67-2ac7-40cc-89f4-406efe44ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3302dac-fcad-4b59-9117-b43154a3e6bd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41e9701-ea02-4c96-bcd9-36503cab3afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f75510-ebdc-4cd9-af0a-3978cbf51ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa42f8-4658-44cc-bbe4-f3542a12582b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c70bfb8-d6bb-400a-9bd1-cd4e6a1f845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40f76b-0b14-4f26-a788-697aabbea946",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92087265-adc6-469f-a11e-fe2a54cf3ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb9b937-3e8c-42ef-9f6b-c6fa64fffef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be459218-714b-4c13-b320-e091aea376dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdbad4b-ff93-421b-97fe-d560940ae4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1684be3-2442-4744-980c-ce07601168c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327ff3c0-288e-4433-9b22-7cfa01cc21bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c54555-dbde-4823-b901-f9021ebc444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f15a4b-5bd6-4ba9-9156-7bf52dec147a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d95d5f0-2d3b-45b2-b264-7a403f327277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feea63d7-d820-4759-874e-c60eb4333964",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc001c3c-4bd5-470a-b831-329a8e910a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e939d0d9-9746-4774-8661-a8fb6d8866f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8b6afb-3bc0-42c7-b6f0-0e5629bf702d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea23129a-7b20-461c-9bcf-0d7472a20bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f9f025-bd3d-4ee8-893c-0bedd9742369",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8963b5df-83e2-4c29-a5b4-86c5d3c99720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d697364-174b-4bb6-9233-43e89f5a2607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297be94-070e-448c-aebc-aba2243892a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b152137-c15a-4a74-926b-a56df53e38cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c83ea6-a599-44b9-874b-bfac31d3cfed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471a47c3-7f3e-4ab3-9ce6-842cd8f90bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eab7ea-13bd-4038-bf60-58c17d3099b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf40d26-4fff-442e-8482-c81d5b0f0a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadaca7f-eb99-4981-9f95-dc0a23fd4515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5925da-f1e7-4126-bde6-91857b7980ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446dfff4-370e-42a6-8f40-a93046504358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c19e1ff-7737-440c-bf24-33b041b3ad97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48df2444-dde3-4a2d-aa1f-427a35efab8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e34f1bd-a7ff-4c0a-a020-4d13ef7ff8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e97d7ea-5547-47dc-8759-9c88f8364d2f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be19b7f2-f675-460e-95cc-1d6fe61a254f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf909e08-10f7-422c-a890-4b7d89989232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27329467-34a5-4af2-ba01-42daa9825a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11419af-f7cc-4f8a-8a2c-058a7b254561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbb6cae-d4b2-4ef1-b45f-7da344ffb789",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f785a878-208e-42c3-9501-645b452ab0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef6a8b-e6fd-4a6b-a831-783edd93f627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f261d6-eca6-4a0e-9a1f-93bc0efebb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b2fa63-84bb-42cc-b4c5-997ed9ef3116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7e4d39-197e-4db3-a493-255ecc40fc80",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb248086-2793-49c8-8d71-46cec6bad539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85caf42-525a-47a5-ac94-043bd9c36f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806b267-413c-4237-9254-583dd4a6054f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259d091a-7ae2-4d9d-ab9f-2af1f1f5a973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62084437-9832-4ec0-be7f-d1daee475207",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f536f092-4691-4cb1-ad00-7191c330b343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391f91e4-0241-432f-bae0-9d04c4fe6043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76be004-97f8-4845-9ab8-3be4479f6d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac98cc62-c11b-4358-b4b2-1ef4081fc851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe5235d-b904-4951-9875-667abaa00c73",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77630b6e-8b2b-4700-b41b-ac20ada41d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8e8bb5-0e4d-41b4-9ef4-1df1c053c77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eb83fd-8634-4ff5-a432-5f0402eab72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c702081c-2e90-4633-a8cb-3bf290ceb7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7793805-1620-4981-a559-f9bf0b4915f9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a89235b-0231-4fb1-9d72-bce4f5d2feb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe82cb9-085b-403a-9070-198796b9c2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e367a380-475f-4a03-93d5-6445c8b41a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3213a950-821f-448c-8586-ba64c2839661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3fac31-6e04-460b-868d-240c90916381",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a221ae3-d471-4d97-9272-26e1ba4eb1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a4dc06-97fa-4ed1-befb-cf7c752a2566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cd4f8b-41aa-4ab3-8b79-4e6ac488abe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9411c3-a458-417d-831a-76b837eb1de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3434e79b-15e3-4dd3-88e7-ef0413ada3c6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12320a4-47a6-48a5-858a-d6d88b9d5156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31a5ff5-fb81-4599-abcd-5e38e4535542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c83c885-f2fe-4f0e-8274-1d2fbac51c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da26c537-16b0-456a-8d12-7f9279b93172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07646c95-c33e-426d-bb6a-14d04f0cde7e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8e9bc-9c0f-4391-bb4b-4e739f3ba58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3433df-bc4d-4f70-92ae-e67c7a6a612f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b0785-03b4-44da-9db2-6e18b82500af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e615b76-e0de-4d95-86d8-ae905e08f825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b54ce1-5d1e-4aed-bf91-2b63f3ac580d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03876647-d4d1-4a06-bf10-67d854dd3aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d77ad31-5764-448c-8295-c915c5b185fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583851f1-b4af-4c49-8249-982527e762bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a5c9c-3840-4eac-a3fe-72783a65a7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a11572c-8643-40d1-be7b-07fd1ea814ac",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569cc716-d5a5-461e-838e-1faa0dcc5d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef5a3c0-9220-41da-ab80-5af704bf9750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1809b300-69f3-464c-a021-172e8394590a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28599ebb-230a-4598-8783-0c3f28459549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0d88ea-2da5-4f34-9471-6f1b7d8fed03",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8c3f07-bc85-4f9a-b927-5ad0c37372a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69a0626-af39-46c0-b29a-8f96763c6197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caca563d-74f5-4739-a239-32bb32e8c03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60697a39-a2cf-4f16-8e3f-74f9a128b194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cb8241-2024-4daa-b9dc-2a79b775c3f3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481d6534-b9bf-4bbb-b12a-375a4027701a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8aad01-c266-41a5-96a7-e18635c9e3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f75743d-e9a6-480c-bb1a-8edfc5fd9fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde65bd8-512d-44b8-9da8-bb678c989b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be69012-72d2-49b5-9eaa-5ef899b009d7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce31c9e-0a79-42ee-b1e1-25811ee54f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ab2fda-88af-41b1-97bd-d4e68799ffe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deedfc54-ff4a-485b-b261-23b1452a590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2491616a-7e40-4706-abaf-36ca4dd1a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7faa7f-20a4-4d99-8bb5-898af10c8fe0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a559bb-1ee4-4a23-8887-a52a58f9cbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939d6b54-370f-491a-87fa-bc29b5e943e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33207bf-a8f1-4f38-8dd4-1dfee6c2c265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b66fade-d3a1-4eb5-8c7e-decefd9f9c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0905d0f6-e13b-4294-84b7-52d466c77c04",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fb86c6-72b8-4dc5-a2a2-52e27bcb598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324c67c0-d593-4849-a5f5-37a52b0bc483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0152f751-7d2b-4972-a479-92a41428f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c86f434-cd5c-450e-9c32-6957766c2a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16051116-fd58-4b22-9a9a-3d3fd387b1f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc627dd-d373-4d01-87d3-2437a8d698da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220c6ca9-3593-4312-81de-83741cdd8105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7db0d9-f135-4dca-8389-a54885aa794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3631a8-ce79-4f78-8160-01513a8d4585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44861300-2534-4f09-b0ff-dc2b54f22958",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c924bd75-40dc-4176-8ef3-14743e6d17e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1e7b11-f41f-4b59-9850-7a5c8737d87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef177d7-d041-4dff-8025-f71c68cc1ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb7326c-5f75-441a-9d25-a94ba3aeb082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f59e273-627c-4030-96ed-9e00bd315e51",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb3d854-c2d4-449f-ae5e-23d144192f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b7f4c6-036f-4e08-a392-a57c049d7a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2390de0-23e2-4211-ab27-51d1ddfdf018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15ab42f-b0a6-4b47-a2e2-f735ce42607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae03b580-9c32-4bbf-9b25-33d8779a6e75",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbb6306-b45a-43bb-ab63-d0d557432674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25fddce-ceff-4cf2-8665-f637e14d3a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2fec4-9c0e-436c-9017-143b9787c98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a66f96-313d-4e95-acee-c5d1965b2b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd7c56f-24a5-481c-88a4-8c54c102550e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ce165-39dd-4f3a-999a-13232d212258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32193d5-ddc4-4a90-9dc9-1643f73f2aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecee698-56ea-499d-a416-db24263219d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce43b690-e8fa-4478-b500-6907f34e7d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd937e0c-f559-4d4e-8541-cd0697eb4c34",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d604b7-edf7-4e8b-a3d2-cd1929194342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f6e644-2d10-476e-afa9-aae2e371fb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bbcd2d-ce1a-48b9-9bd3-e55f4d9fa111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbfaf36-8980-467f-86dd-a6f297d8abde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d72a423-0b2e-439a-9c81-e2feaf50e951",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920aea92-215f-475e-8044-b17b765d8b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf745a48-b7ea-4772-b996-4d27133124c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5abfeee-0c98-4a71-892e-2a2e02056551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86450527-c2b2-4606-9b8e-d127ed6ed4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf22e029-80c6-4a61-b277-2fa820e5280f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7606ffc-70cc-44f0-8b90-136ddeb0097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8e0f7e-3c64-45fb-ba94-2e4be1fd2fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc5e37-5cae-4736-8380-be19147f9c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0161e0ad-5b50-46dc-a14d-13e7210c42f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b37b81-dfdb-466a-9477-b5458cf4636b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dfb08f-ad85-4056-9bf7-dfde849e35fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1105e9b7-2564-4fcb-a61e-c1e0fe04a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d26200-a235-457f-afa3-00b37e1379e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862628a9-365a-4c49-9ead-fcdd971c16b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11584b0a-a5a1-4c51-8a01-39758a034fcd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27725267-7fa6-47ec-a3db-008a39be373f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eace47bc-0e1a-4609-a1f1-f06ea4e5ce1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30dc58c-396a-497b-a7bf-d5336f373817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce7b196-e17d-4ee4-92d9-cffafcd08e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ebbb20-f93e-433f-a7d1-e82a8bcf8bfe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cd7a9b-22dd-4d43-9a02-b7484e652c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a232d796-6db1-48c8-b7ac-cbce43d122ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8990a328-489e-4b66-abb5-e67f91e9df9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b839814-4ac1-46af-983c-6b747b7fccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac664b4-0bf1-4237-af5b-06d0d18903b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6372a64b-1630-4750-b3e2-32948a727a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3771c84-a9f9-4811-80cc-fd70b1473ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c785910c-4c38-45b8-ba66-cc93bf5ade93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f946ea4-76fc-4a81-b098-b361e3c3ca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6bec8-a1e2-40e8-aaee-95f0cd6e1d30",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d4a73-4c38-48f5-9251-3581ef925350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2c0d8d-4821-48ab-a0e7-b3c48dbbe012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4222b061-96fd-401b-862a-9d3a0ce3307f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a3ed95-7f20-4a7b-8f3b-f7c903056948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6bbf63-cc17-4cf0-bfbb-388851abf7f0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1b4803-47c7-469f-805e-eefb261dea4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a1c20c-b412-4727-bcc4-9d5e217aed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9973d03-351f-4740-82f8-87904353787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eb9857-7f57-4a0e-bfce-565b32acc1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d4c08b-29fc-4d0d-bb6b-d294e55bf123",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d2cec8-e930-4dfc-92d6-6b4e5e5a1121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7782509f-9b9e-4024-a141-add10efc6f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29688fe9-d5cb-427c-9b2c-b6760c03a28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac140dbe-5314-4250-a63d-6017c8602fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c8d26a-64ee-450a-9200-7d0ed3276907",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ddab1-1fe1-42a8-a195-50a0c89fc3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec6d4a9-cba5-4828-b088-d331ffb4aebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d614f476-a57b-4e7c-a7d8-f42324cd14f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e95987-0868-45c3-879f-6beb168665e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c276cf24-c9d6-446f-b9f7-e2669e41110d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2414afc2-7c5f-4066-b314-474798b7496f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2a0e7b-51ae-48a0-90ce-7db0fb603d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6820c6c-89c3-4e12-b11e-5b369d22f8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0244d9c9-e7dc-4b1c-b2e0-62067f469f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c001cebb-8dda-42a8-98e6-1e1a65f66ddf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8506b3e6-aa1a-4e2e-9d27-bb3e1712e3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab85cc1-c151-4a48-96a0-b7b2b2e3d3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c0fb6-6a47-4a26-a4be-383a2f6f8692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a80982-aa9f-4fd2-b347-ea8e20fc96ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb1fa25-aa78-47fe-a71d-7f0aa615de3f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eb11fb-dfe6-4b29-ba3d-de958f5100ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d367cf6-c481-4c89-b4cf-f106ac29111b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9878aa36-c556-4316-8f41-07f0ad966cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c40ca44-5e6a-430c-b65a-8fa09090671f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298bbab8-ad54-4d6e-bda2-3a476157b6cf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463f590f-9c54-446b-9e7a-d4278b2aa29b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593acb5a-ddcc-45e7-8d99-f71623373ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9088ae-8766-4098-bc9e-5e2843873f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea80c74-e4dc-4a36-9a03-bb05a631129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3d5ad2-900b-4448-accf-e94f8d9dd5d5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c976389-0ab4-47ab-9dce-67171371960b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5265e6da-4231-4354-a978-625a67b96ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860267fa-e603-4b69-95d6-580abeca205a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba33ad9b-49c4-4037-a75f-386b366d4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f320265-f9f6-4cb8-945e-cc2eb3c9f70d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c665b5-bb4c-42d2-89e2-53e400714471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41db8dd9-1922-4864-a49b-4293e6d7f024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe705b31-922c-4923-a6d4-9133d380928d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16001f4-57a6-4946-8f46-4163dffaee9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a3bba8-c214-4405-902b-c1086244b4ec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bef22f-7049-497b-bcde-19c6570c036a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d3ecf9-b3ec-49e6-a445-404ba6ebed93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d95b180-23db-4400-a90f-20d348740e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f93674-1e66-45d1-aa8a-2c84ac456322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78cf989-ad59-4d85-9b4f-875b76fe3734",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6fff3c-e122-4ffe-abdb-ef60a07eaa65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb98f2b-b691-4b77-b75a-fd7a231de938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea7f8ff-f550-443b-8e2a-c957bdf28c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d9f7c0-2019-40bb-864d-0af49b81a3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0de070-f745-4d34-9604-6826d613337e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02795c5-5ebb-481b-9673-79f08a5d8be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a231d0-857c-4fe9-a423-c10010574be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3296725-36c1-4d56-89c5-6615437d5c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9974b53-800b-44f9-aa89-307e4bdea42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6f7da4-9509-4eea-995c-8d3f4eeebe5c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dba914-af87-4fc6-bba9-93d98151e060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e535d47-118b-4709-b11e-deb130b4b806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa5622e-f405-4fc1-8106-cb3b853bf59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f99e05-fe0e-4e6b-a8a8-b3adae821ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452c01bb-f9b6-4da9-a1db-39fb453baea8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526cdfa3-cd16-4465-816b-2e0c65f10b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7efb14c5-85c0-418b-8954-a0886b417b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6ad1e2-a8c7-4d9b-9afe-c7d5f38fcfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ee7a5f-61f5-473d-bf16-e596194ffd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8d8015-1281-4141-8ab9-9f1e114914c4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc28ec20-6067-4856-a880-01707cd9d77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e781af4a-cf84-49ea-921f-0f69868f57a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21c1fe-e8f2-4abe-87f4-aaf494bf3a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae49673-6124-44f7-9949-48736c903a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0742c13f-a0fa-4971-9bde-3f70c48b6158",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22332399-a3c5-4503-b8db-7f2f320991b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b6b86d-47fd-4471-b318-a24c08bd1d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db1e8b2-2ce7-46f1-92cc-45a269848c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af41321-68f4-4a27-b2b8-bffe2e922f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92408c0a-924a-41cc-8120-864519b90bed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93424d59-fd92-435a-a8be-d72a99a8bd0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec30a304-71ec-4243-9c32-3f27eb29203a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce120b98-b75b-4579-a0ef-2b99e3aab688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd1dee8-0cfb-4e4a-8ab6-043c0a240ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fbdf06-2365-4c71-a049-e07393ce8bea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debdeded-da30-4a5a-83e8-f61e38cb960f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196ed3e4-7d5f-46e0-98d4-31450ca40cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab183b2-011a-45b6-b028-9e835df0c07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ac2eba-bf01-4b26-859a-447eaaf262fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce564f9-ebc9-4d0c-bb03-b285df9429fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acaecbd-6e0a-430d-889d-ac60e4842dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65600a11-08ff-403a-b630-5e899872a9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b81691-1019-4f83-bcbd-44052dbab966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af07568-3e93-4d3f-b97e-e47f8ab9dacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afa588e-f483-4f9b-bca6-97068a1340c2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a7fe2e-1928-494a-a5da-0d87411bc94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349ea40e-fbd2-4e61-a2d3-977ba454901a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d951fab-0938-4e83-ab8c-7e1d7d0a8328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45b70f2-5780-4b5f-a463-684610bfc2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5703346-0975-494d-8918-2957c9f61c70",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f154ca51-b731-4b4d-8be1-717160d35239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2d5338-6acb-47fb-a8c6-f6cd382b2325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8929d623-00dc-448f-a99e-2dfd1f6bd24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9b1348-f0f2-47ba-a082-a320aec64269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cd427f-de0a-4b4b-ba28-6508175b9ff1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0a41b7-2692-49a8-a2c9-09da943b3402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3facd92a-ebed-4203-befe-1070b69d6f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c79fad-0497-4414-a20b-1b40c0669e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0437ee66-6d04-44d3-9e6a-626fa5be08c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d833b9-2578-4637-8a53-41364f696dd1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1124e707-3214-405f-bcd4-d28038e148f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1a60c4-302d-4aa0-8a6c-ce95845b90c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf576ba-7ae1-4aa8-9ebf-66f38355b055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd02a36-7aea-4b51-a89f-1177ba0b1a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b3cb10-4c77-4999-a99e-52e5f180a718",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f2434-d077-48cc-b1cf-6022141e77f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4999eafc-9a2b-45e5-bc87-3b615a99e7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f241a67d-44ed-4ca3-8f3c-f0899073f2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6696d5e1-d745-4abb-a9c9-e20596a22ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2186054b-7b45-4ab1-8e5f-55d44417489d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa9944-4246-416f-9dce-c1b18c63d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153887a5-93c2-4aac-a798-9ec8ef63219d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c629726-2775-45ba-b3cc-cb46e1b533e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc287ab-2658-44a5-8306-e0bf0af859b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8926fd0-c97f-4b53-9cf0-788f7ec163af",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ead5b9-bc2e-4d3d-95cf-979cb0c0cd73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22881e8-a5e5-4dbc-874d-220da85d0ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab052ee-245c-49c1-bb0a-337aca67ebef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb53533-500a-4c73-8f97-283e8540fc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642b286f-a888-447d-ad2a-4524cc4d00be",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bda285-a153-4307-8f4e-eba62c7980f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7ee837-326d-4095-aa12-994ffa147f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474ed06e-1fc0-4e4d-a256-0be710d09d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d06b53-d3fb-4551-bd50-dfdc41eaf31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6f7430-bf6d-4b8f-8991-8aa5ced7b6b9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1bcfcf-64a4-4431-9ffb-eeca6233b9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f406799-ebe2-4945-ab22-2fa350aefb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc73e726-1756-4046-b3bb-02a0550d817f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf76b21-e5b5-4bce-81e4-9e316c76d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b283804-79bc-4e0a-aeb1-cf89990a8939",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708ab0fd-6922-4844-8157-24dffd76e767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d10289-948e-4550-82fc-61d598fe3a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33535161-ae43-4c77-bd37-ed36866c7a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc61647-73f5-4825-ac80-48ab2011ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf1999e-71a5-486f-a660-af1c72c511e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0983ccb-527e-4dac-9224-8c874f00dcc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4454111f-c0ab-4818-9265-85b324a4329e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008e7c0a-f9f2-4012-8ee3-56d3f8f251ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039779e4-64db-4e13-9fa0-fb9d75d783a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51679549-ee09-49b8-ba6e-c2a1dba1dacc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b43ad71-3625-4b73-9231-992ea70602c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc61818-fcb4-4509-87ac-70acb4e938d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afb96b6-ffed-4f61-87ae-daccab97d578",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211b9b14-7ba9-431a-9b3c-3b6e8ed33420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8247cb0-77fe-424d-a5bb-2aa861e45d0f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f822f1c-ab47-4836-b131-47782bdcc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d018ec-6390-4bfe-a7a8-4b345a23c6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271cad1-c883-4dbb-bb33-b6176e123f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d18c71-4dc6-4071-8477-ca84d1eee076"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff40e9f0-5f28-4214-841a-513e2aec1f64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95b82239-1c32-4d25-8f7b-0c303da76a76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36876e2b-e561-440c-93ed-fb3946b91c0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3450d2a-2644-47ea-9068-0a6096c60733"
                    }
                  }
                ]
              },
              {
                "id": "6a90bcaf-9d3b-4da4-abc0-085ae6ec2045",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "842c0f70-c8b2-41c6-a986-2ac512a70f37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef84db-c834-432a-aecd-f529da284086",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bbf504ca-a185-4418-abb4-f0cc03847f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a219d5f-62ec-4cb7-8f1a-b077b36d70ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d462f64-d298-4fb3-bb0c-a7b66ab29dce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfcbe238-6230-4c3c-97b1-bff40c7f5417",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1aebaa0-4176-4182-98cf-57bbdddc5c45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3059b601-677a-4e90-8bf4-b913975978f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7e8811d-9d6b-4d7f-87d9-d6dfc1e764cb"
                    }
                  }
                ]
              },
              {
                "id": "bd4f3dea-7a28-4c03-8b7c-a26a102610e0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3cfcac10-1751-43c9-9429-1db2ec523221",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f851dc-4ae5-45d5-a3e8-58e75c0a0c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3ae2d4d0-e2cb-40f4-8e7a-134e670ff53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0263ac-3731-4b85-b930-3b5343fdb62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dee118-a80f-4303-ae41-f0a223a4bae2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af25e9ea-8be7-45ab-8c8b-98942e8e1f31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb276766-6f0f-4a4b-b12d-f306954d7e57",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1ee8af8-fb48-4da8-8989-358c509521b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eef63f3e-0b69-4f6b-b60d-b4ce0effd0f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22803dab-88c0-4c41-a61c-78f08a349aff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6fb79fe-ec9a-4b61-ba31-e0435440cc30"
                    }
                  }
                ]
              },
              {
                "id": "dc9bb1de-8986-4136-ad3b-c12a1e4812a3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2138129-3f69-4b80-a31d-f325af62ad87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9fbab9c9-e165-48f1-be3c-868777069492"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef608f85-dfd0-4768-a226-9c02ed8be252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b97c64c0-900b-4c2c-b14b-42685f2980f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d0b7a86-ee69-4306-8f08-2e2b102582bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2cb300b6-6c37-4f2e-a810-0614938049dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc92a8b1-802e-4b4b-bb7e-0cc20daab152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2db10ca3-179f-492e-8093-aa5c77896469"
            }
          }
        ]
      },
      {
        "id": "623325c6-e957-42a1-bd6b-77b9bfb95ecf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bae5ff46-b25c-44a4-a8f5-8edc7e969624",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9e19d75-d3ac-46a6-9b38-c3e516890364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29c14d8e-6320-4e6a-896a-3ac444fcc5ad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f34cd36-1030-4d4c-a263-479e342dd911",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0bc34e8-eea7-418e-9223-9d309562e8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1e4490-8199-4628-a72d-ab31d72d267b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31232256-7393-44ff-8652-d69202a7bbfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db89ae26-52ae-412e-b9e1-d6f2ef2084d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f195811-1d62-4a26-b968-ddeed8ad5a4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c3a3825-48cd-47e9-bba6-eda4dbfac237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edca035a-c8a5-4475-b4a3-aa72393ef4ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5630acb8-863a-4741-bb5c-4dc9cf9fe127",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "64090ec2-32c5-40a7-aee9-f8f598d2e794"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b079e594-0c60-42ec-b968-c0c7d11c5aba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "050b45ac-b02b-428f-bb68-e3564a60efb4"
            }
          }
        ]
      },
      {
        "id": "fc59a170-1863-48ff-a889-5b43a7b5ca4b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2189fa82-d305-4fe5-8875-7cd52ae593a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc2fe2d4-b9c0-4852-ac2b-92a4d97be377",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "335ccfaf-8959-4594-ac41-c2010c2d329d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebdc398-9d61-49b8-a170-81a736888575",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d22fcd7-84b2-49ac-af99-5ccf03365da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ddeb2a-d4ac-4da0-896f-9c6065bd22e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8d74199-61ae-49fa-85d7-aa8829fc1144"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e8cbc4-8e9f-43e1-8e7a-c6c5bb36c7ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7162bd10-17eb-4277-92a1-652c8977bcb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a1bf25-6ba5-4fd3-8ad8-ed7681f1e27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9bb7bcc-5b31-4915-b102-22db932ef14c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95f4eafc-a63b-4fea-bd65-bd2c28f625fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55d346c6-5ab4-4aa6-8138-90eed9d1739d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "718573ec-b142-4ab9-8405-5ee57af738ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b5e09ce-647d-463c-9e83-f59d6f04ac7a"
            }
          }
        ]
      },
      {
        "id": "91a784ab-74bf-4ef4-852e-f696ddcff689",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5532cde3-495b-407d-8b48-9b672935ab96",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06404a76-7fc1-4c7f-b532-a6a645fce6c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6502338b-368f-4b60-ae22-f1860c567089",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13882126-8d04-4618-8b00-d245aed78b64",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b2aceeb-f46e-42a6-b632-6f6f2d0d3f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54798a32-cfc9-4928-aed7-ab0cc148a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b11a27e8-a998-439c-9d1d-60df789e6da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7828db1-e412-4acd-8b78-55bf4c4f228a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "127d8a80-32a5-4d80-8fe2-14b231b4aa5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d57a6a3b-cf35-4325-8354-49bdb8de61eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1155b89-ac1e-4c90-9c98-58f0de8fcc8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "888260c4-67ae-4dec-a274-56df551e9b1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e95bc210-f81e-4abd-90bb-89cfcfb21605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd544493-ea02-43e9-9b4c-a6cbd815eb88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffb0389f-9ca3-42b9-825f-406992bc5f84"
            }
          }
        ]
      },
      {
        "id": "cf00e2ac-c845-407d-bdac-6c04a928c53b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a1aa871-448a-4dde-8b37-9772124380de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "811afe9a-9581-4975-83d1-2bebdb83f6b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2b4a29bf-00d3-43d2-8323-b1913f9f8020",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e288126-4f99-4596-bb84-32dc2361de8a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eab0ce0f-7baf-49b6-b79c-0e357ae5c6c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.67605633802816,
      "responseMin": 8,
      "responseMax": 376,
      "responseSd": 26.10920977647072,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693096468992,
      "completed": 1693096501214
    },
    "executions": [
      {
        "id": "9cd8cb60-8d1e-4a2a-bf00-b5bc30951fa7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f8e5bdda-aa84-4349-8f5a-f88b20b88036",
          "httpRequestId": "87bcebe3-a40c-4b38-8a04-406ce856620f"
        },
        "item": {
          "id": "9cd8cb60-8d1e-4a2a-bf00-b5bc30951fa7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e979c4b8-175f-454f-9670-a98374158710",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "054c3153-85c6-4e96-bf38-33657b5638e1",
        "cursor": {
          "ref": "fe4785fd-9afd-40f4-b68a-d133b7096928",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "866caf83-b5b1-490f-929e-6b227a788279"
        },
        "item": {
          "id": "054c3153-85c6-4e96-bf38-33657b5638e1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4d669ddb-84f4-44b2-9959-372b924b23d4",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "4fd01bf4-1cff-4721-a92a-00fdaf3b14dc",
        "cursor": {
          "ref": "6d3c3865-7874-4f8d-b610-637f195d78d7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "faaf0357-0c97-4811-878c-4cb4a6cfa0f2"
        },
        "item": {
          "id": "4fd01bf4-1cff-4721-a92a-00fdaf3b14dc",
          "name": "did_json"
        },
        "response": {
          "id": "cc25ddc7-61f5-4b6b-9276-7ad1b47642e3",
          "status": "OK",
          "code": 200,
          "responseTime": 224,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1b02ce-88f7-41e2-839f-c9899381e916",
        "cursor": {
          "ref": "f7d646db-9643-4c42-ac18-c78be8e9a1a5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3bccced-6194-44f1-86b7-fb51676a114e"
        },
        "item": {
          "id": "ff1b02ce-88f7-41e2-839f-c9899381e916",
          "name": "did:invalid"
        },
        "response": {
          "id": "dfb6fb12-d471-4382-8c43-fac896b0c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1b02ce-88f7-41e2-839f-c9899381e916",
        "cursor": {
          "ref": "f7d646db-9643-4c42-ac18-c78be8e9a1a5",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3bccced-6194-44f1-86b7-fb51676a114e"
        },
        "item": {
          "id": "ff1b02ce-88f7-41e2-839f-c9899381e916",
          "name": "did:invalid"
        },
        "response": {
          "id": "dfb6fb12-d471-4382-8c43-fac896b0c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb7a16e-1f03-4653-8688-5e7ff2eb23ae",
        "cursor": {
          "ref": "fbefffee-25f7-4847-9487-83088bb9ae95",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a3c04400-74ab-4398-895a-39a37a417c28"
        },
        "item": {
          "id": "4fb7a16e-1f03-4653-8688-5e7ff2eb23ae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4a8da5ff-995c-4c47-bf39-25809cb03a6f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06014733-93d9-42e0-b59c-436ae3414685",
        "cursor": {
          "ref": "0c30b0b1-11db-4893-a636-63637f0ec352",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7f652f45-4021-4196-9591-3ae0d7a199b5"
        },
        "item": {
          "id": "06014733-93d9-42e0-b59c-436ae3414685",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d61f9261-5620-4de9-9d06-3a20207ee9d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243e0ef-1a09-400c-b19d-91517bc4f694",
        "cursor": {
          "ref": "e48b0b9b-5cb3-4c38-accd-b92df66269ef",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3439ef10-dd8f-4b24-8138-7ec884d3a3ea"
        },
        "item": {
          "id": "3243e0ef-1a09-400c-b19d-91517bc4f694",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8633a99c-114e-49c1-8376-79ff361551bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c2295b-5f5d-4829-b0ac-ed9d7ad228b2",
        "cursor": {
          "ref": "8d163ddd-a961-4596-9e92-de80a855d908",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8865671e-065a-47f7-8a20-bdb66a971d8c"
        },
        "item": {
          "id": "65c2295b-5f5d-4829-b0ac-ed9d7ad228b2",
          "name": "identifiers"
        },
        "response": {
          "id": "ca78cb60-86bf-42e3-bc3e-edd6c17595e1",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b6617d-dc92-4548-9f4e-ca26c327222a",
        "cursor": {
          "ref": "c5a3d53b-9e6b-4893-b5b1-9a97213dbba1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "221e6326-f330-4089-8e81-efd07369cd19"
        },
        "item": {
          "id": "68b6617d-dc92-4548-9f4e-ca26c327222a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "21a35630-c0b7-4963-b404-b3aaae2ebe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa67ab6-87d6-45de-b1fc-09d6445fa1ab",
        "cursor": {
          "ref": "27c45be9-fff1-431f-83a9-2209a090df8c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2ae81518-0558-4d48-a5bb-09a6f583c69e"
        },
        "item": {
          "id": "aaa67ab6-87d6-45de-b1fc-09d6445fa1ab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "95c90abd-aa01-4423-87e2-8ea43369e07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a56d6f-d522-4bb4-a19e-f7a73210459f",
        "cursor": {
          "ref": "68ce77bc-f41f-475b-81ec-7c2b5f2b8522",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d79323c5-dddf-49df-aaf2-6dd420cfbd7f"
        },
        "item": {
          "id": "93a56d6f-d522-4bb4-a19e-f7a73210459f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9cd15bdf-81c4-4916-9acb-66b9b5867824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1154ae3-f597-40a3-b9ab-65b88ccfebd1",
        "cursor": {
          "ref": "c4700400-41b4-4ccc-b63f-c75684fee9cd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2ef5c389-2da1-43e5-a844-780e793edde9"
        },
        "item": {
          "id": "a1154ae3-f597-40a3-b9ab-65b88ccfebd1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b038ea08-0717-4ba0-9d53-b95c8a266431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23f6648-168d-48e8-a187-e8c08f58e526",
        "cursor": {
          "ref": "685669ee-32ff-4f8f-8a8f-ee44e1d2df75",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "19f2b07d-c07e-4dfc-8f4f-56f9d87bc2b4"
        },
        "item": {
          "id": "c23f6648-168d-48e8-a187-e8c08f58e526",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f87eb333-fc37-4888-94de-45a6ec2f22ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c475ccb4-aae0-44f6-813e-acd71c1cbcd8",
        "cursor": {
          "ref": "c320633d-ee02-41c5-b42c-43b2393a1003",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "30932a7b-f370-4e76-a720-7c7d23b09207"
        },
        "item": {
          "id": "c475ccb4-aae0-44f6-813e-acd71c1cbcd8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3645669b-9d6c-4673-bf1b-23664e38e870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5322dc-92c5-43f5-bf2d-3b77b73a2a65",
        "cursor": {
          "ref": "51eedb36-1266-4eff-9f5c-76520f2e9293",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a62a38fa-8c2f-413e-8f54-fa6d5021ea23"
        },
        "item": {
          "id": "be5322dc-92c5-43f5-bf2d-3b77b73a2a65",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "83cd556b-a711-483a-a2db-2e3312a31ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab00821-6306-41d4-88fa-08b9464cfa0d",
        "cursor": {
          "ref": "e26ac907-00aa-4528-97b2-ea230d00d1b8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f6efc53e-f39c-4d91-ba66-6a2e02d80318"
        },
        "item": {
          "id": "5ab00821-6306-41d4-88fa-08b9464cfa0d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c8d98768-97ad-454a-994a-8a35c6083a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1982c46-603d-40fe-9c97-b87943f2412e",
        "cursor": {
          "ref": "ea4cc0e8-1933-4dc5-a1d3-840f0f07a4eb",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5582385a-d1d5-4ea0-be42-9b3bed73a5c2"
        },
        "item": {
          "id": "b1982c46-603d-40fe-9c97-b87943f2412e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "52d2e280-1af1-44af-b45e-dfb95e0de61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f81ca2-ee3b-494a-8847-6f594a8403c0",
        "cursor": {
          "ref": "84d35f7e-e4ea-40d9-a4c5-080a4dd7cb2b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6169bbf0-c4bc-4b6a-8fd1-40c551a135de"
        },
        "item": {
          "id": "49f81ca2-ee3b-494a-8847-6f594a8403c0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c1e4e1a1-e990-4034-8e01-14399f5125dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc806b-101f-4036-b195-39e380d96d7b",
        "cursor": {
          "ref": "e494c56d-dfda-4e06-b9c8-f182a001ffd9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3913a3ec-9224-4ad1-984a-72aee6a0acd2"
        },
        "item": {
          "id": "4cbc806b-101f-4036-b195-39e380d96d7b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b645e86f-5cf6-413c-bc78-549ad591af76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f439e-b72d-415c-8c52-ed57e8dbe759",
        "cursor": {
          "ref": "9d96989b-c956-48e8-beb2-7ae62104f7cf",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "26c0e9b3-ee0c-4905-b79e-8e4ab8ce75c9"
        },
        "item": {
          "id": "c28f439e-b72d-415c-8c52-ed57e8dbe759",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6661bf2d-5f15-4d63-b7e9-42f309a13afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3778268-0190-468c-b04b-f5c21f70dcff",
        "cursor": {
          "ref": "156cccf1-4dd4-44e6-b02d-b36cb0bcb7ca",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "057b4bd2-82e1-474c-9bbe-fd4413a8c64b"
        },
        "item": {
          "id": "d3778268-0190-468c-b04b-f5c21f70dcff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f017fce4-498a-4b32-8500-5bb5729423f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cede20f5-86bd-4d4e-8ff4-0a5819206e0d",
        "cursor": {
          "ref": "5ddd7b16-672e-49e2-bb14-39ff1e96bbf4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "22292247-2c50-4d48-92e7-1080edcec375"
        },
        "item": {
          "id": "cede20f5-86bd-4d4e-8ff4-0a5819206e0d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e6e2d8c5-f08c-48e2-88b5-c6185dc66935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b4bc5e-6821-4bbf-a326-688aec3f184d",
        "cursor": {
          "ref": "20f82a19-157b-4f5f-b746-42cb52557724",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e561d30d-7ec1-43db-8c84-1dbea5061753"
        },
        "item": {
          "id": "51b4bc5e-6821-4bbf-a326-688aec3f184d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a172861b-8102-4625-b013-45c504c4013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b6d3f7-d5c1-4004-b4f4-7bafc49bc604",
        "cursor": {
          "ref": "de7e6ac5-edb2-4085-aafd-238016481147",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5a29d662-329e-4c20-a5be-7d0852e8a664"
        },
        "item": {
          "id": "75b6d3f7-d5c1-4004-b4f4-7bafc49bc604",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ebbff5a9-789b-4fa3-aae8-cb9699cc6bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526322c3-119e-420f-ab49-697215b0f951",
        "cursor": {
          "ref": "7857d6de-6e6b-47b8-949f-a36b5754f134",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "be756f0c-4665-4591-a52c-5d5f1e78cfc8"
        },
        "item": {
          "id": "526322c3-119e-420f-ab49-697215b0f951",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0b004234-7c4c-4c92-b496-42108d2c588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c48938-7fce-4295-b8b0-e1fc0d87ae08",
        "cursor": {
          "ref": "25b299af-604d-4eca-92b1-7a0cbecdeb1f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "61d993a3-a77a-47d4-b88d-1bd2197a1999"
        },
        "item": {
          "id": "19c48938-7fce-4295-b8b0-e1fc0d87ae08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32200143-1895-4154-a691-9dc48f988871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ac2fe6-1412-4273-a9f2-1a1b5bcd0745",
        "cursor": {
          "ref": "d956d8ed-2d45-45c5-adbd-573e6f3680f9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d61527d2-0d7f-444e-b535-1408338ac733"
        },
        "item": {
          "id": "b7ac2fe6-1412-4273-a9f2-1a1b5bcd0745",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e88118ff-491d-4379-99ac-401e0948deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bc5f2a-45c7-48be-ad12-fe99f3aaabb0",
        "cursor": {
          "ref": "5b6d6125-15e3-45e3-b8b3-61a7ade6a1c7",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e9958c2-68fb-4f38-aa8b-c332d1a346cf"
        },
        "item": {
          "id": "a0bc5f2a-45c7-48be-ad12-fe99f3aaabb0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5a08b252-abb2-4c2d-88fe-2054ef1e3911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad03ac51-f2a3-495d-afc7-71b21666332d",
        "cursor": {
          "ref": "78c55439-ce35-4fb7-8e30-8ab21cf5f952",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ccd1070-0fe8-4d11-93cb-d34a12eca42c"
        },
        "item": {
          "id": "ad03ac51-f2a3-495d-afc7-71b21666332d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cd1da634-23f0-42d1-8c3d-d246dffc4d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4137057-6532-4b69-a692-c8f12f61a070",
        "cursor": {
          "ref": "9d385a2b-38ae-4af3-a41a-aae72c534319",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6133d925-c862-4bd8-adb8-fe0919930a46"
        },
        "item": {
          "id": "a4137057-6532-4b69-a692-c8f12f61a070",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a909cb9-22d6-4a86-89f7-d09df5c8797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d547c69-5451-4942-85c0-a5c5b465d807",
        "cursor": {
          "ref": "5acfb48e-53cc-4ab1-a0c9-861d28d18600",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f5f864da-0ade-46cd-b0d6-a514a9f7cd90"
        },
        "item": {
          "id": "7d547c69-5451-4942-85c0-a5c5b465d807",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "86cfe0c2-3d62-46e3-809c-28d5e252ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec634a-45e8-45c0-b96f-94e0c30ce2b9",
        "cursor": {
          "ref": "6836f137-0fa0-4ad6-8550-00884aef796b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "559ed5d1-66a4-47ef-aa31-ad881779da0f"
        },
        "item": {
          "id": "76ec634a-45e8-45c0-b96f-94e0c30ce2b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ebc96618-9abe-4f84-a4e5-24ace504ff06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6fe7a3-368b-4416-8f83-052e17bbee13",
        "cursor": {
          "ref": "b470b734-d853-4c23-83fe-549f97ad7fed",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c08e4250-9059-4fff-be77-a8106a38b7f1"
        },
        "item": {
          "id": "5f6fe7a3-368b-4416-8f83-052e17bbee13",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "92fc9562-9fbe-475f-ae07-f062c8415acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da9becb-50c7-4c91-9e35-0ab7aa0cb434",
        "cursor": {
          "ref": "696ba978-b5e9-4861-8f0b-7403e38e9fb5",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f82ee876-44af-45cf-8aad-40cd0327c23b"
        },
        "item": {
          "id": "4da9becb-50c7-4c91-9e35-0ab7aa0cb434",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7ebc5f10-4548-41cb-963a-fcd5d98ea2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5aafa8-3961-4178-ab69-f962b04001c9",
        "cursor": {
          "ref": "5679495b-daa3-45f2-be26-b69d20496f4c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5777cfd-842c-4f59-b63b-8a3a05faa13a"
        },
        "item": {
          "id": "ab5aafa8-3961-4178-ab69-f962b04001c9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8f5962a4-21d1-4895-b577-87a1d209c84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6543f86-9ede-4be6-9d0b-14ac3384b292",
        "cursor": {
          "ref": "7a290b8a-a764-4f79-b44e-e74465510c3f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "14c5dbb4-52b1-4aaa-8a2b-663504512f56"
        },
        "item": {
          "id": "c6543f86-9ede-4be6-9d0b-14ac3384b292",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cf812494-264d-438f-9e23-696d3664a8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c077b-edc7-4dc1-9c52-5586073a1230",
        "cursor": {
          "ref": "56ce2609-cebd-4409-8ea5-2c8ec0a89ad0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82918151-39bc-4554-a044-e93c4c10b2a4"
        },
        "item": {
          "id": "fd7c077b-edc7-4dc1-9c52-5586073a1230",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "600d2405-2f25-4d30-a285-dec5142ca333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7296360-2da2-40e0-be9d-d98671f257a9",
        "cursor": {
          "ref": "64f8cb66-dc53-4654-8961-4377ef62be12",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f32819b0-5c20-4480-a8b5-ec1bd69c3cd0"
        },
        "item": {
          "id": "c7296360-2da2-40e0-be9d-d98671f257a9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "62abda68-8f20-424f-8aa8-8bde68e6ba60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aa351f-c453-4f91-8db4-27bd8c815e92",
        "cursor": {
          "ref": "1d6a788b-b48f-4911-8f3e-3d9d7ae07720",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0ffb1b48-d86c-428c-bf23-c4d144cc76b3"
        },
        "item": {
          "id": "e3aa351f-c453-4f91-8db4-27bd8c815e92",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "964567c0-2ce2-4066-9e4f-729759fa5b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e3c93a-41c8-4ecf-997b-a04b83acf326",
        "cursor": {
          "ref": "9f90786e-4855-48b6-b9f7-2a82b42391c9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "81675e51-3ea8-438a-952f-0354eeda1b18"
        },
        "item": {
          "id": "00e3c93a-41c8-4ecf-997b-a04b83acf326",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "caaa259e-cc74-4714-9e66-fdfef525648c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e5362a-429f-40a1-b833-173153b6ffbc",
        "cursor": {
          "ref": "af65db8f-75e1-4883-abdf-b07ef5496ffc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "71244051-d398-4a93-94ed-3fe130cb942e"
        },
        "item": {
          "id": "c9e5362a-429f-40a1-b833-173153b6ffbc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8462eb6-7a0f-4acb-8122-7b6273a96780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4e9836-74ad-4d4f-8777-253f9b776ccb",
        "cursor": {
          "ref": "198ee845-89af-4bd7-8d7a-18b0cda69e55",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "46861c1b-66a1-4010-a3c7-9894b57912ef"
        },
        "item": {
          "id": "7e4e9836-74ad-4d4f-8777-253f9b776ccb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "92b120d8-404e-4e56-81cb-25a3c9f8a6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0629f4d-b98c-4bd0-ab55-b76d2fbff645",
        "cursor": {
          "ref": "a22fab0c-9f83-4c9e-a802-b1a8e7886927",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8b860b15-83ff-4af8-a14c-742c6013c874"
        },
        "item": {
          "id": "a0629f4d-b98c-4bd0-ab55-b76d2fbff645",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "023f84b9-6866-48e2-a035-cb4f3af79790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc0863-0f47-41ac-846b-65e3c77b467d",
        "cursor": {
          "ref": "2fe64644-1a75-43c8-a61c-442f28e687c2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "23e2d141-1c63-4dd1-90bf-f9cb73916cc2"
        },
        "item": {
          "id": "5bfc0863-0f47-41ac-846b-65e3c77b467d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e723d301-a4df-4ad8-bfe7-23190941dc39",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032df3f7-77d6-4376-b9ff-094a9c264fc5",
        "cursor": {
          "ref": "dd387a96-ab3a-4e93-beb0-5c14fe2974d6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ed274a1a-eed1-4074-b982-98c4acc37de9"
        },
        "item": {
          "id": "032df3f7-77d6-4376-b9ff-094a9c264fc5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eef4d02c-9e09-4c1b-a7db-547f2237932f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968682a9-e3e8-4f32-9370-c29b04bb5810",
        "cursor": {
          "ref": "c14d6f71-1d81-4192-b567-63199d73931f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "95cebd7a-7e83-4837-87c9-42cc14e59c56"
        },
        "item": {
          "id": "968682a9-e3e8-4f32-9370-c29b04bb5810",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f14b369c-3f7e-4242-9ed7-00512c2281da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c674d0-af90-42f8-a337-e1dfbb893261",
        "cursor": {
          "ref": "269e9f42-df6c-4ba5-be07-af50e626194a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56556bd1-81b7-40f1-bd08-cde0c9a0191b"
        },
        "item": {
          "id": "d4c674d0-af90-42f8-a337-e1dfbb893261",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "990217fe-582b-4723-875b-c7bd1e05cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f741ecb-0cfb-42b1-a214-0e8219ba80ec",
        "cursor": {
          "ref": "018e29cc-478e-4ab1-b9e2-63ec76a32871",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "241883e8-8d4b-4ff9-8a56-700b044d32f4"
        },
        "item": {
          "id": "4f741ecb-0cfb-42b1-a214-0e8219ba80ec",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e6d5a9b6-232a-420a-a487-5a65cf710100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736497e3-8a74-469e-8439-6d4661492b68",
        "cursor": {
          "ref": "78f6d238-c9b1-4ed5-bfc1-ad8265365ca3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97c2bb1e-c536-4d85-86ae-7ecaa0e3f6e4"
        },
        "item": {
          "id": "736497e3-8a74-469e-8439-6d4661492b68",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e4b3d23d-48ba-4b33-83d3-a69c8170e6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a19558c-3519-44c6-ba69-b6e20f892d20",
        "cursor": {
          "ref": "04b96578-65d0-405e-bd49-6211f956a27c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "441b589c-8986-490b-b792-4ae8aec3d69b"
        },
        "item": {
          "id": "0a19558c-3519-44c6-ba69-b6e20f892d20",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ffacf77-3502-4ee5-a215-ddea97fe1bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca1ba0d-2c6c-4356-b432-01839135576a",
        "cursor": {
          "ref": "57d6bc88-2dab-48ae-b35e-9cb489ce7a7e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1afa73cf-6e33-4dab-99ed-4ebfbb398950"
        },
        "item": {
          "id": "fca1ba0d-2c6c-4356-b432-01839135576a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e8e81d2-d753-4e2e-b1fd-ad36c6e19219",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d097469-f969-452d-8f75-3014bea0f09c",
        "cursor": {
          "ref": "d381dbb4-813c-4466-8b32-62016cbf0c1e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fbda0986-4b7e-4717-86d5-42778ca5ab23"
        },
        "item": {
          "id": "2d097469-f969-452d-8f75-3014bea0f09c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0fa4b1f-aee9-4aa8-808c-f38ad7d418f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ef546a-b596-4553-bc8c-645af5ef6a99",
        "cursor": {
          "ref": "ef5193ee-21ac-4316-b709-e62f9388c053",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "62fe5638-8687-4c0b-9988-c5785b8b0d9a"
        },
        "item": {
          "id": "65ef546a-b596-4553-bc8c-645af5ef6a99",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0a5ddb6c-b46e-4c59-a32f-d89658764fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782892ce-99f8-4a17-8e15-df4a21fafcc1",
        "cursor": {
          "ref": "049a68ed-4089-46cb-bc1e-9010a99d1a16",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "79fa5e4a-e88d-468d-afb0-83388c2a79a6"
        },
        "item": {
          "id": "782892ce-99f8-4a17-8e15-df4a21fafcc1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f342b733-0238-4931-91fc-5eb41b8e30a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b3f85c-f526-453d-ba68-4e94b725ea1d",
        "cursor": {
          "ref": "dcde4990-5175-4284-b946-0e50a0f0105e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bafc3414-9263-4250-8390-8cb5443d4a5d"
        },
        "item": {
          "id": "04b3f85c-f526-453d-ba68-4e94b725ea1d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b36bc0b7-cfe3-4099-aec0-0e69120f94b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0491055f-019a-4b2b-bfc2-ddb197011652",
        "cursor": {
          "ref": "5a679bd6-2237-4d74-adb5-f7efecd1e70a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4e260708-2a31-48e1-afbd-23f43590b767"
        },
        "item": {
          "id": "0491055f-019a-4b2b-bfc2-ddb197011652",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "843a21f7-8be6-4a86-bbe1-23251c550626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3f9230-c606-4285-9bf0-2752a1728cba",
        "cursor": {
          "ref": "88de11aa-4019-4cce-a534-a461db29dd9a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31dbd672-66d1-4ec1-b0a5-af21a5c3cfeb"
        },
        "item": {
          "id": "6e3f9230-c606-4285-9bf0-2752a1728cba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6a063e85-23fc-48cf-b0fd-1fdcf62b4cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0c9036-4244-4f66-93ea-f41f2c6070c9",
        "cursor": {
          "ref": "519f5585-5a8e-451b-8845-9bdc188516fe",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8fc71e2f-67c5-4f21-a6ac-e74d44b8f87b"
        },
        "item": {
          "id": "ee0c9036-4244-4f66-93ea-f41f2c6070c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9103c5a3-23af-4abe-8f1a-2eceedf974fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef687ad-abbb-4ddc-bb29-6d2f29628d3f",
        "cursor": {
          "ref": "ff65c42c-65bf-4da5-a801-0c43afa5b80c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "23b90012-8728-47f4-a011-f7c229142ef5"
        },
        "item": {
          "id": "6ef687ad-abbb-4ddc-bb29-6d2f29628d3f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a5d8e0c7-c75b-4e7a-9173-fb5f20cadb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc1601-22cc-4834-bd0a-db79293feccf",
        "cursor": {
          "ref": "e13cfd8b-0f2d-463e-8ff1-3ad8f0501438",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "67162f7a-ba4a-4115-a00b-8971ff07aaf7"
        },
        "item": {
          "id": "e1cc1601-22cc-4834-bd0a-db79293feccf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6532a3d9-533e-47e3-b90c-4304f5bf413d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0798357-394a-4ce9-abad-8420ca05f156",
        "cursor": {
          "ref": "8eb42f83-501a-4b6d-82d6-3675319bbdc4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d881fb95-dbc9-444d-9d37-62a726a9ea56"
        },
        "item": {
          "id": "a0798357-394a-4ce9-abad-8420ca05f156",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a6f86a4a-461a-4df6-ae63-b105913bca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807100a4-e688-455f-847a-89cc7b09a0ab",
        "cursor": {
          "ref": "c1e59244-4e3f-4228-b2bc-b20cbf6a50d6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f44dd8e-8759-430a-a6b5-b9a1a833ed18"
        },
        "item": {
          "id": "807100a4-e688-455f-847a-89cc7b09a0ab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a8145ebd-90c0-427c-aa13-471a534e4e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe21155-6f43-4728-b5ed-676351d7b6e7",
        "cursor": {
          "ref": "6833eebd-977b-4036-b092-1093c6287d44",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3d1e948-2106-468b-ba0d-c0186d30f0ba"
        },
        "item": {
          "id": "afe21155-6f43-4728-b5ed-676351d7b6e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8789b1f3-ab51-4ee8-a4b3-dc2338c71af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a4cb08-df38-47ef-b5a5-9d5d308463a8",
        "cursor": {
          "ref": "2c767143-612b-41be-8f6e-0655180f10b8",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "06779bd9-9f28-465a-ad5a-b1f4e6874f3f"
        },
        "item": {
          "id": "a1a4cb08-df38-47ef-b5a5-9d5d308463a8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "174d9a58-c79e-42e1-823a-320126eab76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa80a3e-b786-46e9-b378-618ef4b60dc9",
        "cursor": {
          "ref": "563beb4c-613d-47dd-a1d3-e1006d479e9d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a274b378-1f36-49d8-ba61-b8b476915524"
        },
        "item": {
          "id": "0fa80a3e-b786-46e9-b378-618ef4b60dc9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "817ad822-9c09-4a7a-b658-44016de585e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6727374-244e-4c84-9564-a2567a067301",
        "cursor": {
          "ref": "0bc6c555-b6a8-4739-b905-aa0fc4fe56f6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "686436d1-572e-4355-abe6-56491b4ef19e"
        },
        "item": {
          "id": "c6727374-244e-4c84-9564-a2567a067301",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7688dc9c-737e-48a7-a6bf-4a709b69a0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947c943d-7f6b-4cab-948c-25ef6dfdcca0",
        "cursor": {
          "ref": "04cda32c-45b4-46c1-90a2-e1ee1a268be7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "de657794-b254-4937-ae80-60cdd1dbded1"
        },
        "item": {
          "id": "947c943d-7f6b-4cab-948c-25ef6dfdcca0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86a1b9ef-9e73-4371-8b0f-46b72adf94f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c916a672-8806-49f0-b109-f628cdb10b38",
        "cursor": {
          "ref": "716dec11-3288-452d-9572-b0dd580a8a1d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "38ac64b8-70fa-4645-8ed3-fa1233581228"
        },
        "item": {
          "id": "c916a672-8806-49f0-b109-f628cdb10b38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d13aab56-2c50-4d70-af20-f7746b6b7c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82742d43-6b3d-4fc0-b151-74c56926312b",
        "cursor": {
          "ref": "509678fb-93e6-4fef-ac05-a0a314249f41",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58477ff3-2269-4128-8e01-b614a8b347bb"
        },
        "item": {
          "id": "82742d43-6b3d-4fc0-b151-74c56926312b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6429221c-2abb-45ae-bd4a-803dff8a4aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fffb88-910b-435c-bfb3-665bdb43c39d",
        "cursor": {
          "ref": "052c4461-9311-4b93-a772-b6f31a3d6037",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bac8bd69-f512-4b5f-8ec2-26ccd5312641"
        },
        "item": {
          "id": "a2fffb88-910b-435c-bfb3-665bdb43c39d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "205e68d2-3bd2-45dd-9fbd-f4bda6457a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448e69b2-dedc-4d13-ae6c-420bddcf642a",
        "cursor": {
          "ref": "b8519aa4-8a7a-4ab2-ad55-3cf483efd1ae",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1b49c1ad-5846-4ea8-a217-3c7014b69517"
        },
        "item": {
          "id": "448e69b2-dedc-4d13-ae6c-420bddcf642a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "42edbc0d-dcc1-46c8-8a31-45499045a415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4e8d3a-1df1-4965-8b96-f71206c04ff8",
        "cursor": {
          "ref": "72177ce7-a47f-4f8f-91fe-4a79fb4024f0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bd3a92aa-1172-47f4-9a7b-5fa13cb3fe2b"
        },
        "item": {
          "id": "9e4e8d3a-1df1-4965-8b96-f71206c04ff8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "70840896-2adb-4229-bacb-3f3002126719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bccc11e-ab91-4d4f-9bf4-577e06cd56bd",
        "cursor": {
          "ref": "4264c7ac-52de-42c2-896d-b22e6cc07a9c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d5640508-74b7-4930-98d0-d31075cadbe1"
        },
        "item": {
          "id": "1bccc11e-ab91-4d4f-9bf4-577e06cd56bd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9c9faaef-dde8-4a93-815d-f2ffce641bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e454953-9e34-494a-9d28-2de63a7edd62",
        "cursor": {
          "ref": "7324962e-55d0-40c4-ba8a-c1b74bbd4364",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4d44b134-3475-4c5b-b9d5-38780e049127"
        },
        "item": {
          "id": "3e454953-9e34-494a-9d28-2de63a7edd62",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3a404d46-f01a-41e1-bf1f-84d48738ef65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f557d67-97fb-4115-9072-8d41362a1562",
        "cursor": {
          "ref": "f53298f0-6046-4890-8100-e9c8eebcf40d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bae2743f-a510-4a81-8f82-f3e83af21076"
        },
        "item": {
          "id": "5f557d67-97fb-4115-9072-8d41362a1562",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "72d65096-566c-472c-9e59-d4e0d11c43e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053455ee-855e-41bc-8612-abc6d6304f3c",
        "cursor": {
          "ref": "9fd7c53d-c030-4451-a67b-59c43e1fcfa2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0c572f74-12df-4214-9998-6e5c32132a47"
        },
        "item": {
          "id": "053455ee-855e-41bc-8612-abc6d6304f3c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b930a19-8771-4db7-9222-9e1fca1b2415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c799b-ad87-4e9e-8ca3-dde2b5d5f750",
        "cursor": {
          "ref": "c2900953-81f0-4d70-97b2-2d92dd983528",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "24ff5703-78ee-4c03-adb0-1554d98d12e9"
        },
        "item": {
          "id": "4e7c799b-ad87-4e9e-8ca3-dde2b5d5f750",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61b1d845-95b4-4767-9b49-cd772a68e127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15107d-68db-40b1-afa6-ec2e11708805",
        "cursor": {
          "ref": "c712cf18-d5de-4d8e-b7ca-a596e3b90eed",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3eacf52e-62d5-4dad-9956-908a25f2dd28"
        },
        "item": {
          "id": "1e15107d-68db-40b1-afa6-ec2e11708805",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2fe6503b-637b-4373-8660-362ae4266098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03eafc0-3641-48fa-a9e7-8c710f668707",
        "cursor": {
          "ref": "f0f668e8-1ec0-4359-a3d6-36da8b57b156",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a46784c5-aad3-405b-a83d-34466e960956"
        },
        "item": {
          "id": "a03eafc0-3641-48fa-a9e7-8c710f668707",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "53017731-12fb-4e9a-8047-8bad1c4d3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3f2513-abd4-47af-981e-4c6f926a4400",
        "cursor": {
          "ref": "a7dda41a-26df-405a-91a5-8e86a440d3e7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "21019389-721d-4787-bc9a-2b7aa69cca9d"
        },
        "item": {
          "id": "af3f2513-abd4-47af-981e-4c6f926a4400",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a0ec2c20-89f9-4634-b69b-2791b63ab144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbbe76b-a3e2-45d0-9d04-acc417337891",
        "cursor": {
          "ref": "de71733a-85ad-4226-9e2f-d0fae6ea3a36",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b2b25f55-736c-4068-8d5b-c1ee07ec7835"
        },
        "item": {
          "id": "efbbe76b-a3e2-45d0-9d04-acc417337891",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "90994a68-9809-4087-94b2-96389cd5a147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab4ed3-c4f9-44d8-b138-6e7b4058f60c",
        "cursor": {
          "ref": "09186724-010f-4e04-bf81-ad16ff3307b5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "18e5d1a7-ca9a-46bb-97d6-61d0382c09bb"
        },
        "item": {
          "id": "c9ab4ed3-c4f9-44d8-b138-6e7b4058f60c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af11f4a8-e412-46b9-ae9e-a96a6ddff178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d8d44a-3e7f-4528-831f-49e001fadb8f",
        "cursor": {
          "ref": "d1dd71c2-acec-46a0-b778-801ee515ddc2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2f58d9e9-c8fd-4f49-bce0-56a4768977aa"
        },
        "item": {
          "id": "c0d8d44a-3e7f-4528-831f-49e001fadb8f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6cbdaad7-aa69-400c-b3c3-7f0b56e226df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6c3a9-190f-485e-9aad-73a65fdfa7d7",
        "cursor": {
          "ref": "49e734a1-d4c7-4e3a-b2de-e768dafe1149",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ab08abdd-9dbb-4258-acf1-2122fca614df"
        },
        "item": {
          "id": "40f6c3a9-190f-485e-9aad-73a65fdfa7d7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "028a4d54-05c2-4bf1-9a12-2f751a095343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70050f39-c0ff-4a16-849b-a6a8c9786eeb",
        "cursor": {
          "ref": "694006b7-fcf9-4c3a-906d-91c30c35a746",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f8d8252e-305c-475b-b8bb-e9fe379632a1"
        },
        "item": {
          "id": "70050f39-c0ff-4a16-849b-a6a8c9786eeb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a7f3fbd9-6276-4a0c-945a-aa57d187f15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31612f8e-575a-49cd-833a-8e0ebd32bb95",
        "cursor": {
          "ref": "37a2c764-c96f-4cf9-a305-c3cdd00e11c0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "77acdd3a-8c70-4cda-aed7-c75fbf952788"
        },
        "item": {
          "id": "31612f8e-575a-49cd-833a-8e0ebd32bb95",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "831d28ed-f032-4d77-8277-f44865b6deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a974a90-a730-41d2-a338-dca14dbc5952",
        "cursor": {
          "ref": "287afe67-ecd4-4b48-bcc1-27ca2c232baa",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f1dd6b11-ae3b-43da-9522-bfc023d74d47"
        },
        "item": {
          "id": "5a974a90-a730-41d2-a338-dca14dbc5952",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "069bb02a-18d1-4d45-b176-85dc75ef064c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c589f1fc-fa06-4905-987a-a9acf5d6a3cb",
        "cursor": {
          "ref": "a83c4330-56ac-4f29-ab24-e885e9e8594b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "58c26664-caaf-4ed5-9f10-85932e9c93aa"
        },
        "item": {
          "id": "c589f1fc-fa06-4905-987a-a9acf5d6a3cb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "008c1f43-f72a-456c-8d64-306540552106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf3a956-6e75-4b0a-b7b0-cdaa3f2d20bf",
        "cursor": {
          "ref": "ddc72978-580a-4108-9fd3-8bdbeac6aaee",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5890d44d-bf11-4cae-9041-440c9631e766"
        },
        "item": {
          "id": "3cf3a956-6e75-4b0a-b7b0-cdaa3f2d20bf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4c8fce63-612f-4b42-a603-bf63d5f11ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17419dfc-1b6e-4d27-92d4-ab0e8ac0c40c",
        "cursor": {
          "ref": "1c6a433c-b2bd-48d1-9682-2d74bc877dd7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1820eea-4f71-46c5-ac40-dfb09f12e845"
        },
        "item": {
          "id": "17419dfc-1b6e-4d27-92d4-ab0e8ac0c40c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3896d6e2-aea4-47b1-88c3-5b5d9ac81e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b03e60-60f9-4627-84e4-aa8fd0844039",
        "cursor": {
          "ref": "f88e08f3-8bf9-48b7-8b3d-950fb905ce25",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7c548537-6e25-495e-bf2c-04479f4c857a"
        },
        "item": {
          "id": "80b03e60-60f9-4627-84e4-aa8fd0844039",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b00fd7fb-4c8d-491b-85c0-bcc7d760630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be634e31-8371-421d-a392-6ed014cdd11f",
        "cursor": {
          "ref": "af5fb26c-8ede-49df-a0ab-124bf7f2d0ff",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d6f17970-bd2c-4860-a693-cf97f2e4577c"
        },
        "item": {
          "id": "be634e31-8371-421d-a392-6ed014cdd11f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e56816df-9305-4b4a-94ac-7717dae25009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0064d7-0052-44cc-b093-17571f61682b",
        "cursor": {
          "ref": "56d95e09-be01-4c14-84b2-003efe38ef37",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bd3be0cc-df16-48ac-b91a-49041fc272aa"
        },
        "item": {
          "id": "ed0064d7-0052-44cc-b093-17571f61682b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c06e900-6dff-4004-b02b-a6b2da7ff7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a5b34-ccd3-4b31-b52f-1f230cc511e2",
        "cursor": {
          "ref": "c728e3fd-0ed0-4988-8e01-f02962851dfb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f2296038-16ba-4696-8ecb-1e8a91a8ff48"
        },
        "item": {
          "id": "018a5b34-ccd3-4b31-b52f-1f230cc511e2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dc2b3408-061c-4f86-96c5-658c9ad1a687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32d63d7-a9cf-4af4-b8e3-be2afe93e440",
        "cursor": {
          "ref": "0f47a9db-56f7-4ad5-bf70-04bf8f8b775e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b3314a5d-af8c-4da2-8aed-b4b21d644e45"
        },
        "item": {
          "id": "c32d63d7-a9cf-4af4-b8e3-be2afe93e440",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "51b77e86-6eb4-4403-b88e-c2545137b0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a787ff-eba2-4cab-b376-d8d6b7a763a2",
        "cursor": {
          "ref": "9798f92f-4f42-4306-8a38-23ddd67b7153",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9d6f9cef-a809-4348-973d-d9d09203650d"
        },
        "item": {
          "id": "73a787ff-eba2-4cab-b376-d8d6b7a763a2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1937a5d6-f93a-47df-abbb-64ab9a48dfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7067311-c302-4452-bef9-e7435b35affe",
        "cursor": {
          "ref": "f9d2b253-3aa1-4081-894b-4d989c354f15",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5126a413-b3b5-4ef7-bc36-96c8a3cc0c03"
        },
        "item": {
          "id": "f7067311-c302-4452-bef9-e7435b35affe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f815dcba-ffef-4e34-af44-c50fe491d39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb99d8c-0b53-48ef-9839-cd4378a28b17",
        "cursor": {
          "ref": "880a17b3-bf08-4d2f-a16b-a2e03fa5034a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5df36e42-2971-4695-9208-c756391fa597"
        },
        "item": {
          "id": "beb99d8c-0b53-48ef-9839-cd4378a28b17",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac8f1b83-a187-47f7-89f6-6e601c953684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d82dd2-2e36-425b-9ab7-0c6ca3d23f15",
        "cursor": {
          "ref": "6f549ab8-9b66-4e50-9ca1-7d08da1279fc",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e6489e52-b91e-4bae-a8fd-e8aacd6dfd84"
        },
        "item": {
          "id": "53d82dd2-2e36-425b-9ab7-0c6ca3d23f15",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "51ee0ac4-1c6d-42fd-b853-ccf5e85f18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f6eb9d-42b9-4b41-85f0-72aa437ac64a",
        "cursor": {
          "ref": "409b4ad0-564c-42e5-858e-bc65472ceb5a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a391aeb7-95e6-4fe5-88ff-414d37ea0856"
        },
        "item": {
          "id": "f4f6eb9d-42b9-4b41-85f0-72aa437ac64a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "19d7c998-e056-4e7b-bdff-2e928d92e70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374d1ea3-1b06-4b7a-b5ba-93987591ce17",
        "cursor": {
          "ref": "56e212f1-fbc7-41ea-af17-cc52dd289e85",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c1b199b4-d918-4bb8-824d-80b8e29035bb"
        },
        "item": {
          "id": "374d1ea3-1b06-4b7a-b5ba-93987591ce17",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fa32b780-f945-42da-b45a-f1e3cdffd137",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464368f7-dfcc-4863-a78e-55f093d8d5f7",
        "cursor": {
          "ref": "022fa871-91df-40d1-afda-935987c9dcad",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "78ccdae6-220c-4ace-a982-2528009dca30"
        },
        "item": {
          "id": "464368f7-dfcc-4863-a78e-55f093d8d5f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fa91543b-f78b-4c6e-87c2-849f13553c72",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454892f-4560-4cd5-8801-7ad683176708",
        "cursor": {
          "ref": "be23c56b-8890-43d6-a083-1e68edc21a6f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b911ad9c-1e24-4c85-b848-8e78c934f909"
        },
        "item": {
          "id": "c454892f-4560-4cd5-8801-7ad683176708",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ff68f32-62f2-4aed-9b60-73642a545ea6",
          "status": "Created",
          "code": 201,
          "responseTime": 376,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "774b2500-46a1-4a1f-813e-6d46e2b6ad13",
        "cursor": {
          "ref": "e4a2c189-ba85-4a55-8a7c-e58be879cc7a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a2939241-5fe4-488a-8645-8f95f6895f97"
        },
        "item": {
          "id": "774b2500-46a1-4a1f-813e-6d46e2b6ad13",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "66e718aa-ca96-47e8-9ad4-94c3afa0232a",
          "status": "Created",
          "code": 201,
          "responseTime": 167,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c121e15a-b11e-4b8d-87bb-3e8519e855b4",
        "cursor": {
          "ref": "eae49188-a93d-4ca4-975a-761e3bd1e811",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "01dc4892-2c8e-462f-9faa-621932c84c91"
        },
        "item": {
          "id": "c121e15a-b11e-4b8d-87bb-3e8519e855b4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8ed93517-76ed-4929-9a01-b9b38ab2bfba",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e7fb7-77b5-48b3-8b46-2c95451dac1a",
        "cursor": {
          "ref": "e6530253-8e60-4e5e-a2a4-717dd5ae82e8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cff75845-d02f-41d3-b850-332817a41990"
        },
        "item": {
          "id": "389e7fb7-77b5-48b3-8b46-2c95451dac1a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ea832d35-2987-4ea7-8942-8ded97aa520c",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed19c4-243c-49db-9bd8-d01de7b37eaf",
        "cursor": {
          "ref": "645ecae1-003b-42e8-9929-2fde36f61208",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b251bf6b-b8ad-4921-a9d5-c63645edb5a8"
        },
        "item": {
          "id": "79ed19c4-243c-49db-9bd8-d01de7b37eaf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e092862-595b-4af0-b918-09e19f9d8aef",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662a22a1-2c1f-421c-b0ed-28a718f3dd46",
        "cursor": {
          "ref": "34f2725e-6544-4893-b807-013d70b64b3d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "faa85372-7708-40e3-b0d9-e550d19d87af"
        },
        "item": {
          "id": "662a22a1-2c1f-421c-b0ed-28a718f3dd46",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "437c1fe9-c890-4ed2-9ee4-8d56e2dcc3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4646b936-9ead-4ab9-9e96-770ac9d05325",
        "cursor": {
          "ref": "1de2bf05-c041-4129-b628-3ff4bf021e08",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "43b0ae0e-4b69-466d-8b53-88bd829893e6"
        },
        "item": {
          "id": "4646b936-9ead-4ab9-9e96-770ac9d05325",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97a987b3-ffb2-41fc-96a8-a00de8cc41ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02254a3c-6d7e-475e-a896-065bc1f4e24c",
        "cursor": {
          "ref": "87acdeac-b543-409c-a024-2fb93f636444",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "688aba45-834b-4e3d-badb-a9d5ca3b2fc2"
        },
        "item": {
          "id": "02254a3c-6d7e-475e-a896-065bc1f4e24c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6e47c7e1-ad0e-4e64-89dd-3b8ad815cba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b2a948-a9e2-416b-9c42-3a1a723ef161",
        "cursor": {
          "ref": "0f146dbc-b4c4-4375-a817-3529789b7bd2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "765616d1-7019-467f-9ea0-0d1f5822df1d"
        },
        "item": {
          "id": "67b2a948-a9e2-416b-9c42-3a1a723ef161",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0720a46-ce4e-4aaf-9215-b62a58025a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2953b47e-b796-4624-ad18-a6e0adf5d2f9",
        "cursor": {
          "ref": "d790feaf-f452-4b0c-b410-543bdf08edf6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "faee6160-88a4-4cd3-a268-99baf76767d7"
        },
        "item": {
          "id": "2953b47e-b796-4624-ad18-a6e0adf5d2f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc3925bb-f208-491d-8628-8153740bf3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e400094-fdce-4107-bb20-aeb717e02260",
        "cursor": {
          "ref": "da3120ee-ef75-47ff-8106-5bda953a9529",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ed07dba2-b89c-43b0-a632-bb681df73aba"
        },
        "item": {
          "id": "9e400094-fdce-4107-bb20-aeb717e02260",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "792b11b7-328c-49e1-b351-ad4531e01bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699652ef-82c1-4591-9ec7-c1e6fbb465a6",
        "cursor": {
          "ref": "08144b17-5578-44e3-b6dc-34d387d2ccf0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0be02b66-3b47-4c31-8858-dad71742e186"
        },
        "item": {
          "id": "699652ef-82c1-4591-9ec7-c1e6fbb465a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66614eba-f3c3-462d-8a7b-6d8355dbf13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d554645e-6410-4674-86f9-74b819b32322",
        "cursor": {
          "ref": "d2b58f51-a1a9-4395-9a75-ee952e789487",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4eeb6478-693b-46f6-a075-42855b7410c1"
        },
        "item": {
          "id": "d554645e-6410-4674-86f9-74b819b32322",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c77f4455-c358-457e-994c-7792990e8db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ba03e-b995-4d4a-8352-ff30d4d3100c",
        "cursor": {
          "ref": "d4cb38b1-757b-4d74-92a5-a9a3b52f9e8b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "630ba951-9368-4c8f-a6bf-93a15a74f964"
        },
        "item": {
          "id": "418ba03e-b995-4d4a-8352-ff30d4d3100c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e5719d07-c0a5-498b-bff6-ab33c3ff3f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973491d-0474-4f46-957d-4fc20f392294",
        "cursor": {
          "ref": "24c85a06-7c8e-4429-b935-8e9511e16f8f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b1b343df-bcd7-4729-ab36-9d0e4383785c"
        },
        "item": {
          "id": "5973491d-0474-4f46-957d-4fc20f392294",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6c1390f-a754-4790-b892-7123081c0ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecd4122-260c-407d-8b30-b21d7e8bb655",
        "cursor": {
          "ref": "dc3b8bdc-1f60-4cf5-85c1-60ee8e07806a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "efd716e9-eae3-4236-bf34-8127cd44bf0e"
        },
        "item": {
          "id": "6ecd4122-260c-407d-8b30-b21d7e8bb655",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c482b74-48d2-4f04-9002-f27ff608ee85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81080f1-8fb7-4109-b8a5-25669127a5b8",
        "cursor": {
          "ref": "0feecce0-e365-4546-9d24-d014618c64c7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "16e4065b-3453-47e5-a1fc-e57fe3cd466d"
        },
        "item": {
          "id": "a81080f1-8fb7-4109-b8a5-25669127a5b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7cf68ff-98a6-4f66-83e3-db4c0c99ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e275e7-255e-4349-83d4-aa367e1d52e6",
        "cursor": {
          "ref": "d2c89a95-7442-4758-8a1c-cd0cacef842e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "03d191be-452e-41d5-810f-01ebe08b56cc"
        },
        "item": {
          "id": "73e275e7-255e-4349-83d4-aa367e1d52e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b30f12b4-634b-4ab1-943f-1c13de8b846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c35e38-1e63-4e0c-ab78-82955818f584",
        "cursor": {
          "ref": "ab821c1d-ad89-462f-a3cb-b57b6f36451f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3899d5e6-f1e9-41ac-9a4a-e76b7832f123"
        },
        "item": {
          "id": "09c35e38-1e63-4e0c-ab78-82955818f584",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "245f5a30-cff4-4bb8-bb6f-06536899722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85e9d7b-c1b1-44b8-a268-73f1e5658b47",
        "cursor": {
          "ref": "32368033-f471-4ba9-b920-450879add338",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "628a7082-5b3f-4ec8-9279-f5805bf12a87"
        },
        "item": {
          "id": "b85e9d7b-c1b1-44b8-a268-73f1e5658b47",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6e0878dc-f152-4f60-a6f0-1d2a18401be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c363265e-3fb5-43f8-8786-2343febdd3d9",
        "cursor": {
          "ref": "86acdfd0-b237-4007-b1eb-2b61b56b0df9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3cbb0115-ad80-4475-950f-70025f499e84"
        },
        "item": {
          "id": "c363265e-3fb5-43f8-8786-2343febdd3d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17013422-54c0-41e6-8e99-75a01d137346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0fc3af-48e7-4948-bd6f-58075eaf3b3b",
        "cursor": {
          "ref": "89ae7409-c79a-4eb2-a18b-c188bf704e0c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "93cb6aab-f7e9-47a1-b70b-dd61ceef68a9"
        },
        "item": {
          "id": "7a0fc3af-48e7-4948-bd6f-58075eaf3b3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5124d181-6a59-45b8-8a5b-04e5afa6cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59529018-09ce-48ef-8e6e-076cbe7458cd",
        "cursor": {
          "ref": "095698d3-6ffe-4883-974d-fecd7613e316",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "746428b5-aba5-4513-97d2-68801450cba9"
        },
        "item": {
          "id": "59529018-09ce-48ef-8e6e-076cbe7458cd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "60b862e5-18e9-4896-98ba-2b952e25489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4111db1-de87-44b9-9981-c7e941fd719d",
        "cursor": {
          "ref": "4b6f1e87-d7cb-4fa4-82bd-8052ba344f4e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b0279034-8c8f-4db6-977b-060bf0516c68"
        },
        "item": {
          "id": "b4111db1-de87-44b9-9981-c7e941fd719d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e107366a-aa18-4b88-b5fe-0a440c6a9925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4fa8b8-1166-4f92-85de-2f71f03f7f12",
        "cursor": {
          "ref": "be1ae892-4509-4d62-86c9-1a71f3e5abe7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0bb1d80c-0798-4072-9e9d-1b1fb732f5b2"
        },
        "item": {
          "id": "eb4fa8b8-1166-4f92-85de-2f71f03f7f12",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35b7fc89-b0ee-42f7-9812-faeacc5a12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e0faf2-2035-4689-8971-fd884defcaa5",
        "cursor": {
          "ref": "daca8440-8701-4c76-ba8f-7026aca9e5a7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fed2e9f3-5acd-4a03-b10d-f105567e2135"
        },
        "item": {
          "id": "25e0faf2-2035-4689-8971-fd884defcaa5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7f7df9c-3678-4d9b-b5ef-8909ef95cc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4e089d-38e7-4c9f-a152-5b906e87fa25",
        "cursor": {
          "ref": "4873f9b5-4c92-4906-8586-74be190bb1a5",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2b397165-8a00-4774-ae0a-a2d040e43b15"
        },
        "item": {
          "id": "3c4e089d-38e7-4c9f-a152-5b906e87fa25",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c7540e39-fe4e-45d7-9ee8-9ece26feac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef02704-2490-4b0c-8038-a168a417b71c",
        "cursor": {
          "ref": "9be82171-ef42-4aa9-b4e6-be47139547fb",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7ecb417-36d2-483d-ad10-6c6542399157"
        },
        "item": {
          "id": "7ef02704-2490-4b0c-8038-a168a417b71c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6c3fb53f-ed9a-40cc-bd2e-9a578fc50fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33553aef-e4a4-4c30-934c-22b84a800fea",
        "cursor": {
          "ref": "cfca5afe-908e-42db-9efc-a2bef1c5da8c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03895e22-6fe9-4275-8459-c074b0332dc3"
        },
        "item": {
          "id": "33553aef-e4a4-4c30-934c-22b84a800fea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e407b57-ef5f-4f62-80b2-56a090984d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d152ad5-1eb0-4a44-9c85-9df367066324",
        "cursor": {
          "ref": "89f3f35b-ee3b-420e-9fcb-bd3eb947cb75",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c38fa4b0-3e9b-4274-8401-2c38add4fff5"
        },
        "item": {
          "id": "0d152ad5-1eb0-4a44-9c85-9df367066324",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9db691f2-a3d4-48f3-8a7e-4545ddf890f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5013390e-4de7-4271-8d77-5b37fbe4fe55",
        "cursor": {
          "ref": "74dc15a6-2e84-4a1b-bed2-8e3deb5307e1",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76ce9b5b-5401-4dd4-af10-97011c194dad"
        },
        "item": {
          "id": "5013390e-4de7-4271-8d77-5b37fbe4fe55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9d18a3f1-7a65-4692-8a79-777bfd2b7f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ceb3d1-e34a-4e00-8187-963be12492a6",
        "cursor": {
          "ref": "f506246f-cd96-4df1-9009-0021d6574a0b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ea0f6e20-c4a2-47c2-b133-76bb66e8a717"
        },
        "item": {
          "id": "29ceb3d1-e34a-4e00-8187-963be12492a6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "408a42bb-2e51-4307-98fe-81042cb84d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739c7f5d-bdf3-4c27-80bb-ed16c313f7c9",
        "cursor": {
          "ref": "5ebcfa70-d536-440b-bd68-ffd6f0f45b0d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "99642c64-6339-45a2-a5c9-4a3022b10f7e"
        },
        "item": {
          "id": "739c7f5d-bdf3-4c27-80bb-ed16c313f7c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1c4c3af-a5b9-4b7f-8f6e-30b603af8397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12401e3-8b0c-488e-9aa1-c1d0c136b680",
        "cursor": {
          "ref": "78a207a3-4716-4410-8812-b8ab2a5e2179",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b0b82de-b740-411d-8ed9-d504e0d6b946"
        },
        "item": {
          "id": "e12401e3-8b0c-488e-9aa1-c1d0c136b680",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12370998-a6d3-4622-8b4b-8a9d33400a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa98d29-6805-482f-9486-9e398e4365f7",
        "cursor": {
          "ref": "ae5e27bf-e8c5-4e62-9922-46cbadb1dcab",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "26a875c4-fce1-4416-828b-36f51789aed3"
        },
        "item": {
          "id": "8aa98d29-6805-482f-9486-9e398e4365f7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0f021fc-63a8-46d3-9b0e-435ff2daff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9365ac35-25a8-47aa-9143-00dbf4977eb4",
        "cursor": {
          "ref": "0a4121cc-ed79-4bee-a165-ef75ab23c868",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4c2c155f-03da-40f6-824b-95802565d203"
        },
        "item": {
          "id": "9365ac35-25a8-47aa-9143-00dbf4977eb4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f1cc3c92-62c1-4466-99f3-7ae9abffb34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41672064-35be-4d09-bbd5-3c7ea341a07c",
        "cursor": {
          "ref": "9db44477-349b-4a32-ac81-04afd8a31314",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "189f4469-2072-46ec-84f1-2d691146f511"
        },
        "item": {
          "id": "41672064-35be-4d09-bbd5-3c7ea341a07c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "68dab418-870e-456d-a58f-2a10491550b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6518dd36-bac3-4b17-b921-4b51dc23a84e",
        "cursor": {
          "ref": "750cf03f-c1f3-49b5-89e8-a5072fc2ac6e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4a4b435b-1b81-4729-9ed7-d0abeedab587"
        },
        "item": {
          "id": "6518dd36-bac3-4b17-b921-4b51dc23a84e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a45055e3-2fb8-48cc-a933-666cedca08a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e90f752-acd4-4f6b-8c0f-8f17a030beb4",
        "cursor": {
          "ref": "6eef3d0f-2f46-41f6-9546-ca8596f9d25b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b2885482-d039-4c2d-8787-a493f82dc474"
        },
        "item": {
          "id": "0e90f752-acd4-4f6b-8c0f-8f17a030beb4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec451a7a-fbb2-49d7-bf06-592c7e44c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf55783-d892-4379-bb0d-8a235d5f34a9",
        "cursor": {
          "ref": "ca4c02b6-8e7b-4a8e-bbdb-200ed0623ca1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8d66bf31-d197-4e9f-93dd-e80bef729f69"
        },
        "item": {
          "id": "acf55783-d892-4379-bb0d-8a235d5f34a9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb70492f-4f7e-4fed-bc28-bacde1184a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196eacdd-fae7-4eb9-87d0-212d2316e557",
        "cursor": {
          "ref": "e0e7c10c-de60-47bd-806b-e48423e30d61",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c37ecea2-53bc-41c9-87c9-d970a8975a55"
        },
        "item": {
          "id": "196eacdd-fae7-4eb9-87d0-212d2316e557",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce8a9182-e260-4a08-b216-7da2a9655815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0257ce7-29d1-40a9-939b-5a7f6a471f50",
        "cursor": {
          "ref": "35d39f32-1a52-42a4-96e5-212963425e60",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "858e504a-ba54-403a-8bdb-59d0a2e764b9"
        },
        "item": {
          "id": "a0257ce7-29d1-40a9-939b-5a7f6a471f50",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6de0335c-5ee4-4829-8443-9f22fbceb9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4261abb-eeab-4630-bb3f-79e39c0c8e8e",
        "cursor": {
          "ref": "07dba8aa-ae3b-4fd7-8484-fa0b5da7878e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b9d5044b-5659-4584-8f6f-d7a51d689116"
        },
        "item": {
          "id": "c4261abb-eeab-4630-bb3f-79e39c0c8e8e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d9c046c7-7353-43ae-ac41-57e679731c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03385fd-a799-41df-8f42-305a68f06d0b",
        "cursor": {
          "ref": "94cb832e-b589-47b8-852d-d97c5c7dae89",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d6a03a5f-f36a-4668-99b6-f715c1fb24ab"
        },
        "item": {
          "id": "d03385fd-a799-41df-8f42-305a68f06d0b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b51715b1-b51f-457d-b426-eeecae88ff2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85edfc55-2368-414f-8b47-2766d22851b9",
        "cursor": {
          "ref": "b875e199-22a6-435b-8237-42835c5c54ee",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aee14112-ef41-498d-b9cd-b084f46cbcb6"
        },
        "item": {
          "id": "85edfc55-2368-414f-8b47-2766d22851b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2e52d33-f830-4457-b093-ddef56cbb348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c112e1de-0375-471c-a668-e0a9eb04cfa2",
        "cursor": {
          "ref": "8cf43041-d324-4291-9d77-42f6c46423d6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "812a91c3-f03a-4678-8757-be21ed99af22"
        },
        "item": {
          "id": "c112e1de-0375-471c-a668-e0a9eb04cfa2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "300fb9d3-16a0-4818-8c1c-1d28a7d4c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddefde7e-899d-49fa-8c0e-2838f89ea1ad",
        "cursor": {
          "ref": "339c5be5-4c56-4d13-9781-961e7a2d8f3e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0d16ccd5-fcd8-42df-a27c-4c271393fc10"
        },
        "item": {
          "id": "ddefde7e-899d-49fa-8c0e-2838f89ea1ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "99337654-6dbd-4b58-a926-387a6d13636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693a26ff-ab39-4278-9dba-a212ac7a6ee9",
        "cursor": {
          "ref": "b275ec32-ccb2-497f-ba2f-06d718e829eb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7d7d0d68-6ad9-444b-b127-6cf0f48d7a39"
        },
        "item": {
          "id": "693a26ff-ab39-4278-9dba-a212ac7a6ee9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5a7e974-c3d4-4b8b-9df0-2b205d213316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ab3fd-c879-456f-bd86-9fe1a5b6d7db",
        "cursor": {
          "ref": "c119af00-2e26-49ad-bab8-6d6f8ae5cd31",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83757afa-f3dc-4e3e-9c24-f70adf12b512"
        },
        "item": {
          "id": "b88ab3fd-c879-456f-bd86-9fe1a5b6d7db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ba61b227-b31c-46de-bd86-7cde3fabef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b2235-3c58-4fed-ad6d-1d3cee538ae0",
        "cursor": {
          "ref": "ab83e0e1-d43b-42fc-9631-3ac40a2e7f59",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b65ea086-0092-40a7-a046-1af2ac4a3eaf"
        },
        "item": {
          "id": "053b2235-3c58-4fed-ad6d-1d3cee538ae0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9f4a3931-8608-4891-b17b-badab048f5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921970d2-c44a-4d80-a371-23a95e54c179",
        "cursor": {
          "ref": "41d2ca86-3d31-4868-9645-95a5cc6bbbf0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d846f4d-073e-48fa-a4f9-e6ce7231af4a"
        },
        "item": {
          "id": "921970d2-c44a-4d80-a371-23a95e54c179",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "53c61227-fa64-4997-a840-a251fc42ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bca157-47dd-45bc-9708-ca8273858604",
        "cursor": {
          "ref": "685c9b74-0ba0-4bce-95cf-3c12c5eb807c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6e0347eb-3ade-4278-8956-4aa145fceeb7"
        },
        "item": {
          "id": "94bca157-47dd-45bc-9708-ca8273858604",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a35c07de-850b-4847-b979-5c4580bc2dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e05b57-05f9-4ccb-bd58-237a1552dd09",
        "cursor": {
          "ref": "efd828da-05bd-49a7-8d06-e85914efa635",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dac3a6e8-468f-4a16-b34f-ccbc99d66119"
        },
        "item": {
          "id": "b2e05b57-05f9-4ccb-bd58-237a1552dd09",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ad928618-bfef-4b58-a709-65478cc7f255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb27039-16ba-4cce-a231-1f47acffce12",
        "cursor": {
          "ref": "f3ee20dc-de7b-497f-85f7-3d6f9534ced8",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fa28b3f9-dc4c-431a-a7e1-52d14086806f"
        },
        "item": {
          "id": "2cb27039-16ba-4cce-a231-1f47acffce12",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99e8d60e-c938-4020-94a6-a34c8c82cfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9ca81-6975-4124-9a65-62a09b88265e",
        "cursor": {
          "ref": "7a98a35d-614b-4972-8ccf-3756abdff65c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "84c0362c-c5e3-48b3-a7cd-38ce41b88fb2"
        },
        "item": {
          "id": "4be9ca81-6975-4124-9a65-62a09b88265e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9fb6efd5-020e-4999-827e-35e65a7c4624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4b8f74-b735-4f77-b65c-4848a4dc4e4c",
        "cursor": {
          "ref": "b83a48de-5f4c-4651-8abc-1e0dae97b32c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0397ed42-81a0-4ec9-a442-b78c40d13256"
        },
        "item": {
          "id": "df4b8f74-b735-4f77-b65c-4848a4dc4e4c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "09254026-d63a-4c63-8470-3800b7df8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16844e4-de7b-404e-bb43-7711fbb0289f",
        "cursor": {
          "ref": "2edde2ee-5b4a-4c42-a93c-aa8f4912bc29",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c463e6a1-d5a2-401e-a734-177d42670d66"
        },
        "item": {
          "id": "f16844e4-de7b-404e-bb43-7711fbb0289f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f2aeca1-9487-4ab3-873c-b10d94060429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a46e90b-4901-4ab4-a000-650bce0cea8a",
        "cursor": {
          "ref": "c4639fdc-b73b-4275-948d-504c8cfc544c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8953beb2-a9d5-4cda-80f3-90832cffbb1a"
        },
        "item": {
          "id": "5a46e90b-4901-4ab4-a000-650bce0cea8a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2ace65e-fb5f-40f9-b224-e32f15830f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dc6b08-a3f5-49ea-a1a6-0dbcd77c8591",
        "cursor": {
          "ref": "d67fb54a-fcb1-44d8-b8f0-101c8cd620cb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "499c2bbf-a9dc-4723-b2a6-ebb3ef105b39"
        },
        "item": {
          "id": "98dc6b08-a3f5-49ea-a1a6-0dbcd77c8591",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "13939abc-ea40-4a15-a7fc-b0f9a0adf541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f8b3b-9be2-40b8-9264-ed01c1358de8",
        "cursor": {
          "ref": "cd95fbd9-e43c-41b7-aad5-a9863d8052b1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "992d9161-a0bb-4c03-81e5-1acee69c2c3f"
        },
        "item": {
          "id": "d44f8b3b-9be2-40b8-9264-ed01c1358de8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f564842a-3cf2-476e-b953-e17258d274f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded056d-7c93-42f6-a220-5fafd0580347",
        "cursor": {
          "ref": "37ab7160-7ef3-4f81-8e37-f0b29b9d70c8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14efa291-5f5d-4696-99aa-59e71720d2d2"
        },
        "item": {
          "id": "8ded056d-7c93-42f6-a220-5fafd0580347",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b049e6ce-c291-44d3-bf60-aed3db7cbed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16961ad1-c3f0-4eb6-ab03-2cb3afb82279",
        "cursor": {
          "ref": "ae206697-6e73-469d-9aae-ca8e096c76cb",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a022b764-c214-45c2-96d5-52b6f73ff399"
        },
        "item": {
          "id": "16961ad1-c3f0-4eb6-ab03-2cb3afb82279",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7b99711-41e7-49b7-8820-5427dd99a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32518341-1722-41b8-b724-5601e628a974",
        "cursor": {
          "ref": "4b2c3a11-dadf-4609-beff-0f0cfc7be466",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7e1d7122-92e8-49f1-a096-cd5a236327d5"
        },
        "item": {
          "id": "32518341-1722-41b8-b724-5601e628a974",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8f01823a-12ed-43d2-ad57-bffbc13e7790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f8c86-75b4-463a-8448-a1930a018069",
        "cursor": {
          "ref": "44128dbe-6eca-4e45-992d-c3e314b60531",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e0d47979-7fa2-48d9-a778-9ef9517f54d1"
        },
        "item": {
          "id": "7e5f8c86-75b4-463a-8448-a1930a018069",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9d1ff200-e669-418d-a6ae-d04dba963486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8af3c9-63e7-4c37-83d5-a859aff97add",
        "cursor": {
          "ref": "ffb24ccc-6d3b-4969-9e34-29bf6eb86ead",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ca122891-960a-4055-87a3-2d0b045f5473"
        },
        "item": {
          "id": "ee8af3c9-63e7-4c37-83d5-a859aff97add",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83f7bd84-4341-43fb-8faa-207f2647278b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f43df-7462-412a-9eae-cfc9372a4979",
        "cursor": {
          "ref": "a7c6532a-8e45-4abb-b78a-83b590c6dc13",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "130ed9c3-4fe0-483a-8e69-12395b40a346"
        },
        "item": {
          "id": "d10f43df-7462-412a-9eae-cfc9372a4979",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7b78ac70-e278-4084-8061-e58870482fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31481d36-c83c-4db6-8e27-8fde224d6a15",
        "cursor": {
          "ref": "01fa2cb0-aed1-4611-9d88-186c49ff2da8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c20cb107-be12-43cd-a833-751940ab82c9"
        },
        "item": {
          "id": "31481d36-c83c-4db6-8e27-8fde224d6a15",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4c6df8f-878a-4a93-9fba-eafc291ccada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b7d08-99a8-4a97-8507-46d470979d2c",
        "cursor": {
          "ref": "ba409558-ae10-4ca6-ad4a-bc01d6806977",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c20b74a9-b6e4-4791-a889-856c81b2ce40"
        },
        "item": {
          "id": "9a5b7d08-99a8-4a97-8507-46d470979d2c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad00555a-f904-4fa3-8c40-b06a5f0cc79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ff2c5a-de61-4a04-8844-89f44fe9fdd7",
        "cursor": {
          "ref": "04e445d4-1572-40f9-bb69-dfb1a2c0a016",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d22c51e-31dc-4218-bc31-6a93512224f4"
        },
        "item": {
          "id": "c0ff2c5a-de61-4a04-8844-89f44fe9fdd7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e7ebec5-ea21-4579-a125-6f44c5fb2339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c366f48-a32c-4b27-9043-6fec86b16a0c",
        "cursor": {
          "ref": "06b0afe6-ce52-4386-a665-8a4a5facc9ba",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "19e004f2-1d9e-4cd4-afb0-81afbe12ebc6"
        },
        "item": {
          "id": "1c366f48-a32c-4b27-9043-6fec86b16a0c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3dccab88-efae-4a5c-8f3e-1f5fc5fd7463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13708517-afbc-4a6b-90a1-081944d13fe3",
        "cursor": {
          "ref": "2bcc3a18-c67e-4dcb-af36-d886a5ca0d7a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2557b8af-5c11-4e5d-a665-459c86d58a1b"
        },
        "item": {
          "id": "13708517-afbc-4a6b-90a1-081944d13fe3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f545b563-448d-4364-b20f-5e7a745156f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a33c89-658f-4c59-8614-138ed9cfcb61",
        "cursor": {
          "ref": "e81fd47b-a8f9-4adf-bbfa-7cd9987d74b6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4b353388-1e35-45d1-a633-7d6b88cc5373"
        },
        "item": {
          "id": "77a33c89-658f-4c59-8614-138ed9cfcb61",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ebaf42b7-bb69-4ce4-8338-0ffbbdb8d169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021e0a6-8d76-471a-bbcc-386858e0d978",
        "cursor": {
          "ref": "8ac4b783-adcf-4788-b353-c1377e12c92f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4e938c2c-9acc-499d-a930-1bc95b6bd53a"
        },
        "item": {
          "id": "1021e0a6-8d76-471a-bbcc-386858e0d978",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2249af85-b2e3-4a37-a13b-0a200525e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ac56e2-d57c-4d9c-903b-0404213294a9",
        "cursor": {
          "ref": "489b7a54-5ab3-488e-8313-e9658601804f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5b4192e8-02e9-4df6-9554-a09c3455dea7"
        },
        "item": {
          "id": "54ac56e2-d57c-4d9c-903b-0404213294a9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "20fddaf5-92b2-478c-980d-02891cccf3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e31ed54-003a-46a7-a8f4-571c9f2bcc52",
        "cursor": {
          "ref": "ffc8899e-36d7-430c-aee4-45fb13ad472f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "056233e0-07f3-4342-9988-a78e7ca1e427"
        },
        "item": {
          "id": "7e31ed54-003a-46a7-a8f4-571c9f2bcc52",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f5a7607-a609-4e04-adf3-53697b6aef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343b01d5-4dca-46e8-80d5-d5359e819a8b",
        "cursor": {
          "ref": "f1c53e29-39c7-466a-973d-c0eb4c308edc",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b4e9f05b-2ff5-49ee-8e23-aff19450dfef"
        },
        "item": {
          "id": "343b01d5-4dca-46e8-80d5-d5359e819a8b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8a6c291-a2d3-4ed9-a0ed-156f7cfda30a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae274a18-eec0-4089-8d34-d3a4e5c2f814",
        "cursor": {
          "ref": "0854f557-7607-490a-906e-81ad44a017eb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "157ca711-34b3-485e-aaaa-04a3e2f9b55c"
        },
        "item": {
          "id": "ae274a18-eec0-4089-8d34-d3a4e5c2f814",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9bdeecdb-336a-4522-bf7f-f8f1a112ce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26c532e-14f2-40e8-bd06-8e7bb141c4aa",
        "cursor": {
          "ref": "3e81ee84-5e62-4f74-8c18-9eb7fc3df4d7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1173663b-d620-46ec-8b9d-ea4a99161330"
        },
        "item": {
          "id": "d26c532e-14f2-40e8-bd06-8e7bb141c4aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d6e3836e-74c2-4050-ab5f-1ff70347d746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779cb405-05fd-4808-9751-440aa6de4028",
        "cursor": {
          "ref": "8ddb423f-1354-45d5-a783-23d726ae548f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6d62dffb-a034-4a8d-bdd3-cfd79943a585"
        },
        "item": {
          "id": "779cb405-05fd-4808-9751-440aa6de4028",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07b4d9f5-5c7c-4e7e-8f6c-ea5c56f879b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bfb322-b6f5-4bb0-9002-c78b8595c9d7",
        "cursor": {
          "ref": "52c08011-94c4-4500-bccd-448716c2691d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69aba260-ec32-4193-96d8-901af9e31c72"
        },
        "item": {
          "id": "d1bfb322-b6f5-4bb0-9002-c78b8595c9d7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc1efa88-c6db-4482-a7d0-ef8232cd4732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefecea7-7344-488c-8465-495936acd80d",
        "cursor": {
          "ref": "69237a69-393f-42b9-8032-e4d1390b5139",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "05ec9e5c-cf5a-462b-8313-7f0c729a7de1"
        },
        "item": {
          "id": "fefecea7-7344-488c-8465-495936acd80d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4f3a1767-0225-4027-a15d-2c2320fb22b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7888dfb-dc59-4d31-a74c-4f3f121ce0c7",
        "cursor": {
          "ref": "adbe187e-3382-46a3-a005-785e10c00ccb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "33901074-dd1d-42e0-afde-5dec91f69fac"
        },
        "item": {
          "id": "e7888dfb-dc59-4d31-a74c-4f3f121ce0c7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "24f468e4-6650-4dfc-9ce9-bc0246057a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c551b54-a14f-4077-8f7b-b9a365db3691",
        "cursor": {
          "ref": "06ca004c-dbdf-44c6-b45b-e87c0e2f9708",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "128ea2a7-c7f1-499a-989e-1c4654e54550"
        },
        "item": {
          "id": "0c551b54-a14f-4077-8f7b-b9a365db3691",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c244338f-df97-4f29-ad41-cd9bdad29e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a2f6fc-bfba-4b1d-9d71-b6fcfbc32591",
        "cursor": {
          "ref": "b999c07d-84a0-4c92-afd4-fd23f0923696",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c7773bd4-f49a-43bb-9c18-ea23e4ab4f67"
        },
        "item": {
          "id": "67a2f6fc-bfba-4b1d-9d71-b6fcfbc32591",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6d279eb-14c4-4148-9f5a-600a087dda67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b09102-80f8-4da5-b193-ad2311af8189",
        "cursor": {
          "ref": "b3063d60-5b66-4a7f-9ba2-b1635b6a1a21",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "62987037-629f-4f5a-9d89-4bc36a03e6d5"
        },
        "item": {
          "id": "91b09102-80f8-4da5-b193-ad2311af8189",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "060572be-bafa-4dd2-bd88-affe2337d5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b8ece0-50b2-4c4c-b4a8-cfee4e89c7a1",
        "cursor": {
          "ref": "cad6ddcb-1cc6-4207-8cdd-533f3d31adf3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c97c1699-2791-44cc-80c9-ad7ab8f12408"
        },
        "item": {
          "id": "16b8ece0-50b2-4c4c-b4a8-cfee4e89c7a1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5295769d-bb86-4902-84ef-adf287fddc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e3d9d2-1968-40ed-8a03-961b245f39b0",
        "cursor": {
          "ref": "7d6c9bdf-377e-42e4-a6e8-3460a7fe3f6f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a9502418-f325-49f5-b8ef-1627c4b695f6"
        },
        "item": {
          "id": "10e3d9d2-1968-40ed-8a03-961b245f39b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4407bc4a-a2f9-48e9-ba3a-32f22d8af154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a412889-683d-4f5c-bcd6-60a1595fc7f9",
        "cursor": {
          "ref": "cba23a99-7e99-47f7-ac3f-586778bcd55d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63e1cfd1-abe5-4ce5-a556-bbd6b233ff32"
        },
        "item": {
          "id": "8a412889-683d-4f5c-bcd6-60a1595fc7f9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d9f638a9-19c9-478c-af5a-9195d87f52b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c680f-951d-43c9-af7a-0edca0177c7d",
        "cursor": {
          "ref": "b5509f21-2469-4f26-b434-829322a1e705",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7bd7c7d4-510e-48be-88cf-3aaa21711fac"
        },
        "item": {
          "id": "dd5c680f-951d-43c9-af7a-0edca0177c7d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "94914ee6-24ca-4266-b902-816bf078e6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff1c989-5289-4a44-9070-8d0777c98a75",
        "cursor": {
          "ref": "96e89763-7e94-4c28-938b-3200f0e226ef",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3a9702b0-a4d1-4dd3-9737-d0e7f883f065"
        },
        "item": {
          "id": "9ff1c989-5289-4a44-9070-8d0777c98a75",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e54ed664-48d9-48db-b7d1-baf3ec4ebb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7f8cbd-563a-43b3-95dc-8391e18cd8be",
        "cursor": {
          "ref": "6f43b101-198a-48a2-9698-c610af8ef166",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f80b3970-05ee-457a-a94e-fe79b3dbc4ef"
        },
        "item": {
          "id": "bc7f8cbd-563a-43b3-95dc-8391e18cd8be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "835692ed-700f-4227-bc6a-8428fcd5119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f65270a-b6bb-4f86-abee-09254241b350",
        "cursor": {
          "ref": "a65e334c-e6e6-4d45-b383-9ad95cc0db7a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e48454a9-d027-438b-8cfc-3cef7d68bb02"
        },
        "item": {
          "id": "6f65270a-b6bb-4f86-abee-09254241b350",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a98a395f-0d3c-4b0f-9ef8-eb86992b6ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21499039-40b7-4cf4-9e23-b714084df855",
        "cursor": {
          "ref": "424ee7bb-e4b1-40d4-b79e-9494908e1d79",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "865335f1-d723-466e-a1ef-3d8374deba9c"
        },
        "item": {
          "id": "21499039-40b7-4cf4-9e23-b714084df855",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a6e4d95f-cc70-4cd5-bf4d-0f818546c351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49acc17-8bc3-4814-ae03-6cc008eab69a",
        "cursor": {
          "ref": "1e723ddf-e584-4be0-8f08-95e23cda926c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "796e3e55-c673-4b9f-abfb-ae184a611a21"
        },
        "item": {
          "id": "c49acc17-8bc3-4814-ae03-6cc008eab69a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "506f1109-9035-454f-9bcf-8fdeacb9f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68a9af0-8e1a-463b-a3b9-75459ee103e1",
        "cursor": {
          "ref": "5457ab67-6a55-43a8-a071-01e916b420af",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8e760ec6-689c-4420-a61a-483df17f93d4"
        },
        "item": {
          "id": "c68a9af0-8e1a-463b-a3b9-75459ee103e1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "62953ec7-bf5a-448c-a4c5-8c480460400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22ccf91-59e6-4212-be77-6c8313151a25",
        "cursor": {
          "ref": "e350eaf2-8505-47d1-80c5-db3a81fcfb3c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "13f8a141-9c34-4eb5-8aca-6a042183377a"
        },
        "item": {
          "id": "c22ccf91-59e6-4212-be77-6c8313151a25",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0ebb6795-2182-4a0a-ba0c-c6168ff947a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeb5f3f-5cbd-44f2-803d-2c270e18efbc",
        "cursor": {
          "ref": "2088059c-561b-4c29-9c8b-5defba3b9afb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0d4fefc2-00e3-4a95-b2a7-0ad6b1ac8191"
        },
        "item": {
          "id": "ceeb5f3f-5cbd-44f2-803d-2c270e18efbc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1623df75-fa08-4133-8a57-0ad52026fa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f546fb52-125e-4e64-95e7-1972b8fe3c5b",
        "cursor": {
          "ref": "621121a9-44ba-44f6-8d92-644f2dc9e4f6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "602042df-3e68-4842-991e-c18910515e00"
        },
        "item": {
          "id": "f546fb52-125e-4e64-95e7-1972b8fe3c5b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5e6a1a12-9e3d-4fb6-83e1-426d5d676f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dee9378-6b13-43a7-8a2e-2cfb54abedeb",
        "cursor": {
          "ref": "6b16c452-db6a-4874-a1fb-6236d214322f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "46b49db8-6c6c-4ad5-b309-0246103ebecc"
        },
        "item": {
          "id": "4dee9378-6b13-43a7-8a2e-2cfb54abedeb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "187b0329-8149-4efe-8bc2-7a441514f384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ed4dd8-5cea-4982-8522-a08066609f7a",
        "cursor": {
          "ref": "5730b346-3742-4b91-9768-5bb83edc84ef",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a4788b6d-ebe3-47e4-8cea-2ab15a79aaa0"
        },
        "item": {
          "id": "48ed4dd8-5cea-4982-8522-a08066609f7a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e683a7a-e19c-4b4b-9789-e4e3ee460dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfa038b-1d1a-4537-959c-1fd9b23e341f",
        "cursor": {
          "ref": "b3143b58-8bc0-48f7-8c6d-5c309e522691",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cab87fae-626b-41e3-98c6-70b468ca24c2"
        },
        "item": {
          "id": "fdfa038b-1d1a-4537-959c-1fd9b23e341f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "59ce123f-16f1-40d9-bc64-0c0ca7068347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474e2a52-be58-4c96-b6e9-b623cca98b9e",
        "cursor": {
          "ref": "195f761e-d992-4df8-b924-097666133b75",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f0b67a2b-f968-41fb-ab10-e930edcbecb3"
        },
        "item": {
          "id": "474e2a52-be58-4c96-b6e9-b623cca98b9e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4abd1f11-9483-417d-a25d-b3ec7dc9e1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a657cca3-1225-4180-9eb9-33a873ca1be3",
        "cursor": {
          "ref": "13debf88-c71c-4072-acac-69dcbe4b3986",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c47c3151-2a72-4f3b-b033-0269886a0fea"
        },
        "item": {
          "id": "a657cca3-1225-4180-9eb9-33a873ca1be3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d84a123b-22ac-42b4-ae96-27953b9db178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26566225-4388-43b7-a9e8-0c03ae7fafb4",
        "cursor": {
          "ref": "9b06f6f1-da36-4dc7-8161-be01dab114d6",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "11fdaa99-f13e-4def-999d-44e94c6cc72c"
        },
        "item": {
          "id": "26566225-4388-43b7-a9e8-0c03ae7fafb4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a8ff78b0-a84f-497d-9244-8f1788325288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6875a840-b6e2-47a9-8bd5-b2d3ff66e306",
        "cursor": {
          "ref": "96277a09-ea26-4c42-b472-c9ab4611dfa6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e1616bf1-9e28-4cb2-b4ad-ab05790a4304"
        },
        "item": {
          "id": "6875a840-b6e2-47a9-8bd5-b2d3ff66e306",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0e6dfefa-2520-4251-8ed9-8e12cba7087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3302dac-fcad-4b59-9117-b43154a3e6bd",
        "cursor": {
          "ref": "19331f19-ad3d-476f-8e88-50185f224f06",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a216210d-c792-488d-95b0-261dbf44c6ea"
        },
        "item": {
          "id": "f3302dac-fcad-4b59-9117-b43154a3e6bd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8a952178-3fba-41ee-92a8-d5f26eb16655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40f76b-0b14-4f26-a788-697aabbea946",
        "cursor": {
          "ref": "0c05b21d-ea75-466c-b112-f25dadb49647",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "37b06116-b550-4263-9b4b-3ee8c1c3c306"
        },
        "item": {
          "id": "7e40f76b-0b14-4f26-a788-697aabbea946",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f694de71-0714-4372-a520-b07928039dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1684be3-2442-4744-980c-ce07601168c2",
        "cursor": {
          "ref": "265936ed-2d3e-431e-8652-8379d96b737c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6423e862-7222-4929-8a79-9dfabacb3861"
        },
        "item": {
          "id": "b1684be3-2442-4744-980c-ce07601168c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62f3a954-5087-4f16-adae-013d4b04d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feea63d7-d820-4759-874e-c60eb4333964",
        "cursor": {
          "ref": "f95b4cb9-2e16-457d-9070-96ece91b7bf5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "40a46e1b-5b4e-4a61-aeec-33bd3963c368"
        },
        "item": {
          "id": "feea63d7-d820-4759-874e-c60eb4333964",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "66b7c57a-43a1-48ad-bffc-0934ab116fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f9f025-bd3d-4ee8-893c-0bedd9742369",
        "cursor": {
          "ref": "8d8d2db0-7bd8-493a-8cc1-a57b5dcb2d87",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7a541d7b-213d-460b-982a-a1cb88c20e75"
        },
        "item": {
          "id": "b4f9f025-bd3d-4ee8-893c-0bedd9742369",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "175447e4-326d-466e-9824-2bd18dff354f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c83ea6-a599-44b9-874b-bfac31d3cfed",
        "cursor": {
          "ref": "6b64b1bf-0b60-4967-880e-9fb371a6e207",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6f5cf854-9f65-4ae6-bdde-2c1567536a3e"
        },
        "item": {
          "id": "e8c83ea6-a599-44b9-874b-bfac31d3cfed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "29b0e010-2560-457c-844a-8c04cb9b8098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5925da-f1e7-4126-bde6-91857b7980ca",
        "cursor": {
          "ref": "85d6424b-41ec-4a26-bcde-c5bc7a144a34",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8dd09322-8dcf-40f9-8793-bec171896666"
        },
        "item": {
          "id": "be5925da-f1e7-4126-bde6-91857b7980ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "214eff8c-c2e5-4daa-a9e9-c9c8a3d2032f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e97d7ea-5547-47dc-8759-9c88f8364d2f",
        "cursor": {
          "ref": "c3db45f2-a821-489a-b126-2786de4c41e8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "efbf9faa-141c-497e-a451-8c8a38a33367"
        },
        "item": {
          "id": "3e97d7ea-5547-47dc-8759-9c88f8364d2f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c7cefa5f-11b7-46fe-a27c-240831d356ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbb6cae-d4b2-4ef1-b45f-7da344ffb789",
        "cursor": {
          "ref": "cc88909a-b6fe-4499-85ad-701dbd18df6a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "eccd3df2-db51-4f14-8dd1-92ff0d3bde71"
        },
        "item": {
          "id": "8bbb6cae-d4b2-4ef1-b45f-7da344ffb789",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "afb54206-013f-4cee-b119-80ef0d89a97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7e4d39-197e-4db3-a493-255ecc40fc80",
        "cursor": {
          "ref": "49d2912d-19e6-4ff8-9e9e-0356e8c6e4a8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "daf78960-3d96-4922-9295-2b8e80694dc5"
        },
        "item": {
          "id": "7f7e4d39-197e-4db3-a493-255ecc40fc80",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "736c172e-bc76-4836-8aa6-d64097117283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62084437-9832-4ec0-be7f-d1daee475207",
        "cursor": {
          "ref": "ff0522e9-9bed-4ebb-9db2-a2b7e08e91f1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fee99ebe-d1e5-4d07-984b-e32e9ebd0fcc"
        },
        "item": {
          "id": "62084437-9832-4ec0-be7f-d1daee475207",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c0ebbdf-366b-43fe-9b19-30793481d442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe5235d-b904-4951-9875-667abaa00c73",
        "cursor": {
          "ref": "9a9e5db4-a83b-4fda-843f-238d2c86f47e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4fd5bc02-b817-44ac-82aa-44307d3bc917"
        },
        "item": {
          "id": "afe5235d-b904-4951-9875-667abaa00c73",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bf5172dc-5bf8-4fb5-91a9-4906acbf26f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7793805-1620-4981-a559-f9bf0b4915f9",
        "cursor": {
          "ref": "1f8ef66d-7eca-42a2-b8dd-e7d39dc9ba1d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "93017d82-d9ae-4914-9521-401ad75c87a8"
        },
        "item": {
          "id": "d7793805-1620-4981-a559-f9bf0b4915f9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8ef70b66-d74a-40f2-a21f-711e2c8c785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3fac31-6e04-460b-868d-240c90916381",
        "cursor": {
          "ref": "298e7184-4300-4f7c-87af-32f8360a4be7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8f9775d6-c1c8-4d6d-9853-c1d4b68d5748"
        },
        "item": {
          "id": "cd3fac31-6e04-460b-868d-240c90916381",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2d59f74f-44d4-4c79-9c25-eccc90e6411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3434e79b-15e3-4dd3-88e7-ef0413ada3c6",
        "cursor": {
          "ref": "d9500efd-3e49-4187-9b77-f782a9ca7c31",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c44c9ea9-bf2f-4b97-b735-51dcb43ccaba"
        },
        "item": {
          "id": "3434e79b-15e3-4dd3-88e7-ef0413ada3c6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "63c67d29-732a-4e22-b60b-261e485c6208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07646c95-c33e-426d-bb6a-14d04f0cde7e",
        "cursor": {
          "ref": "f03ef3ba-9693-4419-a459-3ca3f9e5157a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f3aa215a-d7b4-4f41-a095-da60465412f6"
        },
        "item": {
          "id": "07646c95-c33e-426d-bb6a-14d04f0cde7e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0694cf15-6307-4b73-96d9-8ad308682b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b54ce1-5d1e-4aed-bf91-2b63f3ac580d",
        "cursor": {
          "ref": "a72f60c9-2d28-46a7-bbb1-7bab63d38a50",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "82f74d27-0015-46a0-b2b5-93de66dc0663"
        },
        "item": {
          "id": "27b54ce1-5d1e-4aed-bf91-2b63f3ac580d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7b84ab93-d10e-445d-9067-8c4eb3f0166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a11572c-8643-40d1-be7b-07fd1ea814ac",
        "cursor": {
          "ref": "5775d3b9-137f-4c79-aa81-a855e23ddd58",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79bcbdb8-234b-41bc-a793-c1883966eb06"
        },
        "item": {
          "id": "7a11572c-8643-40d1-be7b-07fd1ea814ac",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "40c2beee-6bea-4986-991a-76da444ec747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d88ea-2da5-4f34-9471-6f1b7d8fed03",
        "cursor": {
          "ref": "29f72d86-f8d1-4fd1-979a-7ae5ab832ae6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "00601ee5-0612-40d6-9479-260c9854f9a3"
        },
        "item": {
          "id": "6a0d88ea-2da5-4f34-9471-6f1b7d8fed03",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a91cc1ce-8674-419a-963c-d20d98a907a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cb8241-2024-4daa-b9dc-2a79b775c3f3",
        "cursor": {
          "ref": "6e4c4a21-5dd5-4317-9736-dd5539641e3a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4a77ea17-7ee1-4d04-8a75-1ffd552bb851"
        },
        "item": {
          "id": "e8cb8241-2024-4daa-b9dc-2a79b775c3f3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1ebd993b-8665-4a1b-a42e-581ecf06b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be69012-72d2-49b5-9eaa-5ef899b009d7",
        "cursor": {
          "ref": "3c73d6a7-bd0e-4850-b66a-6879622a1b7b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a7e730a7-6735-45f3-89da-9b6fc2bf37bc"
        },
        "item": {
          "id": "4be69012-72d2-49b5-9eaa-5ef899b009d7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bce14a4c-e047-4a38-afa1-7651c4109e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7faa7f-20a4-4d99-8bb5-898af10c8fe0",
        "cursor": {
          "ref": "5795d68e-41aa-413d-9195-c52d0b818abf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c56bff07-af21-4f02-a010-1e0693ada1b0"
        },
        "item": {
          "id": "9e7faa7f-20a4-4d99-8bb5-898af10c8fe0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "56347411-b5a8-47fb-bc55-a607fd5fa854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0905d0f6-e13b-4294-84b7-52d466c77c04",
        "cursor": {
          "ref": "a9aaf157-43cb-4591-93db-acedea8f8333",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "23ae4689-d892-4634-bd68-a4f7d11e812d"
        },
        "item": {
          "id": "0905d0f6-e13b-4294-84b7-52d466c77c04",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "31a6756f-345f-43d3-ba5c-1cd272e3febc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16051116-fd58-4b22-9a9a-3d3fd387b1f8",
        "cursor": {
          "ref": "d53fd879-bf16-44a7-b002-455b82de9525",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "de72a4d3-df98-4701-9d28-8e386518515e"
        },
        "item": {
          "id": "16051116-fd58-4b22-9a9a-3d3fd387b1f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2313cfb4-d17a-4c04-8c29-8e23b3c52feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44861300-2534-4f09-b0ff-dc2b54f22958",
        "cursor": {
          "ref": "42eaaf69-5f7d-41d3-a7de-3c872ae15510",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cab2ea96-0e3b-4f38-8369-4bd164495f65"
        },
        "item": {
          "id": "44861300-2534-4f09-b0ff-dc2b54f22958",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8ff97b1b-8841-4e37-9c99-5d0ee9c6492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f59e273-627c-4030-96ed-9e00bd315e51",
        "cursor": {
          "ref": "e107e5f8-4158-4ebe-8f49-260b99e82bbe",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7b11de35-8fbb-46fc-a693-91b6f26282fb"
        },
        "item": {
          "id": "9f59e273-627c-4030-96ed-9e00bd315e51",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08e6caeb-477c-4fb2-baa2-beab121f830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae03b580-9c32-4bbf-9b25-33d8779a6e75",
        "cursor": {
          "ref": "18d0013e-dae6-42b7-9265-fe3c28a55423",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "992f7744-ecef-4acb-bc8d-3609099a275d"
        },
        "item": {
          "id": "ae03b580-9c32-4bbf-9b25-33d8779a6e75",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e7890210-39ce-4809-89f0-cce1c13bd9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd7c56f-24a5-481c-88a4-8c54c102550e",
        "cursor": {
          "ref": "359ea1df-b2e5-46c9-b85d-2a83cd21534a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cbdb9e60-79e7-4bcc-a489-45cfc994bf57"
        },
        "item": {
          "id": "0cd7c56f-24a5-481c-88a4-8c54c102550e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "58273766-3897-4234-a935-1d9c9bf86df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd937e0c-f559-4d4e-8541-cd0697eb4c34",
        "cursor": {
          "ref": "145c4b68-8133-42fc-915d-a91b1b3d84b3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d5ece7e-8e13-4d13-ac31-c0488bcfaac4"
        },
        "item": {
          "id": "bd937e0c-f559-4d4e-8541-cd0697eb4c34",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1cafb506-ef95-4e54-b46b-70a7c34a8e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d72a423-0b2e-439a-9c81-e2feaf50e951",
        "cursor": {
          "ref": "89edd27d-f15a-4010-ab95-73001acfe691",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c598e1b2-13e5-4aa9-8f01-97b7913ef77e"
        },
        "item": {
          "id": "5d72a423-0b2e-439a-9c81-e2feaf50e951",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5f538b1-9ce9-4982-9445-161bfecc4859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf22e029-80c6-4a61-b277-2fa820e5280f",
        "cursor": {
          "ref": "d5f31bf9-65a6-4607-850b-b38c18c7e458",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fc5eb2c6-4a97-4f83-a06d-866ac876343c"
        },
        "item": {
          "id": "cf22e029-80c6-4a61-b277-2fa820e5280f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e10292ff-7c16-4dcc-9060-69c191a8e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b37b81-dfdb-466a-9477-b5458cf4636b",
        "cursor": {
          "ref": "1bf6dab3-d157-4879-b4cf-81d0fb3f3c8a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a2a01e90-12a5-4f29-8c87-6727e4b9a67f"
        },
        "item": {
          "id": "b5b37b81-dfdb-466a-9477-b5458cf4636b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "db9f426f-7d28-4de5-bc39-df62d7ae0eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11584b0a-a5a1-4c51-8a01-39758a034fcd",
        "cursor": {
          "ref": "ec857885-d012-49a1-9c69-803a02fa7c92",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f7fc1f8c-3e15-4014-ba04-3b4f08d85550"
        },
        "item": {
          "id": "11584b0a-a5a1-4c51-8a01-39758a034fcd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2e630e01-7967-426f-9993-7ce457e1909d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ebbb20-f93e-433f-a7d1-e82a8bcf8bfe",
        "cursor": {
          "ref": "31d322cc-3822-4fb9-ad67-b01f11819918",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8fd44e3c-e2fc-47dc-a50d-5351aeb43269"
        },
        "item": {
          "id": "74ebbb20-f93e-433f-a7d1-e82a8bcf8bfe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e7aff20-7591-4e2e-ae72-93f673360d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac664b4-0bf1-4237-af5b-06d0d18903b3",
        "cursor": {
          "ref": "9d3ab2d0-94fb-463f-95a6-c3abddc34713",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a80fa23c-8b1b-4395-87ea-8eceef9a6088"
        },
        "item": {
          "id": "7ac664b4-0bf1-4237-af5b-06d0d18903b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "97981ee6-cbdc-437f-a688-acbc27232d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6bec8-a1e2-40e8-aaee-95f0cd6e1d30",
        "cursor": {
          "ref": "39a6109e-0162-4f58-975f-10756965d6c9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "00c43b5d-1606-40d2-b316-db54e07ca191"
        },
        "item": {
          "id": "b1a6bec8-a1e2-40e8-aaee-95f0cd6e1d30",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "57f76bfb-0d31-4dc4-8226-832afb23000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6bbf63-cc17-4cf0-bfbb-388851abf7f0",
        "cursor": {
          "ref": "3cbc2fbb-8f39-47fb-93b5-8350f051396a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b03de88-4def-47c7-8f9d-13da6cfb155c"
        },
        "item": {
          "id": "2e6bbf63-cc17-4cf0-bfbb-388851abf7f0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "42f94827-7d23-4bda-a46c-9a8f4fa82dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d4c08b-29fc-4d0d-bb6b-d294e55bf123",
        "cursor": {
          "ref": "e4649513-ddb9-4d43-8ad6-8857cc4b6d35",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b464d8d7-f720-4fad-ac2c-e5bbe19c9b11"
        },
        "item": {
          "id": "00d4c08b-29fc-4d0d-bb6b-d294e55bf123",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "12487cf0-c964-47eb-af13-bed18fd07a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c8d26a-64ee-450a-9200-7d0ed3276907",
        "cursor": {
          "ref": "0484c899-64ad-4c09-aa9e-93ec6419d24a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c18bb85-2216-443f-be4b-cdba0fb1e45f"
        },
        "item": {
          "id": "40c8d26a-64ee-450a-9200-7d0ed3276907",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77c96cda-8baa-4342-91ba-d449d1ca45f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c276cf24-c9d6-446f-b9f7-e2669e41110d",
        "cursor": {
          "ref": "c94f46a9-d62f-4add-8be7-d5b1fceb8f9c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d52c502f-1388-4d9f-b5ac-3e4f20e61903"
        },
        "item": {
          "id": "c276cf24-c9d6-446f-b9f7-e2669e41110d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "16a1cfe1-be48-476e-82c9-acf298a46351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c001cebb-8dda-42a8-98e6-1e1a65f66ddf",
        "cursor": {
          "ref": "899af3b1-ca5c-40a0-9b47-a1e63dc516cf",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "852e237d-25c6-4ae8-9e27-e9607af94988"
        },
        "item": {
          "id": "c001cebb-8dda-42a8-98e6-1e1a65f66ddf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2f155012-7639-4e50-87cb-45b9130d692a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb1fa25-aa78-47fe-a71d-7f0aa615de3f",
        "cursor": {
          "ref": "b747efcc-4c83-431a-b896-dbd7d813cab3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5223dd8b-2d6d-4c8a-99ba-bac91611732f"
        },
        "item": {
          "id": "5cb1fa25-aa78-47fe-a71d-7f0aa615de3f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aca947d7-d78a-4f67-9565-bc8f66f5d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298bbab8-ad54-4d6e-bda2-3a476157b6cf",
        "cursor": {
          "ref": "b499b96a-3089-4bd8-900a-e329ffbabd23",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ada91a11-f7e7-4082-a04a-a7d092fcb992"
        },
        "item": {
          "id": "298bbab8-ad54-4d6e-bda2-3a476157b6cf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a11b2d7-bf13-4ef5-9a51-ca91d339dd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3d5ad2-900b-4448-accf-e94f8d9dd5d5",
        "cursor": {
          "ref": "2902f838-e458-4015-ad03-4fdf5c06dcb7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "89daa0c4-bc69-4fa0-8f6a-87e7d7b014b4"
        },
        "item": {
          "id": "0d3d5ad2-900b-4448-accf-e94f8d9dd5d5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d63388de-f8d4-43e5-bb45-e3ca5d2574aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f320265-f9f6-4cb8-945e-cc2eb3c9f70d",
        "cursor": {
          "ref": "137369a9-c088-41a8-a497-62d2a79e5627",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1a985f85-31d9-4f4e-9a80-8f2faed8122b"
        },
        "item": {
          "id": "9f320265-f9f6-4cb8-945e-cc2eb3c9f70d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fcfa9d7b-ea72-496a-84c6-24e388f77b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a3bba8-c214-4405-902b-c1086244b4ec",
        "cursor": {
          "ref": "707722df-1f78-453c-876b-25fdaa9ff2b1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9f3b48f1-d92a-4a0f-986b-38db2ced52df"
        },
        "item": {
          "id": "e0a3bba8-c214-4405-902b-c1086244b4ec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "716fc054-7185-43f5-9f13-c8af92e6533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78cf989-ad59-4d85-9b4f-875b76fe3734",
        "cursor": {
          "ref": "e7a74d3c-21a2-478d-a08d-faaf555debe2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "31f33977-fbcb-48f7-8b51-8f4ed7a6eb42"
        },
        "item": {
          "id": "b78cf989-ad59-4d85-9b4f-875b76fe3734",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f94ac65b-b9f6-425a-aa0a-db0190d86963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0de070-f745-4d34-9604-6826d613337e",
        "cursor": {
          "ref": "464fc6fc-afe1-4e66-a63b-7197b605bf4b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e3a22cbb-9633-41c5-a321-448e2dbb9cb1"
        },
        "item": {
          "id": "ae0de070-f745-4d34-9604-6826d613337e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "988d8f67-4eb5-4a03-aa67-53a4c1e15e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f7da4-9509-4eea-995c-8d3f4eeebe5c",
        "cursor": {
          "ref": "c674b129-4562-4294-9f45-0398cb0f5721",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d6dfab36-3f08-4dc3-a094-9feebd80e3e0"
        },
        "item": {
          "id": "7c6f7da4-9509-4eea-995c-8d3f4eeebe5c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "badf5166-4283-4166-aeb8-f538f1334f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452c01bb-f9b6-4da9-a1db-39fb453baea8",
        "cursor": {
          "ref": "0bbb93e5-04d1-4ea5-b28e-745070b22f58",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d182a845-3151-412c-a63c-0c05cde021db"
        },
        "item": {
          "id": "452c01bb-f9b6-4da9-a1db-39fb453baea8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "47ebc21d-2c9d-44ba-84ac-92839ee2c6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8d8015-1281-4141-8ab9-9f1e114914c4",
        "cursor": {
          "ref": "12ab8e07-cc17-4664-8a06-2dd23996175e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7db5b608-f148-43e5-b1c6-3192885e7100"
        },
        "item": {
          "id": "4c8d8015-1281-4141-8ab9-9f1e114914c4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6baefa3b-a0d8-454d-a589-da3930fb697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0742c13f-a0fa-4971-9bde-3f70c48b6158",
        "cursor": {
          "ref": "49f54ca0-d683-448b-bfd0-53619345a840",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3dad6a4d-2b73-4365-8c82-4dd8dfa4e388"
        },
        "item": {
          "id": "0742c13f-a0fa-4971-9bde-3f70c48b6158",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d2fd364d-e2e2-4037-9195-1a38dd86106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92408c0a-924a-41cc-8120-864519b90bed",
        "cursor": {
          "ref": "cc3f225d-305a-4327-8bc5-489c541ba452",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7af2e96a-0a2f-4f37-b050-3a6d6e921e74"
        },
        "item": {
          "id": "92408c0a-924a-41cc-8120-864519b90bed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "34e8fb72-5865-4d5c-b12e-be454d268207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fbdf06-2365-4c71-a049-e07393ce8bea",
        "cursor": {
          "ref": "6b80f571-f849-4a08-8cff-dc267589b565",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "053bf44f-998a-4dcc-b021-6c65a2c44b09"
        },
        "item": {
          "id": "32fbdf06-2365-4c71-a049-e07393ce8bea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b8051c3e-19d3-4d3c-9570-5593efd2ab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce564f9-ebc9-4d0c-bb03-b285df9429fe",
        "cursor": {
          "ref": "12497a80-1c93-483a-9668-824f0cef961d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "38e58cdb-6fb7-4237-b76f-e90ac609262b"
        },
        "item": {
          "id": "7ce564f9-ebc9-4d0c-bb03-b285df9429fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cbd7687d-efa9-4747-b094-f6b726b17663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afa588e-f483-4f9b-bca6-97068a1340c2",
        "cursor": {
          "ref": "1f07a73b-566a-47f8-af9d-f63688d7ff06",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "398f7f18-2cfa-41e9-b3d3-7c121453cac1"
        },
        "item": {
          "id": "1afa588e-f483-4f9b-bca6-97068a1340c2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "020eb839-f18a-487b-8079-d1bc81ea17e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5703346-0975-494d-8918-2957c9f61c70",
        "cursor": {
          "ref": "f0a461b8-13ca-4812-a6c0-d74a271c6704",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "590cdec2-d2ac-49c3-9848-4ca004831b22"
        },
        "item": {
          "id": "f5703346-0975-494d-8918-2957c9f61c70",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a1d5ea98-8cc7-4801-b023-ad738aaeb1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cd427f-de0a-4b4b-ba28-6508175b9ff1",
        "cursor": {
          "ref": "b388abb0-5ed2-4dec-be9b-3d0c5d0bbb79",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5576c642-e79e-4fd0-9dea-9c7b7d5f3e3c"
        },
        "item": {
          "id": "06cd427f-de0a-4b4b-ba28-6508175b9ff1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b12501a4-94a9-4fbd-9c67-dab3c6272fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d833b9-2578-4637-8a53-41364f696dd1",
        "cursor": {
          "ref": "e337209b-ebae-45a1-84a6-72c636f00fce",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0c629af3-e005-462e-9161-672b7facdb29"
        },
        "item": {
          "id": "75d833b9-2578-4637-8a53-41364f696dd1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6a11ad1-b69d-42c1-ae50-a819d87106bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b3cb10-4c77-4999-a99e-52e5f180a718",
        "cursor": {
          "ref": "3e89170d-9646-4077-82c0-45be17850930",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "464a97b4-7e20-46b0-b316-9d978c659b65"
        },
        "item": {
          "id": "e8b3cb10-4c77-4999-a99e-52e5f180a718",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "afcd363f-be10-4799-addb-eede97275569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2186054b-7b45-4ab1-8e5f-55d44417489d",
        "cursor": {
          "ref": "d040a6c6-ed7f-4389-b76e-1d12a7a519dc",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3248363c-ed44-4c06-bab4-c73f67ebc058"
        },
        "item": {
          "id": "2186054b-7b45-4ab1-8e5f-55d44417489d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a6be5822-0b05-4440-b30b-12ae20973b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8926fd0-c97f-4b53-9cf0-788f7ec163af",
        "cursor": {
          "ref": "33d4de65-85c3-451b-9489-6bf72182d0a2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8cddb119-a57e-4a0f-a55c-213695675120"
        },
        "item": {
          "id": "a8926fd0-c97f-4b53-9cf0-788f7ec163af",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0e73a8a2-3cc6-46e7-bf65-8d55a6295eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642b286f-a888-447d-ad2a-4524cc4d00be",
        "cursor": {
          "ref": "5be47435-553c-4204-a80f-2ff74acf0e58",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "24724d3a-4929-48da-949a-b65598a9418d"
        },
        "item": {
          "id": "642b286f-a888-447d-ad2a-4524cc4d00be",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f8b36281-207f-48fb-8427-61954da919fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6f7430-bf6d-4b8f-8991-8aa5ced7b6b9",
        "cursor": {
          "ref": "6ad6686a-50d1-4c07-9350-2bae65066b78",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "de6780e7-6f39-4f81-96e0-caa43eefa841"
        },
        "item": {
          "id": "bc6f7430-bf6d-4b8f-8991-8aa5ced7b6b9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ce6b709d-1f91-4044-9934-7cb893e93ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b283804-79bc-4e0a-aeb1-cf89990a8939",
        "cursor": {
          "ref": "9fcb8754-2e4b-4ff7-a8f7-f10ce436aa6d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f6ff1e5c-4f54-4adb-b150-ed1ef0f2a04b"
        },
        "item": {
          "id": "3b283804-79bc-4e0a-aeb1-cf89990a8939",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "83a0a4f3-4c3b-40af-9e02-55b001fbad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1999e-71a5-486f-a660-af1c72c511e2",
        "cursor": {
          "ref": "e7169b1b-4dfb-4fd3-a403-aff8ad983ef4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8810c2f6-3f35-467d-9905-f1b5cb09316f"
        },
        "item": {
          "id": "4cf1999e-71a5-486f-a660-af1c72c511e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "598a0f06-4c44-4eed-b733-7194c899351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51679549-ee09-49b8-ba6e-c2a1dba1dacc",
        "cursor": {
          "ref": "400596f0-7fc9-48b5-9683-9e5e9df85781",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "95ab549f-21b6-4201-b5ba-792ed0c75a50"
        },
        "item": {
          "id": "51679549-ee09-49b8-ba6e-c2a1dba1dacc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8a12856f-966c-4679-9d43-77a3417f50ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8247cb0-77fe-424d-a5bb-2aa861e45d0f",
        "cursor": {
          "ref": "eebf4ebf-70ba-41af-82f8-fc7863e91a45",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "37bc8b94-898a-4ddd-962a-60bba5dd246f"
        },
        "item": {
          "id": "f8247cb0-77fe-424d-a5bb-2aa861e45d0f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa5e28bb-f729-4797-85c9-7e71baab2332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842c0f70-c8b2-41c6-a986-2ac512a70f37",
        "cursor": {
          "ref": "ee5fe4e1-13ed-4e7e-8844-dcd60a479534",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a801dbe2-7219-4103-91c6-783825180179"
        },
        "item": {
          "id": "842c0f70-c8b2-41c6-a986-2ac512a70f37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f07a66e1-6184-4b85-978e-6f9bed268228",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfcac10-1751-43c9-9429-1db2ec523221",
        "cursor": {
          "ref": "f3a73c81-010c-44b1-806e-4452091218a5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7f835ebb-e861-4cf6-8903-5f5b9968f293"
        },
        "item": {
          "id": "3cfcac10-1751-43c9-9429-1db2ec523221",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0033d9d3-f1a0-498c-98a8-c2c6162f1b70",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb276766-6f0f-4a4b-b12d-f306954d7e57",
        "cursor": {
          "ref": "9579559e-f8df-4e89-858f-fcceaaff41a3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b2658fef-b2c7-4ed0-9f6c-6b105e92c678"
        },
        "item": {
          "id": "eb276766-6f0f-4a4b-b12d-f306954d7e57",
          "name": "credentials_verify"
        },
        "response": {
          "id": "57f3c711-3ea3-4f1f-9e7f-e71fc7dd7ae2",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9bb1de-8986-4136-ad3b-c12a1e4812a3",
        "cursor": {
          "ref": "1fbcfa90-51b1-4318-8d24-68583a9857f9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "00ef0935-2728-4699-b7a2-0c24e3ffbdfd"
        },
        "item": {
          "id": "dc9bb1de-8986-4136-ad3b-c12a1e4812a3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1346f1d1-7f8c-47c4-953e-e039423bfc1f",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c14d8e-6320-4e6a-896a-3ac444fcc5ad",
        "cursor": {
          "ref": "e5fb0f3d-aa52-4af2-8e12-67ee1db0dca2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c82038cc-243a-40aa-acef-23bfc8b7ccfb"
        },
        "item": {
          "id": "29c14d8e-6320-4e6a-896a-3ac444fcc5ad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4580cf0-f4a5-447b-98aa-0bd3c98591f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c14d8e-6320-4e6a-896a-3ac444fcc5ad",
        "cursor": {
          "ref": "e5fb0f3d-aa52-4af2-8e12-67ee1db0dca2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c82038cc-243a-40aa-acef-23bfc8b7ccfb"
        },
        "item": {
          "id": "29c14d8e-6320-4e6a-896a-3ac444fcc5ad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4580cf0-f4a5-447b-98aa-0bd3c98591f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335ccfaf-8959-4594-ac41-c2010c2d329d",
        "cursor": {
          "ref": "3afda653-7777-4ff7-977f-5803001c61c4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "920c0712-d5ff-4793-bc02-501dc5cab55e"
        },
        "item": {
          "id": "335ccfaf-8959-4594-ac41-c2010c2d329d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e62cd77f-9c5f-405d-8cc4-ba82db268bbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6502338b-368f-4b60-ae22-f1860c567089",
        "cursor": {
          "ref": "390b8bbe-095e-4568-9b97-11f760ff7f23",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a69d4195-16f3-405d-a7c7-105063526389"
        },
        "item": {
          "id": "6502338b-368f-4b60-ae22-f1860c567089",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20ade9ca-faf1-447e-8a12-0dcc05c99e64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}