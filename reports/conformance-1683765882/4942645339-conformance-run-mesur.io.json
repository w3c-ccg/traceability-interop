{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f0e09279-0b3e-43ba-af1b-6a3a43e024cc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f9e97f8e-4c94-4c16-ac9d-b3c1f10f67d0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f32d0eb-8089-424f-abcf-7e5a1c1f049a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ea073c4-8fbe-4774-9f3c-b28b6c3ede33"
                }
              }
            ]
          },
          {
            "id": "233b8723-c58c-4e03-90b2-7114a50cc222",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c030c82c-d8b7-414a-8891-75047ba71590",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5ef2e80-4f5a-4ddb-953b-86e70ca6b6e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cea8e7c0-07c7-4271-8c5d-aba3b6a944d9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "abd0bb7a-a4dc-49c9-a8af-fe2158e0a06e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77bda695-61b2-4281-a818-26a3c1342bb0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e18f59b-50e8-4c69-a75b-f317e69ecdd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb85349f-ef22-448f-b196-30fc2e5a8a8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "230999c3-feb9-49f6-9c0e-58eac1179f67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "163b5a37-b0bc-4aac-9a1d-b953dfefed8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "673584f2-8613-4874-9b58-fbf5c15ea281",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d50c1ca-5b13-4ad9-b5e4-b7ff4c1cef32"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50eccb91-5dcf-4f51-892f-9d5d33d75338",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "91c5f9a7-4137-491c-869f-f99f3f0447c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e7659ce-89cd-47a4-980d-c22e3ab3b021",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac949455-ad13-4e52-8d23-042a73f764ce"
            }
          }
        ]
      },
      {
        "id": "8878ba30-e760-42b1-880a-1a9c672a8d69",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dee50f20-ffa2-468a-83a7-0b3bdcb74c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e326c0ec-a7af-4a25-8d4d-edc121199c8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52951811-d8a9-4c9f-9d35-35f8452b1c3d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd6344f-9d34-4ba2-a641-f37dbcca0dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "742ebe01-00e2-4ab3-9bcc-9000a7cea379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9580018-0cf2-4451-850b-d550d2c83456",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1543210b-f4c2-4fc3-8190-0eb9cf2c9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df281b4e-d61a-48f2-a834-e912ee1fe053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf4869f-9926-4cd8-9c14-8f2dd19b96c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f175b721-6e5c-4db5-96e9-9adf88380434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06e484b9-ffee-4438-a467-977abafd927c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69326d42-b38e-4d1e-8a4d-afc765353e5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38422751-1578-4fa1-80f3-6eb8deb3053a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932f2f21-ec1b-44a8-851b-1ee9bf7feab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1a7dd9a-3313-460e-ba94-d42fad5038b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d25816-f178-4804-84c5-e72488015dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee84a984-277c-423c-b2c0-bfd2eb44ff79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67698e8-44c0-4641-8832-5e2434cc918a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d5a044-6b28-4d65-96d9-4f9cceb916c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44618085-c599-4e1e-bd86-b43a2c2c450b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed15400-c485-4f7a-8f1b-002b3c294a9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5cd97f9b-a099-4dd9-9496-fa30b008ef25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fc1cacf-079f-4e00-a96a-3e762462c5d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6afe739a-01d1-46c5-ade8-0108db57ba21",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c770c3f6-6eda-4a5f-a713-e2b8523b10a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abaea419-acef-4a95-b6e5-81616f90a70f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f89d9485-9654-4026-bb29-9c57917a7c58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d0ceda3d-ad20-4f3f-b090-524668a7baef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be3b023d-c9e9-46e3-9aeb-f3dc0f4e5fc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1fa180e-cf2a-4ff5-bc78-7573ae96b1fb"
            }
          }
        ]
      },
      {
        "id": "55414c19-dbb7-4ce5-9cbe-b87afa77e876",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d0ea70b8-e0c4-46d2-89ae-2d2d788b03c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6043dd8-1536-4e45-a142-5cde181e9afa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9e1a49d-a2e3-4ecc-8b76-82c75e452c49",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85d1c4-32ff-4019-9aa7-f1503223101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5c44f-b833-446d-a32c-27e5ae239121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc7b6c2-65b7-4bd8-83eb-b357a27f5697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4701de4b-22f3-444f-8fca-a6e93001a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1927d8fd-602d-43ab-b092-99d4db70307b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a78605-e142-498f-b295-9980e8d039e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ace0985-d75c-431f-8d7f-c3547cf42ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a4617d-71c2-4e08-9866-f192e9b97a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf4e9f43-6741-4cff-82a2-2cc0efc5ac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd47d25-a564-4d25-9577-64eb50b1482d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3056e8-2917-4826-8d36-5c6c7632a624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff4d53a-d6ec-4aaa-9d9c-47c72c73b71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2b7d69-77d3-4248-ad9a-315394e914f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "709a1f71-6543-4a60-9fd4-551c2aab8c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef458de-5c95-4365-8838-6b8a157ac990",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc26609-7ee9-45a7-9005-eac2f04520a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e99dea0-807f-4061-a779-d1ef42fa3eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46914dd-d465-4d2f-918c-702aa62ec9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c254ece7-cc3b-4963-9990-7253f0ee6647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a19b49-fe18-473f-b444-e73f9bce8216",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea64bd7-517f-4f61-837f-2260f4b4c310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b3409e-eb78-46e4-b4fa-52573fe4da83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884cb028-8186-4416-8ee8-0afcd32e66d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60e74727-1802-4270-b7b9-3580b93395a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8ebd30-189d-44e5-a2fd-9e929a023c27",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d074de3d-0dc4-4a1e-850e-18582ceaacfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab16858-380f-4449-bfd7-798178c19fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c80df06-e362-449c-b0bf-f9f87bd7e091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae5ebb9f-c52e-48ce-8446-607d6fb2fc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e41438b-92cb-41c8-b348-7dce32c6b2ce",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5330f16-779b-4fea-934c-a873b2e752c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920f48d7-9c85-42cb-9524-855dbe5212bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fde3db-9f3f-4d26-b7cc-f607dd021ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fb63a91-2750-4437-bde3-dfb6d304aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040008a3-c70c-4141-9112-7470e4b8bf53",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7712bc-ca64-4e1f-8f3e-21f1e433d288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf27f12-5424-4517-a934-7d5bd407c4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2dd523-2f46-4996-82c7-5e4081c4356a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff3bf36-69a5-43f3-a76a-cb81f123891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfef824-2f81-4b2a-ba2f-6c54953570fc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97729e2-2eb4-4f8d-bb99-1b7b673a9eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbeb704-629a-48ea-88f4-65d8a47ef023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a37abf-0965-4ace-8030-2c2d2b4dcc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cecf8d1-a3fc-4d59-8e3e-1353a29a49f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbdee20-6375-4e92-9ae6-f29f44339cab",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1b7cf9-f401-4df8-a35f-bc1ad171baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca54b5e3-bb5b-421f-8d57-a1200c013580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc496e1-8d67-4c95-86e1-24a721736abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887d59ff-99ac-473a-bac0-03bc75f81502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cab8a0-ff75-4d34-8278-f6df2d3ce826",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c6455d-103f-4d32-b594-6bef5ae8d823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d870a937-7956-4fb5-b00b-22477695fd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79da7e42-4cff-482b-9f7e-12aab70637a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f91afef-e169-42df-9668-ecc1d5d1126f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf6d817-97ad-457c-869b-40adf98e8365",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ecc2f3-1e23-445c-8b0b-86faabc812c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaa3185-b038-4f46-aa99-62211ddb7a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5480605-8d89-4a58-ac01-5c56d16f5307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0bf6f0-b1a6-4857-8111-7f64d8fd9b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed6693a-7373-4ade-b837-2639522d99e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73eaae6c-8622-437b-9f1e-5a310cefe4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98de85ec-40ec-4e38-80ad-b1b047985043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420581a6-2642-4d71-b4be-357d51d48da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e233bf6-51ba-432b-9575-3673f1bbca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542413a7-8dc2-4e79-941f-1179a4de3385",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce77a32a-fef5-44ba-9ce1-40a68b13a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d14f5c8-d704-4db1-a9c9-19324f32e831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0e86d1-c87e-4da3-9114-f89c5542be1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eb22213-340d-4d20-b4fb-92ec7b4f5b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecb425a-e3b7-4f3d-b16d-acb01e6d0390",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11da19aa-3b2d-4012-a20e-df0ddd0b1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a067c354-b54d-4292-83ce-dbce1b8b7a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0c59b4-d275-4999-bf95-300ae2674d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c6302cc-9e45-489e-9ab1-9ece16a4d257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc07d2e-cb77-4788-ae13-625855f39aed",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6004e890-6aed-41ad-879b-3203aaaeb520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77889a9e-069b-4945-8810-12eb37de8993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4242180-a6bf-46a9-b09d-36b5572cf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a08a4a6-7d6b-4473-a942-668716ac7cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b0aaa-f5a7-4f1f-b5eb-1a04dddcf2ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a193cd8c-66f1-4824-8cee-83f63fa214f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d80d3f-111c-468b-bc32-3608a4a20369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b0a13-cd63-4e92-b473-1a175f7c6594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e42a9bb6-1013-4317-b674-5dc8ff2ad032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a224ce-9fa4-4dd2-9f4e-ec06d399f3c6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacf99df-8fdf-4f62-a9dc-cee3cde32749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d241d30-406b-4e78-85a6-b1fc92506d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8197c-fb59-41f5-b827-f56821af33c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cd0de8-1a3f-4742-9005-c47954374f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69973839-dec3-4057-8e2b-e224fed22ad8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2111c6-0aff-4d55-bcb4-e65923ef06f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c21722e-03cb-4b21-806e-1f5757ac3f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495abaa1-2513-4bca-9782-901029efc6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53451585-27d0-46eb-8701-4fba58f288b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0338264a-43fc-4256-b8da-08245c92daba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f63e9-029e-403e-b174-19e16acf95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3da50c-99d9-4f52-a389-9a364d1921de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fe6788-72df-4ed3-8219-ed6299477d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca7583b-7da2-41c5-9f79-e3c44d36182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5233e5-bdab-4676-9b19-e007877c4a45",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05881fe-0681-434d-bf59-f907d33a7ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c902a2-028f-4d5d-8dcd-836990ac5941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c1359f-4272-4fa5-81e7-026501b73fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a36039-398c-46fd-8f33-dbc79283943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce80356-51b5-4311-943f-5f38624f8731",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5490830e-1f50-4761-aaa0-abc6589ce877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2988a3-9f4e-4707-bee3-1bbee91e70a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f835148-5955-4d80-b47f-19476f49429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd209ad-9911-4fc8-9004-b617d4c6227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305ec05-99fa-4b12-8ee7-063d96a91d79",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab5edb0-4d4a-4b84-b4ee-d689f445b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e398f8e-4437-4ddd-b049-f32ad5c1f810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e9b6db-51c9-40c1-82f4-4860cfea2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f4df5c-413b-4bc5-a6af-085ecbd1f43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f1b7d9-3940-4393-8771-15398094e3e8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d3eebb-6a52-4840-a8e8-e794defe7040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed409ba4-3a49-4969-bdfc-e3371c57bc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282a40d4-8ff4-41ae-8458-140949aed8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "043ce2cd-1aa4-469d-a4af-d44a4937a6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0281e21a-cc00-4f57-b159-235b81da6667",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0594c566-b7e7-4cfd-8a9f-87c484988c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e51f29-9eed-4aaa-b0ca-09de8f67b8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0674fbe2-b2e2-4cb8-9151-8eeeed34f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dc566d-65b6-4529-bbd6-45355cc2607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ffd93-4a7a-413f-b277-4b10abad57b0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b5b65a-ccde-4334-b09f-85c76d31abc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d99630-4bba-4a81-9624-4c8c5c0a2224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4d883-4e23-42a2-bf06-04048ccfa32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20623fc4-0d08-4edf-962e-478a22780d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f9efd8-c2ee-4fa2-9fef-c2fca9220d1e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85916e-de44-4020-bd76-b20dcefd6da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78c7f92-7d62-4f27-8c22-a898e4f61dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d55bb99-e14a-4dd2-89eb-f7646cdbc126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e75c3cc-b162-44aa-a9d2-d840c9aab072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cbeeb0-c5c9-4742-b7fb-d16a31dfb993",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a321a759-b225-42da-bd89-02b881d879a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0657b798-1caa-4c5e-aa20-91143a517d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5904e749-5293-4875-a6ff-6002e93cfaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4306f06-3ad4-4d68-8911-91083b8640b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b720f460-32ed-4040-90e9-7ef4a9b353de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b9df27-4154-4072-9b94-cf4414f2b016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a80814b-3d65-4894-bc6d-67f816229825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82109e3b-45ed-467c-bc8e-c7d6dc59023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be958cb4-7890-4c69-9810-e0cef1cacf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d112bd4-4eba-4347-b41f-6ebca52b68e4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c32693-5355-408e-9bdd-27dad262f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12e81c5-200b-456a-8c09-27992c6ef987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaafc045-35e2-4202-b5c1-4f04198c983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "639f9b83-59ab-4c32-9ade-7cd9beb2674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275a0ff2-8d25-42ef-bad0-4047943b91ce",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b710d2c-1bf0-41eb-8f4b-a4c31698d2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095afff5-3b75-41b2-84fd-48f1b3f2e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7b1e10-e986-4798-9fec-7dde6016a6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41017007-8a78-496a-b81a-130a1f9e5845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4c0489-9574-4093-9673-7810c6685993",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb284c8d-2bc3-493d-9a0d-e1ecea92e4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a23a54-b497-4077-9968-277c59702f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcfa64b-60e7-4e11-a09f-9b3aa5e3fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "670d7599-393d-472a-9b23-32d7ad15e5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2e399b-0b1a-4a1b-b6af-2a6f3a60c25b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac69525-2eea-4dfd-8b77-a78109b5ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3e5eaf-90d4-4ea8-a86b-f3355166e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c26c7a-fc5e-4244-b5ca-67ad23a7f868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bce023f-f4f2-487f-a97e-0bd956a2c5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2533789d-331f-4062-a213-0820abd3e038",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80366e8-93ec-46af-ab03-23612e4d62a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466c0e0f-1680-4b92-bc74-46b900e356ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6ecab5-ccae-463f-968a-0c80b6192d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e54dae2-8515-4080-a794-11e0f67d19f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c7dc06-c676-4b28-a9d6-aab3cc21afd2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4614ab-ee6f-436e-a9ac-eb0fb4f1ac1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5df95a-bcec-4ad2-8f94-6aac0071caf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2881d87-e85c-4588-bd8c-03d36999a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "682e10c7-5acf-48b5-bc76-e1ea46a92a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef14e512-c464-4466-8b43-22e74be61be2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a50c7f2-0590-460c-abce-bcb2a4761b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc9b2d1-26f9-447a-b629-4f1ec55ff3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdaca2b-aee3-4184-b6e9-343ca313ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11d0e194-1360-4fa0-b311-b91f5efe91a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c5832-7aef-4888-85a6-a401bde146e3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c278d3-a2a9-4f90-bfe8-598db3178807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c50bf86-d645-466f-b588-169704a12b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa50ad9-c4e3-4ed7-803e-9b35f499970b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26eb5d64-6de0-46e1-8abf-20b3e3aaacfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3339815e-7639-48c9-81b3-29d632054788",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b04b97-7fb5-4869-a3a7-332b31745f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73372aa-e500-4e5b-8e23-fa203429f940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc55da7e-b333-4f21-9b8b-9f040a0e2387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8868f67c-e6b7-4ec4-bf7d-9dacf45dc29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a3dd74-3e8b-4b79-ac7d-dd265e6a30a7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b79e6cb-83f3-4c59-88dc-ebff2456ac5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b248ec-e208-479a-aa7b-e4b4a8f5da58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0f7c1c-2285-4f45-a93b-52bbec9af015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b129e9be-2eb8-481d-8ff0-394ec487f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a971a-46a0-4f27-90c3-68be33ba842a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8ce56-e45d-47ab-b2cf-f79fae20a805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d608cc-5a6b-440c-bc13-a65de40124f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce639416-13fc-4b33-804b-b2b18bdf5ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "809b22c2-7f79-4069-a9a2-f4b868c04c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc63601f-60ed-4bfd-bb40-561db765304a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2db288d-3280-4f25-92d0-3695958a7b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1697a207-0043-4c9b-8310-5931e1f5b93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68225f8-aa7f-43d6-8a54-856a92b1df9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a26bc20-162a-4a9c-abdc-6df1798d2350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aa3934-f435-41bc-94f3-29cd7c24a241",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04df8a79-ae0d-4b5a-bfd5-56e521434cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b969cf02-1373-44c1-bdab-51c88a9b4c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b4c431-eecd-48ca-a230-bbffd7ab334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb47fe2-21ff-44e8-b163-d8573ba32182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cbba64-f9a3-410d-8a69-38c3048e86b1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263d3a5b-0a22-4a03-9094-d00fb6553352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252ea41b-ae37-4c76-9537-fbf708780597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e061edd4-6713-452a-9c04-ca796a26c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af1a4f9-3cd7-42ec-8e9b-6a52a2549881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645e36a3-cea5-4041-941b-0487b6a9d7d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1cb63c-cdea-4ec1-9df0-896cc75585dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7764707-904e-4476-ba20-3bbf241838ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1cee03-4dc4-4533-8d8b-05136fa7f7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc40aafe-9e91-47a0-8ed1-2e30e285ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217546ac-c30d-4011-ae34-eea7f1c41a36",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff80f7-fb5b-4b3f-a67e-3eb3f2253f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae46b4a-2bcf-436b-982a-f3d295590026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9d7220-dd93-48ea-9fb1-9d6070a452ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ead7541-546b-4142-9e1c-8107ceb55714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f298cf88-be8e-4099-91ab-fcda24727bd9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa15bfad-5b24-44f5-9982-e57aa9dec542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ae4600-249b-4e9b-97ec-88d070036bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923e91a8-9c45-4d4f-a8f2-cd48e10c8d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5c598d-a136-4f4a-9d5a-81cc433675c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be0a0e-5233-42ad-838e-73f9571fc4dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e756e3-0872-46be-9334-cd7df778430a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdb8ae2-1877-48ff-9d01-b7b999e65a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da92e22-6383-481e-9c1c-ee48b9f01258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfafebc8-0ec1-4dd6-868d-92e642aa89b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b84d9d-1790-416d-bcd4-5e779a0fa5cc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec43168-d116-4d87-9191-ba84ca7cc73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1dfe54-e57c-462e-bae3-66317bfdc948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eb2e18-ee9d-4378-a10d-049cc1851539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a570f3e-28ee-4cfc-8706-d6b25b6433ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c8290-5ebd-4ba0-ac17-ccdd4fa63248",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb7784a-5af1-42c0-87e6-99f23c176c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d604a4d8-aa20-4626-a317-bb9a120cb7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211026b7-9d78-4800-a550-149c7dd4cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f236d18f-9ce0-462a-8386-530f99371fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16f0b53-b58e-44f9-98d4-2b96a214162f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751fd323-62eb-448d-83cc-5a7cd76419f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed48d163-0923-43c7-b411-6993056c5405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803d4258-3383-4b75-be94-ec02cb4d1fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cee35e63-c4d0-49c0-879c-9006f1f44756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1402ef-65dd-42d6-9a66-f941f6f8202d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc4fd16-2924-48f0-9d42-8902e0370fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7557ab-5b57-4298-ad1c-e42b87b82c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d315ebc7-4fe5-4b80-9868-a4e498eb55c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "949a768e-3ebe-40ab-92db-70daaecf1631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f48ab4a-ec6a-4cf4-b125-f66839cebcaf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad00de-6014-40b2-9813-681408e79d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd1d01d-d8ca-4026-bc1f-164848d14c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd90129-64f8-4543-96f3-a73c4c1ca505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8b23c4-eb4e-4b40-92a9-0ef4ae637542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e4d9e0-0faf-4e0c-9ef0-f37ff5a3d745",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b745f30f-ead4-4df3-be98-94c688f3929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b682d79-b4a7-41ac-acba-c2fcbad05022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ea7ac9-0485-488c-a239-de6fe5c3cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e777e6-9ac5-4dc2-8128-f8185f9ce491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4cc70-39d7-4d42-bb52-cb5a663d87e1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2695df3-1174-4ab8-8cdd-893fa67a9537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d6c265-fce8-4e30-9465-3455c4d3a8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe888f59-f1bf-4d7a-914c-0715cb81a4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daa95dc-061d-4867-873e-5c9fb8d52929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6692ccc0-0027-4e0f-89cb-6459f11f98a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651ee1d-18f3-4ef0-8df5-c54776f902d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d27f9e-720d-4381-8c97-a776825088cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c52468-7790-44d3-bb17-3995993f3c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38a8efae-717f-4ae0-9fa1-42d2690914d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda41979-9e71-415c-b812-6ef9e8a9fe82",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9fbff7-afee-4ccc-930e-0c6d17c5e2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07f6fa2-f789-485e-9209-8b49a433a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6839640d-70c7-4add-9978-3b0c76211eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b840c22c-36dd-4fdd-b09a-954278e465aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f67173f-1b33-42fe-82c9-e6e59f92d6ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea04b17-6bcd-41f4-bd10-c84c7ea0ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b8f974-1fac-4563-bb7b-f427d9c03e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d1dc1-21de-4143-adde-e83c5191384e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5723affa-014d-43d2-95e6-01cf60e37820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5103a6-88ff-4a5c-8c68-2cb8b904bf07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a444801-55d3-4b7a-b21f-b08daaba85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67db960-b777-4284-ab55-b3b59c677822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095116ea-13d3-4005-8948-49742b173904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a666d8-4b57-4014-8996-79f523bb22ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb16aef-b1f7-4136-bb7c-40dd1500a3f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e08fe-f67a-4c95-9620-80c6b1a7f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cd269a-c779-4187-a416-88980bd0fbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67810864-a4c6-4072-9f01-af290421ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d0617e-4e77-4325-b1e3-30a9a9200b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f17f35-4232-4972-871e-f65273632d70",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e82375-5a86-4716-ac4f-7277d329a722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7abc47-f0be-4594-8d86-0143c9150dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e525e4-55bf-4300-8b88-0a663b2eccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e7d1e5-43cd-4950-bfda-42344eccaf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca7a53a-6f54-4710-aa2a-31022988098b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6081a0-6437-4f4f-ae1e-5d2eb61956e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d9c834-7aa0-4db4-8eea-f3a1876f1b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6974a22b-adb2-49c9-bb74-407c862261b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16105858-47ca-4c0d-9e6b-dbd0e73bf8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c60b81f-3fad-4681-8c80-05e3979672c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09054e16-9e95-4705-a49e-8d6c0503718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba65f772-f84c-4e62-bc2d-6da030a74cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dedd46-b422-47e7-9184-95daf4c1511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5c11f8-63bc-43bf-84e1-8bbbf6600cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b1d834-fa79-4062-baca-5aabb5ffda46",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8400d0-536b-4e32-ac9d-a2585a9764bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437773eb-38a6-4e19-9429-a3d0b36c23ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fda6c4b-dbd4-44dc-bc5b-ba9808a85fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9bc459-554a-48aa-bbbd-0a16eaa91b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1330e2f3-3000-4e7e-aa25-69489196d0aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c851825f-bd7c-4679-9f4f-0811cd4b4f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8415b9-5254-488a-af63-0f6d63e8b37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e29143f-1734-42a3-aa02-c25ea049f0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "345baacd-0543-4e5b-ac61-9356d95005bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6898638-8475-4b2d-990d-f31ff97a2870",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5ef663-04f6-499a-80fb-4350e3bb7a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638d63b4-48cf-4147-89d7-4edaee87923f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2589699-1813-444d-b901-cdf5aeb27671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d0d096-1cb4-43ae-98c1-d1d56b84e230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44523f26-2857-4da8-86cd-70ffafc331d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9f81e9-ab95-4ec6-be14-495e2f75cba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59db4a19-9f56-4694-aa57-ae694836236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd1d6dd-8775-4105-88c5-bb74630da1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e3b90b-8f54-4195-92f3-426e7bd26928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42590530-ca66-49cd-a0ee-ebcd829f25f2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f3ff60-c7bf-4f0e-8146-04b661d628cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d50b2f0-7152-48d3-82c4-5ac5c87ba5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817b5d0c-ac45-4774-867a-56f0928e4d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "876a2c41-d4ba-44d5-bedd-e51a75a3a6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191eb9ff-f8d0-4a19-b1da-ba62bbbd8959",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5299e58-4bbd-4de6-b653-c792ae5d1d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9c377a-9aff-4258-a2d5-7040100cae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab11a43-4953-4026-9f0e-c355dc8b6095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad99595-765e-4c70-a0a5-193012dd0a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a1f0d-d5d6-4f47-a4aa-0860ae608e77",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0bf600-8cb7-412e-9340-82abca7f4f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c876ea2d-9499-4cfb-902d-87cfda00ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0fbd3-5a30-44ad-afee-84c4bccd334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37f0fe0-09e5-4648-bdb4-6f3648d92470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a664cf2-8afc-4a1a-ad53-afca8072a370",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aebc11-084a-4232-ac80-e38ee69c5d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16862626-c668-4af3-a831-8abfa9b8a89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15132a0-208f-4482-95d2-2483a2dabb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eccc14-304c-4991-89b0-f8fcdbb9d286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f9f1e1-9e71-4aef-8b5b-d528ec8d444d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded09446-8a4d-46b9-a0dc-edb0fa5a49d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ef823e-735d-4cdb-b29d-641eb75783e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938421e1-6eb3-4483-85b0-9a15c0f6a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e746b997-6940-4e70-8bc4-f4a1af3a027c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b927f65b-aef5-4e2a-a98a-beaffdeefbf5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23068fd8-e8bb-42a4-ad46-c4adaa916eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3a9c25-5d4d-43b5-9d3d-0f96003e36e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38c4da2-8d47-4d6b-951e-098fee79714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "702f047f-ab8f-4554-8e58-96d820ce3105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb95dea5-0e43-44d6-ad4f-cb18044847a9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a952a2f-18ad-4b27-9764-d3123ea6a30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2656bc9-eb81-475a-a1cd-aee0b18502bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ededdef-fb67-4e47-9eac-7141306c305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6164f662-3262-4783-837d-23abde5bef1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c486b4e-1bd0-499d-ba30-9ef7684b8efb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606ed4d2-dd8a-4f08-9c55-1f9f154c9f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e381e9ee-8c2d-4a6c-ac29-0c657aeda4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552867ed-41b9-49ee-bf2e-70c37ac1127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19a6832f-4adb-43bf-91a2-da77de40ab92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b50ca3-b8e4-4da0-b704-cf3f72a38492",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776a275b-dc6f-4f5c-881c-5f05efd4b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c648685-2829-4650-91e5-a1f6694fa5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897a4fd2-6e8b-4f74-963a-74e938281082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "946f5c2a-a6e5-429a-a50c-730261af9c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36588aa-f1da-41c3-8f97-3e03c9deb1ca",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590628ee-be9e-490d-8708-5cbee74b875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9215fd8b-038c-4ac3-bded-35e5a72be989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3688642d-2fb8-4a0f-86a2-088a172e56a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71faeb49-51dc-44ce-a88e-25b242612f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa74c1e-72e5-42c5-bdda-94cba6e1f3b3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118936f3-e957-4808-8422-2e0c75b7fbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513c4f1b-8b79-4e06-b910-59877bb85e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bd6fa7-a8e7-4d35-94fe-53d8900ba8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6300d997-f9bf-44c0-ba6a-37a4032d3d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e23da2-d9a6-4b57-a083-06b42b5aa670",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce23bbc-7613-466e-b703-2d64a1b16e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08b75ef-730f-4524-91c8-54a729e76b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f4dd3-7141-4cc0-bd9f-a82107ea537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eae57f4-eff9-4ed8-9263-d5a7ce09cd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d3d004-601e-40bf-aa12-5b17576da0dd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06ef5cd-834f-40f0-9b82-9e8e587145c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d366c3a-4182-4c70-a5e0-5c2d780f0d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a142ca71-f7c3-47b8-8d8c-113f5a94470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f12a0abf-a5b5-4b6c-a8eb-0560180f8bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d718e522-d0bc-4bff-afc9-368106cfa189",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d8d80c-b963-4352-a867-bc30d5fac153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf1e4f-9773-46ce-86db-464b5a5a2b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55e56da-466c-42b9-a8f3-b08a977997ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "447dcf4d-4b3a-4361-8fe7-54f49de6c433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d21c17e-da3f-4fcd-9e50-3e5791fe7ae4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476047ca-5e98-431b-97bb-6e56e3a85ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108aa639-4888-41bb-bbdc-ae3f225712ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d64cad1-38c0-4863-bdbb-925a97c658c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90ebb94-bcea-4a02-8cc3-69d76e95289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec06e84d-5e69-465a-8469-a1fb27ed51ce",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36997dc-4f8b-4b81-aa85-cf6de40fec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed86a3f-eed6-4d03-9870-f61729769fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1ee198-6b24-4e9b-a7b0-27d663f5c460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1c47e3-2aae-46ec-b5d6-aef152c80b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325dc586-f3cb-4662-a86d-c51b7593a21a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c9ad0f-294a-42ed-815b-05b33db93f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d0d9a5-1b1e-4fd7-9b9c-e3bc1afeef76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf2cbd1-eede-4b13-9cfa-c817cabceefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d88f0-c9cc-4b2d-aad0-acd757673ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db43ad56-358f-47f6-99f6-b4508a68d894",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218a2256-49d1-44c9-b7d5-3eb68d195cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a73dda-0901-40b9-a252-e576560aa14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf6d9ef-3b09-46d8-95ee-5a6a9b7053e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1d67f4-21a8-4a64-a46d-d6d14cec3d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6bcd24-b8d2-4652-92e2-f6b67fa3958a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c362024-db8b-492c-b850-d64a0983dc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fbfe73-d8aa-4c02-984f-bdd97ef0caf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddd8f85-047c-48d0-8659-f91717b7c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc580e7a-9721-4ce9-84f8-3c6fc0ee1e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db2953c-a570-4495-ac87-f8e72bf7f148",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fa3ccf-467a-49d7-b676-f6e627af7f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a1559f-10ac-4a9a-8261-d574b4430072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a47f91-1bca-4fed-8333-ef5d28e5144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8bd982-4ae9-4313-af24-b0a8ab1d6180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f55b32-212e-4585-be52-c9b69be2ac2f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83990c2e-242b-4454-86bf-7ad63699e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f1252-a032-4b71-8f95-dcc6790969dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57e48cb-c212-44d0-a3b1-7df594326090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86097e1e-cff9-4383-b24a-d2667200e01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38837c9-007d-413e-9fd8-14668844f55d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb5f4aa-4457-4349-99e5-bfb480268c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398530f5-60e4-438e-b4b3-39cfd1659c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaad14d3-4d0c-45e4-932c-8f1715253d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9f9d86-bf1f-457c-aee4-93219f3edddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6decfd-22ea-41b6-b5a9-8175d4082a9c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254b0437-bfbe-4da6-9550-dd29ef9a3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5861e455-bf76-446c-a2be-f535468c9cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a02347-2460-4bb2-b8d3-56f9a6ba5f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6595f179-7439-4402-929b-bcc9f0b8e062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd139f7-4357-4de5-b0eb-ccd8b8661d5d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6375831d-b7c2-4a33-8b0f-8d8ce85306b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4b4ede-0ae4-469f-8b88-fec1433d92af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eeaff4-9034-4923-9844-8252bfe26450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "834e86bf-e29a-42fe-9dbd-7ea4334d355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcea5857-268d-4223-8bd6-295dff150ab1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7612d810-970d-4815-8f8b-7ee0a3a85e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a2aca2-5cf1-4894-ac2e-57fba2615c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f4f337-acab-4eb7-a063-73d300cff932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a388f08-42c5-4a56-95b3-b7f74017cf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f84c24-3929-4e60-840d-a49736107423",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df9c4d0-28d8-407e-ad77-949a27f1a426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9fb40317-3ea3-4b74-86cb-bb79fe1bc40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9300c7c-f89c-4729-b01d-84af31036bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a9a3ef-e43f-4ef4-a451-b9c24840e9ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24ee43bf-c005-485e-81f4-2a215741c4ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39d9d28d-852d-446e-912e-5abbb1477c82",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f53384a-54fb-40fa-aaa7-6808fd361193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a30a8c1a-3fc6-46a5-abb0-101606c55719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911db9ee-26ec-4215-8bdc-9e32724d1106",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c37eeb7b-b613-444d-82e1-8a0a09c4ef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ffc45f-ab98-4986-8030-60dd988ab8e6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983c45c0-4898-4815-8f2e-0305ec881613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46bc0905-aab2-42d6-aaa2-974c78014d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea39ff5-dc62-4c76-b011-8fead94eba28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06d7519f-747c-460e-9527-520f2a9bf0e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cd61399-fa83-4df6-9bde-d3d5d5b78ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4cd9e1a-cd31-44ab-9036-1b4f7559fba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "753413b4-c81b-4c7c-a5d7-ca6108793650",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d416ca66-654b-472a-9b48-d7c25545d3fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83432e26-71d4-48c3-8b65-7929a4758dbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d21439d2-0fa9-4e21-bc93-75f4588583cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ad95a39-6c71-4781-b120-6978309830ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4e69429-ddfd-4b70-b5b6-445ee476da39"
                }
              }
            ]
          },
          {
            "id": "2cf8b586-ac59-42c1-b233-3aa61ce2e868",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc79659d-77f8-4b0a-a89b-413f6f4fd19f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6aec22-0d48-40c8-a95b-e6b79fb8ac86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0555e795-9f59-40ab-b974-ff92646c73b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9d43ea-8f35-4f6e-8406-79f223fbccc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd3f9327-ceca-49f6-bd3f-3dba3255ba94"
                    }
                  }
                ]
              },
              {
                "id": "bf1efbc0-bc1c-42b3-b04f-4ee0ff76f849",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dae0e8e8-80b4-4fdb-9fec-abbd33ba3a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a059125d-03f4-4725-a073-ba1a49970e9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8769dbe0-9465-48c6-9c27-01a3c52cff14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1a10a72-3ac0-4568-87fb-33e43dc09c1e"
                    }
                  }
                ]
              },
              {
                "id": "3a05f34d-f589-4a40-a2c9-0e7597d6305e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd3cc93-abf7-4c90-8469-fc02e1a82b7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24eb4e74-790d-4a96-8444-a47fecbb374a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fa41611-431a-4090-bb35-4a33e5b6858e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82c7c53f-8f6e-46ec-ab1d-41ccae280244"
                    }
                  }
                ]
              },
              {
                "id": "40e9f5f6-8abc-40b9-9cb8-050e66f5bfb9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f127acea-3fa0-4ed9-bcf6-9a7d1690db72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d00fa4e0-a4e2-4b92-8300-2875bdcf55db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5703884c-2eff-471b-ad0c-4e3515ba1f6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e8db2b50-d372-4b60-8a6d-a98211895b88"
                    }
                  }
                ]
              },
              {
                "id": "cee31d1f-6514-4e81-a0f4-4b304cfc9297",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1acb1f7c-e453-4e0d-b85c-eae9889d6f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd6f0c06-9f50-4873-ab02-f9f616d3a11b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4645d216-c447-42f3-986d-f8440d6b1099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f245d96d-9d3f-4488-a131-ebd8c2f47b46"
                    }
                  }
                ]
              },
              {
                "id": "2a5c026f-59c8-43a3-9a76-98ea803fbf0d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64849159-9879-4e10-bc87-340cda713c44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97007643-1c82-4f24-bb6e-241f20ede895"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c5043b3-fb1c-4d8d-9bc2-6ef6c437eca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b055b359-c0d1-4cd7-8888-688c08819361"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af9a0e5c-c913-4de6-a734-1567e2b69902",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5b9b211-8190-49e0-847c-7cba5bb4f25f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f213df9d-e324-4d2d-ab4f-2aa82f8e9929",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69741baf-4c8b-4a0d-acc0-31299dc609af"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "108f2b17-13e7-4c9c-a1b6-7da709179c34",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d559df99-9e24-4306-b1ed-a58afb01549b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4da9f65e-f221-4a9d-9a73-3d6f42c37a76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d55a171a-4c3a-41f3-9892-9e9e5388558f"
            }
          }
        ]
      },
      {
        "id": "9c2248e0-6e5f-46e9-a08b-2d012dedf0ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2491b054-1f5d-4fd5-ada8-ef808d7b3fdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63776830-276b-40b0-998d-9025ddf1c4a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ae0810a-6339-415f-a7a3-93635dd14305",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d46a93-4c40-4cb4-b817-a3ff8e8eb68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee31be11-e936-4d9c-b14a-2923d2fd5d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e8950-d413-4762-86f3-cee8feb71163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ea691e-f350-4b1d-a2fa-455481f1e916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810bb3d9-0a8a-467e-b9cd-0adf543072cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9e4d0d-8798-421f-8ef0-7a847aa90a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f801f56-7a4c-43b3-8869-84192c59b6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a35d974-8af9-4085-bb76-17f7270e5fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1abc2d-0ad4-4da2-aa30-989079b32b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6109f202-0d4f-48e9-b630-feb726b181b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e47d97-7d1b-4483-a796-0ec7d0ad7a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50958e76-3723-4007-93e5-d0f93d13c743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caeee59-2755-407e-afdd-d5f1db476cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0659a6cd-5406-411f-8c32-76cd8e88561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01d2ad1-2e06-457b-b78a-46877041ee07",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b8c28-76e1-40ba-85a7-9dddd17e6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609d8233-0285-4fae-b7ba-7e1638460b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902a9595-8d29-45a6-9df5-fcfe788d3273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa82366d-1cc5-4f82-a59e-4420f65230a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddd0900-51bf-4798-be2b-085a5cd3699a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f11ee-42af-4498-8099-58f49e67470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4a0d27-30c7-4cbc-8616-f44c1058592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f008f23-1a4e-48d6-884c-2b370c352d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8c4980-b8ec-4f42-837b-fc21d3863eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268fb1cb-c432-4455-9fcd-cf4422f0ae70",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab84ff4c-f3fa-4eb1-9b24-4dce159096c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1739303-d805-41fc-a2a8-d3ded16a1eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568d350-4167-426b-8b03-38bdbfe1fd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a739e142-ea2f-4a2f-a10e-3a68fd13f789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af84a84-85e0-40db-bf67-5f5895598c45",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408bd530-d4e5-4595-ad02-5b7340ac35af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631c005f-786c-40a7-bfba-a78143559714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde86a1-09e1-4d9b-9919-5992b428982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1184b5bb-5269-4216-b62d-d237c2507d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ee9942-5f52-439f-b9df-90be67a63cb3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc0649-c13e-4d85-ba5e-452edab9151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea9260f-604f-46c4-acd3-0754a0d1f3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed6f779-d6eb-49b3-ad69-2e5374e962aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baef4a9f-7d01-40c3-afd4-c2debd6a0ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8677cf-bdb1-4a6d-8459-ac7c6242e636",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff781b8-b1a0-4897-83c3-ccb5e6ff04a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba27d9d-fb60-4309-9dd6-6974ca34b6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d50112-d10b-468b-b6ee-f7e3d627782a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8215596b-4d15-404a-af12-95f86465dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617a3381-671f-430a-843a-4c96a3ae64cd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c255fee3-20db-4a83-b05f-db662946a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f191f3b0-f998-4cb9-a22f-1bfbe3aa9b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d6a21-2041-4c4e-a33d-a7041ef8cf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a06d02-614f-4efb-9c94-7cd38ef3ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6a9dde-f951-4509-bee2-127520e06db9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a905fa-3cfb-4321-892a-d399d76e86e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e73cdd-3647-4e9e-9b30-1fd87c175ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89316bba-52c3-41b3-8fd2-fd6cbdc030da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "374b8275-514a-4075-83a7-95b639182c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a350705-ada6-4611-bb88-7888380a2f98",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac84f51-c940-484e-9307-045ee7094ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4786ff02-4509-4100-9e57-e07a65fd44ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc9cee7-e2e3-4799-8481-cbf9f7afbe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54fc259a-9eee-499a-9f66-6d551b0d9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e6418e-9d05-477c-8c35-ca862d202c3a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6982bd12-f7e3-4af7-9f74-5364a6c81989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ced2e6-98c1-465b-a5b6-b5a26174aa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e663df-7c96-4413-bf25-9c872de7cfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3812f1-b12d-4a10-a49e-3e4e10d95545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda79a0e-43b0-4390-ba63-9d7bc6e41598",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e62abd-6320-4e8e-a05f-dc3eb145d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992d0fd5-922f-456d-a35a-c9d5a642ed86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50026f04-85b3-49c0-87e8-6e9c4b2389b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "508b0f14-4d65-483b-a30b-e2d96ef05b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e4d5a6-91ae-4509-880b-305b5cdc9fa7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153bc941-b537-4ea7-8361-6071b51caa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786f7aaa-a0d2-4ec9-aefd-58ee03569e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece5511-56c6-472c-9b7a-0cd73dcd6969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99bd7473-acba-462d-a919-6a7bc97d7f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c2fa4a-dcbb-4144-821f-57cec6b835a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cfc110-8eb6-4718-9209-0cdcb707bfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeb628f-9975-4d5d-b6de-79a12da0026a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df2564d-e1e8-43aa-a800-56c968741bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23124280-afdf-4a0b-88d6-b201479ee8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead368e1-a442-4b3e-9124-f63128282a02",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feaf396-1c44-4777-847a-ad4377914071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd6c0b1-984e-401f-8412-2128efe5f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7647075e-ec00-4426-ae75-f0a8157c07ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "223848ec-2553-44c8-9e02-a0507a2ca306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f26bd-0ec2-4fda-aecb-5690c2f40f30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbbc970-9904-4899-8365-2f16fc450be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff30ebd-1f70-460a-af49-b9b5f3fddc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6815c91-175b-46a6-9d0c-6db17f549981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0c5fb0-c5be-45b6-836a-6a0681227aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9e81d3-5d76-46e2-93df-4b04d07a3cb4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c3c88-0243-491d-a24e-5ab38c9c0b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4566165c-9416-4ee6-9aa6-a1f6076303f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09c866-245b-465d-94b9-848f98ddd405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bf1fb7-4ec2-4ed0-a2c6-17183bf9e589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976ef5b6-313e-48dd-8a66-6bf5093ad418",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f26d91-7eca-4166-bb06-63ab64653ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faddc68-9036-446d-bb7a-9d64c27c5747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89d473e-2a3a-4205-af4f-681fc1609534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "324351ea-92f0-4a69-93b5-5637f16ac649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13c9072-e741-4893-a05f-97779dfe1b65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b23104b-9151-4842-84aa-a65001089382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6e96cb-45cb-4be4-b591-c5c8111b7046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bf4e26-c33f-4772-a34c-0dec868782bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd25377-58e2-466c-ad85-fca17ce9bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc978a-4ccb-4b40-b808-ea2a2e2bfced",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acef2fe8-37bd-4069-91cd-783b94dca2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb06f28b-f06e-4b13-9919-3dcc8c550966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfc4353-9887-445f-9100-89ceebd0b166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5381d8c2-3eba-4c18-bf6e-15615c3a168c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bffeea-e450-47a8-868c-4a8e06d44a28",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3052779-5f5c-4ca8-bd1e-80aa62f390f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5c6379-4a22-4828-a2ba-2b9751471281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f06d16-5687-4893-a48d-951660fc0ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71d36aa-61ce-4c90-9bee-43b550348b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7056940b-ddf8-4c48-b0d5-b5ea13471d26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ae5f75-c074-4280-95ab-7bd84a5bd92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80106de7-f5c6-4d4a-bd50-c1625e977266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa17f91f-20b7-4c3c-83d1-e8c1d0467bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1b56ea-b7c0-4b05-836d-f900a4c50224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b347e1-b1ff-4a42-a98f-86351756c537",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7ddfcc-eadc-4d0f-8f2b-1cd6614bb34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fae348-42a0-4b14-91e0-35ad7b4d841e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413bd750-3114-4379-bdcb-98adabc9d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "050bb915-f1cd-455c-919e-c07d6d1d23bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c54cfc-909b-4bde-9b61-ac3cce237002",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f607b1d-2ccd-4eff-aff6-8dcc4f0caef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ff6cf6-ec59-4d1e-8811-087b1fa5f22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9cd42f-d088-4715-b6d8-0b1ad003f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "728bf3fd-036a-4fb8-a449-bb9dfa141f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8815cf-eb75-4cf2-b39e-d2387fd2571d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e4a2aa-00fe-416c-acf0-de075434c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675bb116-4f52-425b-b598-b1b993394d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fafcc4-560b-4c39-aa4b-7e80f0b03d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7668598-69a3-43cc-a4b2-24d5233fc9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7760124c-6e74-4341-8c86-54a2b74cfd01",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff92fb8-8875-4432-83be-b8d3477e3067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9da2e5-c585-4ca2-9440-f0eaa047710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e53977d-cff1-47d8-88cc-e3291918920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "285fd755-dfa2-4616-b46d-430d16c12bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e830e-afec-458e-a965-83d3731022d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2d408d-2b87-45b7-9c64-bc295b6455d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6518b-e975-4514-9b3b-bc124a2e2fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e8d53-17bb-49a8-9b86-ace990d9a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22101307-fb92-41ef-aa20-687d42b4a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7038b689-f7e3-4da8-a5e0-44969593b987",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c1a01e-d7f5-4eda-bf24-98055571cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746735b6-b1db-4d95-bc47-9e06219ba581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87b9ad-2280-40c4-9690-331e50159d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e026e244-a402-46fe-ac04-3ee9f100c62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2900a-e2f1-45e6-b384-9256676ddd71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976231ec-cc64-432b-be84-093edbbb0be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588e7bcb-cd7d-40c1-ab66-042fef45e457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c8a04b-18fb-41dc-81fd-5b128a2244e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3ce1b7-11b4-4512-ab54-8cabb85cce14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a11f984-19c8-456e-8111-b53b93c98890",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a02986-108d-4641-8228-84e5269695ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132594b6-3e6f-422f-94be-72c9d64fe69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da8cc32-86f1-4680-aa2f-c2ec0a0ef32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b3b238-2cb6-449a-92e0-8bb081b79e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60a12c04-6dd7-4e1c-805a-af4629c7c920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1ff0a3a-b23e-4930-bbd1-c3991ef9cdb8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74fbd24-68fb-4c42-9423-7588d0761207",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6caf8abd-7c7a-4813-8099-ae05a27e09e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034beb7-6b82-4227-bab2-44f85f6cf5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8802c8d9-4f08-4e5b-9c78-833815eea452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215d4524-e7a7-4405-b16a-07b072af5718",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f1f7fb-6291-4eea-85d3-f8c239d77362",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d12506a4-969a-4f0f-aaee-eeed82002e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7194a1-82ae-44f6-ac4d-eacc69d12777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f44ad48e-6701-44f6-8199-09c2f8606c89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8103e35-ad9f-49bf-89f2-d4788e9cca3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62c580d1-1d75-49b5-933f-a5bd0a8f93d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98bdff69-c53f-4aac-80dc-1b201c9c4569",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e51efdae-527b-4dde-a321-2b1d7da73dcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f658ae41-1c65-4267-b8de-eb4b60dc222a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0532f642-55ec-4a56-87e9-440d3ce13ded"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa575c12-33a9-4f78-a3ef-b5b923d82ad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a237f8a1-e0cd-492d-b11c-846b5060b5c6"
            }
          }
        ]
      },
      {
        "id": "d7255671-ac9e-4eb1-88e8-75a09e3ab853",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3ca74816-301d-4c43-a0c8-38c85c3365e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b7f3a58-de42-4322-98a1-7cc579e3ce07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b50a6e19-750a-4717-9f1f-5df9f913791d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a36547b-3a16-4ac0-8557-cc8bae159dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229d55c6-7b1b-4b09-9263-bf75562d74d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed6d66a-9a20-4327-979a-65ed828771a5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38f83de-d506-4283-b185-15b10432347f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a069cd-5fd6-48f4-8fc3-e69e7328a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aca0871-4be2-4511-b3c9-cadb30d1aa35",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f707e74-d8a3-4a11-958c-4380cb26a456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a0a2a1-6a5c-44be-8e04-bf7faf6def57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b387e4f7-2045-4309-a98e-d93b38e744a9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a7b5d4-08b7-4233-8891-56c2e0f467a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42b58d1-f673-4ad7-82f8-9c51a0e184af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381f8b7c-1f65-4a8c-9978-f46f35f09f80",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e7a24-87b6-4f39-817b-ca154686d45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6532c543-7e08-49dc-a322-a27ce5d84250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f719fc3-9369-4d1e-8296-0195d8012393",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a791c9e-ead5-46c8-b211-01a54f323186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96736e41-8470-42b6-b465-7268c304d142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c1b9a6-4ee2-4374-a219-5df48618a05d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96f6602-970e-4791-8da1-edf69ef340b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab190509-0be5-4294-9071-798a81954492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba8f10-69ae-40f5-b446-8e8022e30635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ef05cb-0f72-4f07-bda7-4edc6daca9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2dc89f-f128-443e-b2ac-5497ccf456ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0571073-62c4-4ef8-b86e-8f6a2728465e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b69381-9db7-4d5a-8381-9fb6038f818c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d00255-22f3-4d57-868a-2ace4f0072ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ae4c95-756f-4848-9af5-de15f95ad916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e6cba7-845f-4780-9463-02d04eace5eb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35ab215-8dff-4aae-9b98-933648233e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6184e0b9-ec55-4ccb-ae2a-6dfa176dd2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b863bd-9052-4aae-8ec2-8f7bc6ed3d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4644886-ee1f-4f61-85c4-c5158b757c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bca0f4-44cf-4a36-b366-f4b2e010dadc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b03c23-f5aa-443b-bdcb-d68408209cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac13b97-982b-4e05-95c9-f8f5b8f54ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa15741-8f1c-48cf-abea-cfd8db4446a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b36b60e-d0aa-403c-b98e-df6d57309954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e384b8-eac4-4312-9a4d-10084a9bff45",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd389ea9-0cfb-4c9a-b2d0-3049d919ec9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84985b9-f781-457b-b4fe-057161449678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca2e5d-069f-4381-8d8f-27aa6a7a8995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ed0e28-6732-47a1-92f0-efe445e18c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130713b-b120-4e70-991c-0d25cc9917bf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e1ac87-0c22-4e54-bfbc-18f1efa09088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6790b568-2af1-4ad4-84a5-fbe6021cf7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f549cf-a894-48f2-bec8-81e7a31bb7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabfa533-9ab6-4129-ad16-c49ea8f629cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74187edb-865c-4979-9c78-0c189396eba7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef5d526-100a-4c4b-8905-917fdc390faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b4bbe0-3d8d-4f98-8566-72f2e11dcb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d208d-1bda-4a8e-8f6d-51b08ca324f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2de496-b6a1-45bb-ab8c-ed46a174dce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e992c6-78ca-4bf3-bdf8-6c8e618f3703",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982008f6-5d41-4443-975d-3c6365eae29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb087f1-37e6-4950-ac02-fce8e745d6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74172564-78b9-4fd2-8b87-c3f881d10fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa756931-dfef-4103-a7b9-845385cae719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0787ac9-0a81-48d5-91d0-266087f0e654",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f910f6f-ee7e-4a31-9ca6-23a493960881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02112e03-3b9a-4a51-99db-27a7c0ea7ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde3bcc9-601a-46bb-b864-c6f2431dffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1686f7cd-1831-4ceb-8770-5d800dce20ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc9dad-9688-4a15-98da-0ea67622ce64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45512ce-cbea-440c-9da2-d15795bdc916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c6096c-8f10-4b3e-9950-f67f376ae8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87457a4e-7206-4a4d-93d2-892b26b17945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d41d0f2-f793-462f-b639-d8634db870a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a656b5-a3ed-4603-9259-b8847e9916ee",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85ba341-b58e-4eda-a9fb-dd2307da99e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220b50e5-e65c-4f9b-8bd6-2c8cc7eab845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bd31dd-58e7-4a4b-ae48-c91eca4e6076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff5aa48-b588-4f20-b57c-6d786b655736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03647075-8689-4b6a-9742-5bbab3d9c5b4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8b5412-44da-4d9a-afbe-18913a10b971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030c8b09-e966-414a-bbdc-e5929129318a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902e222-8b4b-4872-95cf-67660a4abb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e40c16-cefe-4643-b3b1-44699e07948b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6359ca3-cf84-41e1-a7a6-fb788d0e3dbf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9e8d41-26aa-4581-b79d-b34eb38badc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fbdaea-77e9-40ba-9990-58e5883d6724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321640d0-eae3-4cf9-af68-e5f7600ef27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c77bff-bd30-4b08-9cf3-de3a4c846148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96870d7-a96e-44f4-8d87-f52d34668ef5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc452f-6adc-4d4f-89b7-38dfd5baa803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf9b486-208d-46ff-b188-1fcabc86ef85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10f20c6-d9ea-4e81-8b75-619c728af90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0a9e3f-63bb-4cb0-8058-05eba55c66a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53c8835-837b-4ff3-a608-2695e6b9800f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be4507b-4d12-4eed-8ee0-e735bf2888f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac9fb2-1251-45e6-a008-0d4a81c0867e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dbe28c-2633-494b-9b21-70b21ff850e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8222760-1872-4bce-8855-4ebb627132f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc8eed-26b7-42a2-8ad5-1cbfc49b7beb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c469e90-d303-4ba0-add9-1a6ca00e24f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e25323c-f4a7-4192-8eb5-60a14f88ec41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba2971-8a81-4191-b6ca-de963fce35c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c8fd5b-c8f6-4753-b1ba-18c7526c0723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20758063-c976-457a-bf85-fb4027708e12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea68ad-151c-406a-b7b5-687ed547c7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e06fce-23d2-4c24-8455-44ac482ab8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671a38ba-0b6b-49d2-955a-b78ef801501d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883cb524-ee17-4c14-81f8-4250e41795a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d10bb1-d450-4f23-8dd6-a423a735d55f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218cb973-1e91-47d6-a855-37ac65f7ec76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d49756-425a-4467-9316-2611e6cc21f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f487f3ed-5eba-4499-93a0-c2faa4fbf18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcbcead-381a-4f82-8fc1-fecba3d37d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4285adef-79c0-4733-9fbd-d02591714ef3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22579fb6-a834-43b4-9d13-a21873b432b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21cf7bf-66ee-49c7-a1ae-e6900f4ff452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd3a0ac-8cbf-4ec4-877f-6713e019e766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b9daec-3ecc-4372-8b46-c48b6e3a73c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcbc855-d121-45cf-adf3-26478149c574",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3f6980-4cca-469b-a66c-469f49e98ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9057931b-10a2-4c65-b057-a12cf2669490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335f47b7-e8f9-46d8-8330-7768a8df47b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f430c77-c6ce-4ee4-b3b8-72e8df16c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9166b93-b7d8-42ed-b9a1-7d15a62a1976",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48585789-738e-40ea-96ac-99f82e82b605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c254ae7-9f92-42ff-a87a-bc9cdfef0f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c59b99a-45c6-430c-89ea-14973352c765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a44945-4211-4cea-9a24-493d52ba0585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c1e1c5-80a9-40e6-9a44-ba1e82c98b33",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39201ad-1f66-40c4-90fc-2174784a77f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55375db-d5d3-4238-ab7a-eee548611670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbd05de-321f-4e47-b0f1-1927ce372444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007445cc-5163-4995-b9a1-19970f237c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8703800f-7e10-4195-90ea-d87b6db31c5d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d9b2e-4b48-41a5-8dea-47aadf4c7c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb38b4c-d903-46eb-baea-dfa8779315a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b3defb-884c-42ec-957d-54400f3ecc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad79fade-9e5a-44e8-9376-332ac457c818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff989da-8a4e-4e1d-8df9-37bb1b5f6d33",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7b9ad2-8b01-46d2-89c2-50b8d8ace5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec91039d-3c36-40e5-b6d3-be7738f53daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0ae969-afb8-4201-9197-f6cedd7b388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465fab58-6c98-4a76-a89f-43b4e6be9eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a6d84b-de15-4616-9e26-b4ef190db9c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93c7809-e524-4a02-9be2-d8aea020f5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e4766e-d525-443d-95b8-0a3c1b5828aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0e4182-caf6-4f3d-bc38-67611484fd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bccda94-8a96-4b9a-8e99-bdcc4f5e3e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec239ac-30b2-4502-aec5-093a24db187f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707827a5-5935-48a0-ad8f-c8df0a06819a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b31f844-f9e0-4135-bac4-633888ab3c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ff599a-4868-418d-bdcc-e82cbf97b8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad41c0-5bef-4b49-ae83-ab3855afdb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5959ed7e-af41-42ae-8b2e-ee8b8c73957e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c191dad-0673-476a-8743-21551a108840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf62215-d3c7-48fd-954a-b0e72132155f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c1a292-412c-439f-be9a-2d7139292a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c58b5e-3140-413f-b283-749aa6edf02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e02b09a-1115-49ec-b112-2492faf6dd98",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a068c0a9-e65a-45fe-bc59-c7e0ce70910f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f15d06a-4fc0-4abb-95cd-14f27a6b7403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57170d-f0bb-47a7-a4f6-e9cb1c0a3845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d577a31b-3433-4f15-99b1-fbb9e7f86186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eb6ada-6cf4-4e48-9f08-2e03436ff4ba",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9d8fcd-26be-42d3-a6d5-1a441afa7542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670c1bb1-8eb5-4dee-8b6c-94ff60fbb112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f881f1b-5ba9-427d-a4e6-feecada23cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bc50d1-7129-4128-9688-b58668c28602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535ed27c-f6ff-4aea-a25e-825873f41cf6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fee5fb-f33a-4bf7-91a4-167ab64a807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3688d644-9ca5-4ee3-8693-05147cb8d8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5282ca-cfe9-4d2c-91af-27d40150fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5801c4cc-7cd2-4f32-a66b-3b769732a05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b739920-17dd-44fb-bbd2-8b4c7b3724fe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03d5c47-5062-4fd7-860c-04df8e61982b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b277986f-6b03-49fa-bf39-b780214bc237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e8c9b9-f510-4429-abda-91f2e579c113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1f18b2-f58c-4ba3-a444-9591c9595d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e848339-e311-4aa7-8efb-1dc2d8680668",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8bca56-d602-495c-9fef-fb246d141d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97db6761-eebe-4752-a05a-8e67246a6c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032e1518-98b8-4dfc-a58e-be8e2c6c49c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bed180-d9cf-422d-9b48-b111e097e0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb68fa7-4924-4435-a847-897f80bf296f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46cab00-8819-4db5-8f8c-de14c3842ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e62e00-632d-4968-90dc-12674c78e5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4e5fcc-a867-45a5-9c96-5870dffae154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832acf19-e09c-4770-bcd1-fe7552dbea7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce8a2cd-606a-4afc-a11e-4a4e314b017b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a52cf-33bc-4889-9e86-c0c8b5f03553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d38347-8fd3-43dd-a865-a6a9e81d55ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05376500-7c8a-42eb-9da0-016d878d2e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6189b001-0c3f-4f82-b7f5-7c3fa4276188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c86332-6173-40ba-ad93-04f0a7084d38",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b845af7-0bda-46de-8ed9-43e91c1c41bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7836b3f-1f51-4c7f-be09-b49cc63f9a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda5c9c-c550-4182-9036-6a5e5ee46069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d25561d-e7b7-48e4-81aa-acffe11daa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03aafa2-320d-4011-8328-8f63275c3c74",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41983dd-6bd4-4de3-bc9f-2198bd20817e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf834fb-26c1-4d79-92f7-4785226597ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8407f20e-d552-45d1-9a4b-56ef75747271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396344af-3d4f-4d2c-8f76-c27fdf12ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7ded2f-83eb-40f1-9b86-505c5d06a3b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe67df8-1ba1-4e30-a200-a15621791236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7bd2df-2ee5-4ca9-ad5d-3b8450296a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e424b0-95a6-4087-821e-242535b75523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2195cb05-20c8-43d7-9efc-13ed6afa6c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17fcb5-625b-418a-9033-c02cbdada781",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f983a370-2f15-4732-8f8a-a53d3b39019c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d2bedb-b116-4296-bfe1-7ae9d69cc84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9cf618-0e76-44ce-bc01-a933a6d1fa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4bf285-ff85-4f81-ad74-d7fb5beb549d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46478d67-e3f5-4ef8-94c2-56a04353451a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2e7391-2bde-4989-a088-6e06fceedc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879be9fb-b3d6-4133-84f0-a1c24d735a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35974c4a-6950-41fc-b4b0-5d8ad03c47d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5268dec-8c5f-4255-b27e-3fbc047b84e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becd682e-f325-43c2-87e9-2010324f9537",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac68497-1665-4281-b2d3-ea0286e57575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f662edf0-a293-4c9d-ac25-89114f86e2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3da9fe-4dc5-42cf-83e4-3188d8e9f3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485dcc6f-b0dc-4db5-8a9e-7f37945495d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0fa4dc-44d1-46c3-be8e-f3609f3dcaf6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcb8517-46fb-4a96-8f6b-f600f3b532c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c6c77d-e78b-4292-9220-bb7a18a944b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f0bbc1-9fcb-46da-baec-367a58e5a39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099a7bbb-9c12-4f22-93fe-9e3516229bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96966910-8d78-4268-99c7-63863971e3e4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4ebcb-5e10-4ba4-8cd0-e973ddcf614a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6b03f1-f432-420e-b4fe-07b555ea85d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5645e3-9b4e-47ce-b854-14e012d0da45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baab2fb4-4342-4bfd-b5f8-7bcc143bddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b170b6f9-e438-4d01-9a81-fa1089197ef2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f6638c-ea38-49e9-af74-69c2938830e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806fe5f5-1962-4daf-a79b-fa455870f2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a364fc78-276d-4f57-ba52-529cb4c57bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70217f41-406e-4d33-9c85-1858549950fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e61573-08d4-4c4d-adae-7b89b307ecff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c825f5-8191-4ecc-9eb4-54142676fc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba3409b-84af-45ea-b53d-7b9f21f8055c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ef8d50-8420-4f44-94b5-16659ff3eedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511c7a07-2643-4b02-8463-d78f14c8062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcc146d-4f9c-4c4e-99a6-bc93cdd7fcf2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7544dc7-8cc6-484d-9702-151ab472b9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1d8cbd-6c6c-4dc6-bc4f-90996ca6ff60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbba4b4-47d7-4a4f-b178-f140b60a9961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc92121-9b1a-4f61-bf5e-ef095764156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c429640-d29a-4fbf-84b8-ff72a26a9ad3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d9669f-4433-4f9e-bbab-56ffd7e4498e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562f4d76-fb84-4df3-8833-21a95f0d202c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d46e9b-4a57-4385-8488-43c766ba59c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4565c1bc-69e9-4bc5-a351-e7b419fd62b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbaf69f-f460-47d1-838b-bb2b736728ce",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afabcd8-25fe-4ffb-b7f1-04a771991f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a01573f-e3fc-43a5-82f4-e6409374809a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3880aa64-c7b3-42cf-83cf-ea5c46583409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e5fad4-8153-4b6b-9600-9daf8f0bdaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f249866-4e8f-461e-98b8-b2f98d899d16",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4008d3-90fa-4f6a-b887-5306f37e555d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d860b1-8962-406b-b298-6dd8dd64e995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491aec6-3856-494e-900d-2fd336239aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28654df-9252-4ac4-836f-287e03e1a383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719cba2e-37d8-4186-b433-0c1ca2d5d310",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf90fcd-10a3-4153-840a-45275e535adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f7da7-f9b4-4c21-b988-0b37e49f0368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40028987-2749-4274-8a77-b5856b362c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c16b942-155a-4451-9d0c-c43ec25469c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa6c68f-24e1-4f0f-b8c5-60579a660c02",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee80bfe3-cfb6-4cb0-af9c-c3b07ab578a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351f3d34-58f8-4ef9-b9e3-f1605b8e7003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc1c07-e801-4fb4-9ce4-38d18cde6194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cd9b1a-5ad1-4000-90b2-9e554805be34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6d6291-e648-4789-bce9-f77e35e4df07",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334961ea-e663-4378-8ddc-6af6b3ae8bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44a150e-a1f5-47ba-ab19-da02049e3c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e644a589-1d6e-48ae-b56e-a00dc26d062b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae640c2-b6e8-4b02-b6c3-1f428d0ca467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdd68e3-11b5-400b-9707-6eb394896dbc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ac8c1-95ec-4a3c-a6de-51a47c383be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719640e5-8ecd-4026-b23a-67547e68e1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a643d073-784e-4247-a84e-b427574cf6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f193f02f-4528-4e79-bf22-9ca5435ef9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6300d96-d7b3-4e06-8933-14ee9d544e16",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07475f1-4a70-4839-9e3f-4bd81ca82fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48affd42-05c8-486e-a0aa-29029992900b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe6e9e3-a3e3-4fb8-980e-57c78994d7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33e1d3d-9d98-4572-b366-2a4c789e8d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8661c80f-19c6-41eb-9aa2-0ed447f0864f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff4b860-4054-427f-8a42-6f97dc118355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e39db72-41d4-4240-849d-1d921e371a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f1b294-de96-4cf2-91b2-d0a08253fa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95decfef-a879-4599-9926-b2ca72db30ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2045e166-1c17-490b-93b9-dbc49aa1de4c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6602b-afa6-4594-9339-d8c2446da1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95e6031-41ae-4dde-a6bf-cfab1129a1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f01e4-73e9-42dd-8a5c-351289e14c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fa96d4-e996-47f9-99a7-ffc4c990b025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0083fa78-dbf5-4f08-82d6-176bb52b532e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2cb33-e8b9-4460-a044-f536536a3973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a385a82f-b169-42fb-aa63-98c3c2730941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d360e8a2-70a4-4ac6-9b88-01316d005678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6f8aeb-d92b-40f4-81f9-72279274b3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf32ba2-73c6-4dd3-9b06-2b817e228d26",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ef02bd-cda1-468c-9024-29e25fe5eb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f2cc2f-8da5-474e-969b-81b9f52cb12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7f1f54-a824-4ffd-a6d8-ffd5c5b0446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30b3ba6-295a-48df-8de9-6b8246bccda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022aadb3-9752-4918-863c-f69f21b7c8c9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc88dd5c-a241-4ad8-9b45-e5de906cf681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629e154c-bb38-4566-942e-a3d2a4990dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a734b60-0b4d-4b11-8650-fe60d8fde281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ff2732-0fb4-48ed-bd26-871d3934316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4bb0c4-d7df-4bfb-bac8-ac85fd9d4934",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216543d3-6541-4ed9-8036-8e5be186100c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6f3564-32e3-4c6a-b3af-8a25b40e28c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7098ad63-e4d0-4c05-98c8-e1b18c87e958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1264a18-e1d6-4b32-b86c-272e6c426fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16824c3-bbfc-4193-be02-b451640d33fd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bab8fc-d26f-4665-9578-aa9552aff858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e96c32-c216-4fb9-9e2d-2caab0e63207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f451b365-c395-49dd-8afd-82696d1cc3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc73a02-4bcf-4462-88f0-8e3f83a70bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c4f93a-b41f-481c-8eff-c8ebf65ba51c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b43514-7147-4401-9db3-337eae64cf4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937bfa37-1749-4661-b069-d61718845ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702a063b-7856-4f26-a5d5-f5ca5441c090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7b51d1-bda5-4d79-b0a4-550ed857050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353f5fe5-a66f-4e7f-8bad-b8d5acd14922",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653c1f22-b8d2-46ff-9005-646a08097ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4449169-636e-4941-bb7a-d17afa3033b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453e55d1-8191-4be3-bba1-55974f10329d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9323ad18-88e9-4a8f-b0fd-5d4a5cba3fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c0e93a-3868-4e23-aad9-10a0f698bc98",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259f6630-d597-4b47-89a6-dc4d86de85ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7185d4-6029-436c-95b6-ef79f3ca4cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c3b19-4c68-4fb4-84b8-52305b0af749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979c2388-4d60-454a-aae0-4f79084553ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d3a1d9-e069-4307-9d7b-df15affd1f71",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b74f3cd-dbed-4b04-a47c-e7ec610b4034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e3fc8e-5f9a-47f9-99aa-028faf2e6f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc445be5-7e86-43c6-9fa6-6a3f19a56dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5c4fea-14c1-4f57-bc21-ab806ef74a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33472754-44b3-424f-bc6b-80253230d20f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e6a620-4b26-4bbe-86fb-a68239a72824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54ea03d-0b4e-4980-a08a-a6068c44ef6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062d3a8f-387d-4c0f-b92e-595f565bbdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de77f7ef-c056-4b9e-99d4-91115ff5dd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76222e30-fa9e-49f6-9018-1674a2af0a0a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac9615a-4b36-4333-99e3-fadf1485260b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8364db53-f178-4a47-bbd0-c738ac47f613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b046769-f271-48de-acbe-d8a30ebf9065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380fd3e0-58d9-4230-9e76-ad77bf54b796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa49ce7d-86e1-44cd-bd42-5aeaf42bf124",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a714194-44b3-4001-ad19-3d3e5ec3d0ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7a6f39-9cc1-40ff-bbc4-36a788a1bf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b58ab-17f4-4e6e-8cb1-20d3e0a4f994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19e9194-cf93-438c-a656-c7eb52f63c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b8314f-1885-46b3-ae03-0a816c172cb5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deb3c4f-5416-41d8-93c2-9dff55b20ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4163df-c855-474a-a1f3-af19707d6ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de5654-2489-41fd-a88f-fc360bafdeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84f7031-d11f-40da-8703-f02163e7d3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190aeac9-0e34-496f-95b3-24bcf175edb9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054814f9-8c38-4d19-a6c1-0928e2bf916d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe48074e-5b7f-4cc2-959a-8f251e7255ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dde726-a02c-460f-a221-323a1746ff75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9dead60-2c73-4920-a6a6-59872c5fc0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5356d9-a1ae-4777-ad7b-19e16897efca",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c73f81-335c-4daf-864b-0ac272a462ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8bfddc-161e-4a36-ada2-9da23f6bff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c6f17e-4948-410b-b0c7-979deaecb0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fce7650-3d21-45fb-86bd-d5120244d10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9988c6e-04b5-4c13-92e5-28955dea7c09",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f1947-e071-4620-912b-ba67cdddf2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3050286-5897-4058-9f4d-783162cd2388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219440cc-f1c0-41e8-ba41-ed5e2a5198c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec45713-b541-4a64-a3ba-3dd5d499ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628c53f0-1bdd-4500-b30e-0a49d073e255",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac07c3d-1464-4953-8229-5eba648b8bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5d11cd-bf9a-4236-8518-c9eef1fa5fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9240ba-4f5a-4ac3-a443-2e92440562ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af4635-5936-452d-9507-4e8c9f103062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c406f1b9-21cc-432f-8826-2a7c3c486a74",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6f29d3-771a-4fe9-be73-6f060bb52f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9576515f-02b6-4ade-b22a-b7092ee38c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d165b2d2-5436-4c10-84e8-631ecff52eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbc8b4e-b521-42c0-9a9d-7ed829a7e283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa908f8c-16b6-44f0-9fb9-44ad69e1aed4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bd8c10-ba12-4f21-8f5b-368e8cee6f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df3a83a0-6e87-47e9-b93d-45963cd53d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee7a3ae-2685-43ac-acbe-60a446ec441c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a458d9-ab15-44e9-98fa-a5701e601bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f095dc-4e8d-4019-b668-3c57876835e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b632f3a3-1b1a-4a40-9c25-7a9f717e722c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c593883-4148-48ae-8554-424cc8e73578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869bd36-6d21-42bf-b200-c463eba791f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a733e04-6efb-41ae-aff6-f6937319b369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311ca849-99c9-48cb-bdfc-57bda78f5c09",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f81f22-a711-428e-bb69-001c900ea4aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa90587-9e16-4a45-bc31-6225a1b29684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a59fe-77d0-445a-a733-95ce16cc260e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77f8810-17dd-464f-abc8-782e146d9635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee847d7-e669-4844-8202-64ba37f76cf5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b570de4a-af1a-41c7-b737-53d6c5be99ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e695a405-3d2c-42f1-9bb9-3129d1580094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cedc5d-42d7-4c25-a41b-691b666a31d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed4a761-514f-4519-86fc-1d1556908b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b3b59e-ece0-43db-80d2-e8542f0335c5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d603ad-556e-46da-a4ac-861b1a32fe4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87207108-1d0a-403a-a05d-3bff3ede4900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f38fcbb-628b-4dd2-9849-22d08f2ba45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3c8522-c8e7-4bdb-b9bc-af9b93911150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff18b46f-fd41-456a-8ca0-5f3121dd47dd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066a69c9-0b09-4df3-ac85-4cbb7aeb9e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e5b741-c7f8-4420-847e-56096787a7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee9e000-70ee-4c50-9922-90b5132b3a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3178a6b-3024-4274-be85-2719eb440483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a2bee-e50a-4da5-bc66-9e7737985e4e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f43a4f7-04ea-4a44-a066-e61e92d3ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478bde1b-0936-43d5-9b79-7734d2120205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0a24e2-4716-4dc9-9ace-8a851818caa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0787e9-45cd-4d26-9425-08414ca54091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206d954f-eb5c-4561-b977-4db83ebef488",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e1795e-16f3-47f3-b84b-fe252ebb8c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4090b152-1441-4bbe-8ffa-b5ed53d54248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a54746-fab2-4132-bd21-ad42a1c19c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277b380d-b5b5-4fcd-8efa-30d56b1ae689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f2219-67dc-4deb-b12c-fcb388e47e6f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b798d-64b3-4ce9-bcbe-6a907a777ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1294bd37-551d-49a4-bfc4-15e5072e9e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179fefc4-4748-4ad3-9751-69fd7db331a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93c5b94-df0c-42b0-a06c-2b2d43d86516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e309f-0208-4728-85f6-0c3beec46459",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe8fcd7-ffdd-4e5b-ac4f-8d3fe8ba7713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0a02b8-436d-44f0-a836-c5750ab2b0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdf488-288e-42f8-ac82-0e4c52f9c27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8f6d41-ba96-4810-a3bb-51353e56a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf48bf-fc51-4071-8233-69212e91d9b3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b436ae63-1fd7-4697-b434-cb61bf9b0383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1563017-9910-46ee-80f9-de17bb4c0101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f94904-cf5d-406c-ac28-e62c5454d04e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce63df1d-79f4-4dfd-a122-8b3d2e58e446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85658365-1002-4cad-b21f-7291746b12ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae13995b-8eb5-4fec-bae5-479502cce6e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499c9ce3-c636-4b84-aacb-4ee8bb3c13be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6d9513-27ce-4df5-8aa0-89c7c577806c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2985449-f318-4293-990b-6fcbf90c380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25f73cf-7539-43fb-8aad-aaf7fe335965",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53cd755-2509-4722-83bb-d6bfcb533cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cea7e9-ba84-4e3a-9305-83b04104dc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5e089-6f2d-4c15-8805-0634b594f242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6953e32d-43f7-49ac-87d2-ec72e00e330d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee819023-c799-4c9e-b4ea-4f2abed9da35",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9331105a-e3e1-4421-b7d0-8dc621101435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f31826-839c-4111-80df-98aec20d070d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd72731-0e4b-49cd-89f6-3215dab76b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c6ee50-6dea-4e66-940d-79d3f7ae9022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e84a9bc-598f-4647-800d-b4b604e64a05",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3283952f-79fa-49d2-a497-b85db806b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "398638c5-94d2-4cc0-be7e-a5a07b450af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81400d-7497-44f3-87fb-2dd89186c829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15ccec7-9882-4d92-9795-80972d5eab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b13df4-1513-41a9-afcc-e3fc12d2a746",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd496c17-3944-40cf-a333-28965f4d1557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95616a02-3fda-45b8-b28f-c6611ba4efd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eabbc37-2a28-4278-b948-a9df1c4f144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73561e5c-d118-4fe6-8af1-12a3d7b2ad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fac7fc-5d3c-4929-bf5a-29d3f12b452a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733cf866-aeb1-4833-a418-c48bb01b3a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83af59bf-b42a-4f39-86d4-e09dfa763d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d903d7-3381-4c57-8f53-5fefa7c4e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760d2182-e99b-4662-bee8-28e00911020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2d8c76-477f-464e-95d4-5151b43d6f90",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def6fa00-f67f-497e-9ad2-f40e4eeffc94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67f5030-f8ec-4e5f-962f-db3bc09493ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c8c1d-1ca2-4228-8d8d-f3250e056c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd069dcb-21e3-44f3-a56d-aa1fd3742263"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39b40c4b-d217-4dcc-bf7c-8d57667fd825",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b33c2c3-7b9b-4f1c-86c7-f886db579def"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71431d9e-8d18-4858-aab7-3063cbff56d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22c8f05f-89a4-4048-9894-8988dfd68660"
                    }
                  }
                ]
              },
              {
                "id": "306b4f44-197a-488c-818d-f7eca2465fa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "460e93af-6477-4421-91e8-2509cff86e3c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09397c5d-3d58-43a5-a0f3-26ade6d07cc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9f80fd74-f260-40c4-9c8b-a117701d9255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7556280c-0dfe-45dd-a831-290d7a1048a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "581ead3e-b19f-4f57-93c0-18d9da493a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e82365-9f84-4a32-9db0-47c4a99dcf71",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e5b210-07f7-45c5-b25e-85cebcdc0041",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "278bf85b-4cdb-49e0-85ba-4b7830784f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0959eed7-3b42-4cef-865d-0869f8d8c9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ba14cf-6607-424d-b017-35130cf76c47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8805df89-13ff-414b-8083-d6724f8d322c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1660ae1-30cb-4329-ad0e-683941e053d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f3bc2a1-256d-4994-b121-5a74f5369d37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0233d3c-c6e8-49d9-bc63-d35913da0f4e"
                    }
                  }
                ]
              },
              {
                "id": "113a780f-7db0-4f41-8ee5-1338e6c8dbd2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b261195-4b76-4c20-89a0-9432022c671b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d1f30-f6da-4b33-b682-567c4512eaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3ffeb7b3-ce81-4ad9-8ff7-59b23ce23f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6b20c-ac33-44bf-8593-d9dc404322bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6b1d2e-df78-474c-8177-3e28a81b2cb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0602cc2-e8b0-4e6c-bba0-cab326c37be2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85cf476c-313d-4e6f-aca1-f30506c4c5ed",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "047863b7-4519-45c1-ba17-59bf06a1be3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85cdca5f-b20e-412d-a33b-cace5cb25cbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9283624d-1f92-45bc-8bbc-a21d6548b2e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9b0aa53-b620-4fa7-89a0-0f6708670a07"
                    }
                  }
                ]
              },
              {
                "id": "9e74e115-37b7-4e88-9d7a-834eb301464f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "985ad6de-e38c-4e91-aa54-59e82da87417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90d709ff-cccb-4766-98fa-d0e1b21fb47e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9f6d9a1-8ecc-4cbd-81f7-da30572157c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3949a34e-6b69-48fe-a4ed-8da7873048a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a57aea46-b565-456e-b4ee-13de4f746cc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "48aca070-041a-48db-8c8b-2b6c2cbc8936"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e432c6f0-c942-4755-adc4-6aaeda053008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ef10338-1f63-463e-b361-31d7c964adc2"
            }
          }
        ]
      },
      {
        "id": "11738514-5c56-4169-848b-a1c6387b3ddd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aca565e4-b8b4-4556-bae2-aa110caa4c37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b1f55b2-fa01-42b4-8eea-68acb2938910",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93ae691-96b7-4220-a8bf-f178878ba74f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "20a63494-c49e-4911-98e5-2bddeb0a6467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df252572-41fa-40cf-acc9-8b9b735b3cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a93b6122-2137-48f9-83da-1a403cf5a582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c95415-574a-43ae-9903-a35e8684219b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a616887d-ba49-45cb-b630-169fdf1391b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c132a10c-5299-495f-9df8-2c3fd5530323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9151862-ed6e-4874-8d27-5613519c773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deac4ad3-e67c-4479-84ac-e94a964114c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e891f17b-ef11-4868-a122-ecbd01a482f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9d539c2-7259-4d1d-84f2-85a79d44b309"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1876a36e-b36b-40c9-a7b5-89f807f68b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5cfefaa-d3f5-4239-9103-4fa3553e4aaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a9c7c9a-96ee-4bce-8db7-4eee8a4e96c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0fef3179-7ff0-4acf-91de-fac8bc89e53f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78d15111-a7c3-4036-82c9-28e7a7d3dcca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eac67509-a971-4fa6-bb9b-193d1838b0c0"
            }
          }
        ]
      },
      {
        "id": "fb9db55d-3624-4637-85f6-917026f4ff66",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f5755d2e-0796-43eb-a960-93c18da9086f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "740ff3e6-8cca-4395-90cb-ddba7644d87f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa56ce0-dc3f-4729-ae98-68f628f6b149",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ed0f05-088c-45c3-8643-3e4396b7266c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b83306ff-9241-4c3f-b09a-c661b013f601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e602561d-e098-4502-9b51-99b097c496dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95fe7883-0a85-45fa-9ff7-079afa622c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d917ef7-f27d-4416-9a9c-63de8935d287",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a062295-b2eb-411e-8ecf-5315a5f837f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d5c586-325d-481e-b381-72d1eafa10ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a29778-ec95-4bd0-8447-4a3a1e9da92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5975719d-8b93-4b37-9d3d-17508904466c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "297c824f-29b8-4ef4-9c84-950f18c0ce8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2445ce4-8de6-4540-8939-2016c11f0ac1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e9c37f6-ba1b-463a-97bf-30c088d5e37b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc0546b7-44a5-4e10-a1c2-3acb2420fabc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e824edfd-3af0-4638-bdb9-e4354b63c7b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6ac6081-e5e1-4d2e-963b-c237a26be43b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7b8fa53-5dc4-4857-9ed0-d1e67b226eca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95840d11-0910-4c0e-b725-506e026e43c4"
            }
          }
        ]
      },
      {
        "id": "b36045e8-ebd9-4c94-956b-c6c9eb4c89b7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0967730c-3e08-4cca-845c-cd927110167b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59533aaa-d85d-43a5-ace9-c356e966c0f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67c92f9a-1416-4886-9ea1-c0d5bb59f569",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b373f3-2c5a-405c-a046-dddcaf109041",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a1ce912-a92e-4174-8b06-c87f90dc989e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4541cb-928e-430d-9241-74309ba10815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dea389f-2d47-422a-af26-799e9f9d160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f6a15b-85b4-4e39-9cff-f8fb55255ebd",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc08488-311f-41ce-ad70-1b35b5282fc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2495fd95-78c7-4548-ad95-bb8f0f123cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7455ba37-d5ae-4df2-b1d5-f66d9860e134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09cebfe4-df28-4179-8251-25d08f7c4d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13e373f0-510d-4fde-b733-f2c693d1fbf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7992f8b7-6aa3-46a1-8c0b-3a0e3979cbf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a0953e7-c2b6-411c-bdbc-fcbd971580d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96b5e3e3-2005-4419-b5ec-8bbc594921f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eafe70ad-ea04-4a86-b377-5ce96d063cb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1256a7dc-c4ce-43a2-84ac-06e8fbffa99f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f188ef1b-9186-48b1-82de-bd46ce090752",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fadb35a9-5af3-4d55-9d75-0df164ea79d8"
            }
          }
        ]
      },
      {
        "id": "c22d5f22-9764-4175-af32-29a2639f03a2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6806d031-5470-49d7-b521-d9e01e37e49f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3b4aff8-5e43-4bae-8890-84b06603f8af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "212d4c65-4875-4046-95ed-0ba6a0253289",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f413377-7283-4187-8cfa-1d989e4e4f5f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09bb1116-f4f4-4619-834d-be0dd9873fb7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.86153846153847,
      "responseMin": 15,
      "responseMax": 320,
      "responseSd": 37.58319056463609,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683765406605,
      "completed": 1683765429987
    },
    "executions": [
      {
        "id": "f9e97f8e-4c94-4c16-ac9d-b3c1f10f67d0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e0921b22-733e-40cf-9fbe-f32f8ed81ba5",
          "httpRequestId": "edc66385-f9dc-4f7c-af92-41c3694bde99"
        },
        "item": {
          "id": "f9e97f8e-4c94-4c16-ac9d-b3c1f10f67d0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "34e70cc6-77b0-495d-83a9-e02b11f51924",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "233b8723-c58c-4e03-90b2-7114a50cc222",
        "cursor": {
          "ref": "03cc399a-87d5-4d08-8d36-f273fd692748",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9e67928-d670-4660-9fe0-7f2dd41d63f8"
        },
        "item": {
          "id": "233b8723-c58c-4e03-90b2-7114a50cc222",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e21ba0d-8452-4e1c-9354-cb8e374e7502",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "77bda695-61b2-4281-a818-26a3c1342bb0",
        "cursor": {
          "ref": "0cf1ed48-11d9-473b-9511-a2e3f2506c03",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3b8ebb30-56eb-42ea-b044-cee7ecba1855"
        },
        "item": {
          "id": "77bda695-61b2-4281-a818-26a3c1342bb0",
          "name": "did_json"
        },
        "response": {
          "id": "b8af11df-9405-4f40-a551-3eabf2e0cf54",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52951811-d8a9-4c9f-9d35-35f8452b1c3d",
        "cursor": {
          "ref": "c5604f29-4dc9-4eb6-a3ec-22275706f918",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c06f210-680a-40b7-ba50-3800b600795e"
        },
        "item": {
          "id": "52951811-d8a9-4c9f-9d35-35f8452b1c3d",
          "name": "did:invalid"
        },
        "response": {
          "id": "237eb0ed-76a6-4476-992a-ad1f6d846a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52951811-d8a9-4c9f-9d35-35f8452b1c3d",
        "cursor": {
          "ref": "c5604f29-4dc9-4eb6-a3ec-22275706f918",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c06f210-680a-40b7-ba50-3800b600795e"
        },
        "item": {
          "id": "52951811-d8a9-4c9f-9d35-35f8452b1c3d",
          "name": "did:invalid"
        },
        "response": {
          "id": "237eb0ed-76a6-4476-992a-ad1f6d846a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9580018-0cf2-4451-850b-d550d2c83456",
        "cursor": {
          "ref": "9bd2f9b4-6c65-436b-b3b2-6166dedbdfc8",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c8e871a-22b2-4048-8a06-03549e4145b2"
        },
        "item": {
          "id": "c9580018-0cf2-4451-850b-d550d2c83456",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "333d274e-b771-4832-8100-270560e5994b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf4869f-9926-4cd8-9c14-8f2dd19b96c4",
        "cursor": {
          "ref": "394103a5-1fb9-44d1-81ad-8775720875ba",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ed8a4c09-f3b4-4812-83d4-29578c112638"
        },
        "item": {
          "id": "7cf4869f-9926-4cd8-9c14-8f2dd19b96c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e9a2032b-4c4e-431f-bd5a-1c6c9ebbb09d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38422751-1578-4fa1-80f3-6eb8deb3053a",
        "cursor": {
          "ref": "e4416de4-1a15-4b35-8607-d7b297d28f2d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "75e70ec4-4343-4579-93be-dd10b4bea36f"
        },
        "item": {
          "id": "38422751-1578-4fa1-80f3-6eb8deb3053a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "db98e6ae-f9d5-4d22-a8dc-d574a57f53f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67698e8-44c0-4641-8832-5e2434cc918a",
        "cursor": {
          "ref": "77404a2b-deac-481e-90ba-4ac0a0d2dae7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76c73e08-a53e-4f44-9ec7-b1693c857287"
        },
        "item": {
          "id": "a67698e8-44c0-4641-8832-5e2434cc918a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d652c38c-e8c6-4300-9962-f48fb62f920d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67698e8-44c0-4641-8832-5e2434cc918a",
        "cursor": {
          "ref": "77404a2b-deac-481e-90ba-4ac0a0d2dae7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76c73e08-a53e-4f44-9ec7-b1693c857287"
        },
        "item": {
          "id": "a67698e8-44c0-4641-8832-5e2434cc918a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d652c38c-e8c6-4300-9962-f48fb62f920d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afe739a-01d1-46c5-ade8-0108db57ba21",
        "cursor": {
          "ref": "03c62bee-1c9c-4bd1-950b-15f493a047e0",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "727b992b-8dc8-4e78-a7a7-bd15c4ebd298"
        },
        "item": {
          "id": "6afe739a-01d1-46c5-ade8-0108db57ba21",
          "name": "identifiers"
        },
        "response": {
          "id": "643d3ed6-02e3-400f-9031-a43a83d83b57",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e1a49d-a2e3-4ecc-8b76-82c75e452c49",
        "cursor": {
          "ref": "862afde1-1cb3-4940-a9ab-fa9b3f2a8567",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b7664ea-9d42-468b-acc7-7eaaac1aea4d"
        },
        "item": {
          "id": "a9e1a49d-a2e3-4ecc-8b76-82c75e452c49",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5bd58a6-04d7-4447-9071-b433e3579f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e1a49d-a2e3-4ecc-8b76-82c75e452c49",
        "cursor": {
          "ref": "862afde1-1cb3-4940-a9ab-fa9b3f2a8567",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b7664ea-9d42-468b-acc7-7eaaac1aea4d"
        },
        "item": {
          "id": "a9e1a49d-a2e3-4ecc-8b76-82c75e452c49",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5bd58a6-04d7-4447-9071-b433e3579f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1927d8fd-602d-43ab-b092-99d4db70307b",
        "cursor": {
          "ref": "f2820a94-9d3f-4495-b1b5-a7cdc785c0d6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc576075-d9be-4b96-85d3-30310ff38b5f"
        },
        "item": {
          "id": "1927d8fd-602d-43ab-b092-99d4db70307b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03532fc8-f1c6-4d28-b311-662e31fd379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd47d25-a564-4d25-9577-64eb50b1482d",
        "cursor": {
          "ref": "85dd4361-bca3-44fd-85f6-70c704a71984",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "89d2556f-a963-4a11-8cc4-cc8d8bfab05e"
        },
        "item": {
          "id": "4bd47d25-a564-4d25-9577-64eb50b1482d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "844873af-ae64-4fbb-8574-1f6c9d3bc539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef458de-5c95-4365-8838-6b8a157ac990",
        "cursor": {
          "ref": "52b821f1-dba0-434a-acdb-6ace1a36ca76",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "96b86223-1c35-40ab-93e9-c014cb5e177b"
        },
        "item": {
          "id": "1ef458de-5c95-4365-8838-6b8a157ac990",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4f1ab08b-d649-4901-8538-cbc757679361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a19b49-fe18-473f-b444-e73f9bce8216",
        "cursor": {
          "ref": "9c3cf517-33f9-4f95-9572-5ae86ea599d3",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aa33e648-857b-4d34-b490-460c912696ce"
        },
        "item": {
          "id": "48a19b49-fe18-473f-b444-e73f9bce8216",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e04210d2-5710-42cc-ab6d-52e8596e8849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8ebd30-189d-44e5-a2fd-9e929a023c27",
        "cursor": {
          "ref": "2b138bac-8a84-46b2-9bd6-c4254dcb51ce",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c69221bc-ee78-4504-a2f0-e38e64f8f0f5"
        },
        "item": {
          "id": "2a8ebd30-189d-44e5-a2fd-9e929a023c27",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "da2032b7-150e-48b1-9661-70387612c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e41438b-92cb-41c8-b348-7dce32c6b2ce",
        "cursor": {
          "ref": "62089a41-9188-46cd-8877-2a245e0d766e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "648686d0-4106-4218-be17-20887a1d169b"
        },
        "item": {
          "id": "9e41438b-92cb-41c8-b348-7dce32c6b2ce",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc619795-03e6-428b-82d5-e5a012aa525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040008a3-c70c-4141-9112-7470e4b8bf53",
        "cursor": {
          "ref": "758d47b4-2a36-4e2e-84eb-f0ae6c3764f6",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8a21759e-8414-4c2b-bdeb-94bd47f04990"
        },
        "item": {
          "id": "040008a3-c70c-4141-9112-7470e4b8bf53",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c5f22a2a-eabf-4bd8-ae28-51ccda3d051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfef824-2f81-4b2a-ba2f-6c54953570fc",
        "cursor": {
          "ref": "70065126-bdc6-4f68-a83d-05a17529f46a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3d34b4b-60db-43bd-8e20-3807bfaafaa0"
        },
        "item": {
          "id": "ddfef824-2f81-4b2a-ba2f-6c54953570fc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "87d078c4-d945-441f-93aa-2e624a50347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbdee20-6375-4e92-9ae6-f29f44339cab",
        "cursor": {
          "ref": "56159eaf-03e8-4db5-ba24-a2985dc12cbf",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "34c5ab34-775a-4ee5-bbfb-418e6ac1acdb"
        },
        "item": {
          "id": "7cbdee20-6375-4e92-9ae6-f29f44339cab",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58bc4c85-6787-43ab-837d-7a75c9661fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cab8a0-ff75-4d34-8278-f6df2d3ce826",
        "cursor": {
          "ref": "8b12541a-75d4-4915-8389-538986e96b43",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52ab0109-913f-4b54-930f-bbe181ec11d0"
        },
        "item": {
          "id": "e8cab8a0-ff75-4d34-8278-f6df2d3ce826",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e110f418-c8b5-4172-9922-d2c5cd9c9278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf6d817-97ad-457c-869b-40adf98e8365",
        "cursor": {
          "ref": "c4d4a709-f6a4-44d0-b16e-3e032fbdee1b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4ab9551b-f0ee-4921-8a97-bddf7ba4fd8a"
        },
        "item": {
          "id": "0cf6d817-97ad-457c-869b-40adf98e8365",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a0c0a34f-d980-4161-92ac-f23eeab85b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6693a-7373-4ade-b837-2639522d99e4",
        "cursor": {
          "ref": "72ade6bd-eef0-4f41-9d39-967d887de10f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "461a25c1-0b5b-4a76-b7ee-f268d2e6873e"
        },
        "item": {
          "id": "2ed6693a-7373-4ade-b837-2639522d99e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "24a78fde-80bf-48d9-bde7-2ab0929af60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542413a7-8dc2-4e79-941f-1179a4de3385",
        "cursor": {
          "ref": "7b0e87d0-5d3e-400e-8f01-8ce7507ba4d6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4cb47ef5-272f-4dba-a17e-1266ac49d286"
        },
        "item": {
          "id": "542413a7-8dc2-4e79-941f-1179a4de3385",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8fa1a6d2-6983-4366-be5b-b07e8fb27e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecb425a-e3b7-4f3d-b16d-acb01e6d0390",
        "cursor": {
          "ref": "876b7b8b-ff97-42e7-acff-eb1d76e9181a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09fe7689-5184-491b-89a2-7ecde51f7300"
        },
        "item": {
          "id": "5ecb425a-e3b7-4f3d-b16d-acb01e6d0390",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eafc5a32-ed18-4c20-a95d-273bd4caab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc07d2e-cb77-4788-ae13-625855f39aed",
        "cursor": {
          "ref": "64b05c45-b580-4b63-a22c-0f7e56be4fd4",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "82fb3c60-be30-468a-a60f-5094560eb014"
        },
        "item": {
          "id": "acc07d2e-cb77-4788-ae13-625855f39aed",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "191406a2-3c66-4e3c-b084-08e227e866df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b0aaa-f5a7-4f1f-b5eb-1a04dddcf2ea",
        "cursor": {
          "ref": "014fe4b0-7c8e-4e65-8ed1-75a34df8d5ac",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "11449fa0-2112-413d-ae59-1e2181b078b8"
        },
        "item": {
          "id": "ae5b0aaa-f5a7-4f1f-b5eb-1a04dddcf2ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "39410e90-6e11-43dd-8ea0-79aa42aa7c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a224ce-9fa4-4dd2-9f4e-ec06d399f3c6",
        "cursor": {
          "ref": "1362dcf0-9178-41ab-9ba0-4fb073728ce7",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ac91908-319a-45ad-9f96-37f422aed4d5"
        },
        "item": {
          "id": "47a224ce-9fa4-4dd2-9f4e-ec06d399f3c6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac41dd02-650a-4ae8-bf39-5c0fc5ada09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69973839-dec3-4057-8e2b-e224fed22ad8",
        "cursor": {
          "ref": "c1adf7f6-596d-4a6a-9856-e7c0e84f2d28",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1dd3d541-657a-496d-9dc4-48d84507363f"
        },
        "item": {
          "id": "69973839-dec3-4057-8e2b-e224fed22ad8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a3cc76f1-9672-407e-be0d-425935815d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0338264a-43fc-4256-b8da-08245c92daba",
        "cursor": {
          "ref": "646c57cf-002e-4776-9c8e-7fad0cce3aa7",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "18b44c45-283c-449b-ba15-30bc651214ef"
        },
        "item": {
          "id": "0338264a-43fc-4256-b8da-08245c92daba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8c8f41be-f7c8-4038-ac89-1239a38f381d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5233e5-bdab-4676-9b19-e007877c4a45",
        "cursor": {
          "ref": "81da33aa-1b6a-4811-acf2-ad46231cef20",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d10456f4-67ff-491e-bda4-98078dcef8be"
        },
        "item": {
          "id": "9b5233e5-bdab-4676-9b19-e007877c4a45",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f9b6130f-22e9-4401-b6c0-1a1166b057fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce80356-51b5-4311-943f-5f38624f8731",
        "cursor": {
          "ref": "3e579cf3-3901-4e2b-9fec-c48d5a8a644d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fec8afbd-c1f4-44a3-9d83-9f6aa07ddce4"
        },
        "item": {
          "id": "1ce80356-51b5-4311-943f-5f38624f8731",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ce273b5-90fe-439b-974e-aa725af4708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305ec05-99fa-4b12-8ee7-063d96a91d79",
        "cursor": {
          "ref": "3a5290b0-1f2a-48a7-9692-3d4c5cd46f06",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "765e19b9-04cf-47df-861b-25e0db08d06f"
        },
        "item": {
          "id": "a305ec05-99fa-4b12-8ee7-063d96a91d79",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06b3ec4c-15ae-448b-b859-5fde7b240847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f1b7d9-3940-4393-8771-15398094e3e8",
        "cursor": {
          "ref": "11f69b31-0d6d-4fa0-9b7f-e4d749063555",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4e8c069a-315f-4c62-8000-12e645a46913"
        },
        "item": {
          "id": "07f1b7d9-3940-4393-8771-15398094e3e8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "92a37d82-517d-4d11-8ae8-1f72d457aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281e21a-cc00-4f57-b159-235b81da6667",
        "cursor": {
          "ref": "32b2c924-4ae9-4c91-ac4b-50f667ac65a1",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9a581033-7376-4789-992f-2991d50cad1a"
        },
        "item": {
          "id": "0281e21a-cc00-4f57-b159-235b81da6667",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4beffc2b-962c-4213-80d4-1d7de656f3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ffd93-4a7a-413f-b277-4b10abad57b0",
        "cursor": {
          "ref": "b416681e-3e27-425e-9dab-ba7531e1bb93",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5d2a56b-e909-4ca9-bde6-40b135bc338b"
        },
        "item": {
          "id": "ff6ffd93-4a7a-413f-b277-4b10abad57b0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85702b5d-2e5c-415c-85f4-a57a16fc8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f9efd8-c2ee-4fa2-9fef-c2fca9220d1e",
        "cursor": {
          "ref": "a120d638-ed4e-4863-ab25-27ae2b62a8a2",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d8c9a6b0-caf1-4383-bf9f-aafdeed9be3f"
        },
        "item": {
          "id": "81f9efd8-c2ee-4fa2-9fef-c2fca9220d1e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "72f8367e-77e8-4b10-ba2b-fbcbbbe6319a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cbeeb0-c5c9-4742-b7fb-d16a31dfb993",
        "cursor": {
          "ref": "82127c9c-23fa-47bb-a290-f95dd4ec8b05",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1bb4080a-83db-4eeb-8b37-807f126bfaa9"
        },
        "item": {
          "id": "c0cbeeb0-c5c9-4742-b7fb-d16a31dfb993",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6a7eb17d-fea6-408e-bc55-cf4fcb294de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b720f460-32ed-4040-90e9-7ef4a9b353de",
        "cursor": {
          "ref": "db93a86e-8929-4f29-b841-3a637015fd03",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5c1e04b-2a38-4ade-9210-17149e070823"
        },
        "item": {
          "id": "b720f460-32ed-4040-90e9-7ef4a9b353de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87618fb2-8045-4ee0-9a18-5aa9f635da95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d112bd4-4eba-4347-b41f-6ebca52b68e4",
        "cursor": {
          "ref": "8d1932cd-0f25-454e-8da7-37728c12b5aa",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8af9633-ea59-4de7-a467-415cf85f3306"
        },
        "item": {
          "id": "1d112bd4-4eba-4347-b41f-6ebca52b68e4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c9f43129-548a-4f5a-a9ee-690526e37c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a0ff2-8d25-42ef-bad0-4047943b91ce",
        "cursor": {
          "ref": "a9125a69-5fe3-4881-9e6c-2dde75a0006c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b806b384-c229-4cc9-a245-ffa1b2ab695f"
        },
        "item": {
          "id": "275a0ff2-8d25-42ef-bad0-4047943b91ce",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "348c71ce-57ab-40f5-99a0-7d268f6d5ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4c0489-9574-4093-9673-7810c6685993",
        "cursor": {
          "ref": "0f58cd6c-3120-4945-860e-08642b51d466",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6351ecb8-e1bf-4e2f-969f-a7c14a629fc0"
        },
        "item": {
          "id": "1a4c0489-9574-4093-9673-7810c6685993",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82036885-0a6d-4a18-86f9-adbac53ab158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2e399b-0b1a-4a1b-b6af-2a6f3a60c25b",
        "cursor": {
          "ref": "59e6f6e3-ac34-4616-bd2c-95e476792287",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "672acf3b-c0b1-46f5-9df7-1eaf4c48c8c8"
        },
        "item": {
          "id": "5a2e399b-0b1a-4a1b-b6af-2a6f3a60c25b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "add0ba71-19fc-4455-9959-d5a9a9a61701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2533789d-331f-4062-a213-0820abd3e038",
        "cursor": {
          "ref": "4b67de5a-4c27-49c8-a3b0-249de17de4f3",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e858e0c8-8f53-4928-b275-22ae3b972ddb"
        },
        "item": {
          "id": "2533789d-331f-4062-a213-0820abd3e038",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7a47ffb8-c704-41a1-86d6-74a2a9e287af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c7dc06-c676-4b28-a9d6-aab3cc21afd2",
        "cursor": {
          "ref": "d9ab81ec-9ffb-47c8-9685-21dc6c9b8e20",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "14b1686e-9840-4611-a42c-2959c328ccb2"
        },
        "item": {
          "id": "66c7dc06-c676-4b28-a9d6-aab3cc21afd2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "df8a8cd3-71da-415d-85aa-d127d3fbae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef14e512-c464-4466-8b43-22e74be61be2",
        "cursor": {
          "ref": "bae9c4eb-9bcd-4333-98c9-99fe5a47c36f",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c3b35993-9300-4e4b-9d26-05514763dd78"
        },
        "item": {
          "id": "ef14e512-c464-4466-8b43-22e74be61be2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5dac27d1-1566-44d3-a6ba-e931520415a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c5832-7aef-4888-85a6-a401bde146e3",
        "cursor": {
          "ref": "aee456d0-4434-44e9-9ebc-dfa63a4c251b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "df60e389-7dd7-40d2-b3a1-a590f9723de9"
        },
        "item": {
          "id": "2c8c5832-7aef-4888-85a6-a401bde146e3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "38dd2813-2c15-4ee0-8eda-fecd7a1eb7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3339815e-7639-48c9-81b3-29d632054788",
        "cursor": {
          "ref": "a3daa350-1eb8-4f44-a761-93a899d7da40",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca999072-ee72-4e22-8a2e-cedf20ae2a2c"
        },
        "item": {
          "id": "3339815e-7639-48c9-81b3-29d632054788",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6e3f183f-7efa-46dd-9cfb-8c471c5d528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a3dd74-3e8b-4b79-ac7d-dd265e6a30a7",
        "cursor": {
          "ref": "0e24de4b-9bea-4c75-8862-ab6e9766ddd0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "871cfc4a-504d-4929-9fee-0450650b92b2"
        },
        "item": {
          "id": "17a3dd74-3e8b-4b79-ac7d-dd265e6a30a7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c80d566e-f87c-43f7-b9ff-23dc88ac0d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a971a-46a0-4f27-90c3-68be33ba842a",
        "cursor": {
          "ref": "d405e6ba-c129-49cd-b89d-b0dd169a2ab7",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b3cf8776-ab45-4a9b-8416-cf289516e71d"
        },
        "item": {
          "id": "bd4a971a-46a0-4f27-90c3-68be33ba842a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad80788b-d083-49c8-b553-6e9fa0e3d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc63601f-60ed-4bfd-bb40-561db765304a",
        "cursor": {
          "ref": "94208e48-bd14-4613-8775-cc696b22753c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "69aaa616-3e3a-4299-8701-26bcee3d618d"
        },
        "item": {
          "id": "fc63601f-60ed-4bfd-bb40-561db765304a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "54a93edd-e366-4e26-bca0-8c24db14ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aa3934-f435-41bc-94f3-29cd7c24a241",
        "cursor": {
          "ref": "3ff36bcd-20d3-4a02-ae22-63ee2697fcdb",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae36fb34-b542-414e-883a-278b2162d586"
        },
        "item": {
          "id": "33aa3934-f435-41bc-94f3-29cd7c24a241",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa85b91e-5934-4047-ad1a-ec3b2a742b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cbba64-f9a3-410d-8a69-38c3048e86b1",
        "cursor": {
          "ref": "01b37fc5-bb00-426e-8e31-c6c75b4f7b32",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a1e178c9-b3e4-4e94-a58e-083977370e59"
        },
        "item": {
          "id": "b4cbba64-f9a3-410d-8a69-38c3048e86b1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "499d7ef6-7335-4761-9b89-9f39fca9ec2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645e36a3-cea5-4041-941b-0487b6a9d7d1",
        "cursor": {
          "ref": "2c4fa7c4-b96e-474c-b1fa-0edd0fd5d28d",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4199e7a0-af56-4562-9843-5341da4f4669"
        },
        "item": {
          "id": "645e36a3-cea5-4041-941b-0487b6a9d7d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "46573100-a73a-468c-9211-85d8bb9cbd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217546ac-c30d-4011-ae34-eea7f1c41a36",
        "cursor": {
          "ref": "aa8f45b1-0b4b-42d9-bfde-89070a6a1496",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "43671e30-78e4-4362-8205-a2f893cf1b19"
        },
        "item": {
          "id": "217546ac-c30d-4011-ae34-eea7f1c41a36",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4b971f04-9bb9-4aa7-ae31-748e9e9ecf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f298cf88-be8e-4099-91ab-fcda24727bd9",
        "cursor": {
          "ref": "939e0b40-eafe-4086-83b9-3c54f26af061",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "683617d6-e67e-4f68-bc63-9aa4667700a3"
        },
        "item": {
          "id": "f298cf88-be8e-4099-91ab-fcda24727bd9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4bb8669f-aa1a-4b41-83ac-52adf0b08e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be0a0e-5233-42ad-838e-73f9571fc4dd",
        "cursor": {
          "ref": "f6d0b50c-fa25-4da5-851b-1e184dde2ff6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c2a1f2a9-cf97-414f-a9ff-74a2ff12ee18"
        },
        "item": {
          "id": "20be0a0e-5233-42ad-838e-73f9571fc4dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9914ebba-6ffa-4086-840f-77c074ed9d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b84d9d-1790-416d-bcd4-5e779a0fa5cc",
        "cursor": {
          "ref": "1a1b3b15-26cb-4ef4-93fc-46019767f8df",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7826dad9-43f0-4f43-9656-a2c0eb88d590"
        },
        "item": {
          "id": "08b84d9d-1790-416d-bcd4-5e779a0fa5cc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "963c3b83-b2a6-48d1-aac4-c3af0b72c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c8290-5ebd-4ba0-ac17-ccdd4fa63248",
        "cursor": {
          "ref": "efceac5e-8794-4cc2-9a14-d5e0178f92ca",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec01c810-026e-4598-9c91-4dbaf7475c02"
        },
        "item": {
          "id": "9f1c8290-5ebd-4ba0-ac17-ccdd4fa63248",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04b1123d-b2e1-44f5-9718-b88e231eec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16f0b53-b58e-44f9-98d4-2b96a214162f",
        "cursor": {
          "ref": "dac62382-9834-41c6-a880-6adb12bc9751",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "44ae5778-bf57-4a35-810e-28385a18896d"
        },
        "item": {
          "id": "a16f0b53-b58e-44f9-98d4-2b96a214162f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a9b7eb30-edc3-4cad-baaa-e77193bc1f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1402ef-65dd-42d6-9a66-f941f6f8202d",
        "cursor": {
          "ref": "f5b85a2a-cbe4-4780-845f-4c8495b93186",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "afb437eb-e23a-4846-a4c5-3c18f7769d08"
        },
        "item": {
          "id": "ab1402ef-65dd-42d6-9a66-f941f6f8202d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc6c3adf-97ad-4430-8bbd-8f142ccdb421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f48ab4a-ec6a-4cf4-b125-f66839cebcaf",
        "cursor": {
          "ref": "2efd759c-5c65-4721-a741-4b5dc9f85a87",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1960e102-2003-4e5a-9d9e-dbab910355bc"
        },
        "item": {
          "id": "1f48ab4a-ec6a-4cf4-b125-f66839cebcaf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cc73d080-a91b-4c36-b567-aae7c0b86b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e4d9e0-0faf-4e0c-9ef0-f37ff5a3d745",
        "cursor": {
          "ref": "dea904a4-2e63-47f3-a061-918c2a5d63aa",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fd66c56a-f68a-49e2-9391-0d1e21fea533"
        },
        "item": {
          "id": "36e4d9e0-0faf-4e0c-9ef0-f37ff5a3d745",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "78c4d695-1aa0-41df-a11c-49482905377a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4cc70-39d7-4d42-bb52-cb5a663d87e1",
        "cursor": {
          "ref": "41d87a0f-03eb-4bca-a722-a46845ba9f3c",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c317a698-2ab2-4298-be23-00ce484b37a0"
        },
        "item": {
          "id": "93d4cc70-39d7-4d42-bb52-cb5a663d87e1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "600e89de-6a30-406f-b331-392c3d0ad222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6692ccc0-0027-4e0f-89cb-6459f11f98a9",
        "cursor": {
          "ref": "a1e378ab-9024-4a65-9e07-57781dccc4e3",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a8db252-6d0a-4c2c-8035-9b12e6324928"
        },
        "item": {
          "id": "6692ccc0-0027-4e0f-89cb-6459f11f98a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26b778ee-8cf6-4043-a9c7-8c2453dced05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda41979-9e71-415c-b812-6ef9e8a9fe82",
        "cursor": {
          "ref": "2a8d464a-013e-4a2f-95bd-500635fef28d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b60d34d3-8d93-493a-b7df-aa5149b6cb46"
        },
        "item": {
          "id": "fda41979-9e71-415c-b812-6ef9e8a9fe82",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "553bc678-7467-4b57-8555-5ae826283ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f67173f-1b33-42fe-82c9-e6e59f92d6ad",
        "cursor": {
          "ref": "6afc86d9-60bf-4c2a-9382-472c83d7bb99",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d3a610f-4f34-4783-8bfb-c2123207a94a"
        },
        "item": {
          "id": "6f67173f-1b33-42fe-82c9-e6e59f92d6ad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7e93a9d0-5fc4-454d-80bb-50a63b36b310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5103a6-88ff-4a5c-8c68-2cb8b904bf07",
        "cursor": {
          "ref": "e3929db6-0247-4b33-889a-59f7696cf28d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "07dc1d89-203a-4e94-9b52-0d4d9346aabc"
        },
        "item": {
          "id": "6a5103a6-88ff-4a5c-8c68-2cb8b904bf07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bf65017b-14c5-49c2-94c2-b877d47081b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb16aef-b1f7-4136-bb7c-40dd1500a3f6",
        "cursor": {
          "ref": "74a409da-a602-42b2-ab33-207a1c4474d8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c1c9a32-2ef1-4c75-880b-559816be8272"
        },
        "item": {
          "id": "fcb16aef-b1f7-4136-bb7c-40dd1500a3f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dbcfa9bb-3a34-4dc9-bb77-852687764dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f17f35-4232-4972-871e-f65273632d70",
        "cursor": {
          "ref": "afb2b642-292d-4d25-8f37-630ab5ef8d37",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "00bd8dec-2503-4943-b575-da8a829e00be"
        },
        "item": {
          "id": "03f17f35-4232-4972-871e-f65273632d70",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1426e597-0847-4c88-be86-becabafc906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca7a53a-6f54-4710-aa2a-31022988098b",
        "cursor": {
          "ref": "f4ac5382-e1cd-44ed-9929-4d66510eae3e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "372ab5db-b853-4369-8b03-c72ca1c620eb"
        },
        "item": {
          "id": "cca7a53a-6f54-4710-aa2a-31022988098b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ce35891-df20-4e33-8d2d-8ae62bbe4350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c60b81f-3fad-4681-8c80-05e3979672c7",
        "cursor": {
          "ref": "cf304ce6-59d6-45e6-83e2-7c46f5c296ae",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "97645cff-24e7-4116-9156-60c15e2e273f"
        },
        "item": {
          "id": "4c60b81f-3fad-4681-8c80-05e3979672c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "530f685e-856e-4ed5-8481-2ad19515d2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b1d834-fa79-4062-baca-5aabb5ffda46",
        "cursor": {
          "ref": "e517dad8-57e3-4f03-8329-76b8a1f080de",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d63a4f6b-cec8-4628-8074-687afa24c6c6"
        },
        "item": {
          "id": "14b1d834-fa79-4062-baca-5aabb5ffda46",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f25b23e-76a7-4b92-81c4-f88a35d850ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1330e2f3-3000-4e7e-aa25-69489196d0aa",
        "cursor": {
          "ref": "90c5f843-de5b-44f8-a20d-acf627f71b6c",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "359dd211-ee1a-478d-b95d-a764da417f4d"
        },
        "item": {
          "id": "1330e2f3-3000-4e7e-aa25-69489196d0aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b42a0e61-ba76-47a0-b4cd-f313ef5ab78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6898638-8475-4b2d-990d-f31ff97a2870",
        "cursor": {
          "ref": "83cef079-6e59-4391-a87c-0d325fb4d38c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e1ccf471-0e66-47aa-ad6f-babd9d51b527"
        },
        "item": {
          "id": "d6898638-8475-4b2d-990d-f31ff97a2870",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b81dd0e5-1a99-47c0-85bd-21e5a87806a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44523f26-2857-4da8-86cd-70ffafc331d6",
        "cursor": {
          "ref": "5f2e1e96-83a9-4cb5-841e-f91482cb4a5a",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9213feb6-8891-4dce-94f8-de590f734d66"
        },
        "item": {
          "id": "44523f26-2857-4da8-86cd-70ffafc331d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51c192fe-476e-40ac-9960-911a7f653eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42590530-ca66-49cd-a0ee-ebcd829f25f2",
        "cursor": {
          "ref": "8aad5936-2db3-4c38-9e49-670b929fc738",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "85b74dea-1d49-40e5-a3fa-1f23617db627"
        },
        "item": {
          "id": "42590530-ca66-49cd-a0ee-ebcd829f25f2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5a91a66f-51a5-47c4-b855-471a2610d33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191eb9ff-f8d0-4a19-b1da-ba62bbbd8959",
        "cursor": {
          "ref": "a1d54243-01b5-4931-ba10-a7b2c3cce628",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d54ec23b-de9e-4f67-b22a-823341e473ec"
        },
        "item": {
          "id": "191eb9ff-f8d0-4a19-b1da-ba62bbbd8959",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "60a4c689-cdfe-4221-8aa1-aad1d88f6eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a1f0d-d5d6-4f47-a4aa-0860ae608e77",
        "cursor": {
          "ref": "48081870-d5d8-49b6-acf7-acde4d51bbc6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0bdca52f-3850-4a37-a956-30e21b17a95c"
        },
        "item": {
          "id": "fa3a1f0d-d5d6-4f47-a4aa-0860ae608e77",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "577522ee-aff1-487d-9380-464bafde5a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a664cf2-8afc-4a1a-ad53-afca8072a370",
        "cursor": {
          "ref": "ae17a1a2-0088-400a-99e4-64744edde772",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "55824040-12e4-411d-bdb4-40ad51405697"
        },
        "item": {
          "id": "5a664cf2-8afc-4a1a-ad53-afca8072a370",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a128853b-3872-45be-8447-0318c85c56d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f9f1e1-9e71-4aef-8b5b-d528ec8d444d",
        "cursor": {
          "ref": "4535aaa5-603e-438d-8e7e-5f439492ce5b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d0c2b758-2c5b-4b10-89e6-8c57cb9cf106"
        },
        "item": {
          "id": "a2f9f1e1-9e71-4aef-8b5b-d528ec8d444d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "85b06114-d08e-45ad-93a0-c5338d1f404f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b927f65b-aef5-4e2a-a98a-beaffdeefbf5",
        "cursor": {
          "ref": "c8f96173-fecc-40a5-892f-5c1e4f34342d",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4a1e3416-1667-4867-aaae-1d86b518fceb"
        },
        "item": {
          "id": "b927f65b-aef5-4e2a-a98a-beaffdeefbf5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "75e0821c-cf0c-4e6c-90e5-3e047158b067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb95dea5-0e43-44d6-ad4f-cb18044847a9",
        "cursor": {
          "ref": "156a7086-053c-4f9d-a3db-10b81f2d9d34",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "34a514be-4f09-49fb-a8ea-e091ab6f273a"
        },
        "item": {
          "id": "eb95dea5-0e43-44d6-ad4f-cb18044847a9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6f7ccd0-0f0e-40bf-a57c-19d6b7cfe53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c486b4e-1bd0-499d-ba30-9ef7684b8efb",
        "cursor": {
          "ref": "c0e339f0-ac7f-4c0c-b16f-7d3ec16fbdb5",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a67ac59-eb9f-428c-9968-ec30de2923e9"
        },
        "item": {
          "id": "6c486b4e-1bd0-499d-ba30-9ef7684b8efb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "29bae769-714a-4c28-a230-f46a9262d23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b50ca3-b8e4-4da0-b704-cf3f72a38492",
        "cursor": {
          "ref": "35bd22bf-86f8-4b19-8d6c-3fd0b21b42a4",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8914d234-18ae-40e4-8cd4-5eeb53b28a62"
        },
        "item": {
          "id": "42b50ca3-b8e4-4da0-b704-cf3f72a38492",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ee69ea81-85de-4df7-bdc6-86ed48c74073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36588aa-f1da-41c3-8f97-3e03c9deb1ca",
        "cursor": {
          "ref": "bfbe7eae-dccd-4bac-b913-4f0f7b05cb79",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c71b7a81-c5a6-4284-8122-ac7d9cc7506c"
        },
        "item": {
          "id": "b36588aa-f1da-41c3-8f97-3e03c9deb1ca",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7112732a-35e0-4215-a693-7dd1ae381d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa74c1e-72e5-42c5-bdda-94cba6e1f3b3",
        "cursor": {
          "ref": "d3dc5652-841e-4b39-ae26-7a2cc2711aa7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4c0d4039-5840-4cd6-8c82-6231a65c9e34"
        },
        "item": {
          "id": "faa74c1e-72e5-42c5-bdda-94cba6e1f3b3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c07a048-0da8-452c-9ec1-4f8008460f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e23da2-d9a6-4b57-a083-06b42b5aa670",
        "cursor": {
          "ref": "b2c18480-b0ce-471a-9419-8ec13b93c191",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0d485a36-0875-4a88-af62-494c2fe72106"
        },
        "item": {
          "id": "59e23da2-d9a6-4b57-a083-06b42b5aa670",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a747d66-ad69-4dbe-aa5e-17a810fa401d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d3d004-601e-40bf-aa12-5b17576da0dd",
        "cursor": {
          "ref": "a3cc92fb-8190-40fe-860f-8f4a8e4cbbc4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a3dec666-0904-4a3e-9638-c39298c79b1e"
        },
        "item": {
          "id": "74d3d004-601e-40bf-aa12-5b17576da0dd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a930ffa-8d22-43d3-8c42-fbbeff6c6524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d718e522-d0bc-4bff-afc9-368106cfa189",
        "cursor": {
          "ref": "fbdc1ec7-3e7b-4b13-aa1a-770145cf81ba",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "55c44e47-ff64-4057-956a-7cba3296b018"
        },
        "item": {
          "id": "d718e522-d0bc-4bff-afc9-368106cfa189",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00b88af2-93ea-454f-81b1-6b5eabee7ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d21c17e-da3f-4fcd-9e50-3e5791fe7ae4",
        "cursor": {
          "ref": "7da98703-1f7c-454f-be39-c55db6b1cfe2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3f3e7caa-75d8-44e7-a612-e43709dd7964"
        },
        "item": {
          "id": "5d21c17e-da3f-4fcd-9e50-3e5791fe7ae4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "530d75e7-9c4a-4bcf-ad36-46e4e99f3351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec06e84d-5e69-465a-8469-a1fb27ed51ce",
        "cursor": {
          "ref": "6750b473-705a-44ac-ad7b-d11ba9edbad3",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9d6cf6c2-8c23-4216-b346-24084b5ed8fe"
        },
        "item": {
          "id": "ec06e84d-5e69-465a-8469-a1fb27ed51ce",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "35e444e3-ac9f-4ba8-83d9-2ecf70cde608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325dc586-f3cb-4662-a86d-c51b7593a21a",
        "cursor": {
          "ref": "3147fc1c-bdcf-4aa2-8d1b-1875dc1d1a20",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20378304-b3c3-4b59-985e-becaf4b20d4f"
        },
        "item": {
          "id": "325dc586-f3cb-4662-a86d-c51b7593a21a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5c787fa-1001-4f5a-a67d-49ea79d24e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db43ad56-358f-47f6-99f6-b4508a68d894",
        "cursor": {
          "ref": "3c96f90e-1cd5-4483-875e-44039adbafe9",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "99c15888-68cb-437b-a317-55462cbe989f"
        },
        "item": {
          "id": "db43ad56-358f-47f6-99f6-b4508a68d894",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a35853f8-a797-4296-aeee-11b56e6f56ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bcd24-b8d2-4652-92e2-f6b67fa3958a",
        "cursor": {
          "ref": "45521f7a-f3b6-4c51-9a63-112da451b343",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "526b403d-5bd7-434e-bba5-12ea01b3ab63"
        },
        "item": {
          "id": "dc6bcd24-b8d2-4652-92e2-f6b67fa3958a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "889c599a-2231-42ff-9441-509fc5a5e9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db2953c-a570-4495-ac87-f8e72bf7f148",
        "cursor": {
          "ref": "7d29a488-4dff-4b27-b70e-acf2b1a6f968",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eeb50d22-3b3b-4369-b51f-d79dc5db1807"
        },
        "item": {
          "id": "1db2953c-a570-4495-ac87-f8e72bf7f148",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d16b16e-c470-4c93-af9e-f2aa48893c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f55b32-212e-4585-be52-c9b69be2ac2f",
        "cursor": {
          "ref": "e1fcb989-1160-432b-8899-8fb5be524c64",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c868bdf1-c7d9-4d29-9183-bb543052faa4"
        },
        "item": {
          "id": "f1f55b32-212e-4585-be52-c9b69be2ac2f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "153640b6-2e8b-44f5-a6e4-11baa96725f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38837c9-007d-413e-9fd8-14668844f55d",
        "cursor": {
          "ref": "9f164363-43fd-4b75-83a3-b42c6842c08d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dbe3fc4-bfbd-4ff1-92f7-69d60f2199bc"
        },
        "item": {
          "id": "b38837c9-007d-413e-9fd8-14668844f55d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2a25e9a-17a4-4aaa-8364-d431edefb9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6decfd-22ea-41b6-b5a9-8175d4082a9c",
        "cursor": {
          "ref": "b289baf0-27d2-4c69-8f54-041945e32740",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cdafc850-64d9-40e8-8688-4a7072841bb7"
        },
        "item": {
          "id": "8c6decfd-22ea-41b6-b5a9-8175d4082a9c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea43bfbb-7a42-4fc6-83a4-ac9064f2e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd139f7-4357-4de5-b0eb-ccd8b8661d5d",
        "cursor": {
          "ref": "95b1960a-7bc7-42f8-9c47-b747229df55d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18b708b3-4808-4c2a-9508-6a2068f59ae4"
        },
        "item": {
          "id": "acd139f7-4357-4de5-b0eb-ccd8b8661d5d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f3f5cff4-b4c9-4a73-a7f6-a1b1606d0ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcea5857-268d-4223-8bd6-295dff150ab1",
        "cursor": {
          "ref": "5138f75a-0ea8-46bf-a58b-3e7beb3a8c6e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea97c76d-f6db-4247-a8a3-212447270f75"
        },
        "item": {
          "id": "dcea5857-268d-4223-8bd6-295dff150ab1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9de2edfb-028c-4a30-94fc-9571623dc983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f84c24-3929-4e60-840d-a49736107423",
        "cursor": {
          "ref": "43667959-d413-4b64-b837-27b77a642022",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cecfc7c5-64c8-46a3-b743-0028c502fa53"
        },
        "item": {
          "id": "76f84c24-3929-4e60-840d-a49736107423",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "82d85d5b-c5b9-4ca7-ab00-7421918e1367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d9d28d-852d-446e-912e-5abbb1477c82",
        "cursor": {
          "ref": "4de9dcae-959e-4ea9-9305-5551dfed0684",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "82969fac-0abc-4817-93aa-cf0faa59b5f9"
        },
        "item": {
          "id": "39d9d28d-852d-446e-912e-5abbb1477c82",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "47d26fbf-b4e8-4665-be02-f4733e9f0a35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ffc45f-ab98-4986-8030-60dd988ab8e6",
        "cursor": {
          "ref": "7ee580d1-35b1-4b02-aa35-250e1a0693bb",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dcb9ff0b-7ecb-484c-9c8c-9c1bd54a9a96"
        },
        "item": {
          "id": "68ffc45f-ab98-4986-8030-60dd988ab8e6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c26c3042-12da-4d40-a79b-b623b2359a46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 153,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc79659d-77f8-4b0a-a89b-413f6f4fd19f",
        "cursor": {
          "ref": "f31174cf-2dc4-45da-8e75-e5e7a1a61e4b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1548b387-17a2-4934-bc85-35a29826359b"
        },
        "item": {
          "id": "bc79659d-77f8-4b0a-a89b-413f6f4fd19f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fab03a1d-62c3-4b6e-86c7-dc296af1226c",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1efbc0-bc1c-42b3-b04f-4ee0ff76f849",
        "cursor": {
          "ref": "58b6b735-9416-4323-a371-37dbc9163f0b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a478aec-c093-407c-94de-ef88e248dbad"
        },
        "item": {
          "id": "bf1efbc0-bc1c-42b3-b04f-4ee0ff76f849",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4c261f42-dd26-49c8-a73f-8bd7dad3e6a4",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a05f34d-f589-4a40-a2c9-0e7597d6305e",
        "cursor": {
          "ref": "bc8eab9b-1fa6-466c-b46b-ef72ebb8285d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "010c750c-28c1-441c-8320-a981af93fb0b"
        },
        "item": {
          "id": "3a05f34d-f589-4a40-a2c9-0e7597d6305e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2125ecc5-04f8-4e8b-b161-fcb20ce30d79",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9f5f6-8abc-40b9-9cb8-050e66f5bfb9",
        "cursor": {
          "ref": "7869e8d6-1d94-4406-a925-ec7e75c37c88",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8ba5679c-a2f8-470d-b631-2ac97b499301"
        },
        "item": {
          "id": "40e9f5f6-8abc-40b9-9cb8-050e66f5bfb9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "53b48a65-6ca7-4536-bbd5-d3b7fd9efcb0",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee31d1f-6514-4e81-a0f4-4b304cfc9297",
        "cursor": {
          "ref": "66101919-ad2f-49d1-b4f0-be7dabad8d50",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f251fee3-863f-4d7c-b481-87e5676790a8"
        },
        "item": {
          "id": "cee31d1f-6514-4e81-a0f4-4b304cfc9297",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0654a317-301c-42cc-8efe-39a2bf40f8b7",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5c026f-59c8-43a3-9a76-98ea803fbf0d",
        "cursor": {
          "ref": "610846d2-01e8-4e9d-807f-9735ec203b4a",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "10f8c816-5eca-412e-87b5-4231a9a8841b"
        },
        "item": {
          "id": "2a5c026f-59c8-43a3-9a76-98ea803fbf0d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1cf9949c-b23c-42d1-9917-0faa46a35f78",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae0810a-6339-415f-a7a3-93635dd14305",
        "cursor": {
          "ref": "8b42f40a-6e9c-4014-8e76-ae7adb3dba4e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8dfda39f-0f90-4a66-94ab-0aa0b954dc48"
        },
        "item": {
          "id": "5ae0810a-6339-415f-a7a3-93635dd14305",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59a7a13e-2383-4c49-b9da-1d9ffb2fb33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae0810a-6339-415f-a7a3-93635dd14305",
        "cursor": {
          "ref": "8b42f40a-6e9c-4014-8e76-ae7adb3dba4e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8dfda39f-0f90-4a66-94ab-0aa0b954dc48"
        },
        "item": {
          "id": "5ae0810a-6339-415f-a7a3-93635dd14305",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59a7a13e-2383-4c49-b9da-1d9ffb2fb33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810bb3d9-0a8a-467e-b9cd-0adf543072cb",
        "cursor": {
          "ref": "3e042dd0-60d1-4617-bab6-40e5322067a4",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9a9698c9-9ee2-4242-90ba-66c7ca6c5fd9"
        },
        "item": {
          "id": "810bb3d9-0a8a-467e-b9cd-0adf543072cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5283c7c0-9ea8-4f62-b338-58a9c4135779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6109f202-0d4f-48e9-b630-feb726b181b1",
        "cursor": {
          "ref": "64f1c4cd-cc3a-4751-9922-474f3ed9c6f3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1d1affc9-bd28-4e30-a934-0ab21037deee"
        },
        "item": {
          "id": "6109f202-0d4f-48e9-b630-feb726b181b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "df582348-92d0-4ed0-8d44-25a7427c0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01d2ad1-2e06-457b-b78a-46877041ee07",
        "cursor": {
          "ref": "d80378ba-f4a6-426b-b001-45e8b7ac5992",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e23735df-90cb-42e3-8e87-3ed32612860d"
        },
        "item": {
          "id": "f01d2ad1-2e06-457b-b78a-46877041ee07",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3aaa8144-a497-4d23-9358-39325b9d8eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddd0900-51bf-4798-be2b-085a5cd3699a",
        "cursor": {
          "ref": "faa24ff9-520a-48f1-bb90-d6c0009f87f1",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aeac50ab-7ba6-4dc9-a577-a2e48fe8d5c7"
        },
        "item": {
          "id": "9ddd0900-51bf-4798-be2b-085a5cd3699a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "013e6d7b-f2d5-403f-8b62-edb73d4177ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268fb1cb-c432-4455-9fcd-cf4422f0ae70",
        "cursor": {
          "ref": "6c3248bd-192a-4d23-a7a6-af329fe8ada3",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e03f49ee-efde-4415-addf-525481f7de48"
        },
        "item": {
          "id": "268fb1cb-c432-4455-9fcd-cf4422f0ae70",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0aa08139-2120-4725-a719-13ae47036a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af84a84-85e0-40db-bf67-5f5895598c45",
        "cursor": {
          "ref": "24543858-7cca-4751-9875-745020db88ac",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a02ded77-c640-4514-a8e8-238a9835911a"
        },
        "item": {
          "id": "0af84a84-85e0-40db-bf67-5f5895598c45",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1f732b7-7633-4aae-a6ab-2be9c815ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ee9942-5f52-439f-b9df-90be67a63cb3",
        "cursor": {
          "ref": "8858f825-d238-4c82-9600-9c15c2498c9b",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cef0c00-b6b6-49d6-b89c-43607d1c8559"
        },
        "item": {
          "id": "f8ee9942-5f52-439f-b9df-90be67a63cb3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "03a89118-0a92-431a-8b9a-16467d78b88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8677cf-bdb1-4a6d-8459-ac7c6242e636",
        "cursor": {
          "ref": "a086ea1b-eb2b-494d-ab07-f60908e655a2",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fea3b393-9af1-48ad-b20f-2f332178c269"
        },
        "item": {
          "id": "7c8677cf-bdb1-4a6d-8459-ac7c6242e636",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "23ee1394-44b4-4d12-a6ee-06b6ba6feb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617a3381-671f-430a-843a-4c96a3ae64cd",
        "cursor": {
          "ref": "a9c8167e-03cc-4f98-b12d-13c359da698b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3ebe1e9c-9534-4c3d-ac01-d848f5951b9a"
        },
        "item": {
          "id": "617a3381-671f-430a-843a-4c96a3ae64cd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a0f317cd-7124-4504-9cc3-9c0ff549e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6a9dde-f951-4509-bee2-127520e06db9",
        "cursor": {
          "ref": "635f6446-3ef9-48ce-83bd-2c48039b49e3",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8df30ce9-0def-4109-abf3-b22a9bdcdaa9"
        },
        "item": {
          "id": "ab6a9dde-f951-4509-bee2-127520e06db9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c63c15ad-9f00-46ab-9068-974c540dfb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a350705-ada6-4611-bb88-7888380a2f98",
        "cursor": {
          "ref": "c6aea8b0-49a7-4137-b556-37adb2f20bb8",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37064a23-abda-4395-b89d-df6ff3538052"
        },
        "item": {
          "id": "6a350705-ada6-4611-bb88-7888380a2f98",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "adcb351b-1805-4983-b792-38d3f56ce18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e6418e-9d05-477c-8c35-ca862d202c3a",
        "cursor": {
          "ref": "c36061e5-a970-49ff-83cb-3d293dfbf95e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ada1a856-55c2-45c2-ac07-6718482c6dc0"
        },
        "item": {
          "id": "58e6418e-9d05-477c-8c35-ca862d202c3a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d53b2522-a22f-4db1-b976-1d6431281006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda79a0e-43b0-4390-ba63-9d7bc6e41598",
        "cursor": {
          "ref": "392cf1ba-e2c8-4e61-b02c-413f53d36350",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6a48a5e0-f8c8-43b5-82a0-28d3c9e4b028"
        },
        "item": {
          "id": "eda79a0e-43b0-4390-ba63-9d7bc6e41598",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6396903e-a218-4122-9fb7-460ea45eb6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e4d5a6-91ae-4509-880b-305b5cdc9fa7",
        "cursor": {
          "ref": "23ad4536-5e45-4022-a7c2-4a37911338ff",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f391aeaf-0db9-474f-b38d-21aaa7014f47"
        },
        "item": {
          "id": "f8e4d5a6-91ae-4509-880b-305b5cdc9fa7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7641aa1c-3a01-4948-85b8-056ab12f2c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c2fa4a-dcbb-4144-821f-57cec6b835a9",
        "cursor": {
          "ref": "55cd179d-d7c8-442e-bba6-b5e73d8cc9b3",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "16926b9a-9f83-483b-901d-b6c0626d3bab"
        },
        "item": {
          "id": "12c2fa4a-dcbb-4144-821f-57cec6b835a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6822bff0-17ac-44fa-a243-d9099c136e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead368e1-a442-4b3e-9124-f63128282a02",
        "cursor": {
          "ref": "2ca95601-914f-47e7-9060-d773b0e42f28",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "01529803-4313-4a5b-afa4-039f5f886584"
        },
        "item": {
          "id": "ead368e1-a442-4b3e-9124-f63128282a02",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9937e819-13c4-4f2a-84cd-d0e9ef6121b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f26bd-0ec2-4fda-aecb-5690c2f40f30",
        "cursor": {
          "ref": "e2c7a580-7a49-4e26-bb20-5bd309163d4d",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "da352200-30ce-4331-b49d-7158e7d64011"
        },
        "item": {
          "id": "bb7f26bd-0ec2-4fda-aecb-5690c2f40f30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b809ddcc-aff2-430d-9f31-2f7df0cd7fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9e81d3-5d76-46e2-93df-4b04d07a3cb4",
        "cursor": {
          "ref": "2ae80686-8376-4110-b7fc-dc4e3b334945",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d59b052e-b2e2-4061-ab39-46b9c274b29f"
        },
        "item": {
          "id": "0c9e81d3-5d76-46e2-93df-4b04d07a3cb4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a106d85d-3ec4-47b8-9f9d-a0f3973930c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976ef5b6-313e-48dd-8a66-6bf5093ad418",
        "cursor": {
          "ref": "91e4973e-15de-45e6-93a1-1d4aea035d53",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c94551ad-788c-4cd4-a365-c87a8c923d47"
        },
        "item": {
          "id": "976ef5b6-313e-48dd-8a66-6bf5093ad418",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "10219812-35f6-4382-866c-3c839b56bbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13c9072-e741-4893-a05f-97779dfe1b65",
        "cursor": {
          "ref": "c753db21-528b-45d8-8c29-ec3204d9f263",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2578b678-b89c-4c82-984d-c2705c2fcc56"
        },
        "item": {
          "id": "b13c9072-e741-4893-a05f-97779dfe1b65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "810ac381-7187-4139-bdbc-6ef50d5106a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc978a-4ccb-4b40-b808-ea2a2e2bfced",
        "cursor": {
          "ref": "d6893358-14b6-48c0-bcdc-8d85cf310f63",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e3396143-cc7d-416f-814a-6d7a3d017bbb"
        },
        "item": {
          "id": "26bc978a-4ccb-4b40-b808-ea2a2e2bfced",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ab58230e-2b04-484e-8f77-4ea506c7f410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bffeea-e450-47a8-868c-4a8e06d44a28",
        "cursor": {
          "ref": "63eb9e15-6fcc-4ca7-be46-46d18eda1073",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "43221a5e-0865-48be-9c77-d5923d0b0f41"
        },
        "item": {
          "id": "95bffeea-e450-47a8-868c-4a8e06d44a28",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8ec844e-0c1d-47f6-903b-60517edd0932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7056940b-ddf8-4c48-b0d5-b5ea13471d26",
        "cursor": {
          "ref": "cbc55675-024e-40a6-9452-2e396026f3d2",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69cd2fb1-f6fb-4cd8-a6a3-bf44a692f299"
        },
        "item": {
          "id": "7056940b-ddf8-4c48-b0d5-b5ea13471d26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67fc3f06-b149-4b8b-b302-6d492e4b8042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b347e1-b1ff-4a42-a98f-86351756c537",
        "cursor": {
          "ref": "fd246276-6408-483b-adf1-7ef39d111425",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b0c02008-8cc4-44d8-80fe-cea90ea18bc7"
        },
        "item": {
          "id": "c7b347e1-b1ff-4a42-a98f-86351756c537",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb90a186-9416-4e63-9e66-5db81399206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c54cfc-909b-4bde-9b61-ac3cce237002",
        "cursor": {
          "ref": "b4abbd04-6eb6-4d32-84fe-954dd33a9d8d",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c4c9a949-5da6-43a8-b803-3ce7ceff65e4"
        },
        "item": {
          "id": "74c54cfc-909b-4bde-9b61-ac3cce237002",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "42ec3f03-fc9e-4e76-85c8-db8a51018ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8815cf-eb75-4cf2-b39e-d2387fd2571d",
        "cursor": {
          "ref": "18c45f24-45e3-4704-8eb3-413152e52af2",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e0dd8759-37b4-4a86-810c-4ce8ddffaa53"
        },
        "item": {
          "id": "3a8815cf-eb75-4cf2-b39e-d2387fd2571d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "873ae139-9cfc-4b05-94f7-bfe4fc96af9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7760124c-6e74-4341-8c86-54a2b74cfd01",
        "cursor": {
          "ref": "e6b2c63a-0bc2-4d6c-9a43-36b2861e351f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98994f52-0dd7-413e-9a32-af814bc9507f"
        },
        "item": {
          "id": "7760124c-6e74-4341-8c86-54a2b74cfd01",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39508ed4-2cd2-456e-a961-6a564411ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e830e-afec-458e-a965-83d3731022d2",
        "cursor": {
          "ref": "eff05e77-7cd9-4f32-8f3a-40d5c75de528",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "46812ec9-2234-40e3-b9bb-415f1d56b10e"
        },
        "item": {
          "id": "fa6e830e-afec-458e-a965-83d3731022d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9cb0e97-4185-4f33-8b8b-5815cd4c2b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7038b689-f7e3-4da8-a5e0-44969593b987",
        "cursor": {
          "ref": "e5f7b885-1714-4a2d-a7de-aaa8384d91ef",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "741b8b94-1710-474a-b536-d9879abc9b5a"
        },
        "item": {
          "id": "7038b689-f7e3-4da8-a5e0-44969593b987",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4f25145-cc30-4f81-9257-e6ea35ecc248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2900a-e2f1-45e6-b384-9256676ddd71",
        "cursor": {
          "ref": "2ab0c404-6ed2-44fd-8f27-24caf95e060c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7446d0bd-fbd1-46f5-941f-cc6bef8da6de"
        },
        "item": {
          "id": "21b2900a-e2f1-45e6-b384-9256676ddd71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2b77d36-3281-477b-8b18-664bf1977622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a11f984-19c8-456e-8111-b53b93c98890",
        "cursor": {
          "ref": "8afe19d0-dc6f-4a23-8117-18c9bd5c708f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b1cc0495-a481-497f-9f48-5625eb23b9e7"
        },
        "item": {
          "id": "5a11f984-19c8-456e-8111-b53b93c98890",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9096c083-7548-4ba8-84c3-4d09aaae158a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ff0a3a-b23e-4930-bbd1-c3991ef9cdb8",
        "cursor": {
          "ref": "0912dbd6-c893-41d5-ab13-e50a64f1a506",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b7585938-c5c1-40e5-ab3c-1affcd391a70"
        },
        "item": {
          "id": "e1ff0a3a-b23e-4930-bbd1-c3991ef9cdb8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b0b17594-435a-41e7-af1f-1e176200424f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215d4524-e7a7-4405-b16a-07b072af5718",
        "cursor": {
          "ref": "5d2d577a-c894-43e1-8514-c5031752c45d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "670e47f4-7cb9-400f-a3e7-3732a20f9171"
        },
        "item": {
          "id": "215d4524-e7a7-4405-b16a-07b072af5718",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e8d68fef-f7e5-42d7-9234-5690f4afbcac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50a6e19-750a-4717-9f1f-5df9f913791d",
        "cursor": {
          "ref": "9a48ccac-325b-4bd1-aa48-419bb1fad88c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8eecb615-d167-4a84-b257-64def42576de"
        },
        "item": {
          "id": "b50a6e19-750a-4717-9f1f-5df9f913791d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6897d16e-b2a5-4c55-85e7-911461a094b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50a6e19-750a-4717-9f1f-5df9f913791d",
        "cursor": {
          "ref": "9a48ccac-325b-4bd1-aa48-419bb1fad88c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8eecb615-d167-4a84-b257-64def42576de"
        },
        "item": {
          "id": "b50a6e19-750a-4717-9f1f-5df9f913791d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6897d16e-b2a5-4c55-85e7-911461a094b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed6d66a-9a20-4327-979a-65ed828771a5",
        "cursor": {
          "ref": "54528388-3d10-494e-bb07-ea5956042f6f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "adc363ee-9de8-424b-8465-c84f2ef71564"
        },
        "item": {
          "id": "8ed6d66a-9a20-4327-979a-65ed828771a5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e4159106-a010-4369-8896-1d6623a4b9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aca0871-4be2-4511-b3c9-cadb30d1aa35",
        "cursor": {
          "ref": "df327b98-86ab-4851-acf8-f89826885887",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5093300f-33c0-4b82-a922-13f49692b3b3"
        },
        "item": {
          "id": "7aca0871-4be2-4511-b3c9-cadb30d1aa35",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4e629cda-ac2d-4e96-b922-fead2b0f34f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b387e4f7-2045-4309-a98e-d93b38e744a9",
        "cursor": {
          "ref": "a3aed3ed-8b39-48b3-893e-010366baa166",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c897de8-3168-4fc3-9c0b-22e59120bb3c"
        },
        "item": {
          "id": "b387e4f7-2045-4309-a98e-d93b38e744a9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d57ce07b-2f85-4b50-8d36-c3b601dd9aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381f8b7c-1f65-4a8c-9978-f46f35f09f80",
        "cursor": {
          "ref": "858e2630-3f46-4473-a96f-9aea3c75556d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f7a634f7-a46e-4676-824b-781f4ae375a1"
        },
        "item": {
          "id": "381f8b7c-1f65-4a8c-9978-f46f35f09f80",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1256506b-7bea-40ee-9833-34676eb94801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f719fc3-9369-4d1e-8296-0195d8012393",
        "cursor": {
          "ref": "90c57e0e-3e57-4014-bf6b-fa6583a5bcfe",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "08df11f5-a740-4889-b5ea-bdc0aad865ac"
        },
        "item": {
          "id": "0f719fc3-9369-4d1e-8296-0195d8012393",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "42f387ca-fdc5-4344-b241-b92c248cfcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c1b9a6-4ee2-4374-a219-5df48618a05d",
        "cursor": {
          "ref": "02a336ea-b10b-465b-869c-80cf7a39871f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1a879932-22dd-458c-a742-16a17ef25cda"
        },
        "item": {
          "id": "78c1b9a6-4ee2-4374-a219-5df48618a05d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c7564717-d07c-4d15-8542-8e6a1d68f4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2dc89f-f128-443e-b2ac-5497ccf456ca",
        "cursor": {
          "ref": "919f746a-0a24-414e-a3a2-b0b784fe0943",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5956ff20-ce18-4a9b-9185-db4579c84c0b"
        },
        "item": {
          "id": "8c2dc89f-f128-443e-b2ac-5497ccf456ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "825acec2-3336-4fff-becd-caacc6254b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e6cba7-845f-4780-9463-02d04eace5eb",
        "cursor": {
          "ref": "3e7cd6ee-3bd8-4b8e-a8fb-f70ca39a80cc",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "734bc69e-ff38-4b49-81c7-98bd540301a2"
        },
        "item": {
          "id": "e1e6cba7-845f-4780-9463-02d04eace5eb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a1f70b4-f11d-4dc5-8fb5-ef0e18c3de88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bca0f4-44cf-4a36-b366-f4b2e010dadc",
        "cursor": {
          "ref": "5335c759-b36b-40a1-bc36-0c960ef75464",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e4e7d640-d366-4697-8dbf-c0700ed79f8f"
        },
        "item": {
          "id": "76bca0f4-44cf-4a36-b366-f4b2e010dadc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "84dc8305-4fa0-430b-be74-16d7522737d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e384b8-eac4-4312-9a4d-10084a9bff45",
        "cursor": {
          "ref": "99b8c988-7f47-48ea-b7fc-b2128b8f0a38",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "91d9b6e0-0c19-44b4-a9cc-f4f36c584d17"
        },
        "item": {
          "id": "85e384b8-eac4-4312-9a4d-10084a9bff45",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a1fdb95d-a9df-4960-9fc8-cadf00dd8baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130713b-b120-4e70-991c-0d25cc9917bf",
        "cursor": {
          "ref": "419098fa-d6fe-43b2-90c7-36d06e731a44",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8f2c40ec-a664-4196-9261-b764a9c6f32c"
        },
        "item": {
          "id": "c130713b-b120-4e70-991c-0d25cc9917bf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "db47510c-599c-41d7-9d53-0103b18513d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74187edb-865c-4979-9c78-0c189396eba7",
        "cursor": {
          "ref": "af0f4769-efae-48f8-a0c5-ca13145d5036",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "65d06fdd-4148-4604-8ee2-801dfc3dad21"
        },
        "item": {
          "id": "74187edb-865c-4979-9c78-0c189396eba7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "706563e6-c5f4-4cd6-b279-663e60ddd480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e992c6-78ca-4bf3-bdf8-6c8e618f3703",
        "cursor": {
          "ref": "8dab67d4-e9d7-4560-aade-3e615094b177",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c84de10b-fa5e-48af-a7db-2f1c28fb7e14"
        },
        "item": {
          "id": "61e992c6-78ca-4bf3-bdf8-6c8e618f3703",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5e6a5254-1e6f-4d7d-80b1-69f40a90c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0787ac9-0a81-48d5-91d0-266087f0e654",
        "cursor": {
          "ref": "df620618-f31d-4495-9420-67c8a670d424",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dab85f38-f75e-4b78-9a75-9b620b9890c4"
        },
        "item": {
          "id": "a0787ac9-0a81-48d5-91d0-266087f0e654",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ec5bc80-78f6-4d8c-a7cd-e3c7ba4a7744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc9dad-9688-4a15-98da-0ea67622ce64",
        "cursor": {
          "ref": "4f2a6c57-e2b9-44f4-9923-01a43031c75d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e9a77e83-ca0d-403e-80cd-321fe6b917a9"
        },
        "item": {
          "id": "11fc9dad-9688-4a15-98da-0ea67622ce64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d24a3e2e-49e9-4ce9-9b40-ba4975491601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a656b5-a3ed-4603-9259-b8847e9916ee",
        "cursor": {
          "ref": "61f5f011-3f0a-4afc-9b45-4f47d86ee55b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9aa4b7ea-98b9-4a53-9e32-69a7f8959208"
        },
        "item": {
          "id": "36a656b5-a3ed-4603-9259-b8847e9916ee",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ea2bb079-dfe6-48d5-87a0-89928c99f694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03647075-8689-4b6a-9742-5bbab3d9c5b4",
        "cursor": {
          "ref": "2e50049c-710b-4b3f-9025-a7561ba0abf1",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1a12b96f-d207-439d-bbab-2173e1d84d73"
        },
        "item": {
          "id": "03647075-8689-4b6a-9742-5bbab3d9c5b4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "60f5b5bb-02d2-447e-9c76-612689fe7fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6359ca3-cf84-41e1-a7a6-fb788d0e3dbf",
        "cursor": {
          "ref": "9ce71bdc-add9-4703-977c-43b80ce9cec8",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5a5a53b5-77d9-4e6e-bf39-3031a8ecd527"
        },
        "item": {
          "id": "e6359ca3-cf84-41e1-a7a6-fb788d0e3dbf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "187b6266-0765-4205-b530-0b3ed917fe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96870d7-a96e-44f4-8d87-f52d34668ef5",
        "cursor": {
          "ref": "e469911f-9f9c-415c-b81f-b41d375ab3b4",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f539f6cb-746d-4cb6-8c0e-51db1c9a9910"
        },
        "item": {
          "id": "a96870d7-a96e-44f4-8d87-f52d34668ef5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa5dc8b7-2caf-4f74-a7c7-dbdfc0bd7c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53c8835-837b-4ff3-a608-2695e6b9800f",
        "cursor": {
          "ref": "be74f5d2-d4db-40cb-8b1f-767b47a076b9",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1d2d812e-e6ea-4b3d-b6c6-8e02cc7b08a0"
        },
        "item": {
          "id": "a53c8835-837b-4ff3-a608-2695e6b9800f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42c26688-7dde-42e3-a189-134ebb08b786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc8eed-26b7-42a2-8ad5-1cbfc49b7beb",
        "cursor": {
          "ref": "5e597764-955c-4d54-a5e8-ada101b95ed2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "90d321c4-5189-4d98-8547-a4fce0e5f3e9"
        },
        "item": {
          "id": "50dc8eed-26b7-42a2-8ad5-1cbfc49b7beb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "55608c87-5938-44c4-9029-0c9949dc2ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20758063-c976-457a-bf85-fb4027708e12",
        "cursor": {
          "ref": "cfa2888c-8fbd-4672-903d-f39508f3b7d2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1e862495-689a-4fcc-bbfc-b86f86edfcd8"
        },
        "item": {
          "id": "20758063-c976-457a-bf85-fb4027708e12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22c9b121-107e-4642-ba1c-19f0a01db242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d10bb1-d450-4f23-8dd6-a423a735d55f",
        "cursor": {
          "ref": "b45c965c-ca57-4bb4-85e8-b1758ca9d4d8",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "648c6b3a-c744-4e9a-8a09-5008cac1c2ba"
        },
        "item": {
          "id": "32d10bb1-d450-4f23-8dd6-a423a735d55f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "356afc66-0e27-4d1a-bf85-5e86c83bcf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4285adef-79c0-4733-9fbd-d02591714ef3",
        "cursor": {
          "ref": "53b4f43a-09cf-421d-8cf2-5b9a5a8caef2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7df8a6ef-5d7e-4ef1-b9d1-2e68b7097004"
        },
        "item": {
          "id": "4285adef-79c0-4733-9fbd-d02591714ef3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7295e440-15f8-4439-807c-4d5b01a05275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcbc855-d121-45cf-adf3-26478149c574",
        "cursor": {
          "ref": "ac7319d2-c681-4e73-8b99-3cd3ea3a8a1b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "68b23514-2e0a-4780-b424-545fa2bcaed1"
        },
        "item": {
          "id": "ebcbc855-d121-45cf-adf3-26478149c574",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f96424a2-54e4-4340-8b13-40b414fc3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9166b93-b7d8-42ed-b9a1-7d15a62a1976",
        "cursor": {
          "ref": "2909fbf7-e2ee-43b3-8014-deb9f3d9e392",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b02b3ebf-6696-4979-9546-cbf7700676d0"
        },
        "item": {
          "id": "f9166b93-b7d8-42ed-b9a1-7d15a62a1976",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e6e7e261-4a46-4724-9a34-9dcbeaff9b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c1e1c5-80a9-40e6-9a44-ba1e82c98b33",
        "cursor": {
          "ref": "f01c649e-f6ed-409a-a3f6-44a66b47c9b6",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8b9e9fb1-323c-408c-b285-3e9de8de9166"
        },
        "item": {
          "id": "90c1e1c5-80a9-40e6-9a44-ba1e82c98b33",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f9e387a8-78f2-4098-8b4c-3f694ed86840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8703800f-7e10-4195-90ea-d87b6db31c5d",
        "cursor": {
          "ref": "aaaf84f5-6080-44da-9d0a-e5fc79e0d26c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c0b2a84c-88fe-460c-93bc-60597e5b8e8b"
        },
        "item": {
          "id": "8703800f-7e10-4195-90ea-d87b6db31c5d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c0f22033-6e76-45dd-9b13-8d914adb6ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff989da-8a4e-4e1d-8df9-37bb1b5f6d33",
        "cursor": {
          "ref": "4e8a0cd0-b08c-4aab-bd01-b382b600fe33",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b66e49cc-8531-4105-98a9-ad757b320b4a"
        },
        "item": {
          "id": "2ff989da-8a4e-4e1d-8df9-37bb1b5f6d33",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7df095c5-3641-49ba-90c2-bc0b7302d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a6d84b-de15-4616-9e26-b4ef190db9c5",
        "cursor": {
          "ref": "2fe04468-d8db-436e-99b6-b52d873a4bd8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ba2ab3e2-572a-4ad2-8236-92748b98068b"
        },
        "item": {
          "id": "f5a6d84b-de15-4616-9e26-b4ef190db9c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8225c0d0-e51a-4baf-af9b-f399c9341547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec239ac-30b2-4502-aec5-093a24db187f",
        "cursor": {
          "ref": "4a9db701-71fd-4973-b563-0f8294913a35",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b9097e79-c52b-4de5-abda-daa352b3258b"
        },
        "item": {
          "id": "aec239ac-30b2-4502-aec5-093a24db187f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "77516ffb-6830-44e3-a836-ea84239a718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5959ed7e-af41-42ae-8b2e-ee8b8c73957e",
        "cursor": {
          "ref": "3ce46a3b-0c17-4c18-9e85-c1d36d2c707a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8cb09a7f-6b60-441c-9bf3-12d236d32480"
        },
        "item": {
          "id": "5959ed7e-af41-42ae-8b2e-ee8b8c73957e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8a4e7fa9-f368-4a2c-87a7-5fb3c5c8c23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e02b09a-1115-49ec-b112-2492faf6dd98",
        "cursor": {
          "ref": "3c28330c-1e88-4733-b8ca-74b542a24976",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fe53232b-aa53-484c-9368-5a55bf477a76"
        },
        "item": {
          "id": "4e02b09a-1115-49ec-b112-2492faf6dd98",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b03f70e-6a6b-49a5-a82a-b0b204d6f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eb6ada-6cf4-4e48-9f08-2e03436ff4ba",
        "cursor": {
          "ref": "39dc8f3b-ce06-4dcc-b428-36c08f9838aa",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac5064fa-8fc8-4e6b-99a5-fcaebda05dce"
        },
        "item": {
          "id": "d5eb6ada-6cf4-4e48-9f08-2e03436ff4ba",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2bda5e94-73f8-4f40-add7-fbbb4e1d59c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535ed27c-f6ff-4aea-a25e-825873f41cf6",
        "cursor": {
          "ref": "2011d2e6-ef85-44ac-91a3-fe47e6705da1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7dadfa18-ae33-459d-9970-6a3ea50e715e"
        },
        "item": {
          "id": "535ed27c-f6ff-4aea-a25e-825873f41cf6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d0b6f808-8299-42b3-858a-2bbce7e8791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b739920-17dd-44fb-bbd2-8b4c7b3724fe",
        "cursor": {
          "ref": "f8382847-b716-4ca6-a0d9-812e03908801",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e0bcc295-7d55-4a20-af5d-5f44d23a5af3"
        },
        "item": {
          "id": "6b739920-17dd-44fb-bbd2-8b4c7b3724fe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cbb353dc-186a-46a4-9656-052dea526e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e848339-e311-4aa7-8efb-1dc2d8680668",
        "cursor": {
          "ref": "5757fee9-f741-4539-9f92-f26c006d0a06",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f068544c-a5d5-41c9-adb8-6d87309057ae"
        },
        "item": {
          "id": "5e848339-e311-4aa7-8efb-1dc2d8680668",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b8783836-125d-4cfd-adc0-f0d3175688e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb68fa7-4924-4435-a847-897f80bf296f",
        "cursor": {
          "ref": "78faddf2-6e87-4906-820e-8ece7333cd9e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "381c6910-5642-4f80-a47a-26824fbe22a4"
        },
        "item": {
          "id": "8cb68fa7-4924-4435-a847-897f80bf296f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f50986e-c172-4355-a77e-2a7d39226baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce8a2cd-606a-4afc-a11e-4a4e314b017b",
        "cursor": {
          "ref": "72cb79b9-b735-440b-a854-ff4f75dcc154",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c81dabc-0ac4-4708-b82e-ff7376dda6f8"
        },
        "item": {
          "id": "cce8a2cd-606a-4afc-a11e-4a4e314b017b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "52c3b6e2-1f19-4254-b93b-90c42822c855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c86332-6173-40ba-ad93-04f0a7084d38",
        "cursor": {
          "ref": "76484a1c-d138-4eef-953d-164cdd670b02",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "874da762-4c30-40cd-bb70-7efdac23a4e0"
        },
        "item": {
          "id": "e0c86332-6173-40ba-ad93-04f0a7084d38",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b756b11b-0157-4d34-bb38-af2a8654715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03aafa2-320d-4011-8328-8f63275c3c74",
        "cursor": {
          "ref": "1d351a27-9782-4225-a07a-d886047ed1b7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bb22d107-3c8b-4f9f-a7b7-f29442f818db"
        },
        "item": {
          "id": "b03aafa2-320d-4011-8328-8f63275c3c74",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a80e8abf-1445-4291-b700-ff7ae80b4d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7ded2f-83eb-40f1-9b86-505c5d06a3b3",
        "cursor": {
          "ref": "728ce833-d9b2-493a-b944-150f38d5bec4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c5786532-7908-473f-838e-58f8fa6d11b1"
        },
        "item": {
          "id": "3c7ded2f-83eb-40f1-9b86-505c5d06a3b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0db14df6-bc1a-4550-888c-5a1d0db91f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17fcb5-625b-418a-9033-c02cbdada781",
        "cursor": {
          "ref": "47129256-836b-44aa-9bd4-f7fe4e56000e",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5c12977e-4800-4312-83dd-f6d0d9d6aae1"
        },
        "item": {
          "id": "3a17fcb5-625b-418a-9033-c02cbdada781",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "602f228d-7e93-419d-8165-9c96048eac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46478d67-e3f5-4ef8-94c2-56a04353451a",
        "cursor": {
          "ref": "4fe4ab9d-cc1a-4b8e-89b8-a4fe03e588af",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a7f8184-a395-4954-93a1-ab8ef8c56b4d"
        },
        "item": {
          "id": "46478d67-e3f5-4ef8-94c2-56a04353451a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8f3e925-eec4-4f60-8b1e-88e7d2546773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becd682e-f325-43c2-87e9-2010324f9537",
        "cursor": {
          "ref": "f45ce6a7-49bf-4d57-9578-843513f48e1a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3fbd0d18-7bb8-41e0-8cae-19489fddf683"
        },
        "item": {
          "id": "becd682e-f325-43c2-87e9-2010324f9537",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f961d6d3-d598-45ab-8f60-dd735b6a19c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0fa4dc-44d1-46c3-be8e-f3609f3dcaf6",
        "cursor": {
          "ref": "ee0ad687-69b0-456a-9b24-6d8213f2576e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "29db5425-2bbe-4291-b548-8e65ceaafae9"
        },
        "item": {
          "id": "ae0fa4dc-44d1-46c3-be8e-f3609f3dcaf6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dc2139d1-e6f7-4f8f-9a7c-883970312b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96966910-8d78-4268-99c7-63863971e3e4",
        "cursor": {
          "ref": "bed0df63-e25c-4f15-94fd-0cbd0be1a49e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "37819ff0-3b3e-4a0b-a553-69b38767bd3b"
        },
        "item": {
          "id": "96966910-8d78-4268-99c7-63863971e3e4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b0c1c9e0-049b-4b22-aaca-d87722b242a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b170b6f9-e438-4d01-9a81-fa1089197ef2",
        "cursor": {
          "ref": "408a863d-8857-4f7b-ba70-95c885509c73",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f191635e-3c44-49ba-9b8c-842f8dd36f4f"
        },
        "item": {
          "id": "b170b6f9-e438-4d01-9a81-fa1089197ef2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ef197ea1-3ed2-4e2f-bba0-08066296e97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e61573-08d4-4c4d-adae-7b89b307ecff",
        "cursor": {
          "ref": "b4fc3cc8-3dd5-4122-9594-5fe9a09aea60",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6d4b1b10-b7ca-4bcf-9984-f38dc19618f6"
        },
        "item": {
          "id": "a5e61573-08d4-4c4d-adae-7b89b307ecff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2b1b0deb-2bec-45fe-8646-f3cdcde39eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcc146d-4f9c-4c4e-99a6-bc93cdd7fcf2",
        "cursor": {
          "ref": "9557767b-c9b6-44b5-892b-0376a9eec582",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bbb4e54f-5cb7-4530-b2fa-e6eb1f9b6c60"
        },
        "item": {
          "id": "fdcc146d-4f9c-4c4e-99a6-bc93cdd7fcf2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c9dcd2e5-876e-4019-b801-709a18f6d004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c429640-d29a-4fbf-84b8-ff72a26a9ad3",
        "cursor": {
          "ref": "ee36d7ec-6972-4f1e-b242-b2a1db8015bd",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1bfd6989-d73f-4207-a1df-d12ce4d5e627"
        },
        "item": {
          "id": "6c429640-d29a-4fbf-84b8-ff72a26a9ad3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2d75167f-a978-41cc-8941-c9c6e8a207a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbaf69f-f460-47d1-838b-bb2b736728ce",
        "cursor": {
          "ref": "42106cab-f800-439f-bf19-e02cf97aa567",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b3acd424-2984-4f3d-8424-c1fa7af9aa54"
        },
        "item": {
          "id": "abbaf69f-f460-47d1-838b-bb2b736728ce",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "426eddd2-32ab-46bc-975f-1a18800cc645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f249866-4e8f-461e-98b8-b2f98d899d16",
        "cursor": {
          "ref": "8cf6c488-bcb9-47d2-b144-5ab4c9654daf",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "808d7118-a527-4870-9ae1-2886e565112b"
        },
        "item": {
          "id": "2f249866-4e8f-461e-98b8-b2f98d899d16",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "96ebf4ea-90d2-4e29-b355-103819412737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719cba2e-37d8-4186-b433-0c1ca2d5d310",
        "cursor": {
          "ref": "ed8833cd-35c0-4f70-80e5-5205e34db25e",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ecaae784-1b40-4a1b-ada9-d733a2a49150"
        },
        "item": {
          "id": "719cba2e-37d8-4186-b433-0c1ca2d5d310",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1453943e-d358-4b46-8461-affa0af05d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa6c68f-24e1-4f0f-b8c5-60579a660c02",
        "cursor": {
          "ref": "5f780e66-15fd-43d2-b617-64d4fb11ee43",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "886ac44c-c433-4c4c-839f-e64d54f22857"
        },
        "item": {
          "id": "4fa6c68f-24e1-4f0f-b8c5-60579a660c02",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ac375c75-e135-4f8a-ba02-27823e12a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6d6291-e648-4789-bce9-f77e35e4df07",
        "cursor": {
          "ref": "7d1fd2c5-e7d4-4c62-8092-4a897f406fbd",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c25319d6-dc92-4c78-9fff-348db443ba55"
        },
        "item": {
          "id": "2c6d6291-e648-4789-bce9-f77e35e4df07",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c4811bd-080b-4a6e-a837-86c81740fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdd68e3-11b5-400b-9707-6eb394896dbc",
        "cursor": {
          "ref": "226de748-b79b-4165-8f9a-33012113a859",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "16c0a618-9c35-4ec7-ae75-0f65081df522"
        },
        "item": {
          "id": "3bdd68e3-11b5-400b-9707-6eb394896dbc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "efe27893-8562-47d3-ab57-a4ea58190c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6300d96-d7b3-4e06-8933-14ee9d544e16",
        "cursor": {
          "ref": "ffd9085d-c27f-450b-958a-366a7f99343f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1932e8e5-858d-4af7-86fd-3bfd08f813fd"
        },
        "item": {
          "id": "e6300d96-d7b3-4e06-8933-14ee9d544e16",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aa096c0c-8cab-4e30-aba0-b5ec543dd311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8661c80f-19c6-41eb-9aa2-0ed447f0864f",
        "cursor": {
          "ref": "8be172df-39b7-4939-a32b-a15e824f4579",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6c2ef99a-b224-4645-8811-8e3fb078c402"
        },
        "item": {
          "id": "8661c80f-19c6-41eb-9aa2-0ed447f0864f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3ad6900e-b27f-4387-b11f-57e60722c3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2045e166-1c17-490b-93b9-dbc49aa1de4c",
        "cursor": {
          "ref": "d22706ca-c019-4ecb-a847-6bb641be8636",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8463dbb-192f-4b7a-aef5-86f5e0f70652"
        },
        "item": {
          "id": "2045e166-1c17-490b-93b9-dbc49aa1de4c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "702b4bf9-beff-4928-9459-aa7c1e5c9d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0083fa78-dbf5-4f08-82d6-176bb52b532e",
        "cursor": {
          "ref": "b569f454-113e-4a48-8012-c718dadf93ed",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6e36ad4d-058b-4e92-8836-cc3a24583ee9"
        },
        "item": {
          "id": "0083fa78-dbf5-4f08-82d6-176bb52b532e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e8ba179c-0496-454f-bbca-c7e815527fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf32ba2-73c6-4dd3-9b06-2b817e228d26",
        "cursor": {
          "ref": "cd68a310-1543-4477-ae8c-d14c6aa656bc",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6d8c44d9-7834-476d-945d-0d83e58d7d2d"
        },
        "item": {
          "id": "aaf32ba2-73c6-4dd3-9b06-2b817e228d26",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ffcd73ab-0e5f-44a1-902e-dd017ac09511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022aadb3-9752-4918-863c-f69f21b7c8c9",
        "cursor": {
          "ref": "1e98da4c-0d69-4233-a7d6-36471574f87f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4199b8d3-e8f9-4428-b0b7-41b58e6487ba"
        },
        "item": {
          "id": "022aadb3-9752-4918-863c-f69f21b7c8c9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5c1c5187-9bd3-4194-be9d-3c8abc55dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4bb0c4-d7df-4bfb-bac8-ac85fd9d4934",
        "cursor": {
          "ref": "f9511ab1-0b89-4756-8401-95f1bae10113",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "970f9c41-e19c-4aaa-83b1-db57375fd697"
        },
        "item": {
          "id": "5a4bb0c4-d7df-4bfb-bac8-ac85fd9d4934",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "31d4134e-9427-4368-a8a3-729079cafe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16824c3-bbfc-4193-be02-b451640d33fd",
        "cursor": {
          "ref": "c28a7f84-44ef-4ff7-b359-4d81cc851a86",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9cc8ccd-4f4c-4b84-b013-39df6a3d319f"
        },
        "item": {
          "id": "a16824c3-bbfc-4193-be02-b451640d33fd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0aff1885-a747-43bc-992c-2cb6e46c5b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c4f93a-b41f-481c-8eff-c8ebf65ba51c",
        "cursor": {
          "ref": "677ad5b0-b0bd-419d-9c43-272ffb07ab4f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "da1883f9-e6c1-48a0-88f1-5e2ac5d00000"
        },
        "item": {
          "id": "91c4f93a-b41f-481c-8eff-c8ebf65ba51c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "be3cce25-c159-421b-a472-39739a4ac04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353f5fe5-a66f-4e7f-8bad-b8d5acd14922",
        "cursor": {
          "ref": "f3f66641-df68-45fd-ab74-99149ad99040",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4c8e344a-d51f-4fa2-ba50-5f135962feb3"
        },
        "item": {
          "id": "353f5fe5-a66f-4e7f-8bad-b8d5acd14922",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa4c5e93-d9db-4a0d-b3b9-8cae5a364f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c0e93a-3868-4e23-aad9-10a0f698bc98",
        "cursor": {
          "ref": "5f20bf2c-c2fd-4d1d-a2c7-28d76685a2c9",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b0e9aa84-6a28-454f-a4e5-a6695d851153"
        },
        "item": {
          "id": "74c0e93a-3868-4e23-aad9-10a0f698bc98",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a52b8688-0a6b-49a1-9e6e-abb93c301780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d3a1d9-e069-4307-9d7b-df15affd1f71",
        "cursor": {
          "ref": "f5faf7f3-0d36-45ad-8d81-5377115cfb60",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1894e282-be20-4812-924f-a5c3cef7bf12"
        },
        "item": {
          "id": "02d3a1d9-e069-4307-9d7b-df15affd1f71",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7132bba5-001d-45b5-a8a0-fa229c99ad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33472754-44b3-424f-bc6b-80253230d20f",
        "cursor": {
          "ref": "a357a2a3-cfcf-46db-94ca-8840862e6c76",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b48204ce-ae54-4325-82e0-ab2ed64ed3a7"
        },
        "item": {
          "id": "33472754-44b3-424f-bc6b-80253230d20f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2223fd87-6f91-480c-98a0-ca6cd7410a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76222e30-fa9e-49f6-9018-1674a2af0a0a",
        "cursor": {
          "ref": "53e5d8df-77ff-4e96-a556-89f6daac8e2c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ddd897d1-8cff-46a0-ad7e-412a3bd7af58"
        },
        "item": {
          "id": "76222e30-fa9e-49f6-9018-1674a2af0a0a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1ebd1d20-8abf-4355-be39-b3978e57067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa49ce7d-86e1-44cd-bd42-5aeaf42bf124",
        "cursor": {
          "ref": "be5703bc-fa90-4e32-b5a6-800532f444cf",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "80cdcc9c-81b9-44b6-a206-7c19055d53bf"
        },
        "item": {
          "id": "fa49ce7d-86e1-44cd-bd42-5aeaf42bf124",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0116a2db-ea00-4c8d-bc57-f16154c5b84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b8314f-1885-46b3-ae03-0a816c172cb5",
        "cursor": {
          "ref": "86126ecc-b1ec-4bd1-86ee-891c8a8fee31",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51b489be-aed8-4a5e-823e-2521d6b9ce12"
        },
        "item": {
          "id": "b3b8314f-1885-46b3-ae03-0a816c172cb5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9bcc9ce7-5f1f-4d69-80b8-4390ebd9820a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190aeac9-0e34-496f-95b3-24bcf175edb9",
        "cursor": {
          "ref": "8498efef-dbd3-4a68-ad68-747669e90b1f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "055a4102-227e-4767-8ca4-38ff89eba564"
        },
        "item": {
          "id": "190aeac9-0e34-496f-95b3-24bcf175edb9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a255aa5f-f4ec-4b64-bb23-1690f4f4881f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5356d9-a1ae-4777-ad7b-19e16897efca",
        "cursor": {
          "ref": "bc6a7b0e-5af4-43d3-9396-d006f6a60723",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "792e6478-04b2-4cc1-b4b3-21e70c82bc02"
        },
        "item": {
          "id": "3c5356d9-a1ae-4777-ad7b-19e16897efca",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8ca5ba6f-8825-42f4-96b0-c059129cdcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9988c6e-04b5-4c13-92e5-28955dea7c09",
        "cursor": {
          "ref": "226d3f4c-bc48-42e5-b635-27cde0568271",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "de4fde32-fe4e-4b56-aba3-0e0e8090eb29"
        },
        "item": {
          "id": "e9988c6e-04b5-4c13-92e5-28955dea7c09",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3a45e1c3-13de-44a5-a446-da5ae954ff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628c53f0-1bdd-4500-b30e-0a49d073e255",
        "cursor": {
          "ref": "01374f01-c527-4ff0-bcd9-abb40bf8b767",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "612382e8-fcb5-4687-b4fd-3654f3592151"
        },
        "item": {
          "id": "628c53f0-1bdd-4500-b30e-0a49d073e255",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6aa79a8e-b561-4a87-ac2e-1cb7c0ed827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c406f1b9-21cc-432f-8826-2a7c3c486a74",
        "cursor": {
          "ref": "c90d2200-0a88-44be-b650-0b6a7260cdef",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ac0c4c1-66b1-4f6c-ac7e-af1dadbe25d8"
        },
        "item": {
          "id": "c406f1b9-21cc-432f-8826-2a7c3c486a74",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "72960f2c-9f7a-48e5-926e-c558a40bb1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa908f8c-16b6-44f0-9fb9-44ad69e1aed4",
        "cursor": {
          "ref": "d2cf2dd3-82e0-4aeb-81ac-2ad5ab0bb707",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "200052cb-9cb1-4283-9749-c26a6a7557e4"
        },
        "item": {
          "id": "aa908f8c-16b6-44f0-9fb9-44ad69e1aed4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0dbe28c1-9db0-4b5b-9487-faea940e24c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f095dc-4e8d-4019-b668-3c57876835e0",
        "cursor": {
          "ref": "fd09f682-ceae-4ba3-94bb-ffac21a9c4ef",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d958e482-0165-4e71-8e27-d51f17a06ed3"
        },
        "item": {
          "id": "50f095dc-4e8d-4019-b668-3c57876835e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3d5aff45-17f3-4691-bc4b-ffa3e468bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311ca849-99c9-48cb-bdfc-57bda78f5c09",
        "cursor": {
          "ref": "4f5821f7-479d-441a-a978-60524dbb5aae",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "febd63a2-e88d-4ebb-8ad5-67d91cc81609"
        },
        "item": {
          "id": "311ca849-99c9-48cb-bdfc-57bda78f5c09",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "00decf96-2177-494d-a890-a14184703623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee847d7-e669-4844-8202-64ba37f76cf5",
        "cursor": {
          "ref": "46ca476f-8491-4147-914e-6bc184533dcf",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a311e82-3445-44f5-b7b1-6058dfd901ae"
        },
        "item": {
          "id": "4ee847d7-e669-4844-8202-64ba37f76cf5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f039e429-a114-4dbd-bd50-5dffd6d37473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b3b59e-ece0-43db-80d2-e8542f0335c5",
        "cursor": {
          "ref": "15f88b1d-0b22-4d0e-bd47-0b1cf6c56c01",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4bef5944-8767-42fe-8f14-be1cdef428f8"
        },
        "item": {
          "id": "c9b3b59e-ece0-43db-80d2-e8542f0335c5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5560801-c7c7-47c1-a96f-276f28d69948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff18b46f-fd41-456a-8ca0-5f3121dd47dd",
        "cursor": {
          "ref": "c3ccef40-9495-40c4-beb9-bfa5d190b134",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9b75f998-d18f-4400-aec8-0d09ab1d7c90"
        },
        "item": {
          "id": "ff18b46f-fd41-456a-8ca0-5f3121dd47dd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5a2194c0-bb71-42c9-9f5f-2ada70be7d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a2bee-e50a-4da5-bc66-9e7737985e4e",
        "cursor": {
          "ref": "840dc139-7d10-454f-a498-de6e7867549c",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea9880e6-8f85-4724-8494-20d92c22eafd"
        },
        "item": {
          "id": "f69a2bee-e50a-4da5-bc66-9e7737985e4e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "12decad9-1635-44a9-a1cb-b934217776d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206d954f-eb5c-4561-b977-4db83ebef488",
        "cursor": {
          "ref": "1b9a2942-aaab-422d-b3f0-220a5c2c124a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3cf33817-0f5c-41b9-947a-5f08ef5ad88e"
        },
        "item": {
          "id": "206d954f-eb5c-4561-b977-4db83ebef488",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b13753c5-cb0d-40ae-8e04-b0eb18db75d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f2219-67dc-4deb-b12c-fcb388e47e6f",
        "cursor": {
          "ref": "3767c741-3744-4cfa-987a-dfdd1d525a2b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "971df367-f604-463e-a24b-a3673e0bde05"
        },
        "item": {
          "id": "f11f2219-67dc-4deb-b12c-fcb388e47e6f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cf3beefb-32e9-4634-9a42-81e5b79bd815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e309f-0208-4728-85f6-0c3beec46459",
        "cursor": {
          "ref": "32d33f7b-6205-4766-91c4-53aed05101ed",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c2b34973-4b70-43a0-b2f2-3fe993cdd4fc"
        },
        "item": {
          "id": "fe6e309f-0208-4728-85f6-0c3beec46459",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e8a4e13c-24b1-4950-a306-09523d75cb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf48bf-fc51-4071-8233-69212e91d9b3",
        "cursor": {
          "ref": "c236f72b-01b7-46f4-aced-a25b0c4cbedb",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f39e3d6-4ca9-45a8-b941-4db48178f8b4"
        },
        "item": {
          "id": "56cf48bf-fc51-4071-8233-69212e91d9b3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b1a20e89-089f-4e41-ab5c-1ab15666ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85658365-1002-4cad-b21f-7291746b12ee",
        "cursor": {
          "ref": "d11f15f4-ce34-47b4-930e-1f3d201dbdb9",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad94dfd4-9135-4573-b566-365d13234fb7"
        },
        "item": {
          "id": "85658365-1002-4cad-b21f-7291746b12ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f7bf76d8-fe47-48dc-a8bd-e85f04a29f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25f73cf-7539-43fb-8aad-aaf7fe335965",
        "cursor": {
          "ref": "0da4af1f-1c34-4aac-9bc9-ec1aec1f84ed",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1cea92aa-f0e9-4fb5-ae54-89c4a4907882"
        },
        "item": {
          "id": "a25f73cf-7539-43fb-8aad-aaf7fe335965",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc210a63-8328-4043-8a16-f7c5a24f7a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee819023-c799-4c9e-b4ea-4f2abed9da35",
        "cursor": {
          "ref": "e8e4c458-ffaa-40b3-a667-8604919e1940",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a7260846-401d-4267-8712-9241d0b39bfe"
        },
        "item": {
          "id": "ee819023-c799-4c9e-b4ea-4f2abed9da35",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c0dbd2d3-5f4e-4610-87cd-d7e77bc19056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e84a9bc-598f-4647-800d-b4b604e64a05",
        "cursor": {
          "ref": "f05c39fd-f8d1-49de-a8c1-3c60f460ea63",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96595818-4073-4632-9b10-ee4bd28c369d"
        },
        "item": {
          "id": "1e84a9bc-598f-4647-800d-b4b604e64a05",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "626cda95-3ef1-431e-827a-fd873e041b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b13df4-1513-41a9-afcc-e3fc12d2a746",
        "cursor": {
          "ref": "a3aed1d5-dcaa-43d1-b471-4f9b51c7a3dd",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0e8954e9-cae1-4a00-9f3b-1353b8b5768a"
        },
        "item": {
          "id": "03b13df4-1513-41a9-afcc-e3fc12d2a746",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2153a34d-4a56-4f94-b723-ae4d2040bfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fac7fc-5d3c-4929-bf5a-29d3f12b452a",
        "cursor": {
          "ref": "21d8f41e-d448-4633-b71f-40309f1ba842",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b30f754e-024e-4b36-bc80-a75f11672ed6"
        },
        "item": {
          "id": "b0fac7fc-5d3c-4929-bf5a-29d3f12b452a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9f6d0dbc-15b9-406e-9c01-1a5e2a90686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2d8c76-477f-464e-95d4-5151b43d6f90",
        "cursor": {
          "ref": "246da454-09d0-4bae-b392-2f94b055025b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dfd528da-f327-459c-be9a-a1493fa0abd6"
        },
        "item": {
          "id": "9a2d8c76-477f-464e-95d4-5151b43d6f90",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b8a4ecf-eece-40ba-bb2b-dd40ab6b7e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460e93af-6477-4421-91e8-2509cff86e3c",
        "cursor": {
          "ref": "35fc2dab-508a-4f6d-b21d-10fbea6d73d0",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c8b0653-8cc9-4b8c-81e5-4eb3f2c87020"
        },
        "item": {
          "id": "460e93af-6477-4421-91e8-2509cff86e3c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "36b34406-3ffe-41e6-b2de-0de32826cb92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e82365-9f84-4a32-9db0-47c4a99dcf71",
        "cursor": {
          "ref": "cabf3eb8-a4ab-414d-a519-80854a4b4baa",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "250ca724-a143-4266-9c7c-fb54b779ba0f"
        },
        "item": {
          "id": "44e82365-9f84-4a32-9db0-47c4a99dcf71",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d39ed10f-9ac7-40f9-8e10-5eee3804634b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b261195-4b76-4c20-89a0-9432022c671b",
        "cursor": {
          "ref": "da80c093-43ca-41aa-b956-43094e0841cb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "db08ed29-add7-4fd6-a9c1-979c405920f9"
        },
        "item": {
          "id": "9b261195-4b76-4c20-89a0-9432022c671b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86bb5930-b2e8-40e2-bb1a-1b29ebbc935e",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cf476c-313d-4e6f-aca1-f30506c4c5ed",
        "cursor": {
          "ref": "9c32ec33-f337-4afe-a44f-927777c1066c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5931c46d-da1d-4e70-a8ca-57fffea54ff0"
        },
        "item": {
          "id": "85cf476c-313d-4e6f-aca1-f30506c4c5ed",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d85096a1-1196-4936-b2b9-61d4f170eca2",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e74e115-37b7-4e88-9d7a-834eb301464f",
        "cursor": {
          "ref": "bdce8301-888d-4972-bbb0-a04336fb204c",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "151d7b2f-26da-4b4d-9cbe-8a4729874c03"
        },
        "item": {
          "id": "9e74e115-37b7-4e88-9d7a-834eb301464f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "abe16e3a-0f49-4c5f-badf-3e1e8dca8c51",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
        "cursor": {
          "ref": "5eefe625-3905-44aa-b78f-2ad6ddcfc315",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f740fd7e-81bd-42c1-b806-a66008b4e710"
        },
        "item": {
          "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7855024d-5cbf-424e-b950-a656f7d68c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
        "cursor": {
          "ref": "5eefe625-3905-44aa-b78f-2ad6ddcfc315",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f740fd7e-81bd-42c1-b806-a66008b4e710"
        },
        "item": {
          "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7855024d-5cbf-424e-b950-a656f7d68c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
        "cursor": {
          "ref": "5eefe625-3905-44aa-b78f-2ad6ddcfc315",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f740fd7e-81bd-42c1-b806-a66008b4e710"
        },
        "item": {
          "id": "cf3778a0-76f4-4a03-aa12-918b49e83bcc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7855024d-5cbf-424e-b950-a656f7d68c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c95415-574a-43ae-9903-a35e8684219b",
        "cursor": {
          "ref": "ffcf9722-10db-4ecb-ac98-f3448799901d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7dbfd4d6-d5dc-4841-842d-e0a9136cae67"
        },
        "item": {
          "id": "c4c95415-574a-43ae-9903-a35e8684219b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8c9f78af-ed8a-4895-84f6-ca305827c2eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa56ce0-dc3f-4729-ae98-68f628f6b149",
        "cursor": {
          "ref": "a5727d70-9ab6-4e0c-ba0d-dc65e4cc7f3f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "112b0886-a879-4cad-bddc-0837ddd39efe"
        },
        "item": {
          "id": "2aa56ce0-dc3f-4729-ae98-68f628f6b149",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0716ad7f-2fe6-4c8a-8fce-2a194e8c996f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa56ce0-dc3f-4729-ae98-68f628f6b149",
        "cursor": {
          "ref": "a5727d70-9ab6-4e0c-ba0d-dc65e4cc7f3f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "112b0886-a879-4cad-bddc-0837ddd39efe"
        },
        "item": {
          "id": "2aa56ce0-dc3f-4729-ae98-68f628f6b149",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0716ad7f-2fe6-4c8a-8fce-2a194e8c996f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d917ef7-f27d-4416-9a9c-63de8935d287",
        "cursor": {
          "ref": "1debdbc0-a104-49e3-b690-001880891ffc",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "05420a52-6b8b-4833-8a0c-f26d1dfdd4be"
        },
        "item": {
          "id": "8d917ef7-f27d-4416-9a9c-63de8935d287",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c03b9e88-a817-4e95-b4bc-3ff75b37f9d7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c92f9a-1416-4886-9ea1-c0d5bb59f569",
        "cursor": {
          "ref": "9dada4e3-b4bd-403b-93c5-a9dfadcbce7c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a3bb07e-a9ef-4bf0-b0c9-90d1e6df069e"
        },
        "item": {
          "id": "67c92f9a-1416-4886-9ea1-c0d5bb59f569",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17731848-5e06-46bb-be31-02a71ede1126",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c92f9a-1416-4886-9ea1-c0d5bb59f569",
        "cursor": {
          "ref": "9dada4e3-b4bd-403b-93c5-a9dfadcbce7c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a3bb07e-a9ef-4bf0-b0c9-90d1e6df069e"
        },
        "item": {
          "id": "67c92f9a-1416-4886-9ea1-c0d5bb59f569",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17731848-5e06-46bb-be31-02a71ede1126",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f6a15b-85b4-4e39-9cff-f8fb55255ebd",
        "cursor": {
          "ref": "24a45e80-2239-4e91-9eff-3bde13a99198",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "df541d0a-9218-4af6-abc4-f908913428af"
        },
        "item": {
          "id": "23f6a15b-85b4-4e39-9cff-f8fb55255ebd",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6eb3d22c-0fd7-4909-b699-feb0db336276",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}