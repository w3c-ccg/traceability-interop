{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "004a9541-b4cb-48c7-8bac-a8948374c84b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5271177-2b61-4f75-be93-c628b486dfe2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d92557f-05a3-44c3-aad7-b02326798a3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e28d5830-a349-43ea-81cd-87694d4a993b"
                }
              }
            ]
          },
          {
            "id": "aa47190f-87ec-4f7b-a041-2372422a1981",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0957c412-58ee-4b20-9487-230a9d4442fb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e510127-7c1b-406c-ba30-60225d344a8c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e24afd26-d613-4c75-97b1-bfd7e4dbba1a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b21eebf7-bc46-4efc-9338-df274fdb8f47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5633d3d5-16bc-4a4e-83f3-518bec012d9f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6178e11f-749a-4315-aac1-c106ed36a0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94564998-3370-4690-9cce-2d7b9fdd1e37"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cc49aad-a689-4c02-bc43-4013b3a12c24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d5ba755-0e3a-4ba7-ae9d-dba9e24672b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76dfb4ff-befe-4014-a2ec-f0892c247ea6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "084834b1-d3f0-4313-a06e-f1d57da5dd27"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aac04b48-7276-4616-8949-24d09a242909",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "190151ae-91b7-4de0-97bc-48425a9bb79d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4481d420-868f-4cb8-9c8d-d00781bb75e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42324086-5076-44dd-886a-064a7b48b8d8"
            }
          }
        ]
      },
      {
        "id": "22c7664e-5a92-46ac-8dbb-a0c6f2668b2b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2d66e771-164f-48d7-8cee-5b619ec4cd6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93ef16d4-f573-406f-aead-d5a04449dcde",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "329a7678-e2c2-43ba-938c-102fc16e2152",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f0a50-6f85-4607-8e0f-6130879ede04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d07c537e-f30a-4b2d-b2e1-d718e4a37094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7666a51-8c73-46c1-bb0b-998a0d0fcd45",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b550752-10d5-4d66-9442-27ced87ad257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0670d35a-5608-4b6a-8bda-10a8f221e90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933dddbe-c8b2-4df6-b8f9-9980c74ce08b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183fd72d-3946-44d1-97d6-0f484f1a8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0c0e76d-d1a0-4e8e-be7e-88ec6efc2d23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a2b6f25-7015-4148-a3eb-d20693b81f81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31b778f4-79ee-4818-9b3d-6a3c0621db4f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688c3e97-38b9-41ba-8354-860ad22b7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2d9d8d9-6422-4b28-8d41-4a9dcadb0139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c21f246-d836-4c84-ab55-c5b23b76d07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0d7ad4-0299-42d1-8f0f-cf9357238917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12049d4-1d27-4b53-9b80-65dbe4f7a176",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca480fc-6910-4e58-bff7-2a69d3c5e609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21f3af69-1b7b-4a6f-9edc-147e5c5a5471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8c17c0-1680-4516-9a19-dfbaf75da52a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "94ceb187-1d36-4418-b62b-b6ddcbb569b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64c39956-4c56-4fbf-96fd-0b68db2fab94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "625178b7-7ac4-4e79-b760-3bb6e20f8141",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0401084-224b-4933-8bc5-dd63c46e66be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f8111c45-8d23-40b7-ad3a-1a8c81c2e506"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a038cc9-3191-464f-8647-f745de7356d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e8e82144-5a1a-4cff-8484-4e18f0029b2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb251d4f-d8d2-4e34-b892-efd7bcebdd95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1f92c5c-a152-45da-9a7a-d4a0beda62b6"
            }
          }
        ]
      },
      {
        "id": "3f428ccb-0ec5-47fa-8f4e-f4b4a63931fc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f5c1903e-9a6a-4f5b-95c5-fff3e18bf30b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4e45d15-6b1c-4853-a7c6-ece8ef8d03c3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db0630b8-1fc5-4adc-9f3d-7fee05cade93",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa00a85-ce02-41bd-9a97-35bbc5108502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76661384-6eeb-4a65-9999-28c29bfd3c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db340b0-b5f7-4441-96bb-d7c1174919a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ad1e0fc-48ff-4d13-be4c-0037d8dbc1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f74760-7ab3-492e-8825-e59ce24a8d15",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972fcd2d-4bbf-4284-a108-98f7cc60e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5e810f-d42d-4a15-b3c2-bf4532656030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2498c8-3db8-4b49-9212-b7906b3be91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43199aac-e24e-4f0d-adc3-273be2ed4b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b0f572-c0d3-448b-900a-b3589ded7115",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dd617c-cfbf-46e6-aa9d-3912a8d5263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8c9ab4-a62d-4c2b-b0d1-cadaf845b3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de90121-17c1-440b-a487-9d683a35bd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c88ed747-c6df-44f1-abdd-12274d766a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f5ab0b-aa2e-4f90-990b-fd7ca6999fbd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d13046-cb1c-477a-bedf-a793d500270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d647e-4eba-43db-87fc-9def2d0e4147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0e786c-91d6-4714-98dc-103adb9758a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6f29279-9a16-459e-a256-0e8d56986399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da13aa07-0608-46ec-9e9e-8fcf9a77d9c2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e3ff69-1f7a-47c3-9172-7c3c92324c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5439e70-b92f-4232-ba13-da1e947e22b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabc0e3c-ac56-40a1-a493-125bbc638d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4ae115-37dd-4099-a59b-dae232043cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f124d6-d462-4bd7-8a87-6a68da95c72f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afdb25c-bf80-42a7-8bae-8c7c06c4464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee2e334-3f53-403c-b0a5-0dce79021318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ddbfaa-1d55-449d-9592-7452743de0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57d6fdc9-ec7a-47db-a9e5-b0297d412f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f5f244-1685-42f6-bd3c-717495f5c7c8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae136c42-e996-4b95-beff-f26a72b3c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78285d39-a08e-4f2a-82ab-592e398e70b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97a139a-ce11-46d6-bf36-520d8fbc7137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddbe43ca-5697-4895-8939-864f551b3583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a5b57c-f660-4e3e-b7f3-63b0e0db5d7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540d3da1-38c2-4ad9-8e62-7cd15b53d53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbaa9ae-05b5-4665-955a-0a527c508561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78967733-f2cb-459a-aa94-6d64f7e5445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0accc294-b81a-4c15-893b-21c676fc0b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4458745b-ced0-48ad-a3cf-9707cc2f8310",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fb1bf9-de42-4852-a344-5c79fdea2ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2054f3-4e7f-4776-ad1a-a6e2b51d39f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2608e1fc-f959-446b-a860-90bb529362b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b56c2845-ea58-4b1d-bc0a-98f64ee353cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cd3ac1-84b3-44a0-9635-61965619e0f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f399d3-37b6-4171-9eac-34cb13064c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d751989a-6269-4648-aff3-9ee11f02b6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41908577-80f5-4a92-88d4-93d2ae6e816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae02d53-5938-44b7-86e1-33ec8b5f1cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5a0414-a5b6-4abe-a234-b5e2ab12898f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ade6f-8d07-4144-800e-3e790a5e2d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d31704b-261e-4d52-bbc7-6d22a0db3139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d33564d-f9d1-4916-a710-c01e66d7259e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa53243c-37d4-4895-bdea-5658c5ddc572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8677e0-fcdd-4f84-a3f3-ea72cd202413",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5960d1-8d16-4cbc-9ed0-f5308c33e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c09780-c02c-4d8e-87e9-35e7956ac684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db0e57f-4dfb-4ab3-9c26-0485b8f7e294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "894102ba-627d-4059-a7c2-f63ebeddb187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cd59c7-3f0d-4813-ad4d-dcf68c4115a4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c6b3ef-7f65-4d5a-a2b5-c0443609c5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe8f9df-f2d3-459d-be46-087cca85ba89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26f710b-1829-45c6-852a-302ad43ea9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2def296-bc35-47d2-a603-d8babb205fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ca0225-aa14-4516-b710-bf67e8fdc833",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9412ed-2750-42b1-8408-604707d90cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c84135-476b-45aa-b5f9-e5b234ae34da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30404597-72f5-4505-83a5-771ae48d9cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3139f02b-6501-41be-a793-a36abb94ac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb83d2b2-f124-43b4-974d-82f7bccda1e7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10edaeae-b477-419e-8545-f4a09a227786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bc5943-a343-4f55-bbce-4fe168c907ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc891f-cb56-4750-aef8-bba91ba8ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a303d953-06aa-4b67-bd9b-69f65c9b316d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81eba3d-055f-430b-8c07-7bce74dac59d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedcfd0e-3e0d-4561-9f73-24e79daec997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af6e176-232b-4bef-86d6-db5c65fe5bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c015a4-1bd0-4e98-b9a7-bc61299307a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ca09457-91ad-44d1-9074-7bf114205f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95212138-51c4-48b4-b03f-fe4cd8087b05",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652580f7-d50c-47e8-81f0-663841eea026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ef62c2-04c4-4030-9c3e-400274847044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66819b0c-2e1a-4c37-8030-9607733f42a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06f9e93c-6421-4e04-94fc-7e75bce93ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c53baf-e8ad-4b96-bc1f-6f36dd2454c1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fbfdde-b6bd-4811-a134-963265f381ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40be2f88-3fcd-43a2-ba37-ba4941b5e063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f320dbe8-22e7-480e-9511-aaa3501f74b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d89a9b-cb83-4d00-b0f6-0aaad4acdfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98a502-9f20-4bab-974f-db93ab5cad26",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cea815-5846-44f9-966e-685ca0acaf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb423479-c2c7-4794-9a5f-47ea8efc0e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30466a07-4c1f-470a-b81a-2e0b026fb98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f7f228-cc09-43e0-b30e-31b3d438c113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f03e0a-b949-4295-bf26-4bff7268ec66",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0e1e2-e659-4350-8fb7-5131991ff527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5718e4d-8332-4682-bf5a-d296a4622206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfeb66f-f7e9-4557-a7cf-5d57c04a8275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49617d3e-de0c-4be9-ae49-9c8937050e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7e34b-488a-4a93-9411-c0df03a7e278",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02568cd2-448e-43d5-a6fb-af5f98f4a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff30aaf1-a982-4568-9250-2a0d95e7747b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b72ead-fc05-4559-94a7-d094a9972415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0c7b29-7a51-451a-a427-0af2a02ee86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c342004-48cd-4dbc-a782-e35bc9f99827",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679957b9-47d3-4aef-85d4-b219d5c958cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f5b8d-1d31-4801-81c0-3c6cdd2e0fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6bece2-3796-4983-95d3-270a55d2b59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70527b67-ebd0-408f-b9f5-0d515985ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6e1fdf-bf5d-489d-9588-768fa22b80f6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42aa9e35-b503-41b1-87ec-1d4ce2c192d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c465d4-179a-46c3-b0aa-3c478a90e648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d31645c-9e0f-421b-a390-97a95ddda4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca2868e-e174-4b71-a52f-6b59568bc221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5411da-7957-47ba-b88d-c488d8498c5e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f777396-1953-4a7c-89af-fe461f177a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662e8d2a-d929-4bc2-87ae-d6853c79d583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af78cc95-344f-4241-bd92-31829e327929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69900a9-3eae-472a-8588-7dfaa5eeffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da5174b-c508-470f-8d64-bcc45b96a206",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895f97e-7258-44cc-9550-2cebe4ebd449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8dc15d-1ecf-418e-a4a0-3404e11fc9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345f90ef-585b-48c3-b6e6-e75546da4483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e08ddf-f497-4194-99b2-622a07dc04b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0241e233-d0c0-48dc-9d86-5aa7a0b76786",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39521b3-ea3a-4595-9158-851d735253e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c726f755-6d29-4926-a1a2-ca31cb12847c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed3c2d2-6ab4-4368-bc0c-b08bf97aab1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49667d1a-50f0-46bd-97ed-c1229081ef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb71e44-1612-410a-acf0-89cf5d20998d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f55e150-6bb9-44a9-bcb6-7bcd2f838393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc08f9b-16a1-4c73-b27a-5f0a1f6c7cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a20c28-f879-4226-8208-bf1c2254d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e23edc9-8d08-45a2-b47c-5db7bcdaf12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c85b838-d77a-47e8-a56c-d9ce8aeec115",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0896fc03-d6b6-4240-83f7-7e9c2ebc3861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553e8a01-c255-4298-b8ba-343372aa8b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef17ccd-9f35-4486-b8fa-fa0db262f66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef71401-4652-43ca-b002-14ff0c9c2c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cebe08-d031-4d3b-bd90-cce7b7dfc800",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2761fd7-2723-4c31-b672-1d509c4fe8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9795a946-20ac-4e90-a530-5ed4e6ee79ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3085cd-fc1b-4c5f-806c-76dc6c92e51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e973860f-0258-4b02-abb9-a4549b856293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b84ead-dc68-48f8-a887-7a6be9d06e58",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8653e7-b18d-4833-9ba7-93bee7ddc9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37fec48-0785-45a4-9d92-4a1e66b99d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1ef5b4-4663-48a0-a5a6-9251ab36d177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9a0608-9bcb-4883-bc9e-a8040465f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515e0879-7197-450c-a991-17079ee04bdc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985a96e8-2c6c-4b9b-83be-39c63c24af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0576b924-918a-440c-9be6-6d84d8fc6fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8decfcd6-bb6f-481e-b1bc-958b4bcc45f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "995ee6b7-5554-471c-8695-95daa3d84218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2bf01c-105d-47d7-bed7-925664f9617a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5714884-9c43-49db-a13d-4d6fa3104ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ddcef2-15f8-4452-bee3-06df15a97c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2d609f-b666-4833-ab0c-8a813b3b7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9324f2-9419-424d-8fd9-66a3f38fc363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ab4b0-55ea-4acb-b7ba-3031a951a089",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867c2c46-7bee-495f-99ab-022789cadfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1960c8de-8734-4964-9899-bdd2212230d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84d49d-987f-4c98-ac8d-8b4f1767a88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef717bc-f7d2-4320-94f9-ecbbe7c4a07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaae287-3c1e-4d1e-a23d-6e7caba7e59d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844a84eb-c91b-4690-aade-f3325c22fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6827fd-c62c-4d17-a46e-d0646f161ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24ccb4c-20a0-45a9-ae77-c177afe528f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69b714e-b377-42ea-844d-138784ba9ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b24ec37-b786-4be1-a1c9-01acc9065d79",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f920e0e-ddc3-473e-b203-d55a239f6a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7fba3e-b89a-44a6-bbe7-b55a852c1bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0051bf1a-c7a8-4e9c-97ab-6b1ea9edd565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3b0c0-b64b-4dbb-b14e-78d1ef75a10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048fa1ab-88cd-4c91-bcb8-38558ecdbc72",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d647b-12a5-4bf5-b2db-d9ca78533893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f3584df-1bf4-4bb5-b4a6-761b0733595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ee04f5-519c-4172-952d-f3f01b25c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b46b27-75b9-4405-8d0b-fdb2e5dda99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5cb8ae-2905-4a47-9245-63201d69f8f6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba01ba75-f302-45a2-9b09-471d368514ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3f8ca3-72db-4058-9826-9d9dd8e7c5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16f39bc-f1c4-4f9d-8b64-805c82aa8a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a63f5f2c-7e40-4765-8c01-f0b22f232d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6871ae-9d21-4d75-9cdd-ae3ae31e3aba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115ff02f-81a8-4232-9be8-18db06672a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a82089-89c6-4b09-ad9f-21a4d774b0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788d46c7-04d6-4b02-b90b-8caf1497a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be63c71-e5a1-4eee-b300-98031181c764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e66789-4e01-44e7-84f7-fcb46004a8bc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f8574-27cb-4ef0-a206-51ba3e4a47ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7921e3-f34f-4168-9192-f55e29e487a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ceea00-bc1c-457a-8d67-6ff68d1802e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "474ac064-bc56-45c3-8d66-bbe380319e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b12079-301e-4d5d-8c93-02f79f0597e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ed24e-9b24-4303-ac77-8d49179b1e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ac955e-668c-4a46-803b-2f3fc54855fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ff35f5-933c-4ace-a444-742f5af59507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c876402-4a9e-4777-a7e3-82da7e5a4a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd693825-9ef0-4618-a15c-0696051b9f67",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f718e7a2-dee7-4e84-92cc-5b83140932de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6143320d-0d76-4e8e-a245-cee40f248a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98630c65-b955-4bd7-8c23-022097d6e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c805d938-923d-44bf-a599-4a7a9293f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf783ce-d302-4b32-a58e-92e375d31d7c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfec0f4-1e44-4a67-883f-2511ba6a7928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291d8487-2e26-49bd-8950-a514316dbc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d64beb-62b3-4934-9a15-16456ffaa572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "28450605-7786-4ac3-9c17-82d3d15e0620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99f90fb-8d0c-479f-9a43-7bdf070dae1a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c54f3e8-2f91-453c-b3d6-878123e18510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b843daec-376e-470a-bb4a-a3e895afe9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923560f1-5953-4c19-936e-4d31dcde5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d2138c-3b82-4fc4-978f-917b8a836572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e2b9de-34b2-4aa7-a4b6-8dc3d0cf489f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc159d5f-5119-46a9-9b22-0ccb43be4709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a16e717-6ac8-4202-9737-90b955b8c0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d24230-599c-4f72-92ca-41b9167ccbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "581416df-4de5-4892-af4a-e3a625daf1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0fe0d5-670c-46fe-9902-1b43feb62351",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb783a3-081c-4f90-887b-be3ab70396b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2869c72-4412-48f1-84b6-6903e152238a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6538130-8efd-4cfd-a04b-ef54ad44bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f414d1-74e5-4e06-bfa7-5b8b4f17bc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2fd774-9803-409a-8503-cb7aeb93593d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffea8276-ace2-4f97-99ca-2b104d5335dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7876154-af08-4185-bbcf-471bc2b4e88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d140f01-1d8f-491c-9b79-904f87ca5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3283aab0-2f48-4c1c-b9b3-e7a9f88f3d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe967dc9-c50b-4435-bda1-0ce763b37a75",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0806588e-1c58-4b61-8f6c-ac410def9f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd662c5-ff38-433b-b09c-ea4973c0b727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb20274d-30c1-4583-b39d-9eb1ef942737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7033e69a-5c91-4c5d-816a-1795dfed3319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b6e776-6047-4481-ac05-d872ddd556a9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06d2411-3016-4341-93f7-3af99fbee51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b470b4fb-55ef-452c-bf42-3011e7207464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fc7962-fc84-49ba-967e-11f62c02485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb756dc-f61e-44da-9209-a64aefe3be2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca832f-2310-42cd-928f-396e90cebc46",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117ed37-cf19-43c4-ba0d-acb1c21f21ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a87a32f-1c1b-407e-8944-8d119348ef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a405ab4c-5354-4a36-8fe3-338d22b666bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd5070b-abc1-4f35-b71d-32185dc127ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c047eb05-4d37-4a77-a28b-ab8965139b1e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8fbce1-7fa4-4887-acfe-f4e8669139c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2735039e-7ee1-42f6-bd6a-a25d56904438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeaf560-8b9f-4e33-8819-b875b143af1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "115dedf8-8c50-467b-bada-0cc74c260217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ca97f1-48a8-482a-a294-5586a38e10bf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a99a7f-f4ff-4e05-81af-1592c726e79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e030b10-04ef-4938-bd51-7fc5e2c6a44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef574d12-727a-4db3-a873-231472f78d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d023c7e2-02e5-47dc-a31f-d3cfbeae6b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cc9103-e6da-4cdc-a1e7-77dcd58e4392",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280b79e5-ea77-49ab-8868-7af1debc1a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a14b5e-bdfe-4e5f-b8be-d4777a020a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca900ae9-b212-45a5-a7a8-4e2f759d43da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ca3bf8-7cac-427a-8382-f405e89b283b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d5b13d-eeff-40d5-822a-d18a398ed842",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f1779c-2f50-4941-a89d-2e647bf545eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd4a010-4ffc-4cc8-b5a5-2d0b971fa084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1855ea5c-2eb5-47b0-9e05-7d80fe04a2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4ce68a-dba8-45a2-b37a-3e5220b0ebe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f6d001-6349-44dd-9910-91a1d2b074ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0fd3f3-8613-480f-b62f-cc2d14eeaa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1589cd6a-aa16-4531-9a8b-a683ffee3746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec70221c-7718-49f8-913f-476616596ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "155ae832-4571-4419-a6cf-46dcb8a80a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a5326-0217-41a1-a846-8a947f487798",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b38a2-9ba1-4919-8a50-28cdb873947a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b3df2d-c951-4110-8f4b-e1f0a677b981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03ec360-55a3-4b7a-9ec2-a3f3fb5630f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b72a3d1-e10d-4fcf-ad01-9caef03c0cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb93430e-358f-4aa3-b3b1-6febef7895d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a4835-ee22-4b2f-9e96-13b81cd393da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cb215c-3c74-4492-b31c-7ac19d547a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440e93b-d37a-4a8e-8e1e-5edbe5955705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4c403e04-04ec-4770-a7f6-b69004424586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ecd4e2-1eef-4213-87bd-8d40a33c029f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321ff289-e6ca-41f7-9703-5e95ba28f011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465287ed-da24-4727-917e-bff2f1ba503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b622ea-fbb6-4928-8b04-ec14d62e293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf066bd-d212-4ff5-8ec7-3a1e7ab5bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8cdecc-db7e-4135-bd26-d04b5bcc0066",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038811ef-5575-467d-b45a-4188319e7fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad2ebf9-22fe-4315-8aa0-aebc0b56404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbed3d4-45cf-4be4-b0c1-c11489157d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d767484b-8e90-4167-9b78-884e0af1c56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b5d30f-97eb-4065-9593-6b1d719d22ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e13f5b-6a24-47b8-9fff-c6f21dd2b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9a9da9-7434-439f-8fae-313272d312bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55cce40-2b4a-4134-b4b2-2e6db4cf50c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71956738-5bc4-49ef-bc62-994ddbc5eaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e0af9-7d7d-43f3-a1a1-6dc0bf6b4c47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f72025-5814-499a-b6cf-2c7700e68b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45ca797-2892-48b0-b285-cfe429cf0719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f28235c-a1c0-4f63-b809-b3be387f767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebe8ba6-13ca-48fb-aa97-c43ef2c9dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721b121-af2a-4b27-9881-fbb66070a131",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76f62ad-f51f-4433-ba2d-f37fd5cc2a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe38c74d-cc2b-4541-b9c4-15a3d2ebb939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e019ac1-222c-4f4b-8f30-81956e96e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e75d395f-66a2-40b2-a887-df15a79c4af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856f0871-fed9-47c8-84c0-60d8468e40c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f9bdbe-09a5-4d0e-a7c9-a01ba6b3410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37460fec-f196-4072-a15d-e9ff8eeb0ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0394aba7-638a-4429-ac82-9872b641088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "280cfa04-cab0-40be-bbf0-b9252b518775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e638ac-70fa-4117-bf56-49c9c741dacf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb27ca0-f25a-4401-a6f4-3002462f62c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92121d85-f935-412f-a214-9dffc4dfe5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf5188b-4915-4f6f-bffa-167546be51cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "911ca588-a90f-424d-a5be-529e862384c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e1b7ca-9582-4c61-956a-b41b45b317d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f7e569-7983-4a3e-9bb5-7aa9986113ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8c8721-ef7f-4cdc-934c-916a9fedab6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6487ce77-e7cd-43ab-a993-7686cfa7f48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2639e-a498-406e-bbaa-1bf57f74f526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874afa9e-52e3-4248-8bb8-4d9c597ead6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d819880e-5839-43b8-981e-bc3183a061ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cab5f42-00ee-4766-9094-0fa8e7be3425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f6bb0e-8fad-48bc-8e9f-5f49b5ecf60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "591c6f5e-003a-45d6-ac21-ef048ccaa419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c215226-e13f-489e-b03f-9d008ae8b252",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf91c5de-5bdf-400f-9293-eb3313f010fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392aae04-f07a-4a5b-903b-69e361965985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f76bf5b-0c0b-46d3-96c5-a6b1edae9ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "414a6f28-0dcf-4a7e-81eb-f1841290bcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f39c1d-0d24-4adc-a77f-cad5094f4b9f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2859829-bbb0-4790-a966-600065f6f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b1e5d8-d3ab-41dc-abda-750f23407518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c585158-8d56-4564-815b-7776b70d4ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58be5d19-0ddc-4ac7-8f30-3e07470d1c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33619c8-b5a5-485f-b3f7-d1ec63fb1959",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc64835-dc42-41c6-a7f0-0e7f8030c3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c349240a-1c80-4ecd-ab9b-5f847dca69a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d1a6c8-c07c-4ada-a9fc-0409ea06a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c9799e-9939-427a-9ebc-b496e76b73df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc045991-0f8a-432e-9224-4d2292a218ed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e2417f-3766-4757-9eb7-229a85ddd94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55150704-45da-4596-a3f0-0a156132773d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4afc4f-2d4a-41f2-adef-3e24ee2ba0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1186c460-1216-49b9-8c73-5a6ba183cf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba77755f-7879-4faa-930d-cc34fb505cf1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fe7289-c2a8-45d0-a50d-ed80b0577e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d63b8cc-c9e8-470f-86c3-4db17ebbf5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e27f786-3bed-4144-8457-4f4a26ff67fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adce7d3d-e896-48bf-928a-21fa3225107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af9f795-622b-4197-bd89-7ecad6a7bd46",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5e032-092f-4976-8c07-413cb60aa4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006cab56-9d33-4ead-97b8-846adcc3bfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a07e1-aad0-43fe-a85d-5737a5eca77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e33091-6725-4c57-a1f3-6fa1e09bc6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b544cb-5231-4c75-9c42-7174f000ba32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408104d0-141a-486e-9879-5baea75bad30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fbbf83-d241-481a-ac72-5e1baba973e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ca2fc0-fc27-4cbf-bd40-95327a102e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdd3eb6-7223-459e-8e8b-c15c5f13713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583adef7-c5c1-45d6-96e4-da0ad8c05289",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9473f85f-faba-4a1e-8db9-0e9afbbee865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8de8e2a-a58a-47ba-979e-26a7c14053be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f216bde-f688-4b57-b2d5-16d0d631de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee08db54-9e00-407e-9bbe-1634dffeacf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c9b5f-a5f4-41d9-a446-fa852ef4d5d9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205df662-7c5e-44d8-8e32-363084a40912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de68c8bc-72f7-4d9d-9792-91b28ec5720c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a6ee8f-e571-4df3-9d02-610aaa68db40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3d0326-4f25-465e-99fa-b1edcba53f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f949ce-1a63-4574-ada4-278b17464f4a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e86c79-be8e-4e73-b6fb-77ec8b1bbdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0994b031-e32d-40ee-adba-e31a734f8ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ae061-c596-414e-b864-1fbe060bed42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ea89a0-e837-4a48-82d4-69d3d08e07dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1b7d2-4a94-48c2-afec-fc94448058bf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b8e9d1-9586-4ea7-8821-ed66839ca8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ee1e72-c8e7-4715-b7d6-1474189b9770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686d86e5-8c1d-433d-b9b3-4825c7e6337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10676b88-3754-4bbb-a19a-91c305678cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c80a1-06d5-4100-a466-78b35d892b21",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4871f32-5d11-4a96-84d3-8f0ddca642af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81019bb-acd1-430c-a4dc-3bbe4c364336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6852105c-6846-46a7-bab0-02077a5b49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc895e21-d3ea-4e99-afb6-47d3f1466275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfa22c2-3dd6-48f1-a221-2e69b71f9d88",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1872d65a-6f7e-4472-a12c-7346ce24e507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4817ea-f018-4c72-a056-3fee72c4fb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03b7adf-851d-4913-957a-0be771d9c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1fb253-6650-4526-a7c2-0107d02f013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7522f0f-5f17-4f1f-b50f-1446aa2657d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c91bf0-2376-43be-a251-b23b0b8a2f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335216be-3727-44af-b359-8213502dda61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b467032-d766-4060-afdc-de871d6770b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3afadffb-c2fa-490f-81de-dfd15ac5bf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f6867-2911-4378-82b0-e9e366e16b31",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f771b5-d4d0-4ffe-a779-aea619b62a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992bb0ff-ed9d-400c-8d8c-4b295a20bf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73051334-43a3-4151-936e-b043abe8a4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5aeaf5a-020f-42c2-a673-01421664f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad390d-5357-47b2-a5f8-336ea030d3bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4875993c-b70e-491f-94f0-b351c4632f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278e353a-8240-4a64-92e7-518f0f424341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3acb5-b278-40e0-ba46-1e2ae084fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e68dbc-227b-46bd-875b-ab7836b31117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fb1691-36b6-4790-96e0-324c9aa17a0a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0111f12-5a17-4d29-aedb-a8429ad8adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0aea74-ccef-4dbb-a3ab-de035046bf95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c3e711-60f6-4a35-9de1-50a0cc2f1c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da52f4b5-7b72-492d-8590-4adf639629ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52069dfd-a6b0-455f-9478-172cee582664",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fced1c9e-3f0d-4bea-bf78-617c713e0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc83580-7870-4ff9-8118-df077370456f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd75dce-fc3d-4400-867f-38914350e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a381833-e0df-4a46-b66f-5b19f96734c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4864ec4f-65b1-4b6c-8ed6-0f790e5e53ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1017cd27-14cd-49ca-9ed5-a48ed034d0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7470c073-800a-449b-aee0-3fa47b1f0096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ae8d76-62e1-40fe-9a1e-58cbfe8566ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30b487a-6251-442c-b6d1-051b810a95dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a092a-035f-4251-be6b-15bcc7e51b34",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24018dfd-e137-4ec4-8000-c379a5d01877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e9a5bd-084f-476e-b96c-b329852d84b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a85c4e-b2fd-4e10-aa42-451e70cb897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "363a5a57-abc0-486a-86b7-72c09bfd15da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce3db21-a8e9-41ae-9eaa-579fd472def9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ba08b4-8cfc-4858-bae3-dfd389aa92fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74f2bdd-2bae-4650-8269-551b01fcbabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc223e1c-b8cc-4123-b897-af363756a498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c53182-b5ab-474f-819b-52706c93a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213de27f-fd6c-4f19-bce5-bd6c47a407a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a4f5f-95d2-470b-97f4-bbcba208e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7c9081-339d-4bd6-b495-5690ff5b9da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d53d04-6881-42c3-84d5-328545585ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aeb6eff-11b5-4ba5-8b2b-ff5d717bd1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec27ff-aa75-4252-b3b4-f9fc37e595ac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828e85a7-be4e-438c-9e9a-3755aa9a6d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586dd648-0bc1-4d37-a236-0331c3e8da07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6b117-61d0-4ac2-964e-a122177785fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64034f4d-c1df-48fc-a5fb-3b29a2d7604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18fc20b-4545-4558-a34d-e8b54243d241",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f88ab7-a718-482d-ae66-fb5d4e44d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfe6035-8135-4243-8619-0d4488e38054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8986c9-6a5e-4554-b621-1f9ee4d83a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3b2e7f-782e-40e9-90b6-56e4e8ca2485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd8e342-3a92-484f-8ab7-0c6f08e263da",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f4cb1c-4b56-4051-be45-c2499793f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0ebb80-5577-4085-a1e8-f5b38bd84af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4217eb64-c31d-4ae6-8085-943961027039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "165fc34f-f02a-4edb-a1b9-2061e1d0c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b8a55a-3a59-4c15-9d4d-51112a3f200a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131135b-df88-4f88-9e73-eadde7b011ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0c1fd6-d509-41ba-8951-19f4a0d43bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad60b65-51ac-4a1e-bc8a-6e1c5e2dc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b88803-d744-472b-83e1-1f6d70892a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5431de03-7fc1-4b41-9425-54da57911150",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58a2078-47d0-42f9-a5c7-4522ce36aca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "136a2f78-fa9a-47b1-a289-3f746ee08c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbf0995-5658-44bc-a546-d3945d825377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9b84ce-3f28-4a2a-9ce8-c97eb918049a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82052694-8970-4836-82c9-a5424e396a7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "927bac42-14e4-403b-a468-2b2c6388ccc4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afadeac-e224-4518-a7cc-3f3b5d513295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fcfb7bf-fa29-4ba0-abde-2e639b9a57a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac85e7c-ab2d-4253-8e29-720d7b979750",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef407891-5704-49f1-847e-f173c1b51e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22381b72-0a5c-4d6c-933c-4e4a7d488798",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fd7c33-5e13-423f-93fd-7bb21606c1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d9f6887-580c-46d8-bb42-5e67a686837e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6b6d6e-87ec-43f4-b7c5-439e7e9411f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b77935-2bec-4a35-8a34-5af6c3eb8158"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a9cdfe2-085f-412a-8673-798f6443418e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d08f1b5b-1d36-40e9-9d6c-d3aafb008966"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd2de3a1-15b7-4274-aa61-48431a2d0b76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6109ea9f-b104-4ce7-9903-6744e3f4f837"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "468c0785-7de5-4795-b52f-10e954753361",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eaff5a78-ecda-4bf1-9061-fe00a558fbe6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3df02c7-c1a8-4f07-b662-78c15fc0ef58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "def3429d-4b06-4fcf-8185-a41c2b51fa50"
                }
              }
            ]
          },
          {
            "id": "698dcb14-98ab-4e09-92db-0e650a3e7d94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d03103f-facf-4ce4-9792-2c9b2bc33363",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fe5634c-bf81-470f-84e6-ed7e90f951f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0c826af-4dde-46d8-8d47-ef72302fc184"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc312f9-b984-4fa7-b6c1-bd396de59297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c219521-5740-40af-9f88-e268175da08f"
                    }
                  }
                ]
              },
              {
                "id": "f83987a1-42b4-4eb9-a6e7-96e1a990f082",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31da57e-868e-4e52-ac72-c382fe5c21cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "135c35d6-123b-4800-938f-ebe48feb7714"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf13dc79-2883-4b3a-a230-c1bcfa6beb1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c435671e-eda3-4ebc-8c42-442ed741a9a5"
                    }
                  }
                ]
              },
              {
                "id": "1a29354e-e551-4203-9324-f229bf520761",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac40bbb8-6050-47cf-84bd-10d56a8895d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7284f572-98f4-4ce8-a7ba-3eb319eb346f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd405f01-a95f-4077-ba10-a70e94efeb57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c7b8a97-0db5-471e-ac9d-569fb03888ed"
                    }
                  }
                ]
              },
              {
                "id": "86bc200b-44d8-4806-982f-f09ffaa39858",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ef06f65-fc37-41d7-8550-54fcff5a418f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42ef953a-d13f-441b-87c8-5a2a17ed4af0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "461f7894-ae46-4611-9d1d-195acc46c822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "de36fdc8-1bce-4e07-a2de-67ba5f822eee"
                    }
                  }
                ]
              },
              {
                "id": "a21a9144-7ebd-47e0-a718-1799147c2d07",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f272c274-9842-439a-b9b6-bffde64b906b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd878118-a487-4de1-9966-7f986940d279"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0feb1b36-8d7c-48fc-9a9b-c8e7427cceeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f0e12aa5-114a-43fe-873a-7c6632f5cba3"
                    }
                  }
                ]
              },
              {
                "id": "02492f34-454c-4141-8247-e4ff4f9258a0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86df8e7e-e5ed-4c52-9061-c943288ac448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29388e62-0ef6-43dc-90f4-2295ebd466f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06910b22-750e-4890-bd30-fb22e9c0156c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1eb3a9a-5691-471b-9453-90431a3bd621"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce32a606-9f81-4519-a96c-fcae9c41feb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d57b3baa-f2e1-4b0e-ad1f-111881865813"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f0dfc7b-4b0b-4d47-a88a-322bb6d5d855",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e767850-2234-4110-9fe7-d5b9ea6f79ed"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "643a1cee-6524-4af2-803e-dfaed7d07c38",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25faedc7-d715-45e4-949f-a805f46ca268"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe64b536-11a5-465b-a722-123ee73bf2fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7fbe1bc-2b19-4340-8755-c1d89efef5b9"
            }
          }
        ]
      },
      {
        "id": "f9e6ca47-2fff-481d-8c7b-bcb4f4580314",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7ff47f81-9ecd-49da-b728-e09e01c419e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d10225d4-bb44-4563-9242-de03c7c4cf0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1be0234b-c97a-4f6e-91d5-9b87d1458af2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730822af-844d-4b08-a454-afcd8f095787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0267770-8eda-40b5-bb1a-fc6ea8263672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698d4a7b-3b5c-4116-9815-c5ba4463bca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4436588e-afb8-4437-9744-00c5fd5e0e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d893efb-5cdb-451d-b9ab-833217f5cfe6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2dd220-8b02-413f-a1cf-7586b4523df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3537b8-fedb-4ec3-beb9-ada2fa91ae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaabda4-9dc3-494f-a14a-b9c80a03057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "552b8717-a284-4ca1-b920-b8fff7fd0b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1230e5b8-b06d-474c-b321-0f2c875e0d86",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad17537-aa00-4629-9a90-f49053f84e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e20f5d-ad3b-49dc-835a-bbe8dbcf4e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bc9bce-d4e1-4b64-8324-a06c5066476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c69c3d-790e-40f7-8ad3-c1f6c5f3bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7b09d0-7dcb-45c9-a9c2-08e85085ff16",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c204a5cf-bef5-4199-abe9-c4693835cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7fb488-c057-41ba-9ed7-5e9ea7896648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c33aeb5-487d-490d-b24a-6ba51be3ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397bd886-8395-4418-99ec-46c6b42e9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b3c317-4ad4-4254-ac32-fc32c6ea956c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209513a8-6021-4563-b100-9ba78b08961e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee91b3c3-2ac1-43ef-846b-9adba20e0195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36983601-6d0e-4f66-b327-ebf8085cdb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d012d3-addf-4fd5-886c-b1019cbb0f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98f42cb-c10a-4755-a7e6-dae0e04a33cb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916ace0e-526c-462c-919a-c1a0cfa28bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e8bd1-dccc-4ca0-b35b-890a5d52e78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5808d3-4d0f-485f-9c6d-4a29a6e14ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff5823d-38cb-4e6c-9d9f-42a44a7327de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9295262-a1f1-4109-a8d4-f8093f18a4a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59db40be-754c-4e69-8698-e99b69b18c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90aa7e4-1528-44af-9ddd-d86143d1c273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1affcc08-aa94-4bf3-af7b-831bdf68539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb007cb1-4e03-4b3d-a8ad-a268f0fbfc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b96ec08-5b4b-41b3-a1b5-b80b01f38c9f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca77ce-16dc-4ccd-b928-359961c255fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba39e97d-9a95-4f3e-af29-2a34b08959ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad981e37-ec0f-4bbc-be7d-84e76ba980c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "782dc74d-aae7-4465-bea9-cf2694a92552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a2be99-76f7-4476-a8f0-f7fa42c1092e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0349a0-b33e-4f54-a988-47e262196d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4ce61c-1dbf-48d4-89d9-6e9eed5538de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd62e6-8910-400b-b576-9cb2fa9e290d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42200cd-ac0f-46c4-94be-3f6608544f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7717eec-01ac-4872-bffc-b10e98a3f377",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58f06a2-aa0a-4038-a60f-9976e053a07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5e30b9-ee48-48e2-8e36-ca8c25b5a951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572fa7b5-d03c-441f-8485-ced07b189028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db7bdf0-7112-4d21-a0c0-36afc76ee3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d717c92-f333-42c6-93de-e9b011e3197b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf895e-1921-4bac-ba86-6a1359372c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b355ff54-8ae5-4606-b418-da95b589e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5374fa4-0a38-4770-bde5-79f3bd44df30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5acc63f9-26d1-4587-a137-689acf944809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321dd7e0-a55c-4abf-b1c5-b13a5f6a3f66",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e4650-9acd-4e27-8507-c50ce0f94eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f3a716-5d45-4558-8c5f-6d3d40a5b992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ebf28-fa7a-41b9-897b-5d643ff3c672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ef6419-8722-4100-bae6-8bef2463c104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88335e-3166-47c7-a604-6e89f4780b46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d1b3f-bee2-4f92-a288-3ca7bb3be89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0749e7f1-bfee-4754-9158-377fd2f9d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6374e19f-993b-481b-b31e-d507291e3b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66fe075e-a22f-4262-8ad2-e8a26d358c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec1e06b-63eb-4306-a39a-d983f17a0bc8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26793726-af49-4225-8c3d-48d1cba419a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f5be61-5e51-45ef-bb68-de158c1a9bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e454665e-20f0-4e45-9e88-f92661ce03e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "28aaa95a-c8de-4612-b497-f0dc161def06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8afbfe8-9e17-43e4-953b-d1f9c5ed2891",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b707d7a-a027-463d-8fc9-786ef8711300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a885aea-fb59-4c4e-8232-a173cc6ed540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9bbbab-f992-4472-bd69-4bae15557738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "546fee04-78bb-42fc-a413-d4aa9cf266ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221b1aa1-6e90-48de-8eab-2ef01bfa0bae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a8031-ab71-4a08-91a3-a4311646d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6e6107-f0ac-4836-a36b-7939c418add5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab692d-e464-4e76-bd8f-6b69dbe2427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5979e52-33be-41d7-be6a-a7270645c1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50bf614-f9d0-43c1-b714-3cffe68c3c2a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6424bd2-5c48-4d44-9f69-8d186d3d64d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76012256-8f86-4dea-8277-ac47354758f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ec089-cbfd-4602-adcf-e316bdb75130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "635545da-16a7-464f-b43e-c4a6ce64b280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685028ec-8ef7-4102-a1d6-270baabbd4f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8aa2bfc-80c7-4e3a-8ef4-f5e03067bc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc31eb19-06ec-41f6-87bf-21779def0eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3725ea-65dd-465b-ae6e-19df5182e4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "829aaf19-3d05-4b42-91a2-9f736aa79c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ccda5-0155-4132-96b2-658e412989cf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0b8b96-1f92-4e34-af6c-3745b3eb5315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39987571-3040-4018-9942-d616c4b0ea90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316dbffc-f4c6-4b90-b03f-25cc1fe31c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3ea1f7-dfe3-44df-b536-0488db5102ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45c3a08-f0d5-4723-a9f9-c9f999e6ef25",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d16ccdb-7b6c-4767-858b-955ef6097053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5ce0d4-6cc1-4679-a807-4280e0c7e0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cb60b8-e87a-4fc2-bedd-2acfbafbcfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f393bcc-59d9-4d77-9908-f98dbc5168ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd96ac45-7edb-425e-9213-29bad78982c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a159076-bc44-48ad-8f20-39ebc1667440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a76f3c-032a-4ea5-811c-717a4430288c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20001b4-1605-4d39-b3e7-d32633d67264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a38144a-7361-4c38-a90d-f1552ca6d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86496398-ba3e-4abc-9b40-2b9f14b3c192",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428992fc-9008-4a6f-a85a-509a601db624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c989ac48-55a1-40fe-850a-a5c9cf17fd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd3fa54-9409-4a94-8300-dc6d4b36526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df6ca05-75cb-4bce-8a6d-52c714076a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed931793-4daa-43ed-99e6-db2cf73fbfab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241d14b6-3f63-4ae1-bc1d-2447e94aa219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e63063b-ede4-451e-923e-57eb26e13686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee6f0b8-4ef4-454d-827d-ec3d3991b701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d52a31-1fa9-4f6e-bebd-6fdb7173a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f4e6ef-82ff-4a57-9af4-6f2874a3c4ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f284f2a-b07c-4a75-8a25-e80947050465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6651544-db50-4d5b-b76d-bdf9123f0a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712a9f92-c534-4fd8-9384-f15e615fd27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0138f03c-030b-4ea2-a5d8-10d376db895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe6a9c7-1f54-4b14-bb1d-ec6893e652dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52398b97-054f-4482-b01a-e49a4ea113e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355034a0-c38f-4ab8-b36c-2e9a17c1bc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea54cdb-e0fb-49af-bf5f-51f09b01c94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d72c5b-14ba-4927-9412-2b2ba5745f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553d8655-c11b-4470-8ff6-8197022c657b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f744a98-127c-42cd-a361-71d1c6113569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2bc8ab-fbd9-43d1-9322-39f582126a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661bd7d4-2327-4411-bfa1-82e1cd913828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f29ab40-8033-44a3-bc0a-499d4dfda552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca27bcbb-fa90-4a8c-9f52-3ea35a1ef1ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dae4ff-0db0-427d-9da1-142a0347f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818d595c-48e8-4ad0-8864-156d62a424da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8458b5c3-fb58-44d2-b6c6-e3f4c9edff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140a9fc8-b4ce-43eb-bb95-45968046bffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8a6a20-0ffb-4b53-86e6-0cbaf6da6b63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fc0dcc-75a6-47ee-94b1-affe3a0e6421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a955bf7-2c5c-487e-8f9a-d875021459e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb847fbc-13be-4579-9ce3-93cde6f8b881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b92363-9dfb-4a6a-9e2b-4f4b643e4d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e53d47-8f5e-4c08-982a-50e270ecb950",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587fca35-2d54-461d-8e0a-1dadeff7bb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66825f7-3c78-42be-8960-e1dfc048e19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a273674-34aa-4bef-bc36-28f50188f000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ac9167-8e22-4941-87e1-1648c142e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07013e85-78d2-4fad-9445-511ddfd365e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cacbae-3649-4b08-96d6-061c4815f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce375a99-4846-4fab-ac97-5136fb70cac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5ae93d-d069-4cd6-a425-8c44ca774cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1320a18-fc56-4766-942c-30bf062235ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc96a5-26bc-4d33-9199-fc466ce56bba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8ecf7-09e2-44ff-a9d8-740491f80b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e222887-96b2-457f-a730-5488624bc8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c74faec-618e-4e11-a7f7-3d0cb99285c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce136028-c073-4e87-91e9-75d4a290912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ac761a-eec1-4de8-95e5-7e22d6d75c63",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715159d5-56d4-41d6-8c2b-0db309421c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c3ecfb-d77d-4f31-b35b-ed3db1db9c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe36dce-ddba-4050-9a15-ae5198678881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f4202d-8672-4438-9422-e3078063f693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e71dc47-9168-430e-b359-5d4a7c9a8811",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ac991c8-2736-444a-b6b8-4abc13de5259",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2134a32e-df1c-4e0d-84c2-dc34a06a2c41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf69f7a-70cf-462d-8d9f-62c0499854ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa65c0-4fac-4192-b8f9-f61353a227ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "211be3e8-dc95-44e4-b4ff-7e8b5d7615d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1e03c6-9b93-4ce2-8018-a85c43e5c326",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34789b5-820c-45d2-b1d6-d31612fb835f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6159401e-0a54-42f1-bafd-0a5b8ddff077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1cd51c-a5fa-4c22-a704-782b33fff66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4434dc74-a002-4a7e-b84b-07525eebd18e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d59c6b5-690d-4972-8e74-c85ab56f6b1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1db71681-372e-422e-805d-19adb95e971b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9969c16f-2bd2-4a90-bfc2-d18f71584fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d566804d-efa4-4a9d-8754-7ec4270bb803"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22f9a008-9db5-4add-98eb-e93b0e9b81a9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11da57ae-0a7d-4428-9abe-5f0059a5ac32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7661767-f63d-4d6f-a8fd-07e04c524822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bfae221-0c03-46e8-ae3b-b55c90f249df"
            }
          }
        ]
      },
      {
        "id": "da06de40-ef0b-4787-8d81-0c72d59c2fa8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f332f192-6ba4-4ed4-83c4-b4d1b8182efe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e70e3515-7571-41bf-9a97-7a756c2b5ab9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ad115e9-f8a9-483f-b288-bcc510ca81ca",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0d6cb-18c4-4fbf-80d7-0d7a99e3aa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de20a7ad-0579-4950-95ac-825ab2f2e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3d0108-62f8-49f8-9295-8efb593f02f5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20910852-eae7-41f1-8c3f-77e39bb7c714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd8e9c6-9119-40d4-9db3-25d7ac070232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2647a9ce-92a2-4e95-b21a-c438d238d56b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceef744b-8121-45c4-b223-0bdb46e6d298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8452ea3-0534-4705-b3db-dca35080a8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e019be-cee9-4a76-9e8a-c646e377137d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ce355-c337-4578-a9a5-905750fe7373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386a70c8-88e5-48fe-9ade-c833bb87213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b97079-2727-487d-a800-0465df910369",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda947e-5637-46af-95ba-45aa7f49df6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc346a3-0b63-4fa4-b095-f18ee2d9f1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6e59c4-5d82-4113-a4e9-6a6f9185d00b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e468466d-1349-41ab-9668-c2c95a5db9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce990bc-5806-470c-bd36-e2bb9093bd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace39742-3776-4f35-9758-0413c3037686",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254837b7-5249-4e3c-87b5-d4583ba00d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1617bee5-1249-4c54-9ae8-a2b7e5d99434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106bdca3-75a7-406b-a934-2883945d58e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad5341e-7044-4312-8eda-aab51957798a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c00f1bd-82f3-4435-8e2e-fed47fdcf66e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0f5d56-c060-444b-98fe-eada908bc019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78274677-3bc3-47f4-b610-61149fb5dcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5bd193-495b-4732-b4e5-0a35884607ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e556c0-ed4f-4b75-a8a7-b4bbe775ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce496fd9-ed17-4f86-b2a7-c132229c95dd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ba091-f72a-486d-8a23-aeec60105851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b18d35a-9c6f-48e7-9aa5-ec8cbaa044b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554ea3af-e0ba-4343-994e-04d3a93dc75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473b69be-7eb8-4a5d-b815-6b4b3d57f2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f6cd0e-d8b0-439b-a557-32ace4dfafca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef386070-9d22-46ab-9464-b82e76d57225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65766c92-446d-4102-8fa5-1e744ca6945e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba8195-090b-49f5-9d80-0654ef566a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a32e59-5a0f-4ccc-8f5a-989333fa1611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27dde5d-531a-433a-a2dc-11ccc0629bc6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f749be7-03e3-49cf-8d53-43c341b9125d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b42a5a3-ee17-4076-8c25-ccd5be4f3f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d34679b-6ac3-49b6-b499-500c29168453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4210869c-5f85-4834-b52c-233d4e3c7bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b080025-f182-42db-8937-3b4d2e7d38e5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b747beb5-958c-46d2-8703-e2da7423d7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ea627c-f446-4d15-b6dc-a55ef18a8a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004e43a5-37a5-4a4b-bc15-cc6f7eda53e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491519b5-9bb5-4008-ac0f-1b4133945db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63990543-b289-45ab-8f6e-58a3b789e596",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f882dad5-e089-4476-aab9-dedadb38ea36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf18d3b-c209-4060-ba78-fa6a13a81171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee8b6a-552c-4550-9815-f3428fc942ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03554766-8e79-498f-9686-29d8ea130403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd48ca6-0913-4d56-a3f3-f0033c722fa4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17d51a-ecc8-4c0d-860f-87af27377bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55852bd8-4c9c-4787-9e1f-8d723238cd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97337866-62bf-483a-92bb-15ed2a33a82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c92c1f-2df4-4755-a294-dfc40184a567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5064635c-f0f1-444a-a89b-f925df5b978c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d729ccaf-0dfc-4a75-988f-9112509dd3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078644d2-8cdb-42af-9ce2-978fa3791cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6110af5-1f66-45ba-b779-d0c7a018d2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9997d19-799f-4c00-8d31-8444278e8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c155a26-40af-40ce-93f2-453a9ab82c0f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d235923-9ae2-4cc9-9218-74d9dafd8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cac9c6c-4491-4eda-b585-b1779a1eda8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e9223-0ad0-4869-959d-fb04f26c4944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321f3755-a607-4b89-8b76-ba01b3215c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1674256d-f61a-4124-b602-40af4dcc7089",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5a42d6-8fc4-4d9d-9312-5cfce4d9323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc95e62-ce51-493e-921c-0176b590368c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b6be6e-1683-401b-8f46-2acc0b1f838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b7d230-43b0-4892-bf52-06b9fb1e79cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a41eb7-1faf-433f-a100-61be702fd3ec",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fca210-890d-4843-b164-7bfb1dd96421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a1381a-0ad5-4375-8588-607001d9f86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0c8d05-4bf3-4eb8-8398-b7574beb2be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f7f8a6-fce4-4ff2-a4d0-c14689ee550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4c4718-f403-4106-b115-db12bdbe896e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5cb2ab-545b-4af8-9d40-ba7cc2372c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d36d52-23c8-490e-bf2c-ee67a407bee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a8d1c6-c12c-4963-b5a0-2faa40020a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a8d2c7-90e7-432d-b318-30dbf59b5b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94259aee-7aec-441c-841f-6babe613938e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6046ea5-075a-4ba4-a3fb-93accabba102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d1f965-5bea-4732-a9cc-4c5b910583b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae11002-2060-4aa1-aa12-7ba78af6ede7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081886b5-e23c-4a00-b8fc-5ea3199b911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae28327-6fa7-4989-b9dd-c77c7237987c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64caca17-fc14-4272-b381-ef2aa2558f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1849d43c-7a39-41cc-9d01-899fb187200c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1953ef1-f0a5-4ba8-9470-86e9f3ab64bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1507ab-3e01-47db-8ed2-5c1b68106f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b0086-951a-45c7-a30c-991c80c5c950",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22540e9-039d-4a0c-a388-35353559e993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a72fd4-db6b-40a4-9c73-17430846d79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d659be5-19a5-4575-9de2-8eb66ac92fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5fadaf-4438-4665-a273-26c6b6285df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44200fc-5de7-45aa-b579-a4bdf61c5b13",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc4f31a-5d7e-490f-9184-80e310416e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5187699c-76b0-4017-91e0-c87ca8936c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4be7c9-c1de-41f4-8157-46023e3d290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa036483-1d23-47a3-9510-d0ec1e56f680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd38418e-7444-41c7-9369-9aaa71f77cf2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4399dba-ce31-4a08-a443-acb778980441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ba57df-353d-476e-a53d-92640688cc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df11d58-4940-42b6-84a0-449edc93f4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb1e07f-b427-4017-a8e8-69dbfb09c1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6604cd5d-68ad-4e81-b3ce-aaa9f65db643",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51246274-06fa-4232-af37-882206c096aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1de1ecc-87ff-4827-97e7-48a17010af8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db65d5ff-a66d-468a-bbab-a73a7621588f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbfd22d-ace5-4638-8ff6-e02eaf50f7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4975ce-ecbb-4b28-ac57-a2e479d200dc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff0fac-fc6a-4cda-99a9-2d2f3bca2404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36413443-5a93-45ad-b2f7-91ca4f34edfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb39999-fa27-4a35-97e5-554711ae3c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a068b3-648d-44e3-beec-d2f651c87614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c4e139-a78c-4aef-9556-03ba0366651f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bab8c6a-cfd8-47b6-b4a2-80702c6f4e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb94325a-6265-461f-af7d-78d013685676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425ccf66-9906-492f-82b4-6c377715946c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9af4a18-3e62-45a5-9f4f-1a5dd2c4e0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4578a54-b5d0-4977-8337-14e372eb1e61",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d47b24-6dbd-4948-834b-66cda774abfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc33f9f8-d870-4043-a72a-06ab840f0f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ab9dd-cf28-4b0f-a6ec-53da1667a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bf9e0c-6342-4f4a-b801-93e0624218eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca17b5b-4314-4076-9a36-3b9e7703aea9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79df860-21fc-4a70-a289-6b22a41f680e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c9ce85-ebb5-4f3f-9fef-803c5aac3bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87bed10-4a58-4ec1-89e4-e147256a7aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9874403f-8523-41b4-b49a-010618db1f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4300fac7-458a-4201-b037-63c9c912ecb8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440246d-6409-4cf7-afac-0fee0f862cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42098771-f884-4da2-bfc9-db1a8a5ca6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a133857-87e2-4cb3-b801-f597b1c5cc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063e3c17-167a-4f5a-9b3e-f2f72e490a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52e318b-6eb4-4637-804a-6080bd8e1811",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67cf3a4-bf08-42f7-8331-ea1657185c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1af03f-9def-46f3-a5ce-11a40f98a3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0340f08-4051-4010-9fa1-5838ae2d46cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b42b54-3b84-44d6-aea4-bb316ae9edea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bad726-3aa7-4408-b5be-f5e534bcf459",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423771bd-3ed7-414c-acd2-cca1c884985e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883a870e-4b4d-4380-aab2-d3989346ece2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e113dad8-440e-4ceb-82cb-8822a13bfc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315da303-b229-4979-b31a-cd259bf5fcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5313ba8b-c14d-4523-baf1-237e20218d9e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae53096f-95ec-4a68-be78-0d4f469427cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292a061e-7308-4225-ab72-9605f0aaabbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d4c92e-8ce0-47cc-aff1-aa256090b149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa581905-8017-46ee-986a-47470cf712c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19fdb43-085d-41ad-8326-40da190743df",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba0cf24-5660-458d-94ae-5249553e06a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84ba61a-7049-485a-8270-7c8b5591e9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3520a2e1-04fd-401d-bfab-565b45fe4b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c2b575-2bb2-4fed-95a3-c8699d72aa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7921278-aaed-4ddb-a534-3c35ebad1e4b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7608acdc-8291-4fa6-a481-9761be91f281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18031da-2e06-4bce-b196-70068bbb08bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b72fd77-5f32-4aa9-bf5e-365d4d3fce71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63ddf47-b2e4-4844-aec5-a7336590a9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f9d439-6580-4e22-84bf-e95c05ab80fa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135aa695-16b6-4516-9bff-75a397c32128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0987d90-d7b4-43ea-bc0f-df76a3ddff1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632210a9-68fe-4fb3-9758-dc9e118cc3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead3d98c-9b47-4532-ba39-d9259203335a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed03ae5-ad19-499e-b344-a4e83d67bbbc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136dc7a7-fd42-44c3-8a37-aac147c37919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ecf598-c18a-443e-b2f3-e639ec8d80d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c273cb4b-6be2-49a0-9ce2-4a11d3667d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42efc549-c529-40ae-952b-d43e704f4a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7abfbe1-a660-48e4-af58-e11e7694a351",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c577f09-0fa0-4d07-a2a1-655d5396a480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfac7e8-3395-4073-aedf-ff15ec815b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c94547-b8e3-4793-82f6-684f69ed0866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760d2ff6-f453-4bdb-a14d-98329ab6f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e62eee-e4ad-4d99-8c5b-fbc6f946f82b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda5780c-e878-4999-b574-d9aa3bc4ecc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3594b7-df50-4caa-bda8-39c06aa93a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9a369d-4018-4973-807b-6613f795ebb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae9c13b-fa4f-49e4-9657-a112efe68c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d567c80f-2903-496a-8a34-7c740b37798e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2608f7b-5fe5-440d-83d6-7e3f0a12ae21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4d16c9-7f4a-49dd-8f8e-24dcde71ab1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89716048-1b31-4564-8880-94132107b6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f9a889-1ab3-4821-9bd0-51d3494c355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48856a5-4514-4715-a49c-fff64deef58e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dc3955-a3c7-4bec-962f-5359592438fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452bc970-e212-4374-a761-fecbf04dee0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae97544-1cd2-4b57-98a8-643e3c99d256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6a0775-ba3a-4396-82fc-8fc9e5571510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428816cd-666f-4e5a-9a4d-c147a79ec4c6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea0e99-321e-49e4-bd46-a0fd47ce1dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7ddb46-9275-4f3d-b9f5-e7a92a826c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d0e5f7-535b-4ab7-ab7b-f779d2edc217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a81aec-2b3d-4aa3-b394-5acf004e064f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895f3c02-e8ac-4ab5-9d71-642e4da42f4a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb91913-8b86-470c-87c3-c3068862ae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd7a753-521d-4a87-bd92-aa70f0f3ad37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4afd03-a051-487f-8e56-8a618e968831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3e5a83-6ab3-42c3-9463-835c86543fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d918583-dcdd-40ec-bb5c-28ca48a9004f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823029b6-ce03-4025-b4e6-2045a18533c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3fbf00-1184-4e70-beb7-268daeeedc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be36a9-6d49-492d-96e4-85d0129846b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2607aa6-20ad-4135-9d4c-b9c893a910a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b333367-53e3-42cc-a169-530889a94a06",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a2c30e-2925-407f-b07f-b1529298fa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac72bfc5-f960-46e1-aa38-d96d98520c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf28e6-5165-412e-87aa-402b530ebb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b41df4c-868b-4f09-aea7-e0bdf363c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3135a4-f1ca-4c15-8279-ae59a957a2f9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f32204-db06-4146-975f-e42fcf01d5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790a67b8-785e-4ec4-9e92-771b4ade20d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab86dcca-18db-4930-a391-796bab4c0da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80326838-a45e-4c45-ab5c-6bd387633a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bc05f2-2582-4e71-98ed-a03dd53b79b8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d90a29b-0a5a-4a60-9a6c-f3fa28bb71b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bd751c-d7a9-493f-8af3-82fa00b5e953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4ed20b-5d94-4492-ab68-5969e812d52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3795cf27-d190-47f5-a5de-e1b2ea459996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7336b3-85b7-40bb-895a-d2c347b90a96",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e532fec-25ab-4f5d-8eb8-5eb72b13399a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7c2b75-08eb-4fa4-bd67-8268ad36427e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e6fcea-d02b-47af-a7aa-ea15ea7b87a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503eb909-491d-466f-a0fd-f520cfae24de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1133df16-afdb-4122-ae33-0e32a1d0b6dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7726d9df-919b-45e7-aaa3-08c6bfaf1984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7013b13-24b3-4b3b-a5cb-454b4e0bd8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8402210e-2f38-446b-863d-286b1224c86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f70b512-282f-4787-a21f-d0c3f4174f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668821e1-74f1-47b4-9fa7-87604dc5fa82",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8557942-a611-4eea-b785-8dc641c9ff43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0897cb80-9663-4783-b88c-7dca3669f5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7cc7c1-7d9c-4ad9-84b8-d6b8302dc666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99229a6b-8926-41e3-a75c-39029bb4b3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2875bd29-9f42-41a2-a268-68d00f6fc42f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030e6c86-a729-44ff-b801-8545dea66a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9115e324-03dc-43c1-9f7c-ec620b74571f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cf256f-adbd-4692-bf76-b6e4c87c7ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4f63a4-049f-40ed-ac01-072902a7a59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e04dd-2a5c-4575-89f9-6de261d3b2a2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9919e-4f7d-43a9-8a54-799c9b8eb6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fff873-8b34-4a5b-8c6b-d7431e9a672e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c120a5-f6f3-411e-92fe-a305fe0c7a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f2ad52-bbab-4c94-b184-065357eecb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf338a4-3de9-41b4-9433-982317f91d51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149025ef-ba04-4442-8a61-2af589b26f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4c4d4f-52b4-4f8b-9af5-d220f5548c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa42c8b-99dc-4295-b4ec-771feada911d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d14253d-fd6f-418b-8d49-e3fa3e5935b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a6637-9b76-4d2b-b31f-4b5aacb1fff8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a96fdb4-2ff6-4f14-a503-61f13c5ab752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d691f88-dc7a-4c49-bf4e-2cb45d38a3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a976eb-4b42-4b60-9888-c9d5899cb151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c114bc-ec22-4c69-a8e7-18c5b2b0bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c66268b-6ed3-435d-a79b-dc55c05d46c0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4dfdd6-89f5-4d43-abb4-521d06682f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807700e8-5c65-4a3e-b6a4-aa678471d40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71ec999-4fc5-4cae-8821-031590c75ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aadaf7-471c-4cf3-9757-8e623b420694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d6d686-d25f-4cfe-a3f3-1148fcc42cb4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e348bec-7404-4094-9d63-3a5a4bdbc265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd99317-aaf9-4620-84c9-e0077c7c7dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6525d473-6b0a-4c4b-a4c9-4c699dc261e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62df331-931b-407a-ad44-b7ffae765b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840e35df-540b-47e9-86bf-2557f837b5cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714583f-7012-49bc-9fa0-cf3d89b84f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62065b85-2e9a-49ed-9a3f-5fc0cee58c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13030b97-3c3c-443f-8ad6-0bcfc211ff48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c0d1eb-6927-4c62-a2b7-ef6aac25478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757c330-854c-47bc-829c-ebdac6f2aee2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0035b8c8-9ecb-4cce-94a4-be5908728415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3654797-722b-452e-acd9-75403896b8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38611f5-d298-446d-8cc5-a915c61f65ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262bd691-9611-4323-99b0-78c81cce755d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32a9c85-96f4-4563-94be-ff0826ef77e7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de6a621-7d70-4fc3-8413-ca9f4be4e55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f6fd71-d448-4885-9aee-1fb9bc87237b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f83c414-2d85-4657-9f7f-bad52b0e1853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7c962d-d96a-4430-b23f-f8fc3e93e293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d29a163-7387-48c6-8b4b-fef10d05d7ef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e62310-4012-43bd-a234-5a701b613fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e41bd31-db54-4419-91fa-048e46f0aa91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb5074b-bdf4-41d5-a181-9aac453bdee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566674af-387d-4754-a64c-44964af910f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a2990-5f3a-4151-aec5-8dbf99236346",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6ff4dc-7016-481c-8897-739e8f2ae817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b906e42-2240-4f75-9097-acc8d8e9e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7030dfd5-97a3-4dc2-a57e-a98cc9e9548c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f811c0de-e1c2-4a73-856e-789b2740794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928483b1-ccb8-4989-832f-2324864c3c5e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881daba9-3e0e-40dd-861e-51d55414337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad6aab5-29fb-41af-b439-26f18b809ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a574d0-888e-4c2a-8be3-8c9b586ccec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402659cb-9471-49da-bcc3-da6842fc4f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280dfc0d-017a-4102-bc04-d1a61ba14d6d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27c1acd-ede1-4c14-95d6-905143d705ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22a9bb9-34e1-476a-9cb8-07b928132666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f1dc22-eb1c-4a40-a7ca-dae5288d15b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f857fb39-b1c8-4499-a60b-dbc00eda0c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef5491e-7643-4eab-b0e8-239ddbc057c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a487195d-9891-4ea3-9d6f-8ccb95fbcd74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2bef3c-05f3-4eae-93c3-75da56445ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c3578c-51f1-435b-8ee6-58df75a7e495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68caa5e4-5c16-4620-b9c4-3c1cef6a1b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c9cb04-2b32-413e-a0da-71bfe31d1752",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa6bdca-c782-4a72-9c16-5de211ce1278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3595d812-9c9b-4a7b-a313-00bb766862f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d46e3d-a0c9-4805-852c-b10af60e3aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b059fb54-8f68-428b-9c7e-84604d6b1c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f55b7-6c95-43ad-910d-3258da94aaaa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682163f0-daeb-4e76-b859-705ba37e8486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f09fa3f-bc08-45be-9d12-f50af0c70c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb0a43-ab40-4a1c-9b10-673de1427397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7709dc19-6a6c-48c0-9e9a-e7a3208c8e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee3629f-949b-40d3-a418-3d7558952151",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e44a4a1-856e-44c2-8755-a63d4f009ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d53c0bf-d922-4c70-a21b-0a852d35612a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d0cd5d-cde7-4781-b62e-4acff134d435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf9a28a-ecb4-43df-9658-aa93fb54530f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bafbcb7-380d-4cd5-844d-1ab65f62038a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1feec32-0e6a-4d26-82ee-dc41086e5fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccec3f3-80e0-4d73-8c20-72fad10d68c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87be41ec-0951-45e7-976e-47847087c6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31ea4eb-4f43-4385-87e6-56462f9a5101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b351a8c7-ecf7-45db-81a9-aa9638b00c69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82a5fd5-a313-460b-af35-869c88ec5784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adff74a-a3af-4708-9d59-64aa021c5567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76bc424-7e23-4c42-bc6e-0373f9f2186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10b4d04-7351-4b07-af10-ecdbed45a07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b0863-bf04-422f-a508-6000fd920a58",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e2e2a8-2317-4e55-a70c-d15263bffe4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84026da-cfd6-4219-a6c7-ad96cad861bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfffc784-cc41-453e-87bf-c040bf65fb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64f31d2-34aa-407f-9922-889722ee0868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e964772e-306b-4193-bf16-d8e2e3df4988",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd077d59-3c35-4557-843a-81da54ead246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf29d4ba-1f08-4fa0-a5f5-7c08fd9167ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73566da-8cfd-4402-b473-40702f716d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07173e88-0489-4c56-9177-3cd47fdd333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ca66be-68ce-40b4-9cc2-264cda99e349",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a3d73a-9469-47e1-a9ed-b41a28046cd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca0f4a2-7516-4f99-a424-202e239bcfe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d49a01-8699-42c7-ba83-a416b575bc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15d8ddd-941c-49b5-93fd-8481882a5571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5653f6-a244-4864-873c-0bbd6c704e39",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9407033-55b7-4672-962d-2c26a2db36de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a785b0b1-cf1b-4629-b5f1-5b4d3cec4aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9286058-2171-49b1-8103-9b46068f7ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572fe9ce-5068-4247-982a-e0787a700e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336fe9a2-f339-47b8-8c45-e54c5d0811a3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62699c3f-2a51-4275-b622-acb26ca93ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4eb5855-7dd9-4641-b431-870c29ed4d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e967879c-e9c4-43d7-a54e-51806a622055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493bba02-82c4-48f3-ad23-13aeaa3091dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270aa12-d216-48c2-b899-7167ebdc7ef4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53de81d-0eee-4c8b-b2ef-3a7cb77232bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7dd6e5-174d-412d-9129-67ead62001cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2bca96-dfa8-4b2a-ba14-046121f8369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5e8479-53b1-4754-9072-55a4fed25407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0158ccf-5e4c-4050-a777-eb450f4a8e8b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98393c8-4d26-46e4-9f91-9a3e9ef3305d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bddcc4c-7580-4bbf-93c7-89c35aed0e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64581b9f-d43f-4928-8d45-ea1bfd7264f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5337e82a-ea79-4a73-9cff-353e198cbb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45ae00-cf25-47a9-911c-ee612acb9210",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37b63ca-b0ac-4f5d-bc5b-b88e77ec6bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9143910-56fa-43a9-b046-a60d225b6891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc9d9f-115b-4c7b-a92b-bd3a3e2891f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb89e9b-61a1-43da-9e20-ac13244e3e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9e473b-2185-4256-8ca7-d4170155d8f1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41da5efd-1470-4a90-bcc2-342d9be06c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2e1b0d-222e-47c7-aaa5-b840ecb4c754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b4049f-55fd-453a-8b39-ec3a1c8015e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3846f6ef-7c23-43b2-9b11-a6029d1f00ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5434b7eb-5518-427c-8fa3-137bb3624fc7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9803e065-5abb-4d3c-8b34-ec34177d20b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8beb9676-82a8-4fc5-8710-5676cc710898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2e84a3-6a15-4d90-8f44-a676a1c90078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bf5ec0-7da7-4c4c-a415-a2a5f735f8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee9ddb9-b036-46ec-b221-bdeea05392f3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de8c5f7-7233-4101-b6ad-04796dd46279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efc7c13-62db-4700-b802-d372ee8f0946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b15c96-d65b-4d6f-8eaf-88c683bdaa16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a313ae-d8a2-43fd-a797-2de3c58c5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240ee2dc-5f6c-40c5-a64d-fff5a5c1c49e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e97500-b6a7-4ad9-bbfb-34e43ebf4cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2593d9-f6e2-4460-a72f-bc57b7a7988d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1afa717-3849-4c80-9c37-99325dce00d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d88882-67e5-48d7-b677-0a4307bcab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c202c-66f8-4e1c-9d6f-639ac53135c1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b109f-ab01-4a9a-bf34-acc41f8f419b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e336bff8-f92a-4182-93e8-b2ef159404ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a732107-768d-431a-82c6-417148d416d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b56df2-256a-47d6-9d62-b8fccb1e1be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8011203c-87ad-4fe2-bde1-55a46f82e004",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce04dc27-77a9-4e9a-9eae-6aff0eea18ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75664572-fda7-4bb5-b08e-fd127d28f2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4d6bd2-0dd3-42db-9a43-c9b6aae85f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79aed057-0349-44f6-a340-ee537340c938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940b0d7d-70aa-43c0-8919-6a0fbefa5113",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0ca6b2-6cc5-4866-8525-086d5bf9f986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aacdda6-92d3-4a52-9ce9-fdf28c87bc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64abce81-5899-4e74-9c8c-7f8436e7a138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688a962f-ae20-4809-8c6e-fe829110ab0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a91f38-d869-487c-87c3-0205f1b456ca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46eda7b-2d7c-4398-81fd-fedd5abb51a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773e780e-e058-4332-a0d5-f9ca52c9c9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0d4417-8843-4a16-8c2c-b625f653a89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b77165-e68b-405d-aebb-46b966f95412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a18cab2-d2da-4adc-b726-85bcb9ac2ec5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c490be-ad43-40f9-a517-76144c0d4953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e901ec0f-f76a-4c3d-8658-41b3f73bc95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bca9f9-36bc-4209-8255-2ae0a25b6735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f37e178-10db-4d5b-b1d3-c09f2aee1555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098e0dd4-d327-401b-a9b6-ad4049803594",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a6ee4c-15dd-4665-999b-c47ae9bc148d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d64451-4835-4d25-9760-00b1028f4eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70facc9a-a668-4303-805b-13bc70dc6dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fde02e1-8099-4d3f-b588-6248943425cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0b7da-352c-4d24-8f94-a0cbdd0440db",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d2cecf-a62f-4c0d-b662-69480220e4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c0b355-8115-40f2-8547-0beb900aa8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70285aa9-5e72-4a78-898d-686333910e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd1eaca-d7e9-4429-858a-69b446c44a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23d6f63-49d7-4da3-84d1-33731e520361",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74afe5fa-394b-4d2a-8617-e1fb15fa77bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5907a2-1145-4dc2-aa1e-c62245f9f8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d178f5-c3e0-484a-af5e-ff249c45a0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b8b2c4-4f43-4471-8d5d-55fc77848ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7145df8-eb40-45a6-8633-d511413eb9e4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8687ed1a-cd08-445d-add5-4ba0c16a18c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a5e290-6859-4b17-98d0-f3d525aede24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc985df-f2aa-4522-ad57-899cfa08501f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1bd5de-d262-415a-a5bc-f671fdbf792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46b41d-581e-41f7-a3db-50be7657dd8f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063dd98f-d41a-47ff-9069-5ca713f3347a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838180f2-fed0-4da9-8176-0aa9c212a01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12beec72-e2d7-4076-a7f5-df681ef3a4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec414b1-02a1-43be-b497-39552728586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b05a7b9-7ff5-461e-8e65-4f7ed3295a10",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8abbdcb-7ff1-4c9e-a787-0e76be9091a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c9b123-0f71-4427-9a66-2594e86f5ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98abef0a-d969-487d-a198-bef6c842d200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b4804f-341e-4b02-9ed7-b54b94ebae2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38651bfd-9791-44e7-85ce-c8a8db876b91",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea6de87-8e7e-4518-b387-860138dd894a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f01c4f1-ee22-48a7-804e-3730ede6d2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa368404-d1b9-49bd-ba8d-3ee7999288e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33376c9-1c9d-40e5-8871-f5daa022d615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55be27fa-37ad-47f2-b190-11ca6d1ccbda",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c21ae9-634d-47b3-ab88-d0c9d19b367d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d1fe09-a237-4492-a416-87d8608eaff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ba952e-ef1a-4314-a5d4-44d52f0b5956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e45519-c593-4490-9c57-895ed84feef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d0708-9a57-45a6-ac2d-b1c43315b33e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a1868a-25aa-41f1-be35-4dfbb4f0c4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a66c34-6a21-4894-bfcc-0b411eda2e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac3e6c-8d20-4f3e-b0ed-be6c262fe937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b370d75-ec80-4bbe-8daa-325f76d57a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bfb746-93f1-4587-aaa4-39367fe8691a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b695ac-bd11-48c0-8ad4-b060ef196508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb626924-ac89-427f-9ca7-88a5c7a32321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70c213-770d-423f-bff2-332a277215e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c29c51f-ead1-480d-aebf-40700012280f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bd08a0-c26e-4835-b295-ab72ee1ef67c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd5a33-25b0-4205-a34d-04eda8065fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d573b615-9a46-489a-8dce-fe53f3dd004e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86746d3-609e-4978-9d03-68ffbf26acc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c223c46f-dff8-4f12-8740-80aa357e9cd0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d110f6e0-9c13-42e0-a1f1-c0be34d45ff5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1c7e1f-abf7-437d-b463-61581c713531"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b67c51b0-5601-477b-8098-307bd06c91b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "becc3e43-ae58-4ae5-be6d-984365b0bec6"
                    }
                  }
                ]
              },
              {
                "id": "62bc7bd6-b647-4919-98b1-e73934c5c39f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bf5f13c-7090-4839-b736-ec0943a69777",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa94870c-cf18-4f20-98e5-c19189548b9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6d3e6ad7-97d9-4b5e-946e-3d7ea63203b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e76c4-1cf9-4b77-b110-cc163a2b8ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a062833-b40b-4f35-8e4c-3e9f60c7e715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a845ea-24e5-44dd-acb2-9042e1d32d6f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25822031-9019-4759-ab56-db3c14e33868",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d958f8a-d723-408c-9526-a62541cdae7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2479016b-715a-46de-abc0-be503e19ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b00d8685-6ab8-46d0-88a8-eb470c53617a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f705a79-3122-42cc-a2ff-28034f9ea72b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "563e50de-4c3c-4843-90ef-25b4636f6329"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf648e9-896c-4087-b526-a45bdac485e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "934df8b2-4eff-4440-993d-5b2a6e187016"
                    }
                  }
                ]
              },
              {
                "id": "5ddd8e90-5ca0-47fb-8d28-5456dc54dc62",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9e116be9-955a-40fa-93ea-43ec34c38c98",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94226d-8820-4aca-aef8-359ba856f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "21f0875d-4412-4fca-b819-df46a0567e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb980f34-159f-4c9e-b0e6-63dc731ad781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd97695-2cce-43db-8fab-c83c6270d026"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9c44bd2-21e1-49da-a5ab-0d8d3d9ad5b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac3e3bcc-e842-4eb7-873a-2ff9130d137d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "302041e9-9a63-4b9a-ba5f-5229c78f9234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5764608f-6aa2-4210-8640-20a8b87dd2f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06dd2110-6554-4e45-a2e9-234d642e6da8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c441bc9-6417-48fa-82d7-29d17e39ad69"
                    }
                  }
                ]
              },
              {
                "id": "0e83f38e-a8f0-4076-8f56-d66663aecfe8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "500521d3-3c5c-4103-a651-6fdc363c1d6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6dcf047-828f-4b09-8db6-2c1193621c1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14491b4-220d-421b-8ce5-d272539b06ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8677133-9aec-4fd6-a412-e63f149fb5fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6d56ae1-4756-4e86-bdb9-f25212bddfdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e374a236-11ce-467a-b0ba-f21e19c77c4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3082140-3499-47f1-b119-31735365322a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5521648-fe58-4fdf-99b7-8e40aae3f763"
            }
          }
        ]
      },
      {
        "id": "d4afe7e3-67d4-40ec-8ef1-f7a9ab71473b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb5575c2-8474-40a8-808c-325d98175574",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9794992d-510b-4250-aed7-d7e96d0554a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a15deb-09e7-43ef-84f5-404bc188a024",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5cac1cf-b0f6-4e4f-91cf-b81fbdcb30f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82da61-d6dc-4192-adb3-87be974b2419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4478695c-bd2e-4b43-9377-bd8b65ad3ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae71090-96c9-47e9-99c9-5679c31d98b7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a309e3f6-f889-49c4-b328-55503f6d9704",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3be3c001-2d93-4e9e-9000-834b1cc5e1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab3cdba-756f-4d7a-818d-ba6eaa192362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4cff0f4-c2e7-435d-9c9f-9d405afc2c79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e6bc53-13d5-4f92-a3a2-fab8da104631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "666f25a9-8d1b-4715-9640-be12d0d1230f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cba11bed-8fb0-4875-aaa1-05b290753971",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21c640ef-f58a-4d93-9345-64031eac825b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90c21304-5dc0-4a73-8da2-1849fc2e07dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a45aa24-2b94-4b73-90d1-95e4de1a409f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8666d3b7-61a0-4ab3-b79d-d7ae1667ff62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3f984b2-f3d9-4e61-aded-5e446059b6bf"
            }
          }
        ]
      },
      {
        "id": "47041d4b-0513-480d-b163-8a9e5a1de3a4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "07c8a824-ec01-443b-b74c-037729366024",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc717401-edd7-49a8-b6fb-99e12c75ad06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33d6301e-9f3b-481f-a616-a1d91ec1fef8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26e259f-54bd-4856-b7ba-9dcf5bc6c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6abd026-1747-4101-aa00-aa3ee7dc1327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf8d866-75e3-418e-8123-a107496ed01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aca5d68-a250-487c-bb2e-f1bf049d4929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff9713-11a0-4d6a-ae8d-ce531ae4d1b6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaaef12-d813-4595-9c19-1d676c3c4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "86fc5e60-f52f-46c8-8016-4dbb126c43c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5ac8d-5d6b-4534-a677-45b4d0f1b57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6044d37-109f-4322-bfb2-39ef017801ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad9b3b67-9c0e-478d-bdc1-b99fd4b47033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94ae18d4-c700-458e-9399-65bf8161ab2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a56dbdbc-cdd9-4677-a410-9b86a5b142b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba9aaf52-be4d-46c6-98a0-881ad1e4f868"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aa5512a-dfb0-45ea-bb88-85b8fc9bb894",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5ccfd52-09bb-46c8-a5a2-a8aab70abc68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6792c5ec-b9d4-4fc6-949a-164c33c07c2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1903ea24-881d-4905-be16-15620f6dbe96"
            }
          }
        ]
      },
      {
        "id": "2a35743d-5898-48a4-8a9f-0c83032bf623",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "207d0839-365f-465a-abdb-d28702b6c2b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01efee68-18c2-42df-917c-4ceb30daee50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5fd4555-fd7f-40b8-be54-47ff5aa2a958",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb82bb4-f7ec-42cb-a660-c44d8a52b21f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1919da74-0543-4e2e-8ab4-e7a1f45159e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373a5309-09de-44c0-baf4-bc99ca85edd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3f5d3ce-abcc-4d44-b94c-89575f49d1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2e13b9-75ae-42be-aeb9-196095c54a12",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8dd11-53f7-46d1-98cc-411a7402c4db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2b88c2c5-a8c2-49da-824c-883bba226b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80555d-1e07-47c4-bfc3-971fc28daa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd7fd5e6-ff7b-4c5d-8732-afcb3ddd307f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad1b073-e099-46e2-a052-1966edca51c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7f7dd1-bb57-4312-8547-8b0677dd071a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a3b2f94-c1db-43f1-bc1a-150141e9e5fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc93ad7d-c76c-4e63-b41c-345d2826ebe1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e08abba-df31-4bb9-9697-16561dabba0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2a0ef62-55a3-4f3a-b2ec-a64a6ab67c24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f8615b1-ab07-4746-9f8c-76a164922389",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "543eb259-80b3-4f4e-8554-2109c4a95886"
            }
          }
        ]
      },
      {
        "id": "bbc0b945-d3e4-4425-8b2f-7e993a86e292",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c867dba-00d2-4c6f-95d1-d4f08c23efe8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc2e5eec-08f2-473e-8a47-960dec042dc0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2dc62af-0372-43a6-8d29-8e859d78ab8d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f33980e0-4870-4001-9ff8-65c24ec15937",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdb53435-7404-43a4-8ffa-aa7f71f57df9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 700.4576923076925,
      "responseMin": 6,
      "responseMax": 5560,
      "responseSd": 728.6184886867841,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679359057915,
      "completed": 1679359253956
    },
    "executions": [
      {
        "id": "b5271177-2b61-4f75-be93-c628b486dfe2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3f5e3786-380b-4761-a46f-742e6eaf2cd5",
          "httpRequestId": "dfa70197-27cf-41f6-a7ca-6d0364e22e5e"
        },
        "item": {
          "id": "b5271177-2b61-4f75-be93-c628b486dfe2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c0bc4ff1-9dbf-45c4-9892-515bb06a074b",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "aa47190f-87ec-4f7b-a041-2372422a1981",
        "cursor": {
          "ref": "fb7399a3-39a2-432a-a93b-4454d87ff850",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f465ab23-a7f2-4f43-9548-3bd82c1d7928"
        },
        "item": {
          "id": "aa47190f-87ec-4f7b-a041-2372422a1981",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b1fa921a-7585-41db-9a84-70afccab4a9a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5633d3d5-16bc-4a4e-83f3-518bec012d9f",
        "cursor": {
          "ref": "dcb94b2b-4969-42d1-8807-ffac73710fea",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70a0bd65-c7ef-4b63-9913-a71faab33a2a"
        },
        "item": {
          "id": "5633d3d5-16bc-4a4e-83f3-518bec012d9f",
          "name": "did_json"
        },
        "response": {
          "id": "e544679d-d4fb-4540-b268-8d1023206b66",
          "status": "OK",
          "code": 200,
          "responseTime": 863,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a7678-e2c2-43ba-938c-102fc16e2152",
        "cursor": {
          "ref": "e631dc27-e7cb-495d-a7bc-41874d79934c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08c1f6c7-e3b0-4e50-9cf1-b09872511d63"
        },
        "item": {
          "id": "329a7678-e2c2-43ba-938c-102fc16e2152",
          "name": "did:invalid"
        },
        "response": {
          "id": "020eb4c2-8dca-419f-91d1-16d30ee470f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a7678-e2c2-43ba-938c-102fc16e2152",
        "cursor": {
          "ref": "e631dc27-e7cb-495d-a7bc-41874d79934c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08c1f6c7-e3b0-4e50-9cf1-b09872511d63"
        },
        "item": {
          "id": "329a7678-e2c2-43ba-938c-102fc16e2152",
          "name": "did:invalid"
        },
        "response": {
          "id": "020eb4c2-8dca-419f-91d1-16d30ee470f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7666a51-8c73-46c1-bb0b-998a0d0fcd45",
        "cursor": {
          "ref": "554c821f-c7fc-434b-aab9-4e48b7100d7b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b582543e-a72a-4dc7-ad5f-97ed4fd06d6f"
        },
        "item": {
          "id": "f7666a51-8c73-46c1-bb0b-998a0d0fcd45",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "14748848-eeec-42b8-b893-215418107deb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 882,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933dddbe-c8b2-4df6-b8f9-9980c74ce08b",
        "cursor": {
          "ref": "2bf63451-25cb-4d49-9ac1-26d3ceb55f2a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "590b292d-05fc-45cb-8770-297cff195781"
        },
        "item": {
          "id": "933dddbe-c8b2-4df6-b8f9-9980c74ce08b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "280493d2-7738-4521-8529-f24da47047d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 564,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b778f4-79ee-4818-9b3d-6a3c0621db4f",
        "cursor": {
          "ref": "73e0d9df-1fc0-4aa5-b3da-82a8e7860635",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8ee4ab6f-b7be-4013-9f68-215d52fa065b"
        },
        "item": {
          "id": "31b778f4-79ee-4818-9b3d-6a3c0621db4f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0db60570-4dec-4de4-9a77-31e0dc856fcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12049d4-1d27-4b53-9b80-65dbe4f7a176",
        "cursor": {
          "ref": "09efdf25-4d9a-4b17-ab78-11be98e53f8b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a7b6ab73-9960-4558-8003-02722468797d"
        },
        "item": {
          "id": "e12049d4-1d27-4b53-9b80-65dbe4f7a176",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "59a88bce-ed26-4089-a7cf-be7c744d8285",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12049d4-1d27-4b53-9b80-65dbe4f7a176",
        "cursor": {
          "ref": "09efdf25-4d9a-4b17-ab78-11be98e53f8b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a7b6ab73-9960-4558-8003-02722468797d"
        },
        "item": {
          "id": "e12049d4-1d27-4b53-9b80-65dbe4f7a176",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "59a88bce-ed26-4089-a7cf-be7c744d8285",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625178b7-7ac4-4e79-b760-3bb6e20f8141",
        "cursor": {
          "ref": "03594360-07f9-43b2-8836-4d4c93bf2930",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bd8ddea-fc1e-40fc-9f1d-75bcdcbfa881"
        },
        "item": {
          "id": "625178b7-7ac4-4e79-b760-3bb6e20f8141",
          "name": "identifiers"
        },
        "response": {
          "id": "8e128a91-2e48-46b4-a705-74c2733739e0",
          "status": "OK",
          "code": 200,
          "responseTime": 952,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0630b8-1fc5-4adc-9f3d-7fee05cade93",
        "cursor": {
          "ref": "75759a13-73a7-4147-bdf9-e509b13980d4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b92fea9b-a76c-4dc6-bc60-e29eca8148e1"
        },
        "item": {
          "id": "db0630b8-1fc5-4adc-9f3d-7fee05cade93",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc077684-ff3b-4f51-bab4-b36d51ee4d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0630b8-1fc5-4adc-9f3d-7fee05cade93",
        "cursor": {
          "ref": "75759a13-73a7-4147-bdf9-e509b13980d4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b92fea9b-a76c-4dc6-bc60-e29eca8148e1"
        },
        "item": {
          "id": "db0630b8-1fc5-4adc-9f3d-7fee05cade93",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc077684-ff3b-4f51-bab4-b36d51ee4d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f74760-7ab3-492e-8825-e59ce24a8d15",
        "cursor": {
          "ref": "238b0917-723e-4af7-a57f-965cb421b666",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "802ccf7d-53d1-4a73-9583-39c8d7e1200b"
        },
        "item": {
          "id": "30f74760-7ab3-492e-8825-e59ce24a8d15",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "20e53ce5-e142-4096-b184-a829f3dd173b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b0f572-c0d3-448b-900a-b3589ded7115",
        "cursor": {
          "ref": "83f07a1d-eff2-4d55-86e1-6cfe744b3d8b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6812612b-9a82-415a-95d4-cb82525e3b7f"
        },
        "item": {
          "id": "53b0f572-c0d3-448b-900a-b3589ded7115",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e07d2447-6779-468f-84c6-1928ff6cb8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f5ab0b-aa2e-4f90-990b-fd7ca6999fbd",
        "cursor": {
          "ref": "d6bf6f45-e904-4421-9a33-25d64a4ba9a1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8897f2d2-0cfa-4a45-87ff-5a1fd12ac6c1"
        },
        "item": {
          "id": "f0f5ab0b-aa2e-4f90-990b-fd7ca6999fbd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b95f1168-c0af-41d1-8a8d-e06490ca16c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da13aa07-0608-46ec-9e9e-8fcf9a77d9c2",
        "cursor": {
          "ref": "4a0784a2-4968-405b-b846-aae85759788c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3441e366-d44c-4570-8731-9d4cda8111f5"
        },
        "item": {
          "id": "da13aa07-0608-46ec-9e9e-8fcf9a77d9c2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "391c2ecd-04fa-4954-bc46-819a1f32ca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f124d6-d462-4bd7-8a87-6a68da95c72f",
        "cursor": {
          "ref": "015a7b5c-87aa-4f21-93a7-d571cc6ca60e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "102b0ba3-e9e6-46bb-bbad-93319d9665cb"
        },
        "item": {
          "id": "b1f124d6-d462-4bd7-8a87-6a68da95c72f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f9bcaadf-1e99-4939-b67b-dac925775280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f5f244-1685-42f6-bd3c-717495f5c7c8",
        "cursor": {
          "ref": "ef8c501f-3334-47d7-869f-0c9696a66aa4",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d4d5715a-9f6d-4c68-8380-d2be27e8e5e2"
        },
        "item": {
          "id": "b8f5f244-1685-42f6-bd3c-717495f5c7c8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "50bb911a-ecf8-4039-a7d7-82173a241903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a5b57c-f660-4e3e-b7f3-63b0e0db5d7a",
        "cursor": {
          "ref": "c85b59f0-42fd-4e52-a3b8-cb7969573437",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f6f8424-cb5c-4399-8048-58ba493861ef"
        },
        "item": {
          "id": "51a5b57c-f660-4e3e-b7f3-63b0e0db5d7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ef3a466-b3a5-4f0f-b5e5-90f63e289c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4458745b-ced0-48ad-a3cf-9707cc2f8310",
        "cursor": {
          "ref": "e883b800-4816-4e18-8e32-93ad9694fe07",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5c44b92a-0368-4b0d-9cd1-2fbc701b7956"
        },
        "item": {
          "id": "4458745b-ced0-48ad-a3cf-9707cc2f8310",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d2275600-26a1-4afa-9b89-290227e092d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cd3ac1-84b3-44a0-9635-61965619e0f8",
        "cursor": {
          "ref": "b92a5082-c2d5-4c14-aa05-68cede348e32",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "068c7f7f-5d8f-41bd-8bfb-9927e2c22de2"
        },
        "item": {
          "id": "d5cd3ac1-84b3-44a0-9635-61965619e0f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0f96fd97-b955-43c5-b921-532b2ec13004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5a0414-a5b6-4abe-a234-b5e2ab12898f",
        "cursor": {
          "ref": "1ea5193b-5a39-4d10-a391-295272e2b7ce",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "51338385-100d-4124-a30f-9cb6f177af17"
        },
        "item": {
          "id": "4c5a0414-a5b6-4abe-a234-b5e2ab12898f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6a8a49a1-e475-4b75-a950-721a946fe095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8677e0-fcdd-4f84-a3f3-ea72cd202413",
        "cursor": {
          "ref": "905e2a37-eaf9-474e-8a26-285c197ee1bc",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "20dc8f17-a02a-43d8-895f-9fd9bffef566"
        },
        "item": {
          "id": "ad8677e0-fcdd-4f84-a3f3-ea72cd202413",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "af0f7c00-67cc-4c05-93ab-c86b56736cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cd59c7-3f0d-4813-ad4d-dcf68c4115a4",
        "cursor": {
          "ref": "26d09d36-affa-46ec-89a5-5740c2fe18d1",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2bae45fe-91c3-49e3-945a-4c716bdb0613"
        },
        "item": {
          "id": "18cd59c7-3f0d-4813-ad4d-dcf68c4115a4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "623ef550-935a-40c7-a820-ddbddca57dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca0225-aa14-4516-b710-bf67e8fdc833",
        "cursor": {
          "ref": "76379d30-1a1b-4d5c-ab94-f7bfa639afa5",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "524adea8-2967-437c-87e0-43ec100011d1"
        },
        "item": {
          "id": "41ca0225-aa14-4516-b710-bf67e8fdc833",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a4d73e6-ed8c-4ac9-85b9-0c137689a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb83d2b2-f124-43b4-974d-82f7bccda1e7",
        "cursor": {
          "ref": "6ebf3144-b670-4cb9-ab9a-e2fad15cea0a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b90ceefb-9ca1-4c98-8043-9b3d86777626"
        },
        "item": {
          "id": "eb83d2b2-f124-43b4-974d-82f7bccda1e7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1767d158-d7b5-4906-95b4-fe40cc20a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81eba3d-055f-430b-8c07-7bce74dac59d",
        "cursor": {
          "ref": "ee2a0491-5b46-4df7-9294-c8854503a55d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "011c9896-b6ae-453f-8f25-d08dfb522070"
        },
        "item": {
          "id": "e81eba3d-055f-430b-8c07-7bce74dac59d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b29b35c0-e3f5-47cc-aa16-763c023f7d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95212138-51c4-48b4-b03f-fe4cd8087b05",
        "cursor": {
          "ref": "204f1238-35db-48f1-8ae3-bb8b0b0b943f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2134bf1d-ced0-4620-93d8-0de169ec7b73"
        },
        "item": {
          "id": "95212138-51c4-48b4-b03f-fe4cd8087b05",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "15d9ec0a-8d7d-49fa-aac9-cc408b845452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c53baf-e8ad-4b96-bc1f-6f36dd2454c1",
        "cursor": {
          "ref": "9d2d4384-fd03-4e31-b105-7464d7adfdbe",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3b5406e3-c920-42d0-95be-a741bc49a401"
        },
        "item": {
          "id": "49c53baf-e8ad-4b96-bc1f-6f36dd2454c1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "42d26d4a-96da-4a4d-b363-2fb7ba8ae74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98a502-9f20-4bab-974f-db93ab5cad26",
        "cursor": {
          "ref": "a80a2c8b-3b43-4844-aebd-e84bcb27d03e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b83bd8b8-5650-48eb-ae06-fa683834f357"
        },
        "item": {
          "id": "7e98a502-9f20-4bab-974f-db93ab5cad26",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3c8e8d5c-34e1-42bd-a9c6-8599bfef0330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f03e0a-b949-4295-bf26-4bff7268ec66",
        "cursor": {
          "ref": "a6193e5d-0436-4e67-a683-ca1c017af0ac",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "207f6090-c447-4468-add3-bb43af968855"
        },
        "item": {
          "id": "69f03e0a-b949-4295-bf26-4bff7268ec66",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eddae7e7-824b-498d-9342-5c514407fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7e34b-488a-4a93-9411-c0df03a7e278",
        "cursor": {
          "ref": "40b6e657-89a7-4e14-99c0-2206047d9218",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5223b077-9c9d-4a85-856d-660b7882a754"
        },
        "item": {
          "id": "5cf7e34b-488a-4a93-9411-c0df03a7e278",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "80160c95-bfef-4868-ad5d-31ec8df4d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c342004-48cd-4dbc-a782-e35bc9f99827",
        "cursor": {
          "ref": "1ed8018e-bb24-4840-a2aa-5f12cf0f3340",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5e033fae-0a5d-47ac-9858-f33be892968e"
        },
        "item": {
          "id": "9c342004-48cd-4dbc-a782-e35bc9f99827",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0649140e-6268-4c9d-a85c-459d8dd0ba58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6e1fdf-bf5d-489d-9588-768fa22b80f6",
        "cursor": {
          "ref": "09c9379b-6a2f-4d3f-8d9c-5058b5383299",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cc2fe469-ade2-4125-97fc-cc55821c3240"
        },
        "item": {
          "id": "2b6e1fdf-bf5d-489d-9588-768fa22b80f6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aa4a030d-b36f-4ada-a2f3-f8b1484717d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5411da-7957-47ba-b88d-c488d8498c5e",
        "cursor": {
          "ref": "c05a0628-5186-49a4-b374-df9e1a923ae1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "45ca632c-f804-42b1-a712-9754a94578a6"
        },
        "item": {
          "id": "da5411da-7957-47ba-b88d-c488d8498c5e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c0916553-59d8-4e0b-974b-87ad1fa7cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da5174b-c508-470f-8d64-bcc45b96a206",
        "cursor": {
          "ref": "43c4a41e-2dfd-44df-a820-c8828e431300",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a6ab9b4d-5880-45ae-b9df-b13b356129b4"
        },
        "item": {
          "id": "6da5174b-c508-470f-8d64-bcc45b96a206",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6b0518f9-5c3d-4b76-b628-7171046033e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0241e233-d0c0-48dc-9d86-5aa7a0b76786",
        "cursor": {
          "ref": "f36abf5c-e7d8-4a9e-ba9b-2f2cb9ed0db2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4fef0deb-6503-436f-b450-df88808073df"
        },
        "item": {
          "id": "0241e233-d0c0-48dc-9d86-5aa7a0b76786",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "199f0380-ee33-461d-a298-e9ec350c1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb71e44-1612-410a-acf0-89cf5d20998d",
        "cursor": {
          "ref": "d19581eb-d7dd-4880-a054-7ed3a87657c5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8cc47d4f-92a5-438b-a57b-c981f9ca9d0a"
        },
        "item": {
          "id": "ffb71e44-1612-410a-acf0-89cf5d20998d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5508d6bb-fe0e-4f53-b401-1b490712965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c85b838-d77a-47e8-a56c-d9ce8aeec115",
        "cursor": {
          "ref": "0cb794f7-bb9b-49cf-bf44-7884f0c75dfd",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d112054f-78ff-42e8-946c-4b2167d508df"
        },
        "item": {
          "id": "4c85b838-d77a-47e8-a56c-d9ce8aeec115",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "be9fe423-28c4-41e1-9f0e-992fc0328841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cebe08-d031-4d3b-bd90-cce7b7dfc800",
        "cursor": {
          "ref": "ef4b1ae0-0410-4f3d-9878-098fa55d038d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "887495fe-4791-403f-80e4-1be4c5028709"
        },
        "item": {
          "id": "e0cebe08-d031-4d3b-bd90-cce7b7dfc800",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7ea67f27-d917-4483-a760-414c786d730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b84ead-dc68-48f8-a887-7a6be9d06e58",
        "cursor": {
          "ref": "8e7dcad5-e0e2-4222-8aee-68b0e7b64d26",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "77131463-6296-4105-bec2-534ec76f370f"
        },
        "item": {
          "id": "e4b84ead-dc68-48f8-a887-7a6be9d06e58",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1e9c8322-3150-415c-bd41-0e98c843c26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515e0879-7197-450c-a991-17079ee04bdc",
        "cursor": {
          "ref": "f01697f7-430c-4d81-b2f9-7fc82806b276",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3aee2ac5-502d-4c0e-a171-7d8821f1dde8"
        },
        "item": {
          "id": "515e0879-7197-450c-a991-17079ee04bdc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3a14693-8db8-448a-bad6-1e2680fd0167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2bf01c-105d-47d7-bed7-925664f9617a",
        "cursor": {
          "ref": "56d31881-89b5-4687-94c4-52dc97f86d05",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8620e257-71e6-4b0e-84cb-3811d0a0953e"
        },
        "item": {
          "id": "ae2bf01c-105d-47d7-bed7-925664f9617a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "05d8da6e-6895-4510-bd15-79fbf304da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ab4b0-55ea-4acb-b7ba-3031a951a089",
        "cursor": {
          "ref": "5a0f4b8a-4aa4-43d5-bab6-3d8fd725a7a1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7e33a3f5-d141-4738-a718-7ded9aa9f9a2"
        },
        "item": {
          "id": "be2ab4b0-55ea-4acb-b7ba-3031a951a089",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1a5fb32-6797-4ca8-8c9c-b59eb388dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaae287-3c1e-4d1e-a23d-6e7caba7e59d",
        "cursor": {
          "ref": "81866a45-4d8b-45fd-9802-9d94ef59e04b",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6893226f-c3ad-4898-9eed-80848c71d32a"
        },
        "item": {
          "id": "afaae287-3c1e-4d1e-a23d-6e7caba7e59d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "22b7379e-f38b-46f0-8d32-d0af7f280f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b24ec37-b786-4be1-a1c9-01acc9065d79",
        "cursor": {
          "ref": "abcd77da-24d7-4821-91f0-7ccac07800a6",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ac060105-ec51-483e-ae02-03619a7000c3"
        },
        "item": {
          "id": "9b24ec37-b786-4be1-a1c9-01acc9065d79",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9adb16e3-6af6-40fd-bf94-c3d49e774815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048fa1ab-88cd-4c91-bcb8-38558ecdbc72",
        "cursor": {
          "ref": "3f273a6f-3df1-44aa-9a3c-097e8371f4f5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "09df2a22-8594-4209-8d17-067fccd96023"
        },
        "item": {
          "id": "048fa1ab-88cd-4c91-bcb8-38558ecdbc72",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c21d8490-bede-4700-ade8-8470fc23d641",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 678,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5cb8ae-2905-4a47-9245-63201d69f8f6",
        "cursor": {
          "ref": "9dd8a9e9-f25f-4e09-b0d0-7de9b47dca2e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c3f5a032-9faf-403a-a46c-3f2961f06f3b"
        },
        "item": {
          "id": "9d5cb8ae-2905-4a47-9245-63201d69f8f6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9d4fc911-ca56-45f4-83b6-2c1b71006e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6871ae-9d21-4d75-9cdd-ae3ae31e3aba",
        "cursor": {
          "ref": "fb0c7cd8-303f-4944-b96c-c822e8c819fd",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f887892-07d4-4ed0-a50e-16cb64629719"
        },
        "item": {
          "id": "0b6871ae-9d21-4d75-9cdd-ae3ae31e3aba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8c83d259-23a3-4900-92be-722cbb320e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e66789-4e01-44e7-84f7-fcb46004a8bc",
        "cursor": {
          "ref": "a57738be-20a6-4b36-b632-a21d98577179",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "821a5521-81d3-4b13-8ade-c973bb23d801"
        },
        "item": {
          "id": "98e66789-4e01-44e7-84f7-fcb46004a8bc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c98bf264-c3ea-4c34-a514-33ce417bd71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b12079-301e-4d5d-8c93-02f79f0597e4",
        "cursor": {
          "ref": "9eca6a7c-4549-4a43-9d41-91aa5e52b68c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c539a7e7-13fc-4527-bbe7-d19b9f5da130"
        },
        "item": {
          "id": "68b12079-301e-4d5d-8c93-02f79f0597e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7a26d2ef-7caf-422f-9b51-ff9f63c01acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd693825-9ef0-4618-a15c-0696051b9f67",
        "cursor": {
          "ref": "552fb6d8-2ad0-49d9-8832-61e4dd0438aa",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2e932b4e-c752-4903-b726-e52ce9593d4f"
        },
        "item": {
          "id": "bd693825-9ef0-4618-a15c-0696051b9f67",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "34b2aabc-dd9d-4ba9-ba69-1337baa1a846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf783ce-d302-4b32-a58e-92e375d31d7c",
        "cursor": {
          "ref": "81e3333f-c1aa-4a35-acfc-0a32603181e7",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c6a24245-fec5-4c69-ade1-9f73603e4460"
        },
        "item": {
          "id": "3bf783ce-d302-4b32-a58e-92e375d31d7c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8dc67926-995f-4353-b977-67b8fb2f67bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99f90fb-8d0c-479f-9a43-7bdf070dae1a",
        "cursor": {
          "ref": "bfe5865f-5101-4c31-9bbd-d1c83c0c539e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d65c7c92-6d6b-48f7-9e34-b93a5d4cdbe7"
        },
        "item": {
          "id": "e99f90fb-8d0c-479f-9a43-7bdf070dae1a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "290d8c75-0dc6-4d12-a4b6-0c251708fcbc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1417,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e2b9de-34b2-4aa7-a4b6-8dc3d0cf489f",
        "cursor": {
          "ref": "256aac13-7fe5-4576-8743-e69bef8273db",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5cad6222-cfbf-4e2c-887c-5a5b57359511"
        },
        "item": {
          "id": "84e2b9de-34b2-4aa7-a4b6-8dc3d0cf489f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "33fe8312-a015-4136-958e-3bb01cb6761e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0fe0d5-670c-46fe-9902-1b43feb62351",
        "cursor": {
          "ref": "1276c4dd-f88f-453c-8f09-4fb9bf1aaac3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eab7ccb1-cc8d-4e72-afb7-27e793ec667e"
        },
        "item": {
          "id": "0d0fe0d5-670c-46fe-9902-1b43feb62351",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "afe4fa8a-5d8a-480c-b5f7-a5a78540ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2fd774-9803-409a-8503-cb7aeb93593d",
        "cursor": {
          "ref": "862030e1-e7a1-443f-8584-8fdb26acc6d4",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "af87c9c7-e71a-47a8-9406-6769a4a16f5a"
        },
        "item": {
          "id": "be2fd774-9803-409a-8503-cb7aeb93593d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "987920f5-a7c8-48f3-aed2-249dd09af9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1460,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe967dc9-c50b-4435-bda1-0ce763b37a75",
        "cursor": {
          "ref": "2dda1540-9f28-4161-9ad0-80be76334ecf",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c9894900-72d3-4090-8e60-8499db25ce9e"
        },
        "item": {
          "id": "fe967dc9-c50b-4435-bda1-0ce763b37a75",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f001ffb5-2635-4f8a-9a64-5b578bb498a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1240,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b6e776-6047-4481-ac05-d872ddd556a9",
        "cursor": {
          "ref": "8bfe35b6-b6f5-4f73-aee0-7eb4b5c8c1ad",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a5b014de-852c-4d84-9792-db525fb56d9a"
        },
        "item": {
          "id": "44b6e776-6047-4481-ac05-d872ddd556a9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d24a7176-de2b-4b49-8948-840882f2c8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca832f-2310-42cd-928f-396e90cebc46",
        "cursor": {
          "ref": "debe1108-b512-49eb-845a-791a6cdd8014",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0345a248-d832-4ac7-9f68-b8bd38c07ffc"
        },
        "item": {
          "id": "6fca832f-2310-42cd-928f-396e90cebc46",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8400adff-40cc-4b78-aa99-baefa5f21b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c047eb05-4d37-4a77-a28b-ab8965139b1e",
        "cursor": {
          "ref": "b25878cf-c662-4e68-8e30-0e393ce82e6e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b09ee69a-29bc-415e-9ad4-674fcdca3322"
        },
        "item": {
          "id": "c047eb05-4d37-4a77-a28b-ab8965139b1e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "42063403-e58c-4224-81bb-f0c0d1faf943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ca97f1-48a8-482a-a294-5586a38e10bf",
        "cursor": {
          "ref": "548c8ed9-3f94-47ee-b584-5fa2108c56eb",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6e94aebb-16ab-4870-8545-f1399ce8b669"
        },
        "item": {
          "id": "04ca97f1-48a8-482a-a294-5586a38e10bf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "53bcffe8-864b-4486-92fc-dac8c001b8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cc9103-e6da-4cdc-a1e7-77dcd58e4392",
        "cursor": {
          "ref": "cb2339ea-727d-4120-8ec3-f57a8a4dc713",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7bdd0025-fb5f-404b-ada4-77694082c128"
        },
        "item": {
          "id": "24cc9103-e6da-4cdc-a1e7-77dcd58e4392",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9defa111-e306-4a28-8db9-eb6ef42bc66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d5b13d-eeff-40d5-822a-d18a398ed842",
        "cursor": {
          "ref": "f82ec376-d4f7-4471-af51-5aca5f84420e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9326583f-ab10-4f16-bf8c-53a4145b26f1"
        },
        "item": {
          "id": "32d5b13d-eeff-40d5-822a-d18a398ed842",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3fe69505-fc78-4ace-9062-989f0617a461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f6d001-6349-44dd-9910-91a1d2b074ef",
        "cursor": {
          "ref": "cd3f9c4e-add3-48c8-82b0-193c4e6159e6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "069ceff5-26d1-4f00-8272-51cf3377ebb6"
        },
        "item": {
          "id": "25f6d001-6349-44dd-9910-91a1d2b074ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8efa3612-76f0-490f-8b13-305d1b2b0496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a5326-0217-41a1-a846-8a947f487798",
        "cursor": {
          "ref": "e44e2e9c-858e-4387-8df6-7c975d3271e8",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f46008c-c98e-42b0-a7b9-3f93f69ae541"
        },
        "item": {
          "id": "425a5326-0217-41a1-a846-8a947f487798",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8e75ef1-0782-4450-bb85-7b1adf3c2720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb93430e-358f-4aa3-b3b1-6febef7895d2",
        "cursor": {
          "ref": "55fe0df9-ecf6-465b-aeeb-c5a1cac17be0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "13ed8d4c-7030-4804-b24b-0699a910c921"
        },
        "item": {
          "id": "cb93430e-358f-4aa3-b3b1-6febef7895d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e23135e6-2dee-4e98-a745-8f8eecb4c42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ecd4e2-1eef-4213-87bd-8d40a33c029f",
        "cursor": {
          "ref": "66041707-cc2c-40e8-b27f-c62bebd8ab2a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1e2340aa-e348-4e0d-8203-77cc4861d630"
        },
        "item": {
          "id": "c2ecd4e2-1eef-4213-87bd-8d40a33c029f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9605c5b3-c441-4a1b-9f2a-7cd0592f3162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8cdecc-db7e-4135-bd26-d04b5bcc0066",
        "cursor": {
          "ref": "1ad8417e-cece-47ae-ab9e-6fd815dfb960",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb47c161-d138-42f6-bcdc-beee8c970684"
        },
        "item": {
          "id": "aa8cdecc-db7e-4135-bd26-d04b5bcc0066",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "184f5ae4-ddf4-42a6-be91-0743d1035c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b5d30f-97eb-4065-9593-6b1d719d22ae",
        "cursor": {
          "ref": "58d385f8-0e94-47fe-a60d-dc1ffd6df45b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eb34e0b1-f410-4622-ba0a-8e35a62e56d5"
        },
        "item": {
          "id": "16b5d30f-97eb-4065-9593-6b1d719d22ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7195a6aa-81c7-45af-9c95-886765227311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e0af9-7d7d-43f3-a1a1-6dc0bf6b4c47",
        "cursor": {
          "ref": "c00f14f8-cf4b-4fb6-ba1f-a08668dbbc0d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ec9c019a-e523-4159-afcf-acfb9c484b2b"
        },
        "item": {
          "id": "f46e0af9-7d7d-43f3-a1a1-6dc0bf6b4c47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7677120b-aabe-4f4a-a5ba-d2240a6214b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721b121-af2a-4b27-9881-fbb66070a131",
        "cursor": {
          "ref": "d19ca265-6344-4e94-8afe-b580be52ac36",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4650252a-43fb-4cba-956a-2035a59f86a8"
        },
        "item": {
          "id": "a721b121-af2a-4b27-9881-fbb66070a131",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "78bb0ff2-3c6a-4570-9806-9fe98da12100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856f0871-fed9-47c8-84c0-60d8468e40c2",
        "cursor": {
          "ref": "ac2e2c79-8899-4427-bb80-9adefebf9262",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9473b732-5dbe-4ce0-ab77-a54babac8cd1"
        },
        "item": {
          "id": "856f0871-fed9-47c8-84c0-60d8468e40c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1133b8c9-2eea-42ac-b329-8e54b02a0fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e638ac-70fa-4117-bf56-49c9c741dacf",
        "cursor": {
          "ref": "f89c3d73-66ba-442f-a089-82e3859773c2",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "716879d3-a8c6-4827-97c7-37df8de508fa"
        },
        "item": {
          "id": "11e638ac-70fa-4117-bf56-49c9c741dacf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "68f4ae2e-211e-474f-be3e-56dd730d6141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e1b7ca-9582-4c61-956a-b41b45b317d3",
        "cursor": {
          "ref": "e6801cd4-05c6-4923-9139-9c1ffb59f1e7",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6a01959a-8e25-41e3-9bd0-913185dea578"
        },
        "item": {
          "id": "61e1b7ca-9582-4c61-956a-b41b45b317d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "814596c1-1e33-4f4a-9fb9-4749d12e0965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874afa9e-52e3-4248-8bb8-4d9c597ead6a",
        "cursor": {
          "ref": "3efb05ac-48ef-495f-92b0-858682855964",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23ccfa25-5447-499d-9e63-19a33e305ec7"
        },
        "item": {
          "id": "874afa9e-52e3-4248-8bb8-4d9c597ead6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f4e9540f-558a-4b2e-a78e-793e4cde6d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c215226-e13f-489e-b03f-9d008ae8b252",
        "cursor": {
          "ref": "68009497-695c-409b-994e-5d20f71d7e7e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "48de8f7d-bbe4-440b-9ffd-181e717cdaa3"
        },
        "item": {
          "id": "5c215226-e13f-489e-b03f-9d008ae8b252",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "84dbe9ef-9fce-4cb2-bdc8-d3198d1accdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f39c1d-0d24-4adc-a77f-cad5094f4b9f",
        "cursor": {
          "ref": "0c1d3321-839b-4deb-9646-4c36dee20792",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb1550a7-978a-4bcc-a44f-defea4cbb6ae"
        },
        "item": {
          "id": "22f39c1d-0d24-4adc-a77f-cad5094f4b9f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d17e9d50-85c4-4282-9e6f-d5edc7b1e1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33619c8-b5a5-485f-b3f7-d1ec63fb1959",
        "cursor": {
          "ref": "51d3ba27-a1b4-41f8-bc5e-72824e07c920",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c445cb4f-33bd-4451-a9fc-c8ed91d6c790"
        },
        "item": {
          "id": "b33619c8-b5a5-485f-b3f7-d1ec63fb1959",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7d5176c4-fc7a-4748-af82-19af9bdf5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc045991-0f8a-432e-9224-4d2292a218ed",
        "cursor": {
          "ref": "6978ee8b-1e29-4bf0-a175-4195521fb89b",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e7cc1e6c-69f8-4572-9c08-41ce809090d4"
        },
        "item": {
          "id": "cc045991-0f8a-432e-9224-4d2292a218ed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "47f5794b-ae73-4440-8951-7a72a43ad385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba77755f-7879-4faa-930d-cc34fb505cf1",
        "cursor": {
          "ref": "3dd2b39c-c59f-4827-a2ed-9e878f4b2418",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "383f90b9-78b4-40fa-ad12-e07d970c63cf"
        },
        "item": {
          "id": "ba77755f-7879-4faa-930d-cc34fb505cf1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "de857f3e-1c29-4ed4-ad67-3f4a242e273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af9f795-622b-4197-bd89-7ecad6a7bd46",
        "cursor": {
          "ref": "286a879c-64ad-4549-b7ff-5f74131d81db",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5801eed-4845-456b-a086-588ec043d788"
        },
        "item": {
          "id": "2af9f795-622b-4197-bd89-7ecad6a7bd46",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "15bb0e11-1d81-4209-8f62-ff9942561e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b544cb-5231-4c75-9c42-7174f000ba32",
        "cursor": {
          "ref": "6ab962a7-7527-47bd-acc0-a2b7cf005ca3",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6854afaf-dc1d-47a6-ab37-e25a0782bc06"
        },
        "item": {
          "id": "31b544cb-5231-4c75-9c42-7174f000ba32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "68aab9a9-bda5-4a9a-b431-7e48724aed5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583adef7-c5c1-45d6-96e4-da0ad8c05289",
        "cursor": {
          "ref": "cfe51805-b3af-4515-83a0-2d81140eaa94",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d3c51f66-f520-485d-82c8-e3d95e8b2bfa"
        },
        "item": {
          "id": "583adef7-c5c1-45d6-96e4-da0ad8c05289",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "949b9bf5-ddc8-4981-8ab3-8593db829474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c9b5f-a5f4-41d9-a446-fa852ef4d5d9",
        "cursor": {
          "ref": "4d51180e-2cf1-4d71-9f1f-65f639310caa",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a830f1f-11dc-4de1-9e99-6281d6398c64"
        },
        "item": {
          "id": "a18c9b5f-a5f4-41d9-a446-fa852ef4d5d9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "305afd81-3ce1-47dd-89e3-11d51946e74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f949ce-1a63-4574-ada4-278b17464f4a",
        "cursor": {
          "ref": "450b97c7-dd8a-4195-8642-2f2b0b8ad3c8",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7c7a76d0-9434-452f-a149-fd14cf0d995e"
        },
        "item": {
          "id": "24f949ce-1a63-4574-ada4-278b17464f4a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b6520a80-be6f-4be0-8e2b-f42a88841bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1b7d2-4a94-48c2-afec-fc94448058bf",
        "cursor": {
          "ref": "86974843-2a34-4aa8-bd3b-fbbeb09d7548",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "62cd0742-196c-4595-b18b-a5e0fc78361c"
        },
        "item": {
          "id": "76c1b7d2-4a94-48c2-afec-fc94448058bf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3895944-540d-485b-bbb7-6a9e48eee947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c80a1-06d5-4100-a466-78b35d892b21",
        "cursor": {
          "ref": "da70549c-8a9f-4be4-ad4d-f83ea52c250e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "67a5bf54-9fa3-4517-8fb7-44f549b184fc"
        },
        "item": {
          "id": "f20c80a1-06d5-4100-a466-78b35d892b21",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b521749f-9db0-43ee-8ce6-d89f747ce151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfa22c2-3dd6-48f1-a221-2e69b71f9d88",
        "cursor": {
          "ref": "d3a639ca-faee-4489-8ff5-acea077f798e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "82a54c94-6c65-4af2-9b53-f20bea21675c"
        },
        "item": {
          "id": "fcfa22c2-3dd6-48f1-a221-2e69b71f9d88",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "99d69f90-6c38-46d1-bd5e-feb7db9c069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7522f0f-5f17-4f1f-b50f-1446aa2657d1",
        "cursor": {
          "ref": "1fb5c8e2-1a28-4dff-bf11-6a7ac76a8c30",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dcda476b-e0bf-4b45-9abc-fcd50b99c80d"
        },
        "item": {
          "id": "c7522f0f-5f17-4f1f-b50f-1446aa2657d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e821a227-11e1-44a9-b841-77757da25bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f6867-2911-4378-82b0-e9e366e16b31",
        "cursor": {
          "ref": "19a85a65-5124-4ab6-8e30-f7ece58c17b9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e7c9f797-6e80-44c0-aa62-0bae176f2219"
        },
        "item": {
          "id": "989f6867-2911-4378-82b0-e9e366e16b31",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "41bdda35-23fe-4f63-bdff-c5556e359ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad390d-5357-47b2-a5f8-336ea030d3bd",
        "cursor": {
          "ref": "d7fdd997-c304-4569-b9e0-7a059bcf61c2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9fb95551-88de-4c02-9838-7ff7119580ca"
        },
        "item": {
          "id": "28ad390d-5357-47b2-a5f8-336ea030d3bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f220a55c-b61a-4995-b5d4-d227b34f35dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fb1691-36b6-4790-96e0-324c9aa17a0a",
        "cursor": {
          "ref": "d846ef95-aeac-4065-8632-fa0b72ba4d2c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "82ec3b0b-0db9-43de-9330-eefda8a82809"
        },
        "item": {
          "id": "f2fb1691-36b6-4790-96e0-324c9aa17a0a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "16e44644-60ba-4b2a-8a8d-fee031089380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52069dfd-a6b0-455f-9478-172cee582664",
        "cursor": {
          "ref": "0c9a2cb4-6196-49e2-99f6-3df4c0d99e1c",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "775b98fe-109a-44ec-82b0-809a7e46226e"
        },
        "item": {
          "id": "52069dfd-a6b0-455f-9478-172cee582664",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ab02b3e1-e94c-4fdc-bf52-09f4cd33f432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4864ec4f-65b1-4b6c-8ed6-0f790e5e53ea",
        "cursor": {
          "ref": "17651ece-7af9-46f8-9ffb-fa3dd33103b2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cdbd8854-3ca9-4433-bf66-3e316244f064"
        },
        "item": {
          "id": "4864ec4f-65b1-4b6c-8ed6-0f790e5e53ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f3da6cf-7e81-41d7-b28d-d20b85bf676f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a092a-035f-4251-be6b-15bcc7e51b34",
        "cursor": {
          "ref": "ab44838c-bbac-4894-8cca-5b3f21430300",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a400e8c0-2e42-4db7-9be8-9a26c4e8c8b5"
        },
        "item": {
          "id": "2c6a092a-035f-4251-be6b-15bcc7e51b34",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "446c262c-f76d-4e35-bcda-e958b4dd7e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce3db21-a8e9-41ae-9eaa-579fd472def9",
        "cursor": {
          "ref": "81efdb00-b130-40fe-a1b2-8e062247a81b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a7c0b585-6684-47ed-981d-f8a196ab8b1e"
        },
        "item": {
          "id": "7ce3db21-a8e9-41ae-9eaa-579fd472def9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cc017314-8b86-4752-83b1-bbcac43cdfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213de27f-fd6c-4f19-bce5-bd6c47a407a9",
        "cursor": {
          "ref": "98a438c6-0e5b-4736-9aca-3fe1f65e6898",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9b5e095d-ed49-499c-955e-7013b97d8edf"
        },
        "item": {
          "id": "213de27f-fd6c-4f19-bce5-bd6c47a407a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "597edfc1-ee6b-4961-b134-3170e076a292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec27ff-aa75-4252-b3b4-f9fc37e595ac",
        "cursor": {
          "ref": "363c6916-9fde-4f40-bc44-076897910afe",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "53b65c7a-2e6b-4e7e-b373-47cbaaa4fe26"
        },
        "item": {
          "id": "53ec27ff-aa75-4252-b3b4-f9fc37e595ac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81358db6-95fe-4b87-82a6-e1c37501d1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18fc20b-4545-4558-a34d-e8b54243d241",
        "cursor": {
          "ref": "267677ce-dfb0-43b5-9d35-ba46f3ba2721",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5c9d5474-6811-420e-b66b-c92856e89158"
        },
        "item": {
          "id": "a18fc20b-4545-4558-a34d-e8b54243d241",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f089cee2-f5af-4929-b3b4-cb66c2d08abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd8e342-3a92-484f-8ab7-0c6f08e263da",
        "cursor": {
          "ref": "7eb2691f-a946-4b17-b904-222c2bbffbc1",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6b50cf28-84e0-4c26-b3a1-a7eb8d50a5e4"
        },
        "item": {
          "id": "abd8e342-3a92-484f-8ab7-0c6f08e263da",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5e831f21-800e-407a-a119-f6a20e0480d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b8a55a-3a59-4c15-9d4d-51112a3f200a",
        "cursor": {
          "ref": "2e6ecbd7-5bb0-4e9f-97ac-2cb14fd1002f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7fa660d7-d25f-4ee1-a42a-15d51dd180cb"
        },
        "item": {
          "id": "d7b8a55a-3a59-4c15-9d4d-51112a3f200a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e93565ff-570d-457e-9cc5-49a9a1ac89d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5431de03-7fc1-4b41-9425-54da57911150",
        "cursor": {
          "ref": "e8737423-289a-479a-a8c5-a960330dc084",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33a599c2-fde7-41cc-9755-e5580e6f59ed"
        },
        "item": {
          "id": "5431de03-7fc1-4b41-9425-54da57911150",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "86ef204c-ff67-4170-992f-7b33f7308301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927bac42-14e4-403b-a468-2b2c6388ccc4",
        "cursor": {
          "ref": "63174f43-6550-428a-9bff-b13de3792057",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a025a1ed-7407-4c51-9b66-d6274f0421ea"
        },
        "item": {
          "id": "927bac42-14e4-403b-a468-2b2c6388ccc4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "03aa8ff4-4ab6-4de0-854a-efb9587e4eaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22381b72-0a5c-4d6c-933c-4e4a7d488798",
        "cursor": {
          "ref": "5eb6f0ef-07b8-4039-be60-0123f3479635",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "149b1136-ec81-4909-9ab8-64c244654cca"
        },
        "item": {
          "id": "22381b72-0a5c-4d6c-933c-4e4a7d488798",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5d96e907-1a84-4557-86e0-519105ce6272",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 560,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d03103f-facf-4ce4-9792-2c9b2bc33363",
        "cursor": {
          "ref": "0956b296-00e4-4867-affb-33086d1af66e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd45a39d-68de-48d6-85cd-f18cef8ceb96"
        },
        "item": {
          "id": "2d03103f-facf-4ce4-9792-2c9b2bc33363",
          "name": "credentials_issue"
        },
        "response": {
          "id": "af7ea77a-196d-4546-b09e-4f44cb711ca4",
          "status": "Created",
          "code": 201,
          "responseTime": 4806,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83987a1-42b4-4eb9-a6e7-96e1a990f082",
        "cursor": {
          "ref": "9e64c6a5-2a50-4748-980f-20f274e96615",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "27c20e21-d951-48bc-863f-148416491571"
        },
        "item": {
          "id": "f83987a1-42b4-4eb9-a6e7-96e1a990f082",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1fa2e686-fe78-46db-85b7-8730c39af170",
          "status": "Created",
          "code": 201,
          "responseTime": 4369,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a29354e-e551-4203-9324-f229bf520761",
        "cursor": {
          "ref": "c60a44da-9f27-4ea8-b13d-c6e1fd4edcaa",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4ae921a3-4ab1-4933-b305-e72f9c8eee3c"
        },
        "item": {
          "id": "1a29354e-e551-4203-9324-f229bf520761",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4f1864e9-57ca-447d-9679-64a4be66c926",
          "status": "Created",
          "code": 201,
          "responseTime": 5447,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bc200b-44d8-4806-982f-f09ffaa39858",
        "cursor": {
          "ref": "0fa4dc1a-6aed-4063-b75f-28a2407cfa35",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff6dc9a0-07d8-486e-b378-d5e6855eb897"
        },
        "item": {
          "id": "86bc200b-44d8-4806-982f-f09ffaa39858",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f5cbf401-8f14-4b89-a042-d725883fff71",
          "status": "Created",
          "code": 201,
          "responseTime": 5560,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a9144-7ebd-47e0-a718-1799147c2d07",
        "cursor": {
          "ref": "4b2a2b72-efee-4a78-b31a-27c26f586e19",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dceaaf33-27d1-4457-b07b-088db0231091"
        },
        "item": {
          "id": "a21a9144-7ebd-47e0-a718-1799147c2d07",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "247db1f3-8c89-4fc0-b609-be1c6ffe2c76",
          "status": "Created",
          "code": 201,
          "responseTime": 4056,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "02492f34-454c-4141-8247-e4ff4f9258a0",
        "cursor": {
          "ref": "1323e109-c480-4f42-a15c-43bc140e0f1a",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7016c760-9960-4402-aaba-9cc4ebb0baef"
        },
        "item": {
          "id": "02492f34-454c-4141-8247-e4ff4f9258a0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3864aad-4f4d-44fd-8640-bd0ee24bf481",
          "status": "Created",
          "code": 201,
          "responseTime": 5519,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be0234b-c97a-4f6e-91d5-9b87d1458af2",
        "cursor": {
          "ref": "daba8937-d557-441b-9799-d14756d60fee",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8ff8ad66-8c75-4846-a20f-21023f159d32"
        },
        "item": {
          "id": "1be0234b-c97a-4f6e-91d5-9b87d1458af2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e13016df-a04a-4904-a36e-93465f6a0c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be0234b-c97a-4f6e-91d5-9b87d1458af2",
        "cursor": {
          "ref": "daba8937-d557-441b-9799-d14756d60fee",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8ff8ad66-8c75-4846-a20f-21023f159d32"
        },
        "item": {
          "id": "1be0234b-c97a-4f6e-91d5-9b87d1458af2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e13016df-a04a-4904-a36e-93465f6a0c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d893efb-5cdb-451d-b9ab-833217f5cfe6",
        "cursor": {
          "ref": "d841f9f5-d6ed-4868-aed6-86a39ab5b271",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "110bdac7-9d33-4134-9e93-f39846578eef"
        },
        "item": {
          "id": "7d893efb-5cdb-451d-b9ab-833217f5cfe6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "507c035b-0af5-4421-b2e8-33c11d936e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1230e5b8-b06d-474c-b321-0f2c875e0d86",
        "cursor": {
          "ref": "46832ddc-1952-486b-bd08-a51723d1bbd3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fbb44160-3472-41bd-85b0-174c89b677cf"
        },
        "item": {
          "id": "1230e5b8-b06d-474c-b321-0f2c875e0d86",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "faacd1a4-ca65-41fa-af1c-e0345700fca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7b09d0-7dcb-45c9-a9c2-08e85085ff16",
        "cursor": {
          "ref": "c52c6b3e-69f4-4c2d-ad39-6b31b3e7e480",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4014e9a0-5995-4fb9-8f01-7b02fdc989ef"
        },
        "item": {
          "id": "db7b09d0-7dcb-45c9-a9c2-08e85085ff16",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "388c728e-3d59-484f-b664-06563837f2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b3c317-4ad4-4254-ac32-fc32c6ea956c",
        "cursor": {
          "ref": "3aefb83f-c5e4-4765-a983-c187868785cd",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3cb5944f-3ca0-4878-8ceb-844883541ad7"
        },
        "item": {
          "id": "a3b3c317-4ad4-4254-ac32-fc32c6ea956c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0fe5d974-5248-4a8d-a9c5-4f3cbe22ac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98f42cb-c10a-4755-a7e6-dae0e04a33cb",
        "cursor": {
          "ref": "cb279b57-7a4e-45ac-b76f-1278f9436a8c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b78260d5-e90b-47ce-9ff3-130e8b5f5961"
        },
        "item": {
          "id": "e98f42cb-c10a-4755-a7e6-dae0e04a33cb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "179a2bc0-1aa7-47ae-ba8a-90c2caecf118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9295262-a1f1-4109-a8d4-f8093f18a4a6",
        "cursor": {
          "ref": "48f4c3f5-a10a-4cbf-a510-6b9d5d838bf9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "349debb7-777c-4eaf-911a-fd3a7a57deb5"
        },
        "item": {
          "id": "b9295262-a1f1-4109-a8d4-f8093f18a4a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f96a28b2-b0a9-4b0e-a846-a81f3ce0594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b96ec08-5b4b-41b3-a1b5-b80b01f38c9f",
        "cursor": {
          "ref": "37767f05-043e-40ae-8941-5543f366c75d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32cf54bc-c89a-4687-b580-279baf9c10c6"
        },
        "item": {
          "id": "4b96ec08-5b4b-41b3-a1b5-b80b01f38c9f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4802f9a4-192f-4780-8843-e54dcd7eefc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a2be99-76f7-4476-a8f0-f7fa42c1092e",
        "cursor": {
          "ref": "bf22f52c-a532-4443-8da7-4c5a97aa2fe4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2ec14202-70f4-4270-a9a2-73ce5afc6d9c"
        },
        "item": {
          "id": "76a2be99-76f7-4476-a8f0-f7fa42c1092e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "285557a0-551b-4b37-8bf8-3ce2d91e41aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1303,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7717eec-01ac-4872-bffc-b10e98a3f377",
        "cursor": {
          "ref": "277decf4-1b6a-4090-8174-54f5710874e9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "53d5253d-7d27-403a-90b2-e7d1953af073"
        },
        "item": {
          "id": "a7717eec-01ac-4872-bffc-b10e98a3f377",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f3d61975-d05f-4f4d-b45e-0c9524e76e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1316,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d717c92-f333-42c6-93de-e9b011e3197b",
        "cursor": {
          "ref": "d3091d04-f667-44e5-b6a3-4c7743d9b602",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0d38d241-8d1d-46ef-adef-024adab79670"
        },
        "item": {
          "id": "4d717c92-f333-42c6-93de-e9b011e3197b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b22e182c-2176-4dd7-accf-fbb65bbd7452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1500,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321dd7e0-a55c-4abf-b1c5-b13a5f6a3f66",
        "cursor": {
          "ref": "e8bde7ee-7d74-4fa8-8116-0d3a792b2b21",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "be5423a4-7f41-4c52-8ec9-d1efbf03973a"
        },
        "item": {
          "id": "321dd7e0-a55c-4abf-b1c5-b13a5f6a3f66",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "57a1056c-0af2-4c53-afcf-bc12965d4794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1388,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88335e-3166-47c7-a604-6e89f4780b46",
        "cursor": {
          "ref": "b4bd6940-60c4-47f0-b68b-0567b49fafa2",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "974724fb-ee61-4b4c-9389-2f4682e51cdd"
        },
        "item": {
          "id": "9f88335e-3166-47c7-a604-6e89f4780b46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e3b3717-44c3-483f-a4c7-539e07f880a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1448,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec1e06b-63eb-4306-a39a-d983f17a0bc8",
        "cursor": {
          "ref": "7d41f548-524d-4f04-a15c-90ce9e72579b",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "55139e52-1d86-4a4f-a9c2-0daa33a09a56"
        },
        "item": {
          "id": "eec1e06b-63eb-4306-a39a-d983f17a0bc8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f9ab1bd-8835-459c-be4b-927d5ec2a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1437,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8afbfe8-9e17-43e4-953b-d1f9c5ed2891",
        "cursor": {
          "ref": "b1e90a7f-e3c3-45f2-8a82-1754f5fb000b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f933929a-2d16-4b5f-b01d-721ae36ccd31"
        },
        "item": {
          "id": "d8afbfe8-9e17-43e4-953b-d1f9c5ed2891",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "431ee708-e45e-4d1f-8d58-d502aa7191ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1216,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221b1aa1-6e90-48de-8eab-2ef01bfa0bae",
        "cursor": {
          "ref": "87c0e66b-fc71-4db3-9e96-a06972860c67",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7fdce77a-64a1-4867-b72a-423660eb0ced"
        },
        "item": {
          "id": "221b1aa1-6e90-48de-8eab-2ef01bfa0bae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aad7d0c4-0922-4971-a1e7-3f2c6bdeaddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50bf614-f9d0-43c1-b714-3cffe68c3c2a",
        "cursor": {
          "ref": "fb3a2a9d-83a6-4bd1-9b1b-f5d9ea907dc3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "41b18c6a-b3cb-4b04-ac23-eea5fbefbfb4"
        },
        "item": {
          "id": "d50bf614-f9d0-43c1-b714-3cffe68c3c2a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "da82c2c0-19c2-4efb-95b4-4c0f29e390ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685028ec-8ef7-4102-a1d6-270baabbd4f0",
        "cursor": {
          "ref": "f3bfb5ed-ee21-4e63-a06a-9d7272d1f173",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "36dcd167-c3f4-4a64-b86b-d26a600bf1b8"
        },
        "item": {
          "id": "685028ec-8ef7-4102-a1d6-270baabbd4f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f47ce47d-bab7-490d-9aeb-6cc1455e300c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ccda5-0155-4132-96b2-658e412989cf",
        "cursor": {
          "ref": "3ddacfab-06ee-4cb1-bd7a-a4c3a72d3230",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c83c1742-e98a-4062-837d-9c5f36c2d8a8"
        },
        "item": {
          "id": "0a0ccda5-0155-4132-96b2-658e412989cf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15ecd8d0-611e-415a-8164-5a2db2ac9d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45c3a08-f0d5-4723-a9f9-c9f999e6ef25",
        "cursor": {
          "ref": "0122c876-1afa-4cc2-9c95-3a984474abac",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e7486e3e-0d79-4e49-ad5d-080a00c526de"
        },
        "item": {
          "id": "f45c3a08-f0d5-4723-a9f9-c9f999e6ef25",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63563c50-7f6b-4bb5-960b-3bbdbef9585d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd96ac45-7edb-425e-9213-29bad78982c1",
        "cursor": {
          "ref": "feaccbeb-ae7f-44ca-b146-f9e7cb95da96",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "53c0ba7e-ee4b-4ebf-a198-7023b8c2e6f2"
        },
        "item": {
          "id": "cd96ac45-7edb-425e-9213-29bad78982c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "407020b7-5139-4732-9fdb-4048930d9baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86496398-ba3e-4abc-9b40-2b9f14b3c192",
        "cursor": {
          "ref": "4373f7e3-8960-4a9d-b3cd-a00f58af307a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b676a1fc-c500-48e0-8537-fe0eab77f218"
        },
        "item": {
          "id": "86496398-ba3e-4abc-9b40-2b9f14b3c192",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f3875adc-ed17-42e9-b299-ce852e9a1b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed931793-4daa-43ed-99e6-db2cf73fbfab",
        "cursor": {
          "ref": "ced386e0-60f0-4a8e-862f-54114c07f97a",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a52c2c30-fe30-4271-9619-1aba43af37ce"
        },
        "item": {
          "id": "ed931793-4daa-43ed-99e6-db2cf73fbfab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3f4f0875-6ce9-4f74-87cf-1d2cba421935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f4e6ef-82ff-4a57-9af4-6f2874a3c4ca",
        "cursor": {
          "ref": "b043447a-aa80-4ea8-af5c-cbe2c3b1d00e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "64202d22-98ea-467f-a89e-72138477faa9"
        },
        "item": {
          "id": "59f4e6ef-82ff-4a57-9af4-6f2874a3c4ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "116cf237-6aa6-424b-aebd-c8c398e55396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe6a9c7-1f54-4b14-bb1d-ec6893e652dd",
        "cursor": {
          "ref": "f6e619d5-a70b-4c24-8295-3e8d05827473",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "479df19d-fd7a-422d-a29f-04b4b67759fe"
        },
        "item": {
          "id": "2fe6a9c7-1f54-4b14-bb1d-ec6893e652dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4d3580db-cff1-46b4-a663-8b5bf76c63d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553d8655-c11b-4470-8ff6-8197022c657b",
        "cursor": {
          "ref": "7a3baaa8-5bbe-448c-83d6-1562ba8ffae9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ca45ec84-4bd7-413f-8ff0-e2d18cd387a9"
        },
        "item": {
          "id": "553d8655-c11b-4470-8ff6-8197022c657b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c687ca93-bb28-46e5-a5ed-908172a656f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca27bcbb-fa90-4a8c-9f52-3ea35a1ef1ec",
        "cursor": {
          "ref": "9cdc9ccf-d03f-480e-94d0-0be095941e68",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "79e340dd-e25e-479b-8300-4c2b2a0efa3f"
        },
        "item": {
          "id": "ca27bcbb-fa90-4a8c-9f52-3ea35a1ef1ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "975e9a5d-b991-49e4-835d-8c943b3b7be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8a6a20-0ffb-4b53-86e6-0cbaf6da6b63",
        "cursor": {
          "ref": "58ba3976-75d8-408f-87cb-153f0cd1495f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "03ca093e-bc26-4c4e-ad4a-d30c9a207df0"
        },
        "item": {
          "id": "1a8a6a20-0ffb-4b53-86e6-0cbaf6da6b63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfc51b44-b8a8-4b0d-a2eb-45c9e6b76799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e53d47-8f5e-4c08-982a-50e270ecb950",
        "cursor": {
          "ref": "01dd55ef-8766-4ee7-b0dc-003b278c702d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4b374a65-3a72-46e9-a1b8-e2c9d0d376ac"
        },
        "item": {
          "id": "b2e53d47-8f5e-4c08-982a-50e270ecb950",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ee67d51-2250-442c-a3b7-9003aa13e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07013e85-78d2-4fad-9445-511ddfd365e9",
        "cursor": {
          "ref": "bb0faddc-7864-4433-a031-864758360645",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "59f18bb8-4e8a-4b74-896a-840cb26b5705"
        },
        "item": {
          "id": "07013e85-78d2-4fad-9445-511ddfd365e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b0c46fd0-6c9e-4fcd-9809-6a2c540ced4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc96a5-26bc-4d33-9199-fc466ce56bba",
        "cursor": {
          "ref": "edf78b22-55dc-441e-bd11-20ba8595e0e9",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ca7e82a3-7fac-41cc-a50c-901f44ab1a1c"
        },
        "item": {
          "id": "abcc96a5-26bc-4d33-9199-fc466ce56bba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "48c17e2b-25e0-49d6-8e69-5f8a656f7bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1288,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ac761a-eec1-4de8-95e5-7e22d6d75c63",
        "cursor": {
          "ref": "881513ff-172a-412a-b860-175f17f99ac6",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "24c1daaa-f30a-4a12-aea8-ba3dee77ec1e"
        },
        "item": {
          "id": "50ac761a-eec1-4de8-95e5-7e22d6d75c63",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3df066b3-18e4-4ea8-9a60-9181715ddd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac991c8-2736-444a-b6b8-4abc13de5259",
        "cursor": {
          "ref": "42393c9b-46f7-45c5-9001-2e0836d24d2e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff3fba09-8819-4e5d-874c-0be7ceb5887f"
        },
        "item": {
          "id": "9ac991c8-2736-444a-b6b8-4abc13de5259",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4745da26-1b60-4634-979c-09fa00b9adb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e03c6-9b93-4ce2-8018-a85c43e5c326",
        "cursor": {
          "ref": "cdc57098-6606-4e54-b369-19a5e94794d8",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bc5c7f81-a0cb-4a1d-8436-8beaf81484da"
        },
        "item": {
          "id": "2f1e03c6-9b93-4ce2-8018-a85c43e5c326",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "05ec83f5-ef21-48fa-9718-fb27759a5ef8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1065,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad115e9-f8a9-483f-b288-bcc510ca81ca",
        "cursor": {
          "ref": "3a299090-8124-4e60-8705-c53a0d84d45f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4b0419c1-8ab1-4d75-b654-0b38f85c38a6"
        },
        "item": {
          "id": "9ad115e9-f8a9-483f-b288-bcc510ca81ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "127a0569-7a9b-498f-99ab-c9034b3d9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad115e9-f8a9-483f-b288-bcc510ca81ca",
        "cursor": {
          "ref": "3a299090-8124-4e60-8705-c53a0d84d45f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4b0419c1-8ab1-4d75-b654-0b38f85c38a6"
        },
        "item": {
          "id": "9ad115e9-f8a9-483f-b288-bcc510ca81ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "127a0569-7a9b-498f-99ab-c9034b3d9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d0108-62f8-49f8-9295-8efb593f02f5",
        "cursor": {
          "ref": "eab9730a-3308-4eca-9f58-856de46e02f1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ed661803-34d4-4bbd-9aad-15c84f27cfb1"
        },
        "item": {
          "id": "9d3d0108-62f8-49f8-9295-8efb593f02f5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3b22788e-f989-42ae-a51f-a44ba321cfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2647a9ce-92a2-4e95-b21a-c438d238d56b",
        "cursor": {
          "ref": "07162b04-63d4-4b4c-a0e4-722b4cf4bdda",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "78f7890d-630b-479b-8646-1fc94a06de6b"
        },
        "item": {
          "id": "2647a9ce-92a2-4e95-b21a-c438d238d56b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "788f72e8-c423-4016-b8af-97324702a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e019be-cee9-4a76-9e8a-c646e377137d",
        "cursor": {
          "ref": "cf560aae-09c0-4919-832b-9046bdfb60d2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21d3f09c-d2f3-45fd-af0c-ba5e2d7dd761"
        },
        "item": {
          "id": "71e019be-cee9-4a76-9e8a-c646e377137d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d6aafbbc-9aca-4c17-b81a-8a4274584f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b97079-2727-487d-a800-0465df910369",
        "cursor": {
          "ref": "450396b7-3034-4186-9ed2-331797722950",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c200d347-40ae-4797-be4a-4bf92fb6fcf1"
        },
        "item": {
          "id": "c4b97079-2727-487d-a800-0465df910369",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01e062ab-90ab-4db2-b4f1-3fe9b15c05b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6e59c4-5d82-4113-a4e9-6a6f9185d00b",
        "cursor": {
          "ref": "eed488ec-a10f-4a53-bc32-98081a45d7ee",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fd448652-8f6a-4f35-8223-efe267efd02e"
        },
        "item": {
          "id": "ba6e59c4-5d82-4113-a4e9-6a6f9185d00b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "005f14b4-029f-4293-be53-cf92acb1eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace39742-3776-4f35-9758-0413c3037686",
        "cursor": {
          "ref": "b3fbcc2f-cc53-46e7-99c5-ffc6a3c5541f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ccce20d6-8c17-4a44-ac87-5b5ace82d31d"
        },
        "item": {
          "id": "ace39742-3776-4f35-9758-0413c3037686",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b0977979-84ac-4c11-ae25-7b90eb9eb2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c00f1bd-82f3-4435-8e2e-fed47fdcf66e",
        "cursor": {
          "ref": "7b696b77-45c2-4c5b-a84f-9306bc114012",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "75df6336-7da7-44c8-b4ba-7e98585f0ec5"
        },
        "item": {
          "id": "6c00f1bd-82f3-4435-8e2e-fed47fdcf66e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d04810e5-fcfa-48c0-92b2-836a2f8b56ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce496fd9-ed17-4f86-b2a7-c132229c95dd",
        "cursor": {
          "ref": "93e7d39b-4c24-4bbd-9218-abe730ebc1a9",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "54b2dccc-f4dd-4456-9a53-a100d0523279"
        },
        "item": {
          "id": "ce496fd9-ed17-4f86-b2a7-c132229c95dd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fe6438a4-689e-4b7b-b120-29256061bd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f6cd0e-d8b0-439b-a557-32ace4dfafca",
        "cursor": {
          "ref": "9891ee82-eb9e-43ae-a544-f3d39f82b486",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1068d293-56d3-4961-9b26-ac8be92ad504"
        },
        "item": {
          "id": "05f6cd0e-d8b0-439b-a557-32ace4dfafca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "adc84e50-1ffe-4958-b74e-3efdbedc81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27dde5d-531a-433a-a2dc-11ccc0629bc6",
        "cursor": {
          "ref": "d19bd6e5-d9a5-43ff-a323-7a5fee85242f",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7dc233f3-d182-4b0e-8aef-38262f471fce"
        },
        "item": {
          "id": "e27dde5d-531a-433a-a2dc-11ccc0629bc6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "716ff4cc-7c23-4902-8b11-2729780b70d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b080025-f182-42db-8937-3b4d2e7d38e5",
        "cursor": {
          "ref": "fc4211dc-bbc3-4bf6-a519-4a0a28ac5bcb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e24d7470-286d-432a-8f52-2dbe0fc405ee"
        },
        "item": {
          "id": "5b080025-f182-42db-8937-3b4d2e7d38e5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bad2c4d7-8044-4fd0-a7d1-225f2ea72a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63990543-b289-45ab-8f6e-58a3b789e596",
        "cursor": {
          "ref": "6b98b05b-a741-463d-978c-9d07d1bacdb1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "39b9cbbd-1fa8-4189-a109-fab7899a5881"
        },
        "item": {
          "id": "63990543-b289-45ab-8f6e-58a3b789e596",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "31603e5f-cbc2-4d47-9fa1-981b5d973096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd48ca6-0913-4d56-a3f3-f0033c722fa4",
        "cursor": {
          "ref": "97bf6ce4-149c-4ef3-b922-f456250a3719",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "703fa74e-3040-4a81-8c09-dcbc9af5b3b1"
        },
        "item": {
          "id": "bfd48ca6-0913-4d56-a3f3-f0033c722fa4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "53804504-66eb-46a8-8f80-394d22b08997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5064635c-f0f1-444a-a89b-f925df5b978c",
        "cursor": {
          "ref": "11ed8344-ecba-4031-bd58-83023defc2f9",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ec668f91-dae2-4a38-b665-cc4efe7fc22a"
        },
        "item": {
          "id": "5064635c-f0f1-444a-a89b-f925df5b978c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72018e0a-e76c-4e85-a9a3-5ac6f52e7eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c155a26-40af-40ce-93f2-453a9ab82c0f",
        "cursor": {
          "ref": "763f1716-b899-4472-a2db-617957b0ff77",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f51a8030-b18b-4485-ad5e-302adfb9b693"
        },
        "item": {
          "id": "7c155a26-40af-40ce-93f2-453a9ab82c0f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "67bb52b1-9d92-4fe2-bd21-d5b27c412b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1674256d-f61a-4124-b602-40af4dcc7089",
        "cursor": {
          "ref": "712116d7-f9dc-4f4a-a531-cbd41e3b9e6b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b0ae64af-798b-452c-b516-791f153e9684"
        },
        "item": {
          "id": "1674256d-f61a-4124-b602-40af4dcc7089",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4921bfb4-772a-4b8d-965b-01e3e6f63635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a41eb7-1faf-433f-a100-61be702fd3ec",
        "cursor": {
          "ref": "90fea994-b9ba-4a8c-ae37-ad8daeb09b68",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c09e5298-26fc-4f0b-a58d-1996b2c60d52"
        },
        "item": {
          "id": "46a41eb7-1faf-433f-a100-61be702fd3ec",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "721ad2b8-3813-44f3-85d2-bba5fdaef56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4c4718-f403-4106-b115-db12bdbe896e",
        "cursor": {
          "ref": "f1ed99dd-0b74-4ff4-9a3a-315536b22eee",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "465826a5-4943-4f9f-85b3-8a21a0daab71"
        },
        "item": {
          "id": "dd4c4718-f403-4106-b115-db12bdbe896e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "728145ab-24a5-4bce-a56b-0b06aa0c93d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94259aee-7aec-441c-841f-6babe613938e",
        "cursor": {
          "ref": "a28242b9-1343-41c9-95b7-ddc990859e4e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "55f4982e-546c-459b-b5da-0967569b4483"
        },
        "item": {
          "id": "94259aee-7aec-441c-841f-6babe613938e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1cc3b196-0bda-42bd-8ae1-c7341a3098be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae28327-6fa7-4989-b9dd-c77c7237987c",
        "cursor": {
          "ref": "2613d439-70ab-4872-a54a-2b7f3205c9de",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a1fd4e03-7461-40aa-81bf-c797a055b6bf"
        },
        "item": {
          "id": "6ae28327-6fa7-4989-b9dd-c77c7237987c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c44f9b9f-a377-47c9-a0ed-5cdac17cf549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b0086-951a-45c7-a30c-991c80c5c950",
        "cursor": {
          "ref": "372d04c0-4f9d-4786-98d1-c9425dbc0ae0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "87efc3fe-f23c-4480-9f13-0916c293f4de"
        },
        "item": {
          "id": "060b0086-951a-45c7-a30c-991c80c5c950",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4304906e-71d0-4ff4-a56a-1d056c7f6688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1442,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44200fc-5de7-45aa-b579-a4bdf61c5b13",
        "cursor": {
          "ref": "ccc38d1a-ef58-4690-b315-9547b0b7714e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c71584fc-103b-40c9-adf0-00c9f0887f53"
        },
        "item": {
          "id": "a44200fc-5de7-45aa-b579-a4bdf61c5b13",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "196afef8-4d4f-4588-80af-4c99efe12133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1269,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd38418e-7444-41c7-9369-9aaa71f77cf2",
        "cursor": {
          "ref": "e1905057-332b-481c-a445-24b491841260",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b18fd89e-92e8-48bc-9846-08e92ff1e92c"
        },
        "item": {
          "id": "dd38418e-7444-41c7-9369-9aaa71f77cf2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3714af81-12a5-444b-b5a9-1f62ed2c04a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6604cd5d-68ad-4e81-b3ce-aaa9f65db643",
        "cursor": {
          "ref": "a6488485-984c-47e5-ad1d-cd33fcfda9f3",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c007da7-b9a4-431c-b3e3-3c6ed108acb8"
        },
        "item": {
          "id": "6604cd5d-68ad-4e81-b3ce-aaa9f65db643",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5d403a87-d931-492d-ab57-5b70981f733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4975ce-ecbb-4b28-ac57-a2e479d200dc",
        "cursor": {
          "ref": "77a678e7-6012-4069-b0e2-1ac5a497bdc0",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b9bb99c1-3b33-4fd4-9fa9-e313e35db524"
        },
        "item": {
          "id": "2a4975ce-ecbb-4b28-ac57-a2e479d200dc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "533b7661-1fa1-4681-b848-7453b4e75f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c4e139-a78c-4aef-9556-03ba0366651f",
        "cursor": {
          "ref": "e6cc0e6d-1ed4-421f-9034-e6fbf03e3d8d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6f8f1821-15e1-4ba2-83ed-3c94af615480"
        },
        "item": {
          "id": "23c4e139-a78c-4aef-9556-03ba0366651f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "59277874-e1da-4146-8769-e471ec8bc2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4578a54-b5d0-4977-8337-14e372eb1e61",
        "cursor": {
          "ref": "14208e67-ed44-4d61-b6cb-52d2b1b6c119",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "72a9db5d-96be-4741-8ab6-404815409084"
        },
        "item": {
          "id": "c4578a54-b5d0-4977-8337-14e372eb1e61",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "300a94f5-be7b-4e2e-86da-0efc861ea671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca17b5b-4314-4076-9a36-3b9e7703aea9",
        "cursor": {
          "ref": "f70a634b-52e6-469b-8f4c-b32a20accc22",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cd34fc43-394f-4709-8235-7093f92e17ef"
        },
        "item": {
          "id": "1ca17b5b-4314-4076-9a36-3b9e7703aea9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "13e0b8bb-f87b-4601-8a20-e2d3acc26a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4300fac7-458a-4201-b037-63c9c912ecb8",
        "cursor": {
          "ref": "86739bf0-f592-4db0-9c43-6054d79a9e84",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1f82c678-ce25-46f6-909b-576c777349bf"
        },
        "item": {
          "id": "4300fac7-458a-4201-b037-63c9c912ecb8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b444fd92-3f88-4bb1-9195-1d5026737f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52e318b-6eb4-4637-804a-6080bd8e1811",
        "cursor": {
          "ref": "11db1b67-dc3f-4d1a-b284-f0f714ecc2c6",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c97d5cfd-e0be-4044-9186-168f2f2eb6dc"
        },
        "item": {
          "id": "a52e318b-6eb4-4637-804a-6080bd8e1811",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "48167ee7-eb83-4e69-98b4-2bcc50b63c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bad726-3aa7-4408-b5be-f5e534bcf459",
        "cursor": {
          "ref": "c0b41321-0db0-475b-88e4-86f15901ea3c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "66fa2166-28cb-4e7d-a9f9-e2165a195d1f"
        },
        "item": {
          "id": "09bad726-3aa7-4408-b5be-f5e534bcf459",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "73d4e094-3b64-468b-9c7b-45bd18653437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313ba8b-c14d-4523-baf1-237e20218d9e",
        "cursor": {
          "ref": "d6016b42-0472-457c-bec9-e2764504b203",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "407802e5-ea27-4da7-948b-d419cdcb4f73"
        },
        "item": {
          "id": "5313ba8b-c14d-4523-baf1-237e20218d9e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "125a4a73-8fec-41e1-89dc-82c9c54a21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19fdb43-085d-41ad-8326-40da190743df",
        "cursor": {
          "ref": "e1bf6ee8-2b31-439a-b568-5f1da1973597",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3d9ae2d1-4bea-44ce-aa87-ddd1086bbc7b"
        },
        "item": {
          "id": "f19fdb43-085d-41ad-8326-40da190743df",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1c3b73ac-c03b-46ac-97c5-d007068fde80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7921278-aaed-4ddb-a534-3c35ebad1e4b",
        "cursor": {
          "ref": "e4d3f42e-1db9-4648-b319-9bd0de60db01",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a319f426-6c49-4bf6-950a-785dd7b7cfb2"
        },
        "item": {
          "id": "c7921278-aaed-4ddb-a534-3c35ebad1e4b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1225fefd-7af2-46e0-b547-0a596a39cc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f9d439-6580-4e22-84bf-e95c05ab80fa",
        "cursor": {
          "ref": "5650a42b-3f36-4f57-a682-0e526e7bd1b1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "28ed5396-e23d-4174-bf63-5059aa438fda"
        },
        "item": {
          "id": "15f9d439-6580-4e22-84bf-e95c05ab80fa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0f62afe9-058c-4d96-8f21-9c8bf8d98afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed03ae5-ad19-499e-b344-a4e83d67bbbc",
        "cursor": {
          "ref": "3e9ced8b-1381-4bd2-8d69-1ca8a7d01cdd",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "046c6a82-a8ec-4b88-86de-ea8a0f1da5d2"
        },
        "item": {
          "id": "4ed03ae5-ad19-499e-b344-a4e83d67bbbc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d9000d9d-c164-4502-8cc5-8f5c3ffa5987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7abfbe1-a660-48e4-af58-e11e7694a351",
        "cursor": {
          "ref": "d61578d7-6ebc-4b9c-84ce-c9a24244af69",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "30832a46-be15-451a-93a8-734de86cb7c7"
        },
        "item": {
          "id": "d7abfbe1-a660-48e4-af58-e11e7694a351",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "48bd8d98-2456-4fba-9b36-68af9795b3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e62eee-e4ad-4d99-8c5b-fbc6f946f82b",
        "cursor": {
          "ref": "41031f46-9eae-46b6-b857-961b0fcc9eb4",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "742ddc33-5b3f-44c5-9cf3-af34b33401ee"
        },
        "item": {
          "id": "16e62eee-e4ad-4d99-8c5b-fbc6f946f82b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d77ea411-d05d-4e48-81f6-f561f60fbf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d567c80f-2903-496a-8a34-7c740b37798e",
        "cursor": {
          "ref": "cd30afd2-9dc1-4f4c-80e4-3319a9c29863",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "665ef499-8a7c-435c-ac2e-3c03b4ea1661"
        },
        "item": {
          "id": "d567c80f-2903-496a-8a34-7c740b37798e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "35383229-11d1-49d7-b342-9e985afe5862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48856a5-4514-4715-a49c-fff64deef58e",
        "cursor": {
          "ref": "74c1bdda-05ee-44d3-86ec-553a60edf4e7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "492663b7-8bbb-47ec-9a7d-e0e85caa15ee"
        },
        "item": {
          "id": "e48856a5-4514-4715-a49c-fff64deef58e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6cf0ba77-471e-4713-93f2-e84218a72cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428816cd-666f-4e5a-9a4d-c147a79ec4c6",
        "cursor": {
          "ref": "42e7975d-39c6-4c33-a93a-c95b80c76a60",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2e4f4e82-2cd4-4673-a511-ed5c5369c939"
        },
        "item": {
          "id": "428816cd-666f-4e5a-9a4d-c147a79ec4c6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fa40f048-840f-438a-bf1e-8ae15965ecb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895f3c02-e8ac-4ab5-9d71-642e4da42f4a",
        "cursor": {
          "ref": "873c3fae-44d6-4388-8621-2fadefdbaa33",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "067e5080-0058-4004-9626-64315beeaa13"
        },
        "item": {
          "id": "895f3c02-e8ac-4ab5-9d71-642e4da42f4a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f5de9ea5-dc83-4d13-ab99-c396c9ed1c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d918583-dcdd-40ec-bb5c-28ca48a9004f",
        "cursor": {
          "ref": "a713a519-8ed6-47cf-8389-ee43b9a7d615",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cf480e59-49dd-451d-9548-ec3839191421"
        },
        "item": {
          "id": "5d918583-dcdd-40ec-bb5c-28ca48a9004f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e829422c-69ba-4ef4-960a-8f0a6edb1182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b333367-53e3-42cc-a169-530889a94a06",
        "cursor": {
          "ref": "92edf545-2564-425f-be3a-ece0f1dc930d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18fd32d9-4fa8-471d-9673-6c8d29667e24"
        },
        "item": {
          "id": "3b333367-53e3-42cc-a169-530889a94a06",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e9d3faff-542f-4e9e-aa09-e0e8ee18347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3135a4-f1ca-4c15-8279-ae59a957a2f9",
        "cursor": {
          "ref": "04b7c54a-15d1-4ee0-b910-ffa097b749a3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9c29a7a0-40ac-4a4f-a95a-29ccd1760020"
        },
        "item": {
          "id": "5c3135a4-f1ca-4c15-8279-ae59a957a2f9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ecad9f10-6182-40c3-bdf9-9acde1a4bf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bc05f2-2582-4e71-98ed-a03dd53b79b8",
        "cursor": {
          "ref": "5045c8a0-f2e0-48f5-a831-7b6f859cd670",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c5d3d5f-46d7-412b-a96a-219b658d3dbc"
        },
        "item": {
          "id": "d9bc05f2-2582-4e71-98ed-a03dd53b79b8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "120520cd-5aec-410c-828b-7b6364cb356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7336b3-85b7-40bb-895a-d2c347b90a96",
        "cursor": {
          "ref": "a4d225e0-c923-46fe-93cd-7a76dbefa1be",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c79f9e99-18b4-445f-8f08-53eb12d964fe"
        },
        "item": {
          "id": "cd7336b3-85b7-40bb-895a-d2c347b90a96",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d7f9de0e-f079-4712-8111-c56a34610759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1133df16-afdb-4122-ae33-0e32a1d0b6dd",
        "cursor": {
          "ref": "1ea226c5-bf76-4d41-86ef-6e986fbb8d82",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2e7e2f94-e606-4ba4-a4f4-f2097ccf58f0"
        },
        "item": {
          "id": "1133df16-afdb-4122-ae33-0e32a1d0b6dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "280e8acd-6752-4afb-9814-ddfeea30f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668821e1-74f1-47b4-9fa7-87604dc5fa82",
        "cursor": {
          "ref": "f8265a8c-4845-4e80-825f-da4ae5ccd464",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8e6f6b1-6fbb-4fb3-a5e8-5f42c805fb80"
        },
        "item": {
          "id": "668821e1-74f1-47b4-9fa7-87604dc5fa82",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "337784e0-49f9-4cfd-8990-ba229b36796f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2875bd29-9f42-41a2-a268-68d00f6fc42f",
        "cursor": {
          "ref": "345b05db-31d5-4cbc-b097-66ff6d4c96df",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60b84b05-fc84-4d4f-a010-c818d6f448c3"
        },
        "item": {
          "id": "2875bd29-9f42-41a2-a268-68d00f6fc42f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b693ca2-9b76-474e-bc39-e524619f6475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7e04dd-2a5c-4575-89f9-6de261d3b2a2",
        "cursor": {
          "ref": "816a9424-1254-4bc8-8957-5e062fa67edf",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5b5794f9-f4ec-4e41-b76b-bba41dca225a"
        },
        "item": {
          "id": "2d7e04dd-2a5c-4575-89f9-6de261d3b2a2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3739e6f4-4090-4d56-ab3c-f63050e2e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf338a4-3de9-41b4-9433-982317f91d51",
        "cursor": {
          "ref": "5c6efbe1-7296-4ded-b236-6e912a017a61",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d5932a8-75a1-43dc-b17a-b7255600582e"
        },
        "item": {
          "id": "bdf338a4-3de9-41b4-9433-982317f91d51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "15278c8f-5bcc-4bae-bd3f-dc3bd92bcb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a6637-9b76-4d2b-b31f-4b5aacb1fff8",
        "cursor": {
          "ref": "2bd77d03-f5ca-48e8-8b73-bd8382c059ae",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4056d7c9-dbda-40d7-9703-95087e91dab5"
        },
        "item": {
          "id": "054a6637-9b76-4d2b-b31f-4b5aacb1fff8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c9a4fb5b-500f-4ef2-b434-8e493c0ed2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c66268b-6ed3-435d-a79b-dc55c05d46c0",
        "cursor": {
          "ref": "0ce7cefd-387e-4a65-991c-48c8aa138f77",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d580d6bc-872e-4ff5-869b-af3820f161b5"
        },
        "item": {
          "id": "3c66268b-6ed3-435d-a79b-dc55c05d46c0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ea6ce02-7899-47ef-8cb9-fc0b9c048400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d6d686-d25f-4cfe-a3f3-1148fcc42cb4",
        "cursor": {
          "ref": "1f654754-bcd1-4cbf-b313-883d6d224546",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38582bfc-def5-48aa-9613-45f248e5df27"
        },
        "item": {
          "id": "97d6d686-d25f-4cfe-a3f3-1148fcc42cb4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc64db96-af54-4ac0-9a7d-1dd2e4ab085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840e35df-540b-47e9-86bf-2557f837b5cd",
        "cursor": {
          "ref": "7a143aa7-a82d-42ae-ba34-15578c160393",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6048851b-13ca-4f5b-a2ef-8957f65cd553"
        },
        "item": {
          "id": "840e35df-540b-47e9-86bf-2557f837b5cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9f14229f-d9cd-42c3-b098-30b3d8f075d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757c330-854c-47bc-829c-ebdac6f2aee2",
        "cursor": {
          "ref": "178a3b6d-c7ca-476b-9fe1-564e743b117b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "99548b8a-2972-4414-babd-8714fbf7e2ae"
        },
        "item": {
          "id": "9757c330-854c-47bc-829c-ebdac6f2aee2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c134baf5-8fb9-4922-b57f-8f8f5a972f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32a9c85-96f4-4563-94be-ff0826ef77e7",
        "cursor": {
          "ref": "2d25e562-1737-4297-b184-fbbca68c4629",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d8f481c8-c960-49ea-8b53-0be43be3aab3"
        },
        "item": {
          "id": "e32a9c85-96f4-4563-94be-ff0826ef77e7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6985f2d-6c0e-470f-81fe-e5e843934cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d29a163-7387-48c6-8b4b-fef10d05d7ef",
        "cursor": {
          "ref": "477ec4d3-eea9-4232-b65f-13b3e48f12bc",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c578f5a2-5ec5-49ca-9d7d-2e544cb1b1bd"
        },
        "item": {
          "id": "7d29a163-7387-48c6-8b4b-fef10d05d7ef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2927afe8-a99d-4eaa-8741-147d671ca43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a2990-5f3a-4151-aec5-8dbf99236346",
        "cursor": {
          "ref": "6f04bfbc-0275-4c4c-9b45-1c626fafc6a0",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2e625496-4c9e-49d9-92d9-8a43c57daa60"
        },
        "item": {
          "id": "994a2990-5f3a-4151-aec5-8dbf99236346",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ce017191-34cd-4e4a-8562-95257a64a170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928483b1-ccb8-4989-832f-2324864c3c5e",
        "cursor": {
          "ref": "2573f8ff-0cf6-4726-8377-ad20cdfe401e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c015ed01-a353-4ae2-8f47-12705bbf737e"
        },
        "item": {
          "id": "928483b1-ccb8-4989-832f-2324864c3c5e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "84291614-3e2d-4c47-94dd-5e337b2fa374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280dfc0d-017a-4102-bc04-d1a61ba14d6d",
        "cursor": {
          "ref": "c4bebc6b-955f-4eeb-b717-8c66e5ae2a82",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4964c020-d230-4a50-84cd-72b3312aff80"
        },
        "item": {
          "id": "280dfc0d-017a-4102-bc04-d1a61ba14d6d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "374849de-2117-41f3-b8ea-176efee3e195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef5491e-7643-4eab-b0e8-239ddbc057c1",
        "cursor": {
          "ref": "0a794ba2-4234-4058-a125-9a99d86b7458",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "46357371-c913-47b0-987d-97923607379c"
        },
        "item": {
          "id": "cef5491e-7643-4eab-b0e8-239ddbc057c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cbb591c4-e1d7-499c-88e3-2300c6c4d246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c9cb04-2b32-413e-a0da-71bfe31d1752",
        "cursor": {
          "ref": "3467105b-fe70-4bd8-851c-8da2b421011e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4b78c543-8193-43d6-9a78-10e102f829ba"
        },
        "item": {
          "id": "42c9cb04-2b32-413e-a0da-71bfe31d1752",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d152582-a463-499f-993b-4f47581b032d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f55b7-6c95-43ad-910d-3258da94aaaa",
        "cursor": {
          "ref": "a4e894be-1797-40f3-be41-49909fd6c16c",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e4659a0-9cee-4f56-bbd6-6f2ed5b6cd32"
        },
        "item": {
          "id": "fe4f55b7-6c95-43ad-910d-3258da94aaaa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0cead161-0cff-4500-bcf3-a6f1c60b10d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee3629f-949b-40d3-a418-3d7558952151",
        "cursor": {
          "ref": "1ee017ed-ad01-4965-8db5-7e70c2ba56d0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "67d86903-2015-4d3a-9907-c0b78de73e9d"
        },
        "item": {
          "id": "0ee3629f-949b-40d3-a418-3d7558952151",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b95f4d78-ec1e-40ae-8c67-7c1d4eca94e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bafbcb7-380d-4cd5-844d-1ab65f62038a",
        "cursor": {
          "ref": "3e67b5c2-856a-4db2-b955-f6527e6b44fc",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1c95723-51fc-4c10-bbda-a4fba6f62399"
        },
        "item": {
          "id": "9bafbcb7-380d-4cd5-844d-1ab65f62038a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "59304ac7-7eee-473d-91d1-598f58d157da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b351a8c7-ecf7-45db-81a9-aa9638b00c69",
        "cursor": {
          "ref": "875fbfa4-15a5-4b6a-aa98-47e2761db604",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "17c379f8-343d-4ceb-b857-9673a689b794"
        },
        "item": {
          "id": "b351a8c7-ecf7-45db-81a9-aa9638b00c69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d301e75-99c5-47fe-96fc-7402f762915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b0863-bf04-422f-a508-6000fd920a58",
        "cursor": {
          "ref": "8fda29cf-0fc1-4bdf-be1c-d0b2c60681fb",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2216c6fa-64f3-46fd-9d4f-d0de68e89107"
        },
        "item": {
          "id": "d28b0863-bf04-422f-a508-6000fd920a58",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "43fc81b9-e334-45a1-94d2-dedb1bcb3f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e964772e-306b-4193-bf16-d8e2e3df4988",
        "cursor": {
          "ref": "3d4cfae4-6de7-490d-9644-0caef52344f1",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6ce5725-2f37-449b-ae49-c7f5d3fd34c5"
        },
        "item": {
          "id": "e964772e-306b-4193-bf16-d8e2e3df4988",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c956b8ad-294e-4397-aa2c-613bba14d1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ca66be-68ce-40b4-9cc2-264cda99e349",
        "cursor": {
          "ref": "18464e78-c205-47dc-aec0-b43181736427",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8fea2a4-2892-4656-9035-57fb3ad605db"
        },
        "item": {
          "id": "c4ca66be-68ce-40b4-9cc2-264cda99e349",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c3344622-57b1-4613-9a65-9c3b97d6d9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5653f6-a244-4864-873c-0bbd6c704e39",
        "cursor": {
          "ref": "7725211a-2655-43f5-ae5a-91455e55636a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7d268784-dff9-45db-ab04-ba45dc6676ad"
        },
        "item": {
          "id": "2f5653f6-a244-4864-873c-0bbd6c704e39",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5accb29d-56c1-4a23-9c10-6e21196d7774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336fe9a2-f339-47b8-8c45-e54c5d0811a3",
        "cursor": {
          "ref": "99a5d2e8-5154-4e61-81df-fd7173669729",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2eb20198-58f6-4249-9684-7fe29d436fcc"
        },
        "item": {
          "id": "336fe9a2-f339-47b8-8c45-e54c5d0811a3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b2a6460a-1402-4481-a97c-e6213222134f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270aa12-d216-48c2-b899-7167ebdc7ef4",
        "cursor": {
          "ref": "da60ca28-e412-43f2-abd9-7701a07ba1a9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c10e9e9-4191-4ee7-baa6-b222c1722463"
        },
        "item": {
          "id": "0270aa12-d216-48c2-b899-7167ebdc7ef4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b38b3e6a-9210-49bb-8ef0-a1e7d7593094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0158ccf-5e4c-4050-a777-eb450f4a8e8b",
        "cursor": {
          "ref": "a4366f03-7405-4fa3-8da6-ad1f9e3f0259",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f4143af-2568-46f5-bbd4-444db172d7f0"
        },
        "item": {
          "id": "b0158ccf-5e4c-4050-a777-eb450f4a8e8b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "561ab150-14b9-4110-a614-2fceca9b7877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45ae00-cf25-47a9-911c-ee612acb9210",
        "cursor": {
          "ref": "f5823860-eaf6-4770-a844-88b37b120700",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7f2f0d89-0cc9-4507-9354-7a3452013fcc"
        },
        "item": {
          "id": "0c45ae00-cf25-47a9-911c-ee612acb9210",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a42b3c0e-08dc-4667-a7d1-1318c2647a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9e473b-2185-4256-8ca7-d4170155d8f1",
        "cursor": {
          "ref": "b856d0fc-c2b4-48b0-9bd9-c1d8d6a982e1",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6ed300e3-2d65-4170-9fda-4a8d902e1881"
        },
        "item": {
          "id": "fa9e473b-2185-4256-8ca7-d4170155d8f1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "161aeace-cb15-450c-a141-1862d235146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434b7eb-5518-427c-8fa3-137bb3624fc7",
        "cursor": {
          "ref": "eb4b4e85-1479-4687-8d6e-2a7b3f19fee0",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c1332ff0-9aad-4fa2-9e0c-f5ce22fb613d"
        },
        "item": {
          "id": "5434b7eb-5518-427c-8fa3-137bb3624fc7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c6c9a785-f230-493e-a895-402d245680b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee9ddb9-b036-46ec-b221-bdeea05392f3",
        "cursor": {
          "ref": "db56b247-5768-4ec3-b4e6-3bb871b6c439",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bea18c2a-8cb2-4ca5-af80-d7349c25b68c"
        },
        "item": {
          "id": "eee9ddb9-b036-46ec-b221-bdeea05392f3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24258cf7-1116-4a22-be85-bc34c2b75fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240ee2dc-5f6c-40c5-a64d-fff5a5c1c49e",
        "cursor": {
          "ref": "b1352f14-fc65-4c87-a0b0-9a85fbbf2897",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4180b4bc-e707-438a-88b8-9a8efd7360c9"
        },
        "item": {
          "id": "240ee2dc-5f6c-40c5-a64d-fff5a5c1c49e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d7d6d21-4e5d-4e43-8024-bc229159e860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c202c-66f8-4e1c-9d6f-639ac53135c1",
        "cursor": {
          "ref": "6529da0a-9c43-4cca-a91e-3f86f7f6ebc3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cc598ea0-50e5-4315-b328-bd9a1a0daef0"
        },
        "item": {
          "id": "1c1c202c-66f8-4e1c-9d6f-639ac53135c1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4393cd93-a3a0-40fb-9ebf-d84bc7298ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8011203c-87ad-4fe2-bde1-55a46f82e004",
        "cursor": {
          "ref": "ec90fc27-67e4-46d0-9952-150ebc1191fb",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29f37f38-24ba-4508-8884-aa9e04289478"
        },
        "item": {
          "id": "8011203c-87ad-4fe2-bde1-55a46f82e004",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9be8d4da-5f74-4702-b7f4-501e8538f951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940b0d7d-70aa-43c0-8919-6a0fbefa5113",
        "cursor": {
          "ref": "b6ee68f0-2002-4894-9468-4e9cfd29d13d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "52dd1f84-caa8-4be9-8f7e-c6c1732719cd"
        },
        "item": {
          "id": "940b0d7d-70aa-43c0-8919-6a0fbefa5113",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56f011ee-f459-4f6c-b006-8f430b597a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a91f38-d869-487c-87c3-0205f1b456ca",
        "cursor": {
          "ref": "b85ff3b9-0b2d-4a25-912f-9e6730611a3d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2f5377c4-ddc5-4def-be23-2e67eac255f5"
        },
        "item": {
          "id": "39a91f38-d869-487c-87c3-0205f1b456ca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d245af07-2671-4298-83c2-1ca4bba58f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a18cab2-d2da-4adc-b726-85bcb9ac2ec5",
        "cursor": {
          "ref": "0569b6d5-780f-473f-93d8-8eaf93bc72ca",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ae9f18f-aec3-43f7-8165-6e8058a7fc8b"
        },
        "item": {
          "id": "8a18cab2-d2da-4adc-b726-85bcb9ac2ec5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1153bc66-5bab-4f33-ba67-a76bfd3839af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098e0dd4-d327-401b-a9b6-ad4049803594",
        "cursor": {
          "ref": "5b15a952-09e7-47c4-aa21-f380ec46dd88",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0b9d3552-2978-4f04-a307-407101d3b8d1"
        },
        "item": {
          "id": "098e0dd4-d327-401b-a9b6-ad4049803594",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a0d45bf0-ffff-4dde-9ab6-320e9c427ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0b7da-352c-4d24-8f94-a0cbdd0440db",
        "cursor": {
          "ref": "b324bc47-1dc6-4381-8b2e-0ba1fae7d91e",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "be765a9e-f430-425b-85f5-c7b5043e433d"
        },
        "item": {
          "id": "62e0b7da-352c-4d24-8f94-a0cbdd0440db",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "06fa9ac0-44fb-4509-87db-22a64726ddba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23d6f63-49d7-4da3-84d1-33731e520361",
        "cursor": {
          "ref": "a5630fe8-b93e-4952-ba19-7c970a91c76c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "44821380-c939-4145-8c90-570befd9fc1b"
        },
        "item": {
          "id": "e23d6f63-49d7-4da3-84d1-33731e520361",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a8714695-b052-44fe-805d-62df1cbd0482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7145df8-eb40-45a6-8633-d511413eb9e4",
        "cursor": {
          "ref": "23551eb2-3cc0-4728-ba1e-90bc00d8c2b3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0078d32d-c5d3-441f-abe7-22b84515e3ec"
        },
        "item": {
          "id": "e7145df8-eb40-45a6-8633-d511413eb9e4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd12121d-b3eb-460e-94e6-45e5af58d206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46b41d-581e-41f7-a3db-50be7657dd8f",
        "cursor": {
          "ref": "4db76ff9-9df4-40cb-abac-dc4a0aea51c7",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8cce6403-71d3-419d-93af-47b455641f5b"
        },
        "item": {
          "id": "2e46b41d-581e-41f7-a3db-50be7657dd8f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4f0813b5-3c33-44b3-b123-b347756fda68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b05a7b9-7ff5-461e-8e65-4f7ed3295a10",
        "cursor": {
          "ref": "79b8399d-5302-44cf-b967-efe7f4d8da8b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "af861466-1f06-4102-99cb-76bae6493b47"
        },
        "item": {
          "id": "0b05a7b9-7ff5-461e-8e65-4f7ed3295a10",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d957e77a-76de-4951-ac6f-e28f7c56d594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38651bfd-9791-44e7-85ce-c8a8db876b91",
        "cursor": {
          "ref": "6524dc97-ea1c-4f3d-8dc7-90e000a495ab",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5da4c6a0-4ba2-4de3-a83c-a5aa54ee8e35"
        },
        "item": {
          "id": "38651bfd-9791-44e7-85ce-c8a8db876b91",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6f0cf530-bd9e-46c4-83ca-7e3ebd3a0203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55be27fa-37ad-47f2-b190-11ca6d1ccbda",
        "cursor": {
          "ref": "666423c7-f039-41a0-9739-28df2234dce1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7217618b-0ac9-4b2f-b578-b1f37e8fe265"
        },
        "item": {
          "id": "55be27fa-37ad-47f2-b190-11ca6d1ccbda",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6c57e0da-8d22-49a4-aaab-0b00ba63352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752d0708-9a57-45a6-ac2d-b1c43315b33e",
        "cursor": {
          "ref": "2ec4dd4b-d54a-4453-9a6b-9ea002da4dd8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f5e7a3fc-b40f-46d6-9756-17f080773313"
        },
        "item": {
          "id": "752d0708-9a57-45a6-ac2d-b1c43315b33e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b4b0343f-9c50-4b27-80c7-30ed7092851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bfb746-93f1-4587-aaa4-39367fe8691a",
        "cursor": {
          "ref": "78e0f7f9-3848-4fbe-b2c0-3c4ea44dc2bd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "df8c3604-519b-4871-a3a4-be676ac6ee31"
        },
        "item": {
          "id": "e4bfb746-93f1-4587-aaa4-39367fe8691a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0abad737-c679-4586-ae44-4b03bbabcf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bd08a0-c26e-4835-b295-ab72ee1ef67c",
        "cursor": {
          "ref": "7bfbd118-9a8a-4745-a548-73194f810f4d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5772ed25-1ffe-4b9e-a66b-0a3500bd495e"
        },
        "item": {
          "id": "24bd08a0-c26e-4835-b295-ab72ee1ef67c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "859338c2-7be9-464e-a72a-d9049d224d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf5f13c-7090-4839-b736-ec0943a69777",
        "cursor": {
          "ref": "7850419b-0c48-4cb4-bb90-9bee12c7259c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ee4803a-e7e9-4980-b1c6-669e09937767"
        },
        "item": {
          "id": "4bf5f13c-7090-4839-b736-ec0943a69777",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9b7a006f-38b1-49ea-95c3-17172d7ae7bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a845ea-24e5-44dd-acb2-9042e1d32d6f",
        "cursor": {
          "ref": "37462f55-972d-48a1-8e1e-15fafa436701",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "58fe1a47-62f2-417f-b054-21dc241aecb7"
        },
        "item": {
          "id": "e4a845ea-24e5-44dd-acb2-9042e1d32d6f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "72f36f81-1f09-4547-b8db-f82f74367b8b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e116be9-955a-40fa-93ea-43ec34c38c98",
        "cursor": {
          "ref": "c8c17e8f-208e-4fb2-9318-31e5a3b9b1d7",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c320ae8a-4d5b-4409-b66c-3effe0c8b892"
        },
        "item": {
          "id": "9e116be9-955a-40fa-93ea-43ec34c38c98",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "24abb956-c7a8-471f-a136-70742370fbf8",
          "status": "OK",
          "code": 200,
          "responseTime": 613,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3e3bcc-e842-4eb7-873a-2ff9130d137d",
        "cursor": {
          "ref": "178ace03-79b7-4930-a0f7-ff4203e81602",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c993008-2c67-4322-af98-a577ae172bb1"
        },
        "item": {
          "id": "ac3e3bcc-e842-4eb7-873a-2ff9130d137d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "93eacd3a-2a60-415d-92ff-83e4a0f2437b",
          "status": "OK",
          "code": 200,
          "responseTime": 2379,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83f38e-a8f0-4076-8f56-d66663aecfe8",
        "cursor": {
          "ref": "c4a3fde6-da60-4bae-8e40-565a635c7072",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c109999d-f2b3-41ac-8971-46c35088c0b5"
        },
        "item": {
          "id": "0e83f38e-a8f0-4076-8f56-d66663aecfe8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6ea6787e-da88-4979-a6f3-92d63316238e",
          "status": "OK",
          "code": 200,
          "responseTime": 2405,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
        "cursor": {
          "ref": "cbb7a864-d618-4f03-ac15-c9850c459d1d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b7162508-454f-4a90-b4e1-6aaceb9d1d92"
        },
        "item": {
          "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8ffcd7-bf63-45bd-a589-a06eb215d3d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
        "cursor": {
          "ref": "cbb7a864-d618-4f03-ac15-c9850c459d1d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b7162508-454f-4a90-b4e1-6aaceb9d1d92"
        },
        "item": {
          "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8ffcd7-bf63-45bd-a589-a06eb215d3d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
        "cursor": {
          "ref": "cbb7a864-d618-4f03-ac15-c9850c459d1d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b7162508-454f-4a90-b4e1-6aaceb9d1d92"
        },
        "item": {
          "id": "a3e2d78c-ef66-46e8-b7ba-61cf6a0cffca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8ffcd7-bf63-45bd-a589-a06eb215d3d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae71090-96c9-47e9-99c9-5679c31d98b7",
        "cursor": {
          "ref": "e14043e1-730c-4078-a479-d4c9c1de1dbc",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f0a20ba2-7608-4a9d-b4e6-6a8d213e7332"
        },
        "item": {
          "id": "eae71090-96c9-47e9-99c9-5679c31d98b7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "95b3fc4b-333a-4ff8-97f0-fe4129c6f36f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 379,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d6301e-9f3b-481f-a616-a1d91ec1fef8",
        "cursor": {
          "ref": "d6059a04-4f90-4d8f-9003-e6586ce9138d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f9b4b7a-4136-4bd1-84c1-0897e00e8108"
        },
        "item": {
          "id": "33d6301e-9f3b-481f-a616-a1d91ec1fef8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "82e13afc-1411-4e1a-92e0-c0aa1edd675b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d6301e-9f3b-481f-a616-a1d91ec1fef8",
        "cursor": {
          "ref": "d6059a04-4f90-4d8f-9003-e6586ce9138d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f9b4b7a-4136-4bd1-84c1-0897e00e8108"
        },
        "item": {
          "id": "33d6301e-9f3b-481f-a616-a1d91ec1fef8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "82e13afc-1411-4e1a-92e0-c0aa1edd675b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff9713-11a0-4d6a-ae8d-ce531ae4d1b6",
        "cursor": {
          "ref": "8d0f518d-de37-4e1b-a04a-13052bc77a6c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "987ad416-66d3-47bd-8160-4419769a35c8"
        },
        "item": {
          "id": "dfff9713-11a0-4d6a-ae8d-ce531ae4d1b6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "de1ba3bc-2fd2-4349-bee6-3095047101ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd4555-fd7f-40b8-be54-47ff5aa2a958",
        "cursor": {
          "ref": "e92fa050-9a4c-4a00-bdc9-a9f4544239c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e0ebaa1-80f9-4c5e-83df-4b93b6048886"
        },
        "item": {
          "id": "c5fd4555-fd7f-40b8-be54-47ff5aa2a958",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afc210ed-adc2-4656-8002-ed9bc9ee7553",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd4555-fd7f-40b8-be54-47ff5aa2a958",
        "cursor": {
          "ref": "e92fa050-9a4c-4a00-bdc9-a9f4544239c6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e0ebaa1-80f9-4c5e-83df-4b93b6048886"
        },
        "item": {
          "id": "c5fd4555-fd7f-40b8-be54-47ff5aa2a958",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afc210ed-adc2-4656-8002-ed9bc9ee7553",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2e13b9-75ae-42be-aeb9-196095c54a12",
        "cursor": {
          "ref": "2d69f769-db59-4cd7-9007-83217ba28147",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "74cab542-125f-4faa-9ac7-2c89d4e17d62"
        },
        "item": {
          "id": "eb2e13b9-75ae-42be-aeb9-196095c54a12",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "acc203de-5c4a-4559-b9fc-b2a47c660d48",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 583,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}