{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7a888dc4-7b3f-41a9-a1d5-143f116696a0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "abacbf02-627b-433b-81cb-2bf8b0b0f7d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c45773e-6055-48ae-9a46-ac79104f2614",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b5ce9bad-a4ad-4caf-bd03-a72f406e2c37"
                }
              }
            ]
          },
          {
            "id": "ad519ea9-66fa-450f-b2c4-20a7a2db605e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23363a3d-534d-4b4b-9619-d6f06e05010a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7907b5fb-7362-41ec-9d5a-cb3ab5abc833"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d15e67bc-70e6-478f-a71c-9d6ac9388efd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "29c8d0f0-f58e-431c-8fa6-b7c80fc10ac7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d4bd16c-a50c-4a94-8ff1-24b79620e83a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "320248ee-3918-4971-9bd7-72438df092a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f797e5e4-da87-4688-984e-863645ca5ad0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0dee82ca-34cf-4eee-876c-1077983f2b7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "621fc60b-c2dc-45b2-a207-1a4cdbc876ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9e17356-6761-46be-8ee6-46924546e0e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23711f6c-3e64-4493-86c2-23fd4e9d2a6d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aefb39d4-3a4e-4733-aab4-7c68631cc1dd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0dab54c9-a4d3-4e73-a0b9-c8b97932aa23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2736d5c7-78d2-4c06-836f-748e3f7c6813",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5306cb1b-6cd3-4ff3-8f13-5c43135bac01"
            }
          }
        ]
      },
      {
        "id": "b83dff59-0205-4fcc-afcd-bf52776246a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aaf3519b-3719-44d0-b385-7538b820b769",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5b9d227-3bdb-4ae6-a861-5e93488f0f3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b61b743-f631-423d-a56b-60f4024864d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26375a0c-3dad-4e69-9e7c-e206b450af4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb7c1060-818f-46ce-b915-ebcb9f21588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aadc130-cdfe-4b08-851e-069c6277d9e1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f70a2-b121-4044-9f72-21d34da9b37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed19be2d-9de3-4814-ab23-4737ec6cb35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d696d002-dc81-4058-b9dd-9dc466f73fa1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97ee2ac-56de-4be1-bb5d-66081a85d1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91882129-fcf9-4d58-8c13-38437c607463"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3280c57c-2add-49d0-8bc8-8abe8c09c4ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bb1d97c-f1ee-4938-a379-3a5769234b11",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b643ab68-a3c5-4e97-a254-14d5f0721f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d616888-b6c5-4bf5-8717-0f1abc767d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeaf18c-5c29-4756-b29d-609dca02988e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927f04f8-5e14-4e6a-874f-dc6b5153d5b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "796bef16-9842-47f9-8a40-c5f302446a8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9363174a-258d-40c3-9e88-4751c1c83900",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cab9527-0050-48d2-b345-54c8be426bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e9529c9a-0744-4703-a97e-ee4555c503d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2414f442-a801-4bfe-b255-6b9783165c73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eac369c1-845f-42a7-9d7f-1d45b1fe7df0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bac1aff0-7572-4ca9-a311-55e72ed73752",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "010c7061-ab27-4977-95b3-92b3dfe9d848"
            }
          }
        ]
      },
      {
        "id": "d253101f-9cde-4dca-9075-196c0192be29",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "57517776-0c39-4c5d-8ecc-cb0c823c28ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a6bcf46-bce2-4412-a4ba-e29596ae08a6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3ad4d185-7bbf-420c-83d9-0a1308cf6221",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03ce270-f77c-4480-a54e-b8b61abf4b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0398e5fd-13ba-4393-9266-2f925d46df71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e670226-d0c7-4738-9a4a-cd40f739eb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a389767-f6f1-4058-82ec-605111280307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f9c7eb-3176-44a4-ac53-52dd2998d32a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e63f8e-b3a9-4f6d-8ffa-ac44bf760c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6646b22b-a518-414a-b347-2398dfb3e176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648ebc54-cf4c-483e-ba0a-bce8eb677a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "844d3616-a101-44e3-800b-1f0c5dd6f6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c470fe8f-57b2-401a-aa94-9206f232aed3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc0e670-0e82-4a81-aef3-323b5f0c20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a548ade9-4aeb-4fe3-97e9-14a37a736ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6446574d-5c28-4e1d-8037-6fd62b81e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95a33cc-68fc-42e9-82a5-834862f48545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b0b1b-8073-4455-bbb6-885dea0c476f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f3b565-2130-4791-9221-e3329d5fe412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119a21c2-88fd-466d-be8d-e377449ffc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165852e8-0c6f-4fef-b7c3-796d5a70b993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1782ed45-a767-4f8e-8d9c-02cff78f8069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1609e02e-2eaf-469f-b1d8-22ce89d22e43",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce77bd-5b60-41af-959d-156dc87238fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a56a77-5f99-4bc0-978f-cef72a00dc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106a049-e024-49fe-8dff-a6ae91d3e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be3f0631-7b71-4173-b597-5750870fbfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2534ef64-9440-4be0-84f1-925f3d1c3be5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f234aec-4257-4a07-b2d0-179461594177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6989c9-3190-4e55-adcd-603f8761b36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03561a1d-67c5-47e9-a0a5-882729cabdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a147939f-6333-4ac7-bd7f-88d370d18807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42e41d0-9edd-4a64-9ead-debdd5f18393",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d300d940-962d-4cb8-93f7-ccfc73751f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76fe377-a843-4cb4-8dd3-4d9760da5df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f1919d-de5c-487e-90cc-0746afb6684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3eb535a-55f8-45fc-98fe-82d3b471d8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa0d02-853d-4729-a6a8-c597e457c17a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0912826c-7f78-45a9-9f2a-dd00dfbbae28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea736a05-46be-4e5d-97de-30212e53bbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38bdffd-e660-483c-9aab-c50efcc9de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c66eecfb-f627-486c-aa04-ce192987c635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c524d-456d-43de-bc02-998e8f9eb74c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56baab06-d663-4921-b115-5165d2841f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a330937-ea49-4077-8427-59620a7c51df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1150dad-e195-4596-aff7-5850becd256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70977ed4-2cdd-419e-97cc-6245cf5295ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd04888d-5ed8-4665-a3e6-8394efc74e58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1269a9f5-3cc4-4695-af3c-77323933a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e35bf9-9f07-45ee-9ae0-5e7eb8e41283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adbd62f-9250-4bde-b20f-32a8cc4aded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb445d9-65ea-4758-bf86-a81960d587fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98601126-0964-489b-a78c-c437548a1d79",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d852180f-1f01-49d5-a5c4-44d4d67f4bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62d1c05-ee76-47fd-9894-cea7a586aeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9550a6-6db8-491b-b229-56b7919ad794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca58c912-30c2-4e90-8b41-890e6738700d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cf65a2-3d16-4c44-b962-81e0c1b1c4bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b9cb3d-c0d8-46ce-9a9c-9a216ec034c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b22f184-2bb6-4652-8a22-29223f6c8a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c319af4e-98ab-4b65-9b98-db7518518f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f016820-8ea6-4a15-84ab-d6c7801803b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b7bae-6b24-441f-a74e-a37325387eef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a0bca0-ef75-4a38-a2bf-abac8af4ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e26fa-be25-4d8f-ab69-84f629748dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b37c30-0739-45cc-8581-f9bd61874b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f8e806-8ccf-4818-a786-f65256ba6c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591736c1-b154-4617-aeb0-6d43fe167488",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c81e737-2691-44dd-9f23-0386c1ae673d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5dc2b9-fba2-4ce0-a8df-405e7d5f7835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef91f52-4acf-427f-861f-e410ee8ff0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b22c332a-a07c-485d-ad84-60099bb9973a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ffd7be-38f8-40f4-8000-0002c9b50dcb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62e3cd0-7099-4722-bcd1-6e5a1c8c753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adb44d4-f916-4a3c-8f64-8eaea56b9647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e48038-0eeb-47cf-81d7-1caddfc20b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de9ed4f-676c-42d0-a36d-2b51819683a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676c2c33-378d-470f-99df-b116b47daf8a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569a6a0e-a01f-431b-ae8b-f46876af3173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b7aaf4-c3e8-4f5c-bc16-ee9d3cab7d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee0f403-31a6-4aaa-b923-e92bdf24a693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa5f38a-ab7f-4235-baea-cba3a2d02cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05eed09-0658-4998-9b95-81579164c621",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00548c44-7e01-459f-851b-0854e997a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be437faf-5211-4ec9-baa2-adcf824330fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca0939d-868a-4cca-98f1-00775fc5a45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99f8620-952b-4cde-b265-507e302f189f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a92f43-c6be-42c2-b123-4077ed5b912c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15b3137-7e0a-44c4-94a8-b4651032d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7327db-038b-4efa-bdf7-5c75be85caf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256cd185-78cf-4c93-8067-4062958bbb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6962b46b-05ca-4f29-b51f-45891d394556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2d4d82-87ec-49eb-8ff0-5b15304c18b3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836b761-1222-45ce-ac00-0a10436b2525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ac34e4-bbef-4712-a5ff-776bebac3da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6716575-9abf-476b-b346-b6b411e87631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "227b7d7d-0650-4d05-85ce-3ff6463e5efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef01cee-33f3-428d-8fc6-27730df298f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32677fca-f7b8-40fe-b15c-3b51946ad867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338b834d-85f1-4995-9944-6702c24ab757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c310947e-af42-4a65-a5dc-814b858f9c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35eeb66a-d368-468a-80ac-2792d5d34de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dcc6f2-15d4-4bc3-bbaf-e81983bf2e8b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399040a7-6c40-4040-9d64-5b1409953f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf5695b-e1ba-4cd4-bd8a-c5706b42cd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd11b8a-836c-4faf-a989-2896009e8e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d19566-c165-489d-a11d-470545d0649e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54f704a-f7a0-4de6-bb90-ead4605332b5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f46468-b9af-4775-a6e1-ccc929990c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76713207-1c33-4f27-bcde-ac0b59d2b648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11d1b94-84ee-4d32-a816-3be18cc9eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9798ffb4-5193-4709-88b0-9388e2c78201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da21d961-2e3e-4693-843c-6b89a15afaf5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f9efd7-ce11-451b-bdb7-7f550b649790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954e58db-922d-49d5-99cf-ae60825e92c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659007d9-5d46-4df2-b214-363f6875dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e922f19d-d078-4de6-8a6f-2dfad3894c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6abfb71-568f-401f-a666-3c0c777ea268",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7558e7-ce7b-42a4-a610-f6680a2babd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2d7b5c-b835-44f7-929e-54212cc0e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80e9d85-8547-400e-96e3-e8b289c8ff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aef0d07-ecfb-4254-b835-18147c408332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733753c9-2f86-4ad4-a05f-60e655294e8c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa797bec-68e7-4764-a777-ad1b75bcd457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbb677a-a644-4a3c-911a-afff01ee3df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf5194-a13c-408d-ac70-a9029adef07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "508f396b-73ce-442f-8864-e3472afaab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b9c878-a536-4d2d-a518-df3bb64b1a88",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764c0c3-5a1e-41e9-86aa-ba48da1714dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3ff393-a26d-43e9-b2b3-0217be278425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2fe834-03c9-4b76-b87a-986487b79e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fc7e46-12e4-407a-b6b2-411340021eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03843e4a-566d-4f9d-a807-fa884410dd2f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6f33a8-8e5d-4ef2-a7e4-8844bf48412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f0792a-15fe-4b21-a569-379a971e735d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4c7cb3-c780-47f1-bba9-d77621a2e184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a499745a-e938-4a98-b655-937d364077ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a75bed-16a4-4afa-a86b-9924add2b678",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baed247d-24a8-4fb1-98b3-9e87bd46b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259eb44c-680c-4439-a926-1622e1d583c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc613d0-8cc0-4033-b9d3-4ac1d8f25cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43df6124-2b4e-4937-a772-e9bcc4e2fba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87495ea3-0a1b-4f12-a097-889386a55d01",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285716f9-4518-4ea2-8cba-bb2939a69a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fead4a3b-10a2-4de4-88ba-15578b752a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6668a1-6c68-4a85-bd6d-b5b1bca06d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1420eeb-9a7d-442f-9ab4-6d53f269fcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24af41fc-4ac9-49c9-9bcf-b2b731053e2a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1c8681-9c48-4607-97aa-b1261e41a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccaaf418-a68f-4636-97a6-765b6b8f982f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beec2ca0-91fc-48e8-b20e-e45e74603197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8001aa97-56f8-4cca-a288-03f4a36c1e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc946448-d67e-48b2-b80e-1599830eadd2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e216416-6b3e-447c-a431-a8a37dcce079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01310274-f492-438e-bbbd-f32c1c4e4065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5e1fe9-a559-4469-9417-c6d946973b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb13fd4a-ee7b-4c3a-88e6-4a33138b0d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc69210a-3b47-4a71-b43f-4cb58d07bd56",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a022bf54-a616-4d98-99b1-431143d1962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a669f57b-338c-4853-9ffe-5304adff7f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6cb706-a5a2-4b09-8e42-36410029de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d996a1-fdaf-43da-98ea-a7b55f50a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5206a839-0323-4734-8d8b-9fdc097c5446",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19043d4-62f7-4046-8114-e257b9896883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce38cb-90ad-4c3b-ad37-5a1888b1a77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd32fa0c-c8f6-46af-95c1-ab9080b24c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e844ae05-6cd1-433c-a9a9-c4168165f0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91ef043-db39-49c4-b96e-3fc4882a29f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc80573-eab1-4b41-98db-35b9c2c30592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd33c5e-d814-47ea-b4ee-bef74862a812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be323599-5a1d-4727-aa65-512f3ea4d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc026ad7-5090-4956-9c0c-3ea8ef0d0e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd150b90-dd65-4588-88bd-dc15929db2d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840c57a-870d-41c1-8ca4-fec1bceb1572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403e7084-2045-4337-8fc6-9ef30bccf86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0328a0-2ab2-491b-abc5-10e72e0322f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3447a6-b76f-49dd-98b5-1b3289400f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a3f557-3803-4b17-add9-61c0eca51bbe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2481a34-1166-40ad-8ce4-7f5e767368f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aadf1ec8-e3b4-4f2d-b171-d1e02ad75cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547bf2c2-7d43-4e7c-bd61-df73a3fdd313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e081127e-411b-4ad0-9662-a3bfbf914b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e429b-546d-491d-978f-3e2396819ce8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810d5c78-7c5d-4f05-ab62-57116d223eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed76e977-afa1-4090-a515-9be632a38b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b965f79-781b-482b-9e2f-26bf0f502288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28665c5-ebf4-45e9-9643-8f6277b19872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e36de16-c4fd-44af-a3cc-bb375220bea3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941b381-0929-4509-957f-ff534faaa0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a566484-1d75-4fac-b5c1-a527f87f78dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cc9d66-4bb2-4ec0-860a-277a2863b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f08863c-9b7b-454c-ab42-dac48f8db09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54833304-1e12-4df3-a7d7-a79085e34b72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272a84b9-1317-4ea1-a25e-646040f93f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d656128c-aa1a-407d-85fc-75ebc30c3c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95fa17-6693-4dfa-90d9-3008fab583a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e753db2-93d8-4141-b003-45a3a9db4410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c238cb-98fd-4863-9fba-4f4dd026be61",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4b8e85-ac20-41e1-9315-cffafc528fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d05133-a276-457e-9b50-1ea61750fcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6117e050-0f45-4249-ba77-6b0a1c231fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d812cd6-4693-4f6a-ad16-0d597deaf6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f32f84-1fa4-4af7-8346-328458292b4e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3760d0d-a31a-4ca0-b2bb-174e81839c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdad26b4-d9af-4e86-9c13-8b4775ce051d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7bc32-5d89-4b93-8bca-c27ad498ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8934f9b-b6ab-43bd-aca3-8c682bd56f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac91c95-ca7d-4f19-8ffb-f6ce8b96b1e7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a7b2d7-d922-4f2c-8608-4bf29b55d3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f3de5c-b8ec-41cc-97f5-cd12dcea0fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9276c988-8c83-41c4-baa6-cd68eb7f641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9979df79-47df-4c7b-b6fb-3338b1ccd31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b62a4-038b-459f-954c-e0708444b682",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87941ff9-0ee6-4510-866f-1ced02ed21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4b3d35-4216-49d6-b09f-1936aa99089a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e38938-20a6-49ab-b70a-6baac589a0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3492a091-aea6-4ea6-927b-d2fb68ef4b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9215d264-b441-4de8-8e06-10b410cd9d58",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a18788-d9d5-4fde-b8eb-415c8d3de39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bba4f0-c6a9-4278-9e20-34174a12cf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f763dae3-9cd0-4030-9708-46af8e63567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ceb930-383f-4475-877c-b9094661fa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7967ac34-f155-4a68-b6e4-0d43d29e5f63",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd8769e-fa2b-43fd-942d-15dc0ba0c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bb3dfe-99a9-4f3c-996e-4b60df1f467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba66fc4-268c-434d-839e-f7e89f1754c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25324db-d6b3-4ff8-96e4-a1ab4c39a865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56d5ae8-6f25-4d56-80b5-1fdfedd057a6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fac032-d103-4f25-ae2b-758e3c4695ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535e5948-64e9-42de-b87b-63627c2a9f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8fa6e1-a678-410d-9714-b2a720d5998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5287a77b-f57c-4235-af04-fcc7618d8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f8d49-087e-473e-8cc1-6277d3876b60",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1351d0-8102-457b-a3d0-569046abbad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2253c59-c7f5-44ae-b3de-e4fd350bfde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17796c50-1a4c-4e26-bd89-8d5c5eb2b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05a5e72-8a09-4207-86c5-cc7e57fd0716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cb9954-c70d-48bf-ae2e-8590b748dd21",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0048a01-5f97-49a0-b72b-849cae055a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c39439-5c1f-430c-89ff-bd809bb4e555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1152f1-cb67-44c5-b8ab-b1c31eebb694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da14eb5-6cc8-4afa-9bb1-fbb6a6b3a89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fda980e-ab0b-4ac6-83b5-413aefa95340",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6374de-4a75-4934-8ee3-1baca67f80b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ba186a-ade9-4c2d-b2cc-37263b24dd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa62d36-7b08-4883-92d2-2b0e378fb9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f276ee81-6a0a-492d-b095-17871c3c3133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92909dfd-a1fa-4589-a633-a71c6d870d3f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0bc605-45db-4e5f-b8f2-575e2f80c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14af8159-03a3-4374-b86d-16c05399cea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af1770-b4ac-4704-abac-c97c07c984d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0648e103-a0a3-40ff-817c-647882390e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad551f9c-0508-4cf6-bb20-a30caf2120a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97eef4a-cbc6-4c84-97b5-a628556c6351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36686565-a77e-43f4-a536-466a6f650a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cda183c-ac19-4aef-a1b1-1ee6d02ffd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33b0048-31c8-4ea5-9b7d-6ae8fa0fc292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b4f2a3-57eb-4578-9053-510017b2892a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb51a784-5108-4bf4-826c-dcd599d9363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdb0a4f-0510-42b1-8e59-5b1bea97eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a058a8-b94d-410d-8a5c-5fe70c8751dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4260ff-d3e3-4f66-b919-bb25d26d5cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27e9439-de09-4dcc-8e0f-4e216972b049",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2fd0ea-55a3-4a0b-9806-2339ac652447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9c83d9-7f7b-41e5-aef1-b2558c58af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d12e35d-0f2d-4081-bb25-ec09c4c711e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "181bc05d-cd24-4b8d-9144-a9e397f28c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbbc06a-e5b2-4060-b3fc-f6b4056b7ddf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e702a1-975f-4ff5-8974-3cbda7c16374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b34586c-a781-4307-bfdc-5c8ae23700c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9033ebf3-68c3-449b-99cf-26f22bbfae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0532beed-dd89-4b4b-83a2-24e962938456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b479314-1d8d-4a75-871e-db0accd7e839",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e381758-1e1f-4358-9eb5-80bf1bcca102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b0fef6-f40e-4c7b-b654-b5bd4247abc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea05804-6de0-46e0-88a9-13d18de4617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de5c4dd6-78e1-488d-9fb7-b8895de8f0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b95e06-2bd4-4e71-b85f-05885ef83399",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df72474-2c00-4d13-9d6f-4f4a8fb9895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f11be75-5de7-43b1-b626-8fe9f83e8288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c45ae6-ac45-4eda-b294-7340b80f3164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f66c00-4af0-40ac-896a-b9de2efe7ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9aec30-7ed3-4d16-91b3-54643ec0b2ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3839ee-23a8-4cb3-a8db-ab027cd52736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176e9897-c646-470e-ab46-cf2c37085a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8af3b2-e425-48d2-bc3c-3740c2c7ddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bb6bd7-0b65-4407-aa82-885463d2a9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5540b2a0-b299-4c17-94fa-98247ff0b864",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9090df7-7170-40a3-81d3-e58cb768c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6ae05b-aa6c-4496-925d-47ce5e42926c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3344c298-8d3a-49c8-9c8a-4d438e30dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe4bf1f-ebe8-4dd9-b06b-43e77fd49df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa67f89-9162-4e4e-8a48-919718777b29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e04c03-ffa7-4f95-ba46-14e051e2ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb05f373-5b92-490f-be7b-326e90d8d940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dc4257-b2f9-48a3-bd9e-73bb07b86b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b20d58-b2a3-4d48-846f-77c8a91db9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6312709-044c-4587-ae26-0c66d2d90751",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789706c-7a31-48f8-8c74-471bbfd4f83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a282d0-8949-4ec9-aaa4-4338f8991718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af7f31f-48e4-4f2f-b128-59ebd9136444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "759bff41-8e6d-4538-bc7e-6ebc9ec225a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c384cf4f-4d25-449e-8eae-901f88b3eb37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aa8579-19c3-4f79-a50a-20855ec6aea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732d2817-b8b5-4f6a-a2a4-879a374d639f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ffa64a-233b-42b1-97f1-2c7b61f95347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc23e30-4e0b-470f-bbb2-682220021c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf48f9b-bd15-416d-a8ad-71254985fdc6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e808d47-2b04-46d3-b6c7-35be35241f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a671fd-3990-406d-bb78-b942585cb56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bbe814-4c48-426e-aa80-d854c28062b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "577451c9-3e5c-4eb0-887f-10eb1bb8d277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef949a2-4e3f-4e53-98ba-7918587db055",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40d2838-66ef-4fb5-b9df-da542d5f169c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288a1717-621b-4f28-86ef-45c6513daf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f106071-376b-42bf-8e3c-fe2499a0eff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69681f2-00d2-4840-b8ef-0a5169b7ed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67e5af6-9fd8-4a49-bdf8-2b6c65569a58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072b3639-50d9-43b7-ae04-a90accdaf829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9946f3c7-2797-4a5b-91d6-45185b3ccbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8699fa28-3c8d-4d95-b193-1cf84326d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80371ae2-b39b-4ebd-bf8f-827fb3ba0efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eb246e-2225-4dae-b841-f4511cf443c7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b235b71-44ec-49d1-a15d-f9c1b56adced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c645a745-ae10-437a-9d63-72f398b65495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868938e8-eeb8-4344-9ce9-1dccf700db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0106ccb7-3658-4f04-9d3a-7c81ce4b2393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf01f4ac-83ee-41a2-85f0-1fe3e910071f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69092877-88bc-444f-96e6-2aecb49266a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e8c2cf-0b29-4745-8943-4aa6e4a00f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ac24b5-89e4-4754-ace2-f32b3e7360d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88839d23-73f9-402c-b51d-181c518ed5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc6db97-85ed-4643-9c02-813b56f2313b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706e3104-ff6e-4eb4-a059-c935111c14f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f94ee5-049e-4202-b25c-7a2c5ddf2540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72112d38-df97-4b49-8ac2-b6b09008d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9cb05b-6bdb-4d78-985a-e4b59fc25bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dcda3f-92ac-4b61-8374-5dda79d35525",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db2a1b5-338b-4f9e-98b2-c76134eb345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dd97ca-a45d-40d5-aa01-240d94e8a003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873b44da-d915-4355-ba7d-3dc53b4bdb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd8acfd-4b18-4857-9a77-322b668aa926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa20144-d66b-4a77-814d-df8024e6aac1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e95760e-9806-46d4-b4d6-95f31caeabe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a850414-bb86-4bc7-ae8e-d4a180a86780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2b0534-9cb0-431e-8d34-ef686f7e5fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ed6f1b-2d55-4054-b230-7d98002a2385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeae7b8-2cd2-43d7-b3d8-701cedc4b339",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac5f925-637a-41ee-9ade-99ec6000fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95642348-f008-4832-9dc0-d6e7123f9abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277cbebc-dce1-422d-8ee5-eb4b12830021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc0e3fd-41f6-418a-8eee-e20a2f9dbc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73257e1f-37a1-468e-bc69-97c927e17641",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f13058-b3d0-4d1c-82f5-d9bb041b8255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b28a7a8-9c06-4f12-8403-d8ebf13d9f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e4dbe-7ab2-46ff-a711-b6c2297dac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1461dc66-87be-4110-b346-5c5e97f3df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b742b6d2-f53d-434d-a487-fc4b22b2cc65",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb682e2b-7a5b-4fc9-bc51-56a5ef547f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d252e5-5e9b-4736-b3fd-46f70d1355e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19161f3-3930-450f-86b0-fda26db184bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0f3bc2-262d-45b6-a2b5-0c08fc0e03bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8b1e44-0d2d-4200-ab9c-7e201a693ee0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f9822d-0a6d-4d2f-84fb-a0102dfe85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b2a34-d1b4-4eba-8802-ae9aa318c951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2216ea8-1a80-42dd-938a-6b2f14aea262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb42dba-35c1-4a28-8d8f-1fd4e3693ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e435120-ee89-42b1-952a-699790f1c15c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc467ba-02c4-441a-84bf-259af1a9e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba89559-7142-479a-9e7b-f11b57921637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584ac377-48bb-43c4-8bfc-4359f38eb040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fec3f5-8f6e-4a2f-b8da-1faecf8c3b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31f80d8-2ffe-4ccc-bd8b-e7bb24f4f035",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9249dafd-2cb9-40b0-bbab-92feb7b4072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03eb83b4-066c-45c1-8b07-2f8d6ec9ec36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a38e22-f19c-44a5-8e88-2f9bdcceb797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0711a8-54e7-45bd-8b4e-f2e6bf97f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f561ac-a6cd-4476-9524-d732dbf2d47f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fd7714-4638-40a7-90d5-f73bbb5989d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b6e585-9989-4ea2-9636-45a3be89d968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d3881-4cdd-45e2-8f76-8c4dcb3d9af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df733ca7-8b09-4d85-9456-e3010c823afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62235242-b8ac-4d6e-89f5-9381e8e7641b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af998ca-0e9d-4c9b-ab35-5d12fc59bba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5373ff59-4bd4-4579-99f6-27b03226a30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab14e540-0413-4499-be51-260509f59012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc534add-bb5a-4dae-86f6-fb22cb9542d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3ab847-41d6-4fc0-882f-cb929e48a7c8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b3f42-ffdf-424c-a4ce-8b16682f9200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cd515b-e09e-43a2-b384-1967c10edea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828c1adf-fd63-43ea-8c40-cf230e663b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecdc529-5e82-4fdb-80f4-89bc23d0a329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfe9483-d6dc-44f8-8340-ab725a8b0ceb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c5ecb5-4da8-44b2-9611-7970c5d7fa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354a375f-2bbf-4815-9271-f73b3e439e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e20034-3277-4a23-9791-599a63eb2029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a718e299-5b49-4560-8d7f-c53ba2c63b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c80be3-9d0f-4b98-a239-f5afc6c43f57",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973f9649-f4f0-492f-aa25-d6b42f099519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877e6b9f-67b0-4fd3-a259-b755b8342ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7b2b7a-55f9-4719-aa7d-c474e5ed1292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c09d248-3154-480f-868a-3318656af634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9706f5-7e8e-459b-b868-9a8922ce1a6b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e5eff8-31b9-49ce-a826-635213a08434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a867cbac-25fe-4edb-b0a8-8f2853b63c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a192e4-6294-4654-bb19-28ad9b18903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af29a91-5e63-47c8-acbd-629435341517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0726c39f-e8d3-44bc-90d8-2d3278848bab",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007c99b3-c484-4abd-95ea-d991270ef287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6262c393-746d-429c-9051-ccc41f022775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed3e0fe-4447-4e0a-a842-ef2404b037cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a82273b-432a-454e-9845-4008be4aca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb836b-e7c1-441c-80a6-bc579cbf755f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba2ddc-ba86-4190-b604-b6678644f943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7a2093-80a4-4fd4-ad27-7ea734225685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13f332c-6e34-4c71-b7a9-fbba22ab0b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82dfe3be-3912-42d1-a26a-150585237a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006f2aeb-d21b-4940-bbaa-27cd88a393c1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b117d-8a2e-4789-8afb-b65cb00af5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbecd0fe-f3ef-43fa-856e-e908bf7006f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc1e7e8-b767-445c-95c5-2d784bddee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "319bdabb-9c1d-45b7-adbe-3a56e3a99d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ce395-163b-4277-b13b-49c85d8b1c97",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f4bef-cd68-48c7-b468-5444d53d634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3137c1f8-b74b-4a0f-b3a7-91ba408e2870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d310ed5-64a0-4680-83f1-7c05ef924cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17c7f1bc-6f94-4aa4-a5cc-0837bb78b145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a41d6e0-9c8c-43df-9420-1334f963261a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86747417-27f8-4a46-910f-63893d22843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2d8f86-7395-4c35-9085-277dc05a86c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dff7ce-5f08-4ad9-9971-f66633d80ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2f40bb-48ba-47fb-acf5-684497b81058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d969decb-5ae7-433e-a3bf-6ecca44f53f3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd71ced-1615-4fba-b88e-493ecdb7dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e23c46-9472-41ff-8e59-5e939ce43ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4c3ce5-1338-43c6-9120-5ae688d3fd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3117c785-704d-453d-829d-89c2d9123de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff49b9e-6269-4ffe-ae45-b2adae35f5a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0621f197-1b96-4e19-b3a0-a48c855c0519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdd8b51-97ec-401e-9762-3ceaf9c1203f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89423e-fc15-43f2-b420-25bec261c65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abe963a-b6b0-45e9-b2bf-405f3eb624e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51cd7e5-47b7-4f8b-b4ee-b3b2ebaa123f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1d3774-799a-4542-9ea3-320c41c358e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d08477-3171-47ef-8816-a1c2684a8bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f20b176-d241-47be-abcf-347ee5a0f6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43ca922-edae-40c7-8975-984ba66d2b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a73fcc-2570-4aaa-8112-9010baef2e6a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bbcceb-d3f2-4f78-b825-2dc11ec84b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec99f81f-b2b0-41e8-aaa0-71ef9d9378f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1e1e4-bd8e-478c-b8e0-d5ff7a202659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44eacbbf-9bb3-4d9d-9281-45bc67afa759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64826ad7-fee8-40f4-a897-32e5d20fd4d9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9060a88-bb3a-44b5-af5b-16dc9689137a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba0986-2913-47b8-9269-cff124377890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941a395-b930-4ca4-abc7-682a591fc73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "395edec2-3a8a-498e-bc19-9a6872edeab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77347379-812a-4715-b381-bda139fd5b3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b5e198-afc5-4c0b-8b75-0eb543a5b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1e8b8858-28dd-4020-a1f4-2b2f6128c4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e40f09-7b8e-406c-bc0c-0c4b15b1ff93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66da6836-c199-4fa2-8fda-10baa30b9e6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f66f4d0d-7dbf-4da4-a3d5-b8dc2cd77058",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3480cad-abdd-47f6-a59c-6e3be73fd465",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b999aad-09a8-4452-8d5e-2eb40df54489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7199f43-8383-4e68-b96e-e125aed70c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb3ed3-e800-4f29-a006-4077de154628",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95443379-ee5c-43bc-8885-b053407775dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576d5a11-3554-4114-846c-df172f535ff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "903aa3c8-e3f3-4633-827a-fc1d3e5075b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f2befd9-b1b2-4ba5-91f2-aedd799e3405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1feddf8-38f2-433f-9537-7d37a904001d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dea95965-dc67-44ca-81b4-96c8bc3db72d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ff90cdb-1f9a-46d3-8765-62b1410e8378"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ad31abb-5718-4949-a80f-996a72277df0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e23387e6-818b-4d12-817b-3e3898674fbe"
                }
              }
            ]
          },
          {
            "id": "e09b00ab-0062-4603-9d98-7f6787691835",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce437d47-e34f-41e9-8420-b1c634e0256d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114de9e4-91c8-496a-8c69-58277b76a13a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6e8b06d-74bc-4cae-844e-1221c74b0544"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f593a92a-bb43-4ad1-973c-7662a5ed8dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96c1621d-48b8-449a-a421-a40d0978fc7f"
                    }
                  }
                ]
              },
              {
                "id": "fa47077d-1a66-43de-b543-d20d66eff318",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "161a3246-d914-48b3-846e-233ef503bd18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ff11e4b-2241-4f5d-b9af-a171ae952bea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f734f4e6-9fa5-45ba-b3a6-b4278a81a098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1f38bce-985d-4bdf-9f33-e0e7c8ed8ee8"
                    }
                  }
                ]
              },
              {
                "id": "308af3b7-0779-45dc-bf8f-b1b28bd91995",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c875e045-e54a-4b00-9fb4-a273f0a7a033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b68ba06-1e92-4162-b620-06ce3340ff9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21ccd1ea-1570-466e-8804-1592b9e08bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ced1776-ad63-444f-baa7-1c8e41f9e817"
                    }
                  }
                ]
              },
              {
                "id": "1c947a3d-ac34-4c51-9559-0ce8d9524886",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1fed1ae-2e52-4243-ac94-31f36d939284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2aabd26-6c11-4483-b73f-1b94159571b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8566fa17-5e6b-4787-b8d7-dd240f88b149",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3e81d534-63c3-45b1-9f9b-5639a2d024f8"
                    }
                  }
                ]
              },
              {
                "id": "03c302ae-6123-4470-9948-35b48c921d9c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb8868e-5ec0-4aa4-a8bb-90451aaa6465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbca4634-ec6f-4d40-b6e4-44839796e907"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5a1a23b-d8af-44f5-bfac-d8294de82cf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7de0d1bd-4ad5-4f12-86ee-549a46618ffd"
                    }
                  }
                ]
              },
              {
                "id": "3c532c8a-25b3-44a7-b239-f172ced46a36",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1303039a-2e22-4e70-a9f3-88c84630f8dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aad7f5d-c991-49ef-9b54-2e26cd5198f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04b40eb8-22cf-4851-885c-a47f2c2d4a8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f37c5a59-53ae-4fb7-8a1a-4d8b747c193f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e879bcef-f9ee-452c-92eb-9b9717b6abad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d441d39d-3f8f-4c41-b4d0-45e32379fbcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1dca07c8-eec6-4436-b77e-d8edf81f206b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "879cbe8c-7826-4d04-8e1c-bd99cc621d3d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4190d16b-4dae-4c31-9b6c-71348b510468",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0734d258-8583-4e40-9273-54078e27e6c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2923088-0a52-4080-951f-dcd8a333beed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2b8e02e-2dbb-4a08-bd79-194dbdfe4c30"
            }
          }
        ]
      },
      {
        "id": "6c24ae3e-6315-4006-b34f-79425ee7ac8d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad499a13-0651-4ffa-bf79-4a3564e04833",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1b2cb46-0236-40bf-a290-2484f02307b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c37f27b-a9c0-42e9-840f-2afbd0a1eed0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0797ef75-c201-4379-8ca5-fdc6fea16ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad71e0f-80c7-43df-844a-a070e5e33c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b0c3a0-e0a7-4180-be8d-2692bc3ce696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce241c4-4b63-4e3f-8ae9-930fd6f8765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4010c884-b056-4e0a-814c-4c42358ff360",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f143433-30fa-43ca-8866-07b6ae1825c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614e0597-a6d3-4276-bc4e-3f43afcdf6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50fbe7-8500-4406-adc2-a005b85ca07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8825e6-c825-41a7-9e7c-aede833f5a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723b239e-fe45-4686-af85-d1cd30ec0cfd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22c4d31-1546-4232-a10c-dc3e6d959764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e6de82-57f8-41bf-b65e-9d0d7bcc13c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef695c9-de0c-4fa1-816c-e54633b4c406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5231b14-cad5-41b8-a59d-6012c27d91ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4f3041-1e3d-4ad4-ac76-c0843a51775d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45be0f32-3f52-4d8d-a7cb-d949ce42b91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896cf7a8-f6ac-4499-af22-12c963e6db1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79519c4-ce6a-43ef-8c78-4ba4c2f9d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a247687b-c9a3-4728-be6c-b34aaa025b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fac8c8-96d7-4df2-8b0a-3a899c401efd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ec4d0c-bdfc-42cc-8e6b-2efad49bea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa65e5ec-cf67-4677-a167-0dea161b7dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cb7171-7cc9-4a24-a8a3-6efc5e85e5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66ef9b92-31dc-4658-9e73-b113b8c315ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9621157f-0dab-4386-a79a-4374bebbbfb1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbccd7b-3a7b-4da7-a362-61eb416971f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a1d047-cc06-4eca-aa14-61d435ff99a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7422e2-29e1-4344-b85f-243df999d325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17e70814-9728-4406-ae62-d35af6add834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ea793c-c785-4fed-80b9-b13fe2749878",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24d53e4-1eaf-4382-82e1-3dcb556ee77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb0fe70-ca3f-4220-a391-b0073ad2d111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcd3d4f-6a98-4dee-9489-9e56516fd8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec0c106-de51-45bf-9d02-60a404c19072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64897133-9833-402f-98cc-6384fbf3eaec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f42a0b-ad8c-481f-9392-1f38f69f964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae60f08-570c-4ee8-a1cf-be5b4b227073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b517cacb-44c5-4e3a-83cc-a00093e99e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bae2f6b-31a4-47b5-b3c9-1f6800c28cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6aff20-c8a3-48ee-9ea4-bb9a02e5cc62",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aa1dd1-aa93-4d7b-8659-eea5a0699a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41c9173-57e2-462f-b902-695242c9f5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6788ae13-b23a-4579-81f1-8711c02e3132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af91b83c-ae3d-4e50-a349-c03b63cdf13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5e406-ac13-4c5d-a796-1861bd174607",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0095b2b3-360b-4517-b6ca-9cd92c3132ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5e2511-74dd-4a78-ab2b-ba3d7ffec7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23228d-ecd8-4135-ade7-772081d7b39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "833301f1-50c1-4fee-a63f-ca4423d9ebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36534f1-61a9-4ef3-ae7f-a6df5dc9dc26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b60b39-c8f8-47e3-b8da-8eac0b349b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0fb8c1-f6b5-45f9-bc02-9e80ae07dcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d21bab-4e31-4329-bd92-38104a8f8b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcb56e8-0473-4e6c-91eb-30a8dc79ca3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69da4273-d2bf-4231-bd99-eb9dba8410a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fd9ebc-a8c7-402b-bf78-c3aade958f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a61263-4b56-42f1-959d-501d423e8ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73a0e16-b73e-4568-b227-41b40039aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d47701-1f7c-49b5-8128-a64403c11dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daf360c-4acb-4fcf-aac2-6e8a1c2b9c9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22879214-fd9c-4eec-8f9b-ecf462048bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67a2bfe-752e-4c68-9cbb-377afa0b1899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3502b3c4-dcb0-4ded-a173-6da20cef2b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2973436c-b17c-4647-896b-302817e1fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0365ae2a-5bf6-46cb-93f0-baab1a548272",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb858c26-8722-48ff-87f6-f35e7fdc7913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a798ae41-f409-4edd-bd90-91b7708d8ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fa3879-624b-4eee-8cec-f46d7f11df05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad8fb98-a640-480a-b277-4cb5b4253028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4081c47-8b71-4e99-9ec6-a32a8f68c891",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b475534a-1069-4a43-a708-df514e71611f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be9b0a5-ec82-4ea4-9691-7e46e1c6de13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039b489a-b6d2-4140-9529-e5168974ceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e33801-58ae-49b5-a72d-f6f1d5dfc7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a575351-53d3-4b9f-b936-c1a0c5fc6f2b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21fab15-6f5d-4dd6-af46-67751b01da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3779b9e8-214f-4cca-bbb9-6aab33c4f5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c5129-8e15-48d3-accd-f2deb4e49d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8ed7b4-c8fe-4336-8c80-6fc095f44801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a1dc0e-6e5c-4dc3-b3f4-f9fb506f0e8f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e8ac34-89f8-4cb8-a071-b1704c9ed923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f708940-cc7b-4d3c-a8ae-2e21013d8ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5efc7a6-640e-44a4-936e-15adfb3213c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92713d15-145b-4685-9bba-50ccc7896c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0060f8e-0352-4912-8477-917a0fa1ab20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4a7dd7-2ff1-48bb-9985-0b529f97b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a04680a-855f-48cf-a6bd-3a4c82571774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14987d3-9c82-48c6-ae83-cfc18b36a72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3044afe2-db14-40ba-abe4-f44e6f27f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d5bda5-3c82-4167-85a4-fd8ed70152bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181405b3-8e75-45ce-96fe-0c4b15fc81e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795f57a1-84bc-4e6f-b0fe-dcc00fb97b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d623a5a-c559-4fc0-8618-ee6fe4078959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a7bce2-43da-407f-ac13-8dc449050408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b005ae-c6b2-441f-b063-96d57a06d4d9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987a5a85-4467-4ba5-90ef-29af654a514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6508e5f7-f58f-43ee-8404-d630bfa99238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e24dda-03c8-48dc-8429-a22ea679631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f12719-17ca-4a0c-bfa0-54f577ce9be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6a5043-a761-4dff-979f-7138171eb5ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76446fb7-76fb-45df-9c85-78c848dab29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50416c04-4d11-4517-8a16-67e8050a041a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa6d85f-8c67-47ce-887c-c11862821d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4573197-23c0-4207-a747-59d8860cfd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272945b8-710e-4953-b848-9ecd671cc158",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c221177-0320-4dfc-b4f1-4ccf5478e6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0eb872-21ff-4982-a34d-d98c0335066a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f6774c-071f-4a09-b804-0f23f48c34f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e289cdc5-6192-4dbe-834c-bfe628501691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace951b7-7822-4cf2-95ba-0f4b14ddcc2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b134fe00-2186-4a8f-b4f2-6445c67a1676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8515619-0c16-4a55-89ec-f8d73562f46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cb1d8e-f061-41fe-badc-714083285944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b80667-e026-45d9-96df-eaff9819c659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f33af00-3bb8-45e4-86bb-ba111b1bcba6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476c4c6d-c20d-4138-91eb-3e2d797dac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75be001d-9225-46b4-9961-b03311320302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758172b-0317-4ef2-9f40-8ce3aa9bdd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c425a647-c04d-4738-8fc9-d86c7a678d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15ed318-bff5-41e5-bc55-6ec8db8ea005",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9108f689-4015-43c1-89fb-5e7f411bce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe63217-20e9-4d50-bbd9-e50a6a1bdac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e8d23a-cf3f-43f5-be87-a1ba32784225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c294d9b-26dc-44ab-8450-f550a8c7c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b5735e-314f-4c98-b0bc-643a3a2e5190",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967bff1d-74cb-463b-ae2d-ef55dd893db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50c46b5-3752-463d-9ee3-a2afcf1427e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6164f1-c3b9-48f3-b509-df0b2d6e7e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1a6ea2-b176-47be-91e4-4b994943e266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb30e98-d423-438e-85d3-14467e861ceb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe28165-889f-46df-9a90-64217961b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce3cb62-a218-4f9a-933e-d9c6228fbc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4497a03e-8f6e-407f-a67d-7c751d17247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "924442e6-1f39-4086-959d-2c6510d1767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c91872e-a72f-4704-9e5a-c4adc73a4ddf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcfc596-4445-40a4-b355-e79cff307949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e9bad9-8d92-408c-ab67-d478bed89d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9351c63-3743-42db-a104-4f65bee91b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "119b2485-1a4a-429a-8262-051666e3eefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0be97c-b0a4-4e24-a464-74fbd050b870",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3858dc3a-aaf8-4ce0-88e6-cad663b90376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72220d9c-ca5a-4e96-8c81-6234535708bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ea179b-dc1a-48ef-b7ae-73be95011e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946581ef-0e5b-4eab-bcae-3a5746541377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b77bbbd-a250-4d30-9e16-41cb6a5082e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab12e8-cfdb-4dcc-8391-843c04f02030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9b516a-c335-4938-ad7f-89e19371ea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244b0a45-c7be-411a-b7f7-7708f7a50c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdc5c5d-f5e4-4726-91c0-8f79f0331bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca16ea-27a5-4b33-9745-5149b0858035",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22bd050-b402-4640-af70-9be3fe9ae6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bfa795-ab6b-4779-84e4-8d52a4e7383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3189eee-dcb7-4c45-944f-93aa6adc5ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "560f2c82-de30-4f30-bf35-666bb89e9393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6ae3d1-6544-4f03-bf50-6d86cd97b095",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b821299f-eac8-4532-8939-744c26c2cdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c688b8-393c-421d-8588-5a4b2ac20acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53203466-b53b-47a0-9b57-a01bb19b1673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f55c3d4-40c8-42cd-8a5a-2ef7f0118060"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bee77ab7-0c1f-4ab0-ae10-c6a27b2f3e63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cacd0103-c0b1-4ef9-94c2-f14d24ab6a89",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcee9330-d40e-47aa-b85f-56dba1f335bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bb6f79-7283-4500-bde1-de709e9cdd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca8b9c1-493b-4235-a691-84672ea57af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90e502ec-d92c-4140-87d7-b09a2ce27f0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb125214-8070-487e-a481-aebaf63336e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68f4d6bd-8e16-4da2-9767-d03b07633a7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "907f19cb-38be-4bce-a9fb-f3328f79d430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5af4fd55-5e7b-4f73-a142-d5d85faedc57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21df5dd9-09e3-45e4-a830-07d3a5696c42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e718f8c7-a919-4ab4-9cf3-7f9fb96ada07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f56f365-b676-4fb3-aca3-223ea215e61e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1651417-2c7a-4eaa-bd14-7cfd59ab133c"
            }
          }
        ]
      },
      {
        "id": "e4ad33cd-4c1b-4e2f-a4e7-e93501987cdc",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bdd4d5c3-ea9a-4643-92e7-7abbd1e9c156",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87c1c02f-b7eb-4b0c-84ee-b77634ea2d90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92b5bde4-378a-47ca-aa88-9f50c982162f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9088cdf-ef00-4b02-a158-3a8d1b5b9c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0305de88-8424-4e5e-82e4-109a33a17668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fd4429-cbae-4575-bca8-d7e42a132b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccc748c-a12b-4820-8b00-736857339ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca350f4-67f9-419d-97ae-efde5bb1882f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d11792-bb37-4466-967d-23904faedd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b4a454-4226-431a-82bc-a781c0874bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13901a17-f1ef-42ca-a51e-aed311f03a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98227910-5ce6-477e-b6de-3b0b8f2947f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192220c8-9c61-4df7-9756-739cc225a060",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fba85fc-60c1-4c14-bb9f-f60173e47c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721924db-dbfc-446c-aa42-996508c27f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7975585e-c671-46ef-bef2-47384042f8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01cc51a-0173-4166-9dab-d282fd060613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea76d70-3d44-4607-bfe0-ccef8a65117b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505a85dd-a45b-40cc-8ddf-9c1a10009eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cb880f-e8b9-46e6-a9a4-9cc88fd951f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b367634-02a5-45c3-a3b9-4668f25dd332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1db7595-1ca1-476b-bdde-a42dca8a12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c4ec1b-53ec-41c7-840a-26f2642b7836",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49faf3b-3993-4bdb-b9b7-364bf5a999aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3ccbc5-53fc-4669-848c-f689b8796d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24563b50-a89f-431c-ad6c-2df0a11e13e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12d3b81-1f3c-4c4d-a13d-3ccca55af83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c56d157-1690-4894-8afd-dbed1833cff4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fc1b3a-cf3f-4e30-8404-7218bcbc4e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d3b9a1-40e7-4558-9f6a-c6b55ed880f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ea12a4-6c9a-428b-a17d-99958b869e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a80fe736-f5db-48c4-9b05-4dc7cdea5b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21668a1-19b7-4ed8-b345-ad46c981ef89",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdf5561-a140-4c93-919d-40282fe469ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6534e578-81e9-42e2-9e91-d48b314008c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f8b901-5261-4e69-94af-29485eba4e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fcb573-e056-497f-96df-57c8e8a0d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bd193f-ee56-442f-a8c4-a9aa0d15a8ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fda7299-852e-4016-b63b-1728bcc47311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0a48c4-5649-42d7-bde5-b03f532b8beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013f9928-ac5d-4922-9b1d-cc2a0ea0ad67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ee8a23-ff12-4c05-b91a-b471a64f0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffe11d8-0d80-4a32-b5cd-6e0041a27282",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde8735-8593-422e-834e-5ce10434d6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e9767b-e2d1-4abc-b0b3-0920706ded86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82925f27-71ba-480b-818a-0672eb6ce978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a455ec-a373-45be-8ac5-7683c25f0ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6657acaf-a1ed-4579-80c4-cf5efdb085b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2f7392-1ebc-428f-a7d3-0847836b5487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78185fea-0153-41db-aadc-73b4c7fca0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035fc521-776f-4dc4-bb40-ab7568ba6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd08d55-6f20-439f-a1fb-dc4ce80f726a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d6e741-c6c2-4e65-a910-86aa42c5b6ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91198a2f-40dd-4569-b494-b5f51efd5462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c3011b-506a-4695-a298-4575c513d5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b4ed4c-0269-41fb-9af9-ab259be770cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac3fe3c-7200-437b-977d-ac48217cc9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a3293-df92-4fa4-bcb6-fd0e6428e53b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5946350-158a-429d-ba10-c4e17481ad65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef84c28-8be3-4dab-a12c-a7c2ce980481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d11580-89d4-4b60-943e-4bdea5f68a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a453e2-3654-49e9-b015-38bd0ce795ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aa012c-3408-4131-a036-0c2de3f1b05f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24e630d-19ba-47a8-8391-c11ddf117ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fc3ca2-a664-4ee6-840f-2da10d0e2024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe79da-10ba-4ccf-b52f-ebc0d4ec32db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67539c26-b4b6-4f70-9c37-d061615492a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9ab293-5049-46c7-9c65-08aee4f7d029",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22247661-4fa4-4ca3-84bb-6d1e93b1c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3fa66a-9f41-43f8-b315-4e0e9369bb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2cbf0c-39a8-4511-81eb-a4a163b5a560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1af562c-07ef-4ade-8c6d-8e7aae3044e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3586651-eed5-437e-8f2e-837efeccc0b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d250b2f7-a8c3-4d7d-b999-beadd446516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d6293c-47ef-459d-b241-64dc76e23e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b1a8ff-dcd3-485e-8fd5-46082400bd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9def567f-7d79-4f59-9c8d-f3d3e56f69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e4982d-31d8-4c06-8fed-5b5cf5b28451",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d382f53-be20-40a3-b81b-4c5e4fe0d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd65e77-b923-4ac3-b400-30a4ed009024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f14cb-0e0f-459d-ba2f-2ae3f9ce958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fcfada-0420-4548-863d-6c8e3830e483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e58ce9-eab1-4453-b285-192680110e49",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c41a618-f65a-4f1e-bcea-178724fa6224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2de878d-d32b-4063-b400-9779a154c9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59309822-561a-4960-b5b0-da87a4c3c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c45df68-f2f4-4d62-bd5d-563192db982b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b48659-7ba9-4e8d-b73b-b298a9e35963",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a93bf5-5ae8-4192-bebe-f1e4485e24e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a0bc28-1e68-432f-b1a2-1126641e213c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8e5cd0-0d7b-422f-855c-cc4b11a07165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86651a82-74b8-4713-a25c-934437da5cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b789a1-b638-4972-ba10-a6edd2f42d62",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa85e24-ceaa-49a3-be90-dbc11eb9c780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16e6939-d228-46f3-880d-eaac185ea78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b12081-b74a-4d39-9b4f-7d014a9de83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3582a9e6-21a0-4614-ad70-8cd3e6407ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db9f3ef-3f95-475c-8768-19bd8e492e57",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba13f6-7209-404a-9ca9-c29c9919ce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b352f646-e1c3-4317-b82c-d15f1f05dc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d7631-4b0f-4410-a0ae-07cdee80dd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a6e0ba-c80b-4a21-a93c-7d6d01be978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac92ca00-d038-4085-b255-845b2a758252",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af75f812-88df-4e92-a22a-5ef241c37b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f5b6df-f834-4fc4-8b5e-f5debe817bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4efaae7-aba8-4354-976f-8afb35fb7b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe6c52a-81bf-4951-b411-7bae85fcb1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fb4621-b401-48e2-bce7-2ea3e690be95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0753a6-478b-4888-b574-16cb67e644ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993f1d26-70bd-4492-ac40-ffb1e13a0148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737fa106-4bc2-49ec-a8e9-9203e50460dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e17951f-e23d-4bf9-aac6-aa61348a33ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f214f837-87c2-4fd1-aecc-3bd06c42e236",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180e25aa-d610-49a5-a240-919cbfe63602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8b9b92-7e1d-4ca6-963a-35f45e4f3493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f191b94-c61e-430e-9e7c-005b156ba119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02483916-1ac5-472a-8799-4ad8ebfd3411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b27c77-aff8-4990-938e-c5c0ce4ad369",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f099542c-0b62-4e7b-a46f-bf1c547500bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec60e3a1-f228-46e5-acc8-beeed7b69227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cfd48a-f784-4762-be30-d8f1c0cd47d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74de7252-10ea-4fe3-97a2-c7d81262ab1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b177f92b-65b9-4eb9-ad2d-6cb6755c1ee4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f54578-1ea4-462c-be3e-f6b88ec01a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d21e5b-f592-4e21-b674-6550355bae92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9cdb29-1ec6-4c4f-b551-08966905e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d16141a-0f5e-491c-bfcf-f1563c09c905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abfd5c4-2b72-43b9-8619-942980e2d3a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7e094c-cdbf-440d-bb3c-67728c020518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71389df-90bc-461b-b50b-cbda4bb67ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c819a5f2-9a3d-4db6-b89c-c97816e0a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b385dce-ec32-468f-a4fb-817f4bd69de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27007607-b1c3-4d66-bd25-e6bfd79ce0ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4360ce7-3ce8-4b1f-bada-ba1eced5c769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ae5889-d56a-45d1-9041-53c278c597de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5685c881-80fb-483f-8da6-ce8de53bca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a31e80-7b0d-4c13-a68a-c7f933ad558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f52d3b-b506-4b82-aff5-32ff260b2e6e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da14c1b-b0be-46fb-a4da-f96893fca448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efff27b8-49eb-46c8-812d-7595b332c5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697db5aa-2f73-4d49-84d1-2c76387ddb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45910dfe-3cea-4b8c-8a07-640889a44147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc685c-54cc-42ed-b4fe-7b05b7c0dfc6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1226b9-5c6d-4ae4-8f7e-c74a70dc961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64c9473-7140-4c1c-af89-04519f39ad75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a314f953-d27f-4493-830c-81385089f05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8271c-b057-408a-8061-93624972981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a24299-3751-496a-a2cf-71bac43363c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6174c16-df6d-4ce3-87c7-bb14f146f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc912bf-9a22-440e-9c03-510594306785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552729e5-59c9-4cb1-8f2e-1b692b1915eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "248dd976-624b-449e-af25-bd33c1f13446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3485f648-321c-4ff6-99c9-eae8678f75a8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e352ab-4bee-4128-b787-5e329793c651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa7424d-b6a1-4ea2-aedc-3cda063b0484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bce4f2-25f5-485a-8ad0-a29a639e93bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d713e5-d399-492b-8e1f-2f47d0878fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cb72b7-973e-4f43-9de2-bd7e2875f07d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f427b9f-eafd-431d-ac63-64990489a36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b7cec2-670e-41aa-a07f-6e52dddaa823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54479d-0ecf-4adc-8c26-42258c5359a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4497fb-2dba-4fdb-bccc-19c65417737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f11b65-ae37-415b-9050-90013c68c148",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd025a6-9aa7-4b68-b0e3-134dd0f358a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b223beac-0873-4503-bb37-9241168f4b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0f5536-a9d2-4571-83fa-4f5eebe46757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4181cc0-0952-4310-ade6-20c19196bec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fa4b95-d112-46b6-b90b-0e3cbc7f2714",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db6cb3-4ee4-4fc1-88f7-df874f677b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9855dda-c8cc-40c7-8c51-3e2bd2d41239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaff2e17-17ec-41f2-b7a7-0151888c070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530b13f0-4892-4672-bd18-ef92b0346a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7925f7-411c-4865-85d7-a35631eac9ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e29036-276b-4217-8c2f-a76832a0b558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4682bc3-134d-443f-87cf-792cad536d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ec83ae-bb47-4075-9f96-d1c1c05e57ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cb51df-c0b6-446e-9237-7799f6bb690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138433bf-5440-4449-8f6a-6acabb7be7f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8dbfd0-c42c-41f0-8b5e-d7c26d7161a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfaea7b-e327-4998-9124-d3db566917d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931f7b55-c1b0-48e4-81f1-87753034b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa255cc1-2ffd-48cd-bef8-89f52723bdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d444b5e5-dbd5-4fbe-9a1a-bc0db1d236a8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2b05f-118f-4d27-a8e6-449ee825e2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a26a3e-cf49-4582-a8df-6169d1f86f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1980bef0-874a-4549-96d3-563edd5f7907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55b5094-6be6-49b3-a729-3ce762bf0acc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac3a8617-0332-4139-b1f3-c22e44ae7a71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9676f7e-c1db-4c2c-99b4-55c68b5edbb5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc51ace-c2c8-47c1-ad83-94a4e0719cc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4022581-2c5a-4fc8-9a6b-372b037b8223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423ae4d7-d8f9-45b0-a35e-4ae48149748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903e999f-fca5-4562-b488-75b49a4d9507"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a15e885d-7af7-4da8-b1a6-89d28043090c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7d35716-2694-4097-8542-2e83cfc6dbde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d1b001b-c6ad-4673-b401-e17c82003c61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb9be091-1304-416a-876b-4ee2a82be274"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c505431-ffb5-44d1-a9ee-e0b6440fac0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9070d48-27e9-4363-bc50-3c34f4419d98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bc2347c-ec5c-4b78-9da6-a59343368be6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51b20a83-80e0-4d4b-a718-30f25f8b812b"
            }
          }
        ]
      },
      {
        "id": "767961f3-65cf-4b87-bbf3-a103ec472b6c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "006c51db-829b-4722-9c8b-6e2274007e75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24cdc836-9998-4a49-b3cb-e2362d034f7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21250f1a-8a9d-4d7d-a51e-25f33951521c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7d66ff-9030-4d12-9783-bdbebf2f46aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7255b92-c718-489d-ba3c-ddb9f65e26dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e5d69e-d757-4ddf-8de7-73c3b3bf501f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00825493-64f2-4b6c-b7f7-c4cf876b3e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a378b34-319d-4dc0-959d-55c5b0f03917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a583a9-c444-4372-b10e-2e6c59ccada8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eb8d4e-5f5a-4a8d-afe5-9474984250b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0cfbbc-95fd-421c-b475-6d7a062cc131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6233dac-c16f-4c60-9ec6-85de1b5e54d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2dffbc-877d-4ac1-8ca6-e371d31f1738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c87342-7716-4390-b04c-2e1318aa16da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01adb493-0efc-4e1d-a6df-edd1bc9c2203",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0fe14f-ce54-4c40-bddd-c2d2b55485cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0262d92-0d05-4829-bdf0-825ee0dbe5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c960a3f-f26d-40ff-a348-d232101d810f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ef1bef-30f0-43de-8add-3d475bb70c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b552d4f5-c24a-41f5-8bb5-ddc8c115f1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ea3737-1993-4b0f-b0a3-5c68c77ba6c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67db063a-4f87-4a89-8c42-ab390dfb2caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30ca9d7-325b-4ce6-b789-173269148c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb37c5-e898-4d24-8db9-99651a2bae9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff6de45-ac0a-4e4d-8230-d4a435fb6d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413a88e7-5756-4ac4-91da-bc9b3caaea22",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2955d20a-feb7-4a87-8307-ce66b0d8c199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8356581-c3c9-47e2-b266-acff82612f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459fe96a-c50d-4423-954f-2a68316c8742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9382cf13-60af-4a16-98c3-8306a7217c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f246f1c-310e-41f0-9579-39ebc31f4d17",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9889e5-6b93-440e-852b-e3d3083e731f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec617f54-ba8d-4652-9555-33f52b41d5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10585800-10b8-4b08-b64a-4ba0f81e53ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebf2e51-7dec-4863-856a-10bc7b5421fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0362a2ce-2874-4629-ac18-ef35d1ef0c80",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f27786-4715-4423-aa49-8d4da4a20254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9347ccf-30d3-4e00-9e59-99f74c5a4f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25b38e2-8111-43ec-89b9-b7bd243cfaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4833a717-3564-480e-807c-14354b3d8f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041f992d-d194-4cb3-83bf-7f0232b88b8b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfa7db5-d28c-4ca9-9bf7-ca7601433b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdcb616-7caa-40b5-a6ea-64cf459fd136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34707c1f-045d-45c3-a01d-a6de28605c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e00794-ffd7-4719-ab44-59316d96181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde274ed-ba0a-4ffb-ab9d-e9d42ebd8ff1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbea183-83bc-4c60-b7a8-425f490097f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ef0154-9e60-492c-8c01-016954157e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa437861-eec7-48a6-bb3a-ba05c9251782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88ab730-c616-41e3-9c27-1fc157ba184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e982dcff-c240-4ad0-b95c-cefd5d532df4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a2de46-6111-425a-bea1-fcd337a66487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ecbb4e-7812-43b7-8c06-3fee803eae25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0e3762-82a8-4369-b8b8-b08f801b981b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9356804-a9d5-4ae8-88de-b721c926013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e83fc6-530d-4650-a173-c79bdccb084d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909f9db6-f3fd-4e37-972c-cab0e6bf0e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7340329-e112-4600-a66c-547a4d77efa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5ef937-db7c-4985-b986-eb4c9397f3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65582d6d-62f1-4f7f-98fd-56818333b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51688dfa-8d28-4834-9837-d9119a959630",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc71ddec-69d0-41de-aacd-6d1d5c871ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2171047a-a8d7-467a-b868-fb8322e7e7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0019d04-fa42-4ba5-888e-77bb95595d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a5ba4-9109-42c7-96fe-0cbd229797f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17756b6c-940a-4681-8ef1-7db79099c0d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b309b9c-04e0-4b21-a334-7bc9ecc06782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209f1177-d4d5-4ae8-8791-55bdc8aaf25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6a6417-5195-439d-846a-d6e077193130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238e1a4b-d1b9-4b89-95b0-baf41ff71420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b99897-0593-4554-8e30-a1af4fce69f0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34985580-b6e6-4e3b-be44-f4e3227378d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b38635f-b8f7-4316-96fc-3ed0601f3761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b6321d-84a1-4ab1-9e12-d912a36b1c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd784fe-e13e-4182-971b-73804e1c3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1e6d9d-bee6-4380-9bf5-a4e7ee8f6579",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54435cf-17a8-4955-85eb-4760bdc16bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e346833c-f6ef-497d-bea2-8cc7dd70aece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364a9a05-128f-45aa-a3bc-f93208838a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df91bbba-a1a1-4345-acc5-32855a1b4b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d4d53b-20c0-46bf-82eb-8aaab5eb8179",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7febf859-e456-4717-af74-00a5a5bd05bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4ce721-2682-4bd4-9dd2-8541edbd3714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fc324e-4aa2-4a56-91bc-10a36b55f039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ff2c5b-1797-48f5-a8ed-16be616b49a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696e55eb-130d-4cb6-b351-b646610c9838",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315c85fc-bab3-46c0-8aea-f4455c2535c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837e1f4f-9bc9-4ac1-99dc-68503aa28691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b98291d-59c0-454e-8297-8be885b9e270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7839db08-39fa-476d-be12-b07b42c1462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8397c7df-9414-407a-a4a2-2997ec59fe30",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb41a05-d4b2-49b7-acf2-172680608a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f5fca0-93ff-451d-b6e7-b522eae0f79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a78209-dc7e-49f8-9a91-728b889122cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6355414-d558-49fa-9068-0e47b341e007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0567f5-6d60-44c3-8312-f89202b02b91",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a9fcb2-00a2-4900-ab1a-e2efa4fd7a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c554d91b-3815-4bba-88ee-1bd00b9ff994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ccb01b-e3d5-4eb5-9210-cf4e828fa152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dabf3fd-a9bb-4d8c-806b-a467575a3d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc3982d-e077-45f4-a19e-741ba42a4a8b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69cbd82-cdaa-4dc0-9f5a-8dffdebd501b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761b6160-4a32-4975-80ae-65bc431d5ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db00649-82ab-4f55-95a6-72397aa09dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86141be8-ddaf-4683-947b-ac6f96c61dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ff340-dd2c-4ba2-9d0d-3033df4a5b78",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e5f1a5-49aa-4e91-94b8-e5334162cf70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd1739a-07bc-4e3f-adb9-070eee3b3d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550fcd40-f656-4c2a-a2dc-6ab4d685e1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fa91b3-2722-4756-96b5-3dcb427a0cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa10bce-7635-49a9-a537-b5c3c7d2aedc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125b5e2-cfc3-4737-a201-5e16ca6c5b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb1455c-4db3-4c7c-b815-9afb89e54b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d110ae-3093-49fe-8db3-ef5fb10d7144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7897a54-749a-4b67-9667-2f0325684a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0d72f2-d235-4f7b-94d5-55c84491abd4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0646366d-5753-4e06-9aa7-de8b7f1a497b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d3a613-1853-4a6e-8f94-66cb38aa8e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e803be3c-bb3b-42c4-a267-d198ca6fb5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e097c15a-df4b-479c-9352-a05596b2f501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61309298-09f5-42e0-b751-95ca06509fb6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b32babd-a730-4526-b087-9206e4ddf9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d8518b-a099-4b68-82aa-880c6f094a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72db09f4-078b-4d08-aed0-1b9766f7b099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7589cc-40c8-4c1a-a8d9-ae4077e9f7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6346005a-5ac4-4efb-a7cd-a6e322ee26c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07689cee-4c1d-48e8-806c-0082b5d934f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9d13c5-3b02-418a-b830-a6bfb5a19c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3562cc-2df5-401e-8724-f5b5f5731769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae9ce57-b154-4c1c-b9e5-4b25f0a53c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f464d882-86ce-4c20-b65c-7a96ea5a9ffc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8581544f-78fa-414e-b26b-2ea82f7f14cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e93ba6-3e8b-436a-8663-a5e40cd72f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04038fe8-db5f-4f84-9461-6a762251be90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9d0ca1-bb33-4259-84f3-2171aa5a9b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc99ed10-3206-4e4b-a042-ab75f6ff9a13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df79a4d4-e9e0-4f4d-a5d4-b329266d8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0552823-1c10-4790-a15e-a5df70026af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75cc272-3b88-496f-aa5f-fc52750427f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44277ae4-9937-4c1a-a626-7eae79a8fb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3055236c-af15-4a39-8415-1e41377ef7f9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3733e4-988e-47fb-9a3a-aefe7864c543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d819fa7b-f25e-4261-8b4b-6cb038a15040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1770900c-18a8-40bc-9b11-353d6328dd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aacb5ea-b5f9-4dfb-8870-f0ae665fcc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d347d449-c5b6-4891-bbc3-5eae1a31bda1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1001923f-4821-41d3-93dc-26c064f13026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96aff445-0c9c-49a3-87f2-04212a461778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f14cb6e-7053-4908-8696-d5f2906be4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5243ea6-6cbc-4861-b28e-2ca1165b20ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b039ab2-03aa-467a-8b4f-e5d7cd0bd1a2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c016e-d0f0-4f28-b045-fd6b8ca41811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc11136d-5b6a-455c-b91e-e789edf59ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59114434-ab36-4fe1-97bf-9ab3b2c19625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3560c6-97f6-4ee7-88ac-3cd5706f6b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b59eae-76e8-4e27-b24e-fe7088db9a27",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d79dbf7-28e3-45a1-a2eb-d42489e7b4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47475f60-c53f-44e1-8abd-dc6f5f33fb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df5904-810d-4a24-8c9c-d5fb1ef92ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15c11a3-6330-4b6e-8693-c3a62266cbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37046162-b24f-4c5d-a728-df01e83c206f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70ea28-9459-416b-a336-d79f35de7881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df798466-3d46-4d78-aec3-3471b66218cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f850d39-a64b-494c-83b7-a90f959903f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570e6084-09fd-4b2b-8491-257b50d3ed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973cdb0a-515c-4907-b47c-f56baef203a0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4119476c-2531-4dad-9b71-d43f56b501ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321b168b-744f-436a-967d-056a040c24cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c48c8c-1f3e-41f5-b2f7-7170855b2fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e323be-a520-48db-948b-9d62a4fc330a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b22c6-5407-48db-be66-de4125a3da0e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d57e62-437f-4964-9bb2-e8d00dc7b22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189ff072-b255-43e1-b171-e77756c20375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa6dd44-5e0c-49af-b8c5-5045f25a5671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c4bc4e-0372-4bf9-b7fd-b5ec112839ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572e50a9-4e9c-4107-b387-49e6a241a363",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943b65e8-ab59-4dda-b232-52efa7644303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7059b74f-04a5-4436-9c92-193726fa0fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a840e22-a0c0-4491-ba73-9a6fe2dbceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6b7b70-1d46-463f-913f-e042a3d35b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc36fa-50e0-4242-a91b-abb0018da2c7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7760d471-ce6d-437a-8053-39291301c1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b5a62f-c7e0-4158-93b0-97e8c81353e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4ccbad-4e9b-41a3-9e54-ad0ce1394222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff86183-eda2-4aa6-ab47-cc3db6bcad30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c50794-7cfa-478d-bdd4-45ac021c61e0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9c8b39-38af-47b0-85a3-9ed454a27aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bed565-e639-426a-aeeb-e9fd706f5361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0dbe0b-b5f5-408b-a377-5e113b2a5dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa900d1-f79c-40a7-a81f-f3a67c9b8d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873ec9cf-511c-40b7-a057-e72e79d20dd6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6f040d-6388-41ae-b6f3-9fc8b4eae021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47723b5c-320f-4cb4-9d52-f05ea21c4efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba52df30-6620-4e80-b99a-2f09cbeb105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a9bf89-a52c-412c-a634-2dba9be4ddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55649594-038a-42b8-af27-12162efd1b3f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef7664-2f30-4c5e-bcee-da3a8f4819bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8b7c04-81dd-40a4-bea7-aed458cc0c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452cdd77-bf28-4844-b1e6-910dcff28664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73f39d3-f477-42ac-9d5c-31edc9cda956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02328e9c-fa12-4ce7-941a-3ec50ad2737f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7ddab6-2af8-4fd0-9a6c-7b7181cf4f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35a939-3e64-4bd6-ab3e-a7890b2b2f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3dc54e-b8aa-40c8-bc4c-ca7e77718d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcfa377-8b22-4b61-97b2-d8f526b2bdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781abd14-0fee-4512-a516-1cfdc1ed78b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb287774-e366-47b5-aab9-e100a175057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a54fa9a-1a18-452b-be5b-e89e42f4b601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292604ac-1143-4676-b345-23854d085df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c122b02-caed-498d-bd8c-56f4d6c84f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65602c19-c3c8-44fb-bd92-9649a838af6b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf94fd1-c2e2-4c51-9b4d-9fa461f24c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7972e12-92f6-4cee-8e6d-a3ecdc6908b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf3968-9e18-458f-a206-9ea1ff09de8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7692651a-c4d6-41d7-ae28-074aceaf0e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c41833-4b34-4394-bc10-6655d21b7631",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3162b0-2eec-4f60-a7ae-874563a25f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee88ce8-c203-423d-a2e9-ec0ef3e075a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bb77bd-d187-4f31-b181-fdca6b3d566d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0444eb29-85b3-4a85-ba3c-6d21d9d7d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b0f48a-cc85-4c53-9197-a06a7954a009",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d487832e-9f63-4080-b61e-3d91be09828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fade82a7-6945-4fdd-9587-823cb17770a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ac158a-4e1b-4c83-aa59-8289ff0c6af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042fdbd6-0bf1-4713-8706-a2ec9df450d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c37e27-130e-4ef0-b271-536246ec8dfc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540256a9-37c3-411a-86db-914d9f28e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eaf9d3-bde9-4dfa-8b3b-f651b25fc399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dcb165-94f1-485f-b8b0-dffac9a17b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8106923e-8b42-4039-b4c5-964e113c0962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de9f24d-496c-4333-87e6-7c0f4d68096d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60af383-b37d-4f36-8d92-11fb63ea4a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf06885b-e1b5-44dc-beb5-071e3c87f40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2572aea-606a-4e0a-90d3-c5fdd444d5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd68b7e1-3c7c-4e93-89d2-39233651610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d185e678-7836-48f1-97af-4f321315c853",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72ac8c6-689e-4b61-894c-7c62c408b572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be19d61-bce1-42ac-ada4-e06b26943c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14185a1-de92-4fc5-b6bc-5955c22cf0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b8b929-d1c2-4678-9b3f-1b9cee0d79c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38976e51-4800-4efa-9e3f-7492281c0bd5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4e1691-8d03-48f1-bb8c-5c65f311de43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39298fdc-bd91-4364-bb66-48fa22740e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2597e93-f1c1-453f-8f9a-7233a8a9cead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19866305-3d2f-4862-8a23-c47191d44654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e5eadc-08b9-4f57-9176-29b60e285572",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243d8f2b-aaa7-4c6e-837e-de29c8b5b434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f234df-b19f-4b74-b49a-824eaace0c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91e46f1-c643-4e96-9d34-69e57a1097fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f801481-48ce-4030-a0d4-ccc87c1c3654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5484fcf3-3f32-487e-9757-fdab93da34cd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2734fe34-2ffd-4375-94b6-be28654eeb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b879d896-17b3-43d1-9dfa-6aae877959aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b089e9-ea4e-407d-b05f-ab77f841c3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6863f798-9045-433a-89cb-88f85fd7193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb4366-b350-47b1-99bc-d33c99bc2e80",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f0da3-c999-4a67-ad8a-c7a227006d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f37dbda-6ad9-444a-aebd-e4c275666e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743e4510-b507-413c-8c70-933eaf249462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80381710-6652-474b-9416-d3bd1ea4873d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d447ef-9f89-492f-8c27-39cfe5843a25",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4a0a54-5721-4268-9be5-4b409b558d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4c2ac5-0555-452e-a0ba-4f232ac7e95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2fa933-8761-4753-bb80-0686595a5c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2b2806-b4a8-4a07-bcf2-ed2c1b132cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca883031-d64d-4230-afdf-a6aafc9777bb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5774ea-b86e-438e-8f2a-35345acaddfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d468de-41ee-46be-ab62-301f89a51657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d26e07-9dd9-41f1-8b2f-15de85d7a1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4cc01f-4fab-4e05-bda7-737cf31eea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a11d3e7-67b0-4b2c-80cb-47500ec3f734",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b11154a-2b0f-4bb8-b6aa-0ca48d336a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0888a0-358f-48a6-8828-d2b32eadcea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333e4e2d-8a6d-491f-8b27-b724a773f733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f935fe-7ac9-4bea-8749-7ef5fc9136f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb3dae3-9188-4676-8b41-321ac1c67dba",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33033b40-734d-4f5a-996d-ab86b54df204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89adec2-8d3a-4589-b91d-816ecaf68c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbb8af4-1e22-41bf-b09c-8c70aef25cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f77b4e4-2fbd-47b2-9180-69d29d3c7997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f41411b-62c1-4f58-bf2f-17d2609132ed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e57f72-92c3-4810-901a-873f80aa538f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e671021-06de-461b-9891-bd10180d1e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38f7814-2998-4b7f-a4b5-c248338d7357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3a85b3-d006-4394-97bf-bb8feebfa5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8956ade3-e07d-437e-bfc0-2cc5ce4fb52e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca4c197-e96e-49e0-ab4e-7d6b2e0df94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fef7f3e-0a12-4afe-a6da-865b551760c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b36b31c-9120-4077-a0b1-1de716f9af4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d04592-17de-467a-a5bb-f93038c2c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eee9462-54e3-4db0-b7c1-9d31630f619b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744be0a9-3878-48b4-8dec-383055adc4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc33a1a4-5536-497c-a1f1-d1d1b4c4226e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46e9b70-e07f-4bd3-9259-1d111d070adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428b0046-35f5-42ed-a99e-8d8ac2a88793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d4ff7-9a7d-4fb0-89e4-d714c4daceed",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0decb8bf-443a-43d9-bb2a-1d48e83e579d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7757676d-3a50-4411-9469-19579b0b395f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b244120-e3f4-4241-989a-517fc8dc2d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54ffb37-6b8d-4eb4-824a-192a95d9d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a914288-7353-4550-b2eb-6b389125caad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489d4328-bbeb-4647-a3f5-353b876e2dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8c8697-8c2e-4d57-81e4-57bb662fe9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c084a29c-9eca-4412-a1ef-05a698800790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd36c2-d840-43d4-985c-204441f7dbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdbbf8f-c5ee-4a17-ba10-0e25c939baf0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d2a2c-7b74-4764-89a0-a4033d886aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb567097-9a87-4668-a45d-67c3aa0d907b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bbccb4-693a-484e-a5e8-c85bca0d3351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a4cc6b-7f74-422b-87a7-aac41098e7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ebfb8a-3468-4ba2-8acc-3b6edc1f8783",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89996f55-e6a3-4d4d-bf3a-8497788cde9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62f8f06-eb89-419e-8b7b-ab3b96159317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bdcd9c-486b-4fcf-a08d-b708a6045765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69730316-da37-4426-bd0f-f1119c1f4db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c35980-4b3f-4f8f-83f7-f6ad2b4f526a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61660b-60ab-4a41-ada3-90030b442719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c6ff06-4e22-40db-a292-1c959cd9c2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928f520d-372f-4938-928e-eff3af96434b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aa42a1-5aa0-48eb-a03e-81921adbafde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992113b6-682f-402c-a0f3-65c8efdc3146",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbe5891-2475-4067-8276-60946a547f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e94dacc-9839-48d3-b811-7f39bd599da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf73a8f6-bb1d-4175-82c2-0be1c739afba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdff8fc-cb5e-450b-b38e-cab19edde663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a96976-1873-4e51-b685-459691329eba",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f580ec04-9f9c-4d9c-9301-5631b731c314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e6f164-dae9-45f1-8197-ca097239101e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bfef0d-4596-4d9c-bb39-50cd42bbc678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0157612d-899e-40b5-aa95-cdd6a68d7be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b798c0a3-114d-429e-afc5-bd7bc9084dab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d13a9-f95b-411d-9070-33e786de2dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0082cb0-14c9-43c6-9c2b-08b619b754a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4ea314-8fa3-46da-9d52-ce54d0606a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d77a8-6dc7-40e3-a08e-d98732991807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf82eb0c-38bb-4da4-8a52-e49d1965ddb1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c315199-c902-4c47-81f2-1ab5bedf19b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53148c5-f3de-43d5-b445-5081aae4a014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9859fe-b0d4-4d68-bc3a-c5a5eae25dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159fc356-9e4a-4ce7-b2e2-f1795be0865a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d802c71-4f6e-4695-bb91-90014657b430",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7b98c1-b801-4fc8-ad2b-3ec560f3bd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe21b05-6ede-437e-955f-37f74f94cff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a97226b-2e59-448c-b1fa-20355c3fa72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df239a9a-3a3e-4ba0-92a7-c37b9cece345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bf883b-eeb7-42da-baf8-6b619f1dc77d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6410e87a-dc45-41c7-bcc2-e08dd271cf47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e0c097-568d-4814-a54f-1afd354a1553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb14658-694e-4a71-880e-d14269e5de6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff08fe3f-8375-47e4-9b48-47f7204e52da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74e3e73-4a5d-438e-950b-e0d0078afc91",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c04cc-c1ce-445d-8b42-f894a04f5126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6fdce0-84c3-40f7-ad28-32f905b2cead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fc2329-461c-4602-8eef-5b031893b4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c6c83b-c424-4de3-a68b-b677b42652f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e84451c-710d-4add-acfa-6db1bce29d1b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9798ddba-26b9-44be-9a66-a9721fa27a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fe1d5d-12d0-4278-b47a-7d89f4dbf86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd3dc85-cbd4-42d7-8462-70eadef1e729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209dc587-6f44-419a-b535-dede9471dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739ba3f0-4a8b-43c0-8685-46342d762a03",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d13d280-b9d7-4143-9b38-cd4de6f311d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddc82ad-39d3-431f-982f-822f17dd7d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e072a72-4eaf-4f7c-a1be-efca8c0081ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1787c02-7ad3-438c-bf6e-465889cc4c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01191486-2315-4adc-a054-7f4d37997b10",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa9608-9865-41bf-947e-4a34ad162812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f4feab-111d-4f49-9a04-18aeab30e4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712a6b03-d450-4048-8fbd-c49a17a587a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d47b89-2b99-4e32-87dd-0628a26b2974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87811917-4f0b-46bf-a96b-8ce1a9575e96",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6331c338-8d90-4b10-86c7-c79fa4c3fc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796fb3af-4593-4945-a460-87da13358254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52a68c9-3a7d-4245-9d36-4389ffa448a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eced6494-1655-47a8-bbeb-53b35dc266eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f283f39b-2f7a-4efa-9319-9792e7d56f2a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f274c8-ea93-4e9f-a2fb-a3a6e2f1d317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961d7314-97cd-4fb2-a084-9bee02ec949c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f35ad9-1e37-4032-aaac-e12d5a842aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12f1d37-632f-44b6-a31a-91937a57f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f4dbba-7c9a-42ab-8016-f1bc9af0d650",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f42709-c73b-4e51-8587-50dfa2bc2d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a4c210-f6b7-4dee-af9a-2a04a965fb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b273bbd3-c660-4dc5-b633-3276c2b4df13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bbd358-6616-443b-b21e-b28519aeaeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3af8fca-9de7-411a-b620-b12af453b3a5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e56c98-124b-4cf2-910b-decd07ccc99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a121e7-6357-4a51-b6be-4f8585979ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e7c58f-b66e-452c-8dc1-6eafdb17ec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd2f150-e7a4-4469-8b9c-66de06d3f25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5145f8b-3bca-46d3-af19-79cffc4f8dc5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e3e93-1816-4203-912c-9879b24d3936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c815b2f-8811-4a72-9d90-11ee274976c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbc6270-3cac-4adb-9a45-9d2baafa3ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd4fe4e-6d20-45a9-a605-81c438fdc56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0600d774-6cc5-48b9-a9d9-f67c1f259fde",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031111ca-fedd-4065-979c-902b35b0308a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974d9593-304a-4009-894d-9433d203a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bcad78-791b-4c4b-ae8e-f67e58160cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a032b28f-e27f-4418-9478-9f51769645ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0085e6-d67e-4b69-a77d-6530e77772b8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa8e044-609f-4402-b422-5c2f11934791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30503be-7cc9-4aa5-b066-40890e2063a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8c6a1-75e2-46ae-85f0-2b330974c9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72014d85-3644-483b-990c-c1d7bf17b9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63204aa-39a0-49e0-8a1d-dcfc1164cb0f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dc6bbc-98ab-43c6-b161-f2e326edf794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05ea9a5-c2e8-472b-a820-ef4062962145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67eb65-c657-42f8-a626-77a15d4442b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e04a75c-2e27-40a0-bea3-029843883900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c84dc7-7518-4bff-91d7-dbda06ac13c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e7d35a-59d6-4543-9d39-27c3ce3a8726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d436fea0-b8fd-4a67-a472-36ca33e7c241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5818880a-9292-4636-9dd8-7b354fc8c0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ff60d1-8592-4e69-8e87-ec319b8cdea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cd1da9-d9d1-40df-ac1e-c5c77f9f10b8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9918a-3a50-40b2-8ed0-84d5073f46fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e72805-ae6a-47d7-b1b9-612477c65bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca7eaa-0fc8-4f0f-ade7-031e840fc4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e3020d-d65c-49bf-acd3-37d445ac34c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3491e89a-3ee8-4b07-98e0-0683b8c321d2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a99f94-7cbb-4298-8ee8-0a7b151efaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b07af2-4b7c-4f1e-92a8-9173c5b268c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a7c66-7103-41a1-93cd-340bc2ad97a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13bbb19-230c-4532-858a-c0722f10727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0388bb58-fb91-4664-b51c-2a41a1b98766",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c7418a-5953-40f4-ae72-cc745933ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf55750d-7895-40cc-9ac2-a2b5a6d03892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f946b8e-2386-40a3-80c1-b8dfbdff1cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd7ec0a-487b-400e-b40f-463bdf91187f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e92586d-9d7b-4189-8585-b05c9faa1327",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6e34b-c675-4ec3-ade6-633866750664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98de179-8588-43d3-9312-69b97a1b47b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4478a680-491e-459a-b8a9-6b6d0a2df846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1db2569-c385-4cfe-bb7f-b7fd2c7f5273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc532059-a094-4759-8434-77f7c1e74445",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d86ca12-675d-46e5-a1b8-6844aa53bf13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad378f5-6503-4396-bad7-a7bf9e3aec6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97ec57f-6776-45b0-81c6-3159bab42e66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f95e9cb-18b8-4e00-8333-62b7fa5509e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f80e8c7-e01f-44c3-a8b6-510d1830995d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a61b92-43cd-47f2-9706-8617240242d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8763ba22-a4da-4861-9de0-5ad9431d265f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada30a9d-e513-42e5-b3ac-3d4c2577b613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3760d5-48f1-4b4d-97e1-b5f13e2c2f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706da11e-108e-443b-9f2a-5006792b7852",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22627376-de7a-40f6-9a33-13809bc8a631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4c2175-3a9d-4ed1-8bac-9aa9925ef537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18823bb2-11aa-48dd-875b-5fd42330be28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babb0f9e-76dc-4b81-baea-3e5b43add8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e97925-6066-44c3-8364-99f340211e35",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7a9e1c-adb0-4e64-b9a2-8b4da8c3241c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd08ec0d-8960-4964-9922-fc414451fb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83637699-876c-48dc-a4b7-0fc6ff85c880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2c87ca-3669-4a6a-a5e5-85494fd5296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab8a507-afa9-4a05-b7ec-48c3d7d54b98",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34159afd-dd55-481b-802d-427027460479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ca9161-7a87-4117-80bf-6c7c35581348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dc5e7d-dd34-41a9-bbf8-de11ab88f855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa45bac3-b1a7-4e2f-8d9d-a83fdc33ece1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e59b554-4de7-494e-8cf1-317f041d0c36",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4604a-6147-4288-a18d-3070506e0797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9943abf-5f2b-4477-8fc2-b01e863b68e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1b20be-3640-43a4-9487-9b00512604d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b56e5c-89c9-4e77-bcb7-d754e4db0afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e926729-c4a6-452b-85b8-f2d1106a76b9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c369a008-5ba7-4389-821c-acc958a7008c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72abd907-3960-4b10-a851-67542fd6a0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de476fdf-e8c5-44aa-8562-ce0314fe3ece",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1928c3a9-82d5-4e77-911f-6f817df0209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc62a86-677e-4963-b69b-bcacb35e49c0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e4349-3e41-49a2-adee-82d612f80230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d72e0d-0398-4107-a62e-039344402e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0af2887-2b46-43ee-a0ab-cb4746aae115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e7a024-848f-43cc-a867-03f3c4bc9228"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acf4e001-8c82-4891-904a-5403da9c15e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d76f59d-33f2-4357-9594-2c2996c37f2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f45719e-c978-4431-9097-0adfc8f6a448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20a92e52-a07c-48de-b4fa-8b67dc3dd1ef"
                    }
                  }
                ]
              },
              {
                "id": "3943a709-a6f3-4ecb-8192-5d7d2561512b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe59284-958d-4bfe-9e8f-b9830cec8ca8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd56743-6708-45e3-9b1d-2bcec6be40c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2f68e754-04ea-4e21-8581-ead4d0b6595c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac9e160-6d67-49c4-9f46-2b6df23faf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3feef14-1be8-4c95-84c8-a7ee80c49fa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cd5ac80-8261-4466-ab66-6c8904d3aacd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bb8a099-7845-4dda-80fd-762c4bd10535"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0926e335-b385-4b1c-bfdb-dd5931615cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3cc6031-4914-4325-adcc-5ac4e1f140ca"
                    }
                  }
                ]
              },
              {
                "id": "1cae2128-4309-4688-bae1-ac2453639f31",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1123f3a9-d973-475b-8957-3d5387d3f410",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b170b6a7-8609-468e-9082-c3c84e7dec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e879fda6-3c62-4018-8e73-54e912971274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936789c7-a8e2-44a8-a3a9-f7d65feac7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ade07f-7d78-42e7-89d9-f710a8f10b5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "994d00c2-b47b-4068-b7f5-e05fc08b2485",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d28280ec-9de5-49eb-916c-0044b9758136",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af8ce3b7-e201-4b39-831a-895228e39221",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c311ddc-e4ba-4861-9659-8d5f97573e33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4564217-f093-408f-9cd2-fcf9ea507960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe4677a8-007c-4c2b-b6e2-b320b30141a6"
                    }
                  }
                ]
              },
              {
                "id": "3134eb63-be6a-4530-a2da-20abb33af3d1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4ec47e5-4ad0-4a2d-9e7f-0310ab2ca0dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a847aef3-768b-4312-82e5-bdfe2531e219"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "388fab5e-b354-4332-96be-3245bb45bfb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b44aba-55fd-4994-bf4e-682762d35ece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d97d1a4-daec-4f4f-a0e7-68df5f16c31a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5a530c3b-406d-48d7-acc9-d82545059d91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17bf83f4-cda1-4d54-b7d4-fb7d01a0cae9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df744656-388a-46c4-8c25-6d01b8682105"
            }
          }
        ]
      },
      {
        "id": "403f14d4-f2ef-4a51-be9a-d1bf56353554",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "750c0f72-a166-4ff0-a032-db72086130c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47328d90-8dc2-4429-ba4f-78485a17887d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed50e12d-c4f2-476e-a56d-0e3c9466b369",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4112dd-e95e-4b8c-be58-57fb66ad8af2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6dbe953-998d-4c30-a7fb-33ad9437987a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaecc33-ae6c-433b-80e1-42a326e0c5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edbff75b-7737-4013-ba18-ba61d57e8d2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "719ac58e-da26-486c-8be9-acfa328095fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8e1807f-c6cc-4fc6-8e46-37e4e9da4c7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db4e537-4097-4515-90b9-093227ecee68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f881b02-38b1-4d95-8803-26e7111c3c70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "311a7813-b3d8-41a2-a1eb-e034e28d7dad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e7db057-736f-4c61-9f66-66c667ff0d35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3f43531-049d-4b2d-bd11-cc2515b1173b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a821548-aef6-4a4a-b9a6-14f52755977e"
            }
          }
        ]
      },
      {
        "id": "c3f3e3c3-e812-484c-a2c0-4c2d802297e0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cc0994d5-9009-4adf-9885-b726091341a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ca1840d-e2d3-4a2a-b735-4e2583d91a2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68f71140-9f6b-45f8-bcad-1895ba52007a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dba4658-783f-42f3-bafb-a81bf362a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee9e7acc-eeb6-4130-b167-29a6ce7dcf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc32b30-94e9-4840-b3cb-6e2820677763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4f75936-dfcb-4f67-bcb0-31abe920db53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca5e2cfb-77de-476c-8f25-a4c8a3b86915",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f4a8c2-b7c0-4ac3-8b43-a59421800dbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "313f5209-67f8-471b-87e3-fb9069ddcdd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "591baf23-7747-4f72-88c8-2078e13716df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c718940-2238-4b83-a14e-e6f5f07de336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "433886ba-9bd0-405f-ab65-03626ea2234f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b55452b1-f223-4c5a-ac83-c1541945d41f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94741f3a-53b5-4a83-a200-5378cf29c3c1"
            }
          }
        ]
      },
      {
        "id": "9efede5c-ffa2-467b-9c55-ce632838a39b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5987a3fe-6c5a-4539-9338-f9c9c6fcfb42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d27d8fec-601d-429a-bdf7-afa19ba36f40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deb37a34-65b4-4ab2-a306-f81bf9f27e87",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634d42c-c38a-498d-8b38-a7414919f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0d3e2b4-1238-4cb9-aac8-768cc80d40bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82377e3-7e50-42cd-ad8d-a81b5dada2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f30394d-3090-419b-9143-10488925c8a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaefad0d-3af2-4509-a082-d563ad3a2a0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cc1572e-01a0-4b98-81ec-2e1469b1d738"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df83b2e7-80eb-4aed-b85d-a514081bed85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec0119f0-39c0-471f-8754-f2b803402517"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cba3d97-952e-4dbb-8e64-bbd4525cbc9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da3268a0-4c5d-46cb-9b33-fa4b775cd273"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ee1cdaa-96f3-47b1-bdfe-94fedad298cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "140f92b3-bad7-4425-97de-97428ce78c81"
            }
          }
        ]
      },
      {
        "id": "19c3c468-f410-4923-99de-a1a1b8b04e69",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "835dc14a-f291-4ad2-b637-8a38173439c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6378f9b3-4f3f-47bb-9d91-4aa4618e5686",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "887062bd-7d96-45c0-8993-1dabfc1d290f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc01e7ba-d3b3-4e4e-adef-32301f4c6769",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c0ad243-a3ef-4885-ad51-8ee3dd4040a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 353.63380281690144,
      "responseMin": 29,
      "responseMax": 9272,
      "responseSd": 1092.403619875239,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696898003922,
      "completed": 1696898117457
    },
    "executions": [
      {
        "id": "abacbf02-627b-433b-81cb-2bf8b0b0f7d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "940daccd-0630-4d28-9a28-e3c95b3b4226",
          "httpRequestId": "603e25a0-b667-4201-a682-1d1832f02cfe"
        },
        "item": {
          "id": "abacbf02-627b-433b-81cb-2bf8b0b0f7d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2d38313e-fa9b-49d2-9c59-963ed98eb186",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "ad519ea9-66fa-450f-b2c4-20a7a2db605e",
        "cursor": {
          "ref": "0b78ed8d-0077-4ed9-a521-9e88b182bb47",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "91a7395e-feb0-46c7-aebf-c3b89e6635b3"
        },
        "item": {
          "id": "ad519ea9-66fa-450f-b2c4-20a7a2db605e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "269f6791-7304-4e8f-9eca-de2c0698dc63",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 0
        }
      },
      {
        "id": "2d4bd16c-a50c-4a94-8ff1-24b79620e83a",
        "cursor": {
          "ref": "f55dda81-0aaa-44a6-a4bf-b2af9ba42342",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b9f5602b-3da2-4ca8-ab74-3fa6edd0673a"
        },
        "item": {
          "id": "2d4bd16c-a50c-4a94-8ff1-24b79620e83a",
          "name": "did_json"
        },
        "response": {
          "id": "5ae05a19-b029-4ec3-a281-36e3d2d5d11d",
          "status": "OK",
          "code": 200,
          "responseTime": 1577,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b61b743-f631-423d-a56b-60f4024864d2",
        "cursor": {
          "ref": "370dce1d-0372-4907-845d-3b8c16ff4e84",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e03c7adf-3f70-4a35-830f-9ac806553dc7"
        },
        "item": {
          "id": "6b61b743-f631-423d-a56b-60f4024864d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "d256ce07-612b-469a-a0b9-92a7bd1b50c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b61b743-f631-423d-a56b-60f4024864d2",
        "cursor": {
          "ref": "370dce1d-0372-4907-845d-3b8c16ff4e84",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e03c7adf-3f70-4a35-830f-9ac806553dc7"
        },
        "item": {
          "id": "6b61b743-f631-423d-a56b-60f4024864d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "d256ce07-612b-469a-a0b9-92a7bd1b50c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aadc130-cdfe-4b08-851e-069c6277d9e1",
        "cursor": {
          "ref": "55de75d0-1926-447a-81e4-7d1669e355ca",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "13d6c20f-9896-4920-8a19-6a30d0d34f47"
        },
        "item": {
          "id": "0aadc130-cdfe-4b08-851e-069c6277d9e1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "508081a3-b691-4677-8e84-8496930c69b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 318,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d696d002-dc81-4058-b9dd-9dc466f73fa1",
        "cursor": {
          "ref": "6e8de29f-c60e-41f8-b296-33034fcd0c88",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c3d4a50f-c8af-4097-a837-19dc4bc873fa"
        },
        "item": {
          "id": "d696d002-dc81-4058-b9dd-9dc466f73fa1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2202d763-829b-4dab-915d-c963e7b96978",
          "status": "Not Found",
          "code": 404,
          "responseTime": 263,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb1d97c-f1ee-4938-a379-3a5769234b11",
        "cursor": {
          "ref": "38ec521a-f644-420e-9cae-f19c4226a1e7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "252a3b47-623d-454c-9703-2f7f31ee90cf"
        },
        "item": {
          "id": "6bb1d97c-f1ee-4938-a379-3a5769234b11",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4cdec87c-1f6f-4534-b1e4-95c6b2fb55d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9363174a-258d-40c3-9e88-4751c1c83900",
        "cursor": {
          "ref": "046cc286-3fd3-4d1b-8bff-a2b1264448d6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b9e26525-b662-4489-9cbb-633225204ddc"
        },
        "item": {
          "id": "9363174a-258d-40c3-9e88-4751c1c83900",
          "name": "identifiers"
        },
        "response": {
          "id": "0e30a4c1-f81c-43b9-b5b7-95200b8c15a8",
          "status": "OK",
          "code": 200,
          "responseTime": 1352,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad4d185-7bbf-420c-83d9-0a1308cf6221",
        "cursor": {
          "ref": "b06bbff7-e522-4c87-a7db-7307b995044a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df3a721b-3f54-4bda-9120-7f4c5c27f044"
        },
        "item": {
          "id": "3ad4d185-7bbf-420c-83d9-0a1308cf6221",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca603a7f-da14-4817-9bde-b4933403f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f9c7eb-3176-44a4-ac53-52dd2998d32a",
        "cursor": {
          "ref": "105897ae-ba46-414e-8aa6-3232650613a2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4f0592b9-e5ea-4412-bea9-fc1802b9308d"
        },
        "item": {
          "id": "77f9c7eb-3176-44a4-ac53-52dd2998d32a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7e2959a4-314b-4ae1-9991-8b1bafa85482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c470fe8f-57b2-401a-aa94-9206f232aed3",
        "cursor": {
          "ref": "dc5d7250-a960-4396-b1ce-12f139f3b8e8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "906b029f-89f8-440e-9ef6-6bf5fdac3362"
        },
        "item": {
          "id": "c470fe8f-57b2-401a-aa94-9206f232aed3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d4b71523-a4d4-425d-98a3-ca0faeb1befc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b0b1b-8073-4455-bbb6-885dea0c476f",
        "cursor": {
          "ref": "88c6833f-852b-4202-a428-f0c36cb2cf10",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d8f8950b-4ee4-4711-bfe3-f6ac96cc967b"
        },
        "item": {
          "id": "b95b0b1b-8073-4455-bbb6-885dea0c476f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "989d13f7-19d3-4d2a-99c8-438e9d72688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1609e02e-2eaf-469f-b1d8-22ce89d22e43",
        "cursor": {
          "ref": "b8893db0-1d7e-42cf-a85c-3558db542134",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ece609c3-15ab-4db1-aa88-fcdc4162d759"
        },
        "item": {
          "id": "1609e02e-2eaf-469f-b1d8-22ce89d22e43",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0269df80-a123-4ee7-bfce-2b81facaf8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2534ef64-9440-4be0-84f1-925f3d1c3be5",
        "cursor": {
          "ref": "506f54e0-e45a-46e0-9684-e8b205e6e51d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c2e22e11-5840-4c40-856c-bc8180ba62b8"
        },
        "item": {
          "id": "2534ef64-9440-4be0-84f1-925f3d1c3be5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d65ca938-f8a7-481f-a66f-546cd071eea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42e41d0-9edd-4a64-9ead-debdd5f18393",
        "cursor": {
          "ref": "3fff7f7a-c1d9-4ea4-909d-7b9f2b201a53",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "47288846-9b11-497d-85a6-f86622d06e6e"
        },
        "item": {
          "id": "b42e41d0-9edd-4a64-9ead-debdd5f18393",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d88469b2-d993-4ba1-beea-6ef2e83ac091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa0d02-853d-4729-a6a8-c597e457c17a",
        "cursor": {
          "ref": "f5967f82-76c7-4768-8f3d-b43ae433cf45",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dae3bfed-e5cc-4a71-ac7f-11ac05dcec38"
        },
        "item": {
          "id": "71fa0d02-853d-4729-a6a8-c597e457c17a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "483383ff-4e59-4d65-9fe3-5ed7429e68f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c524d-456d-43de-bc02-998e8f9eb74c",
        "cursor": {
          "ref": "9b1e825a-2cf7-420c-b3e2-0529f8c4f333",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4848fec2-d15f-4ce9-b96c-b87d2f83d45b"
        },
        "item": {
          "id": "2c1c524d-456d-43de-bc02-998e8f9eb74c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d277334e-7c26-4129-a997-9a864b7760cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd04888d-5ed8-4665-a3e6-8394efc74e58",
        "cursor": {
          "ref": "1be6e33d-15c8-4336-8b5e-9425437f504f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "895b84e6-6dad-4fa3-9614-a86960b4cd48"
        },
        "item": {
          "id": "cd04888d-5ed8-4665-a3e6-8394efc74e58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f7002e83-e166-42cc-ab4d-62e09e002d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98601126-0964-489b-a78c-c437548a1d79",
        "cursor": {
          "ref": "256dace1-5917-4cd2-a903-c16f6720ce31",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "40b240a7-40c9-4783-9916-dfff5e9ae027"
        },
        "item": {
          "id": "98601126-0964-489b-a78c-c437548a1d79",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "22fed6e8-30fe-43b9-93ec-9371564d9405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cf65a2-3d16-4c44-b962-81e0c1b1c4bf",
        "cursor": {
          "ref": "0c79112b-bc07-4ae8-bf4f-489292885bbb",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e18159b7-b990-4b72-91bb-075b951f319c"
        },
        "item": {
          "id": "34cf65a2-3d16-4c44-b962-81e0c1b1c4bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ec28652-312e-43ee-930e-56b1f1a58795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b7bae-6b24-441f-a74e-a37325387eef",
        "cursor": {
          "ref": "3bc9ba24-ca70-443a-9202-ca93081fee64",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fef08ecc-4e7d-48ba-9e2d-0fd37fce0e09"
        },
        "item": {
          "id": "ce1b7bae-6b24-441f-a74e-a37325387eef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a9fba0b7-c05b-4500-9ee2-14797afe6db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591736c1-b154-4617-aeb0-6d43fe167488",
        "cursor": {
          "ref": "bd3d165a-1572-4461-8147-64c2267ea360",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f7518919-3605-44a1-b3fa-a0fe7cfe2f31"
        },
        "item": {
          "id": "591736c1-b154-4617-aeb0-6d43fe167488",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "800a7a89-5f37-4c5c-9020-6cdb5873aa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ffd7be-38f8-40f4-8000-0002c9b50dcb",
        "cursor": {
          "ref": "3fd187fb-571e-4d53-89b5-25c00f7b1448",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "45075557-24c0-48b0-be3c-649471efda71"
        },
        "item": {
          "id": "97ffd7be-38f8-40f4-8000-0002c9b50dcb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8e9e62c6-96a1-426d-b143-0126ee83bc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676c2c33-378d-470f-99df-b116b47daf8a",
        "cursor": {
          "ref": "f6740aae-08a7-418a-a303-a25ee493bb44",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e1fef36d-1035-4264-9b8a-ab801aa8f2df"
        },
        "item": {
          "id": "676c2c33-378d-470f-99df-b116b47daf8a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "992bf4bf-825c-4f4d-bc6c-8b78b9cb8910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05eed09-0658-4998-9b95-81579164c621",
        "cursor": {
          "ref": "52745197-31f3-446c-aec0-9d6e4b51af83",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "342a839a-99ad-49d0-bb32-bb8071ab1b67"
        },
        "item": {
          "id": "d05eed09-0658-4998-9b95-81579164c621",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fa0fb243-0849-48a3-bf2a-d63d663ace70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a92f43-c6be-42c2-b123-4077ed5b912c",
        "cursor": {
          "ref": "ca59b7d4-a750-47c0-9b55-84be5e85e6e5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51a874ab-a324-4eb1-b12f-36cb1cc3d9c3"
        },
        "item": {
          "id": "c7a92f43-c6be-42c2-b123-4077ed5b912c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9dcebe3c-5b6c-4440-a5c8-d3e47ecd7a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2d4d82-87ec-49eb-8ff0-5b15304c18b3",
        "cursor": {
          "ref": "d6cd0ef9-0b56-4649-93e6-7ccf2e2cff4a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eb369b50-a70b-472b-93e9-6d23764dc5b1"
        },
        "item": {
          "id": "4d2d4d82-87ec-49eb-8ff0-5b15304c18b3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ccbe0073-4440-47b9-98c9-1c77d7d98b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef01cee-33f3-428d-8fc6-27730df298f1",
        "cursor": {
          "ref": "8d54e6d9-3b63-46bf-a35a-762b74c6eabf",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7f702637-9508-4e48-a47a-23b1e12877b2"
        },
        "item": {
          "id": "6ef01cee-33f3-428d-8fc6-27730df298f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "697d19bf-05f4-4669-b479-40458c1085a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcc6f2-15d4-4bc3-bbaf-e81983bf2e8b",
        "cursor": {
          "ref": "0ea63ffb-26c9-4580-9400-68a0813f98a8",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7c27a22-6fd7-47b4-9288-e9cdc4b718d2"
        },
        "item": {
          "id": "78dcc6f2-15d4-4bc3-bbaf-e81983bf2e8b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "13223b51-428d-4e24-a8ad-1a92a06b03fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f704a-f7a0-4de6-bb90-ead4605332b5",
        "cursor": {
          "ref": "eb2b82b8-6835-477c-8fff-f7319662f176",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a704a50-1140-4e32-87e4-3058b46ad202"
        },
        "item": {
          "id": "b54f704a-f7a0-4de6-bb90-ead4605332b5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "52cb4175-1f86-4924-a476-7cbe9576b30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da21d961-2e3e-4693-843c-6b89a15afaf5",
        "cursor": {
          "ref": "ff50d191-3fd3-42c4-b57b-7266ac698d6e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e4d3ffdc-19a8-4cbb-873c-59044a2d9f41"
        },
        "item": {
          "id": "da21d961-2e3e-4693-843c-6b89a15afaf5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "16a5ce5e-8435-4e93-bb7d-0aa089e83cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6abfb71-568f-401f-a666-3c0c777ea268",
        "cursor": {
          "ref": "a2b1a29d-4a1e-4ef4-b0f3-02cbee27c0b9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2cb9292d-0b6f-4bb6-b1ef-e071b12b347a"
        },
        "item": {
          "id": "e6abfb71-568f-401f-a666-3c0c777ea268",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e44dd731-912c-4f46-adf9-6489e1becf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733753c9-2f86-4ad4-a05f-60e655294e8c",
        "cursor": {
          "ref": "c7169a84-6280-4e09-a30e-3e46b2867bc5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f181b2fc-bf1d-4868-bc8c-8b0d16b6427d"
        },
        "item": {
          "id": "733753c9-2f86-4ad4-a05f-60e655294e8c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "11e31beb-f5a5-45a8-a89b-98c1a83e1453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b9c878-a536-4d2d-a518-df3bb64b1a88",
        "cursor": {
          "ref": "685840c4-6ae8-4a1b-a92b-d1d89f1b1c18",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dbf9b6c5-bc30-4b57-88c7-58d731f7db13"
        },
        "item": {
          "id": "66b9c878-a536-4d2d-a518-df3bb64b1a88",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c15cd477-0a18-424a-8a0e-e9b658afd8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03843e4a-566d-4f9d-a807-fa884410dd2f",
        "cursor": {
          "ref": "becf186a-472e-4af3-8bea-3b064a66c328",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c2ac4ebc-d52b-49cc-b982-8301756d97fd"
        },
        "item": {
          "id": "03843e4a-566d-4f9d-a807-fa884410dd2f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dc73fb71-0819-4812-9968-365946d6a4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a75bed-16a4-4afa-a86b-9924add2b678",
        "cursor": {
          "ref": "fc70df09-32d6-4ceb-91de-ea0150140e8d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9031c9ec-8d6e-415c-9c2e-dcbbbd64e39d"
        },
        "item": {
          "id": "d8a75bed-16a4-4afa-a86b-9924add2b678",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f713e482-edfa-42c9-b8d0-50cdd504342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87495ea3-0a1b-4f12-a097-889386a55d01",
        "cursor": {
          "ref": "13143d92-8018-42f3-bda8-346d9ca4f553",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8bde61cd-9cbb-40c9-9912-5942a310150e"
        },
        "item": {
          "id": "87495ea3-0a1b-4f12-a097-889386a55d01",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0031fe9a-d6ae-494b-b9a1-9832b1109274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24af41fc-4ac9-49c9-9bcf-b2b731053e2a",
        "cursor": {
          "ref": "81b85f5c-2f91-4058-a063-576f40d7c377",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a631c20a-51f8-4234-b345-68636a591eaa"
        },
        "item": {
          "id": "24af41fc-4ac9-49c9-9bcf-b2b731053e2a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "138e79c3-fb84-4804-90ed-12908efff898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc946448-d67e-48b2-b80e-1599830eadd2",
        "cursor": {
          "ref": "d4cd139f-955a-47a2-814a-045f4a172759",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1bc00a8c-1caa-456f-8dc8-724f5bf9dedb"
        },
        "item": {
          "id": "bc946448-d67e-48b2-b80e-1599830eadd2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2f874f03-0024-4fe6-9ac2-6e914582f38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc69210a-3b47-4a71-b43f-4cb58d07bd56",
        "cursor": {
          "ref": "eb3511e9-dd84-4e35-b4b8-0064ee758475",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bb57134b-c11d-4b34-857b-e45e41452087"
        },
        "item": {
          "id": "fc69210a-3b47-4a71-b43f-4cb58d07bd56",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6812a7f5-10c7-4e1f-8bc1-40016683092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5206a839-0323-4734-8d8b-9fdc097c5446",
        "cursor": {
          "ref": "54f98edb-a358-40a9-a080-60d5f2fcb784",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f181990-dfb2-4393-82ea-53949aebdb3f"
        },
        "item": {
          "id": "5206a839-0323-4734-8d8b-9fdc097c5446",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e6fe2893-b6dc-4669-bae9-f1e6eb81eff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91ef043-db39-49c4-b96e-3fc4882a29f8",
        "cursor": {
          "ref": "09d3e42a-83bb-46a8-a076-a1dffd1b9279",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ea6247a2-fd27-4f26-aacc-9702a65b0c9d"
        },
        "item": {
          "id": "a91ef043-db39-49c4-b96e-3fc4882a29f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a0c69981-62c8-4f53-8fe8-7a303572e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd150b90-dd65-4588-88bd-dc15929db2d2",
        "cursor": {
          "ref": "8612799d-99c2-421c-998e-1ded75842019",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "18b45f07-66da-47d1-ae92-288a97886853"
        },
        "item": {
          "id": "bd150b90-dd65-4588-88bd-dc15929db2d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7e6504c0-af0a-4470-8ebb-937b1c9817ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a3f557-3803-4b17-add9-61c0eca51bbe",
        "cursor": {
          "ref": "440a5a56-e0aa-47d8-89c2-aaa02f31e992",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "954b2cc2-2267-4cc8-8281-e0d0356281d6"
        },
        "item": {
          "id": "38a3f557-3803-4b17-add9-61c0eca51bbe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed7074a8-46a2-499e-9048-ee91cca25707",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 617,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e429b-546d-491d-978f-3e2396819ce8",
        "cursor": {
          "ref": "ea5afe8f-b532-44c2-b9f1-d5e1d6ae8f48",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d2b48dc-cf73-47d5-8afc-aa3879cd87c7"
        },
        "item": {
          "id": "af1e429b-546d-491d-978f-3e2396819ce8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "af306945-dc38-4110-b54a-bdcbaeeb73cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e36de16-c4fd-44af-a3cc-bb375220bea3",
        "cursor": {
          "ref": "28532ec5-c375-418a-a1b4-5091b33a6994",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c8981a81-b55e-4234-86fa-50d3fc97c223"
        },
        "item": {
          "id": "3e36de16-c4fd-44af-a3cc-bb375220bea3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce915b3a-8f1a-4df2-a54e-19f9f098894d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54833304-1e12-4df3-a7d7-a79085e34b72",
        "cursor": {
          "ref": "829889a5-8523-4fbd-aaca-0273a9110400",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f813422-9ad6-4052-a451-aff2fd206b8b"
        },
        "item": {
          "id": "54833304-1e12-4df3-a7d7-a79085e34b72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ec4bd530-7cde-488d-9a38-08f8448ba71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c238cb-98fd-4863-9fba-4f4dd026be61",
        "cursor": {
          "ref": "98b04d4e-1239-4bde-a1fe-8c6b03bf96e4",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c041404d-4402-4b64-ba49-b54f3e1b1857"
        },
        "item": {
          "id": "37c238cb-98fd-4863-9fba-4f4dd026be61",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4198f441-9e3f-4a84-83c3-9aa8dd748e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f32f84-1fa4-4af7-8346-328458292b4e",
        "cursor": {
          "ref": "efc6942e-6f95-4bd3-b0fb-aa141b718239",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8e45425a-a5e2-445e-b17b-3ffbdb15eb3c"
        },
        "item": {
          "id": "69f32f84-1fa4-4af7-8346-328458292b4e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b9a848a-7b3e-4aab-935f-5b70716f8a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac91c95-ca7d-4f19-8ffb-f6ce8b96b1e7",
        "cursor": {
          "ref": "be5da528-2d22-496f-8f74-bdd7ac45ac2e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8454d651-dc47-40d2-83d4-aa15153a64ba"
        },
        "item": {
          "id": "7ac91c95-ca7d-4f19-8ffb-f6ce8b96b1e7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9137e04d-8a2d-44b3-9a1f-3e6e3f52728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b62a4-038b-459f-954c-e0708444b682",
        "cursor": {
          "ref": "9b592dc9-b789-4cdc-a835-32a253c742f9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98dd2f15-e0ef-473f-8e09-d5ea59643d94"
        },
        "item": {
          "id": "ea7b62a4-038b-459f-954c-e0708444b682",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63c41133-61f3-4b9e-9415-1d9871007244",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 639,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9215d264-b441-4de8-8e06-10b410cd9d58",
        "cursor": {
          "ref": "be148ce2-d547-4e80-874e-e00d9c37d484",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3b5bbdce-e0de-4ad9-8ee3-01b4c7c88bf4"
        },
        "item": {
          "id": "9215d264-b441-4de8-8e06-10b410cd9d58",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "84271c8e-ea50-4ff5-8d9c-da8f5e0b20ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7967ac34-f155-4a68-b6e4-0d43d29e5f63",
        "cursor": {
          "ref": "52c952e6-a6c0-4b45-b130-0a1da34c4825",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cb31d533-0d83-49bb-accd-d027633fba39"
        },
        "item": {
          "id": "7967ac34-f155-4a68-b6e4-0d43d29e5f63",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e79a8ed-20db-4456-8ea4-4654f764c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56d5ae8-6f25-4d56-80b5-1fdfedd057a6",
        "cursor": {
          "ref": "a611bf45-4fc0-480b-8a6f-e81c7b5a3341",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b02cc4da-a8dc-47ac-81b1-4a8999768d5c"
        },
        "item": {
          "id": "b56d5ae8-6f25-4d56-80b5-1fdfedd057a6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "032596f8-0c4a-4be8-9e19-911249f03fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f8d49-087e-473e-8cc1-6277d3876b60",
        "cursor": {
          "ref": "9c63dfa6-5b5a-4d10-91f2-7b14c7df872b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "296ffd28-66d4-470e-be6a-656137785727"
        },
        "item": {
          "id": "df9f8d49-087e-473e-8cc1-6277d3876b60",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7800cb8d-5fba-4424-ab54-3e8d09a2ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cb9954-c70d-48bf-ae2e-8590b748dd21",
        "cursor": {
          "ref": "1cc12be4-d1f5-4b0e-9843-077516cd40cf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7acb6353-9011-4b15-9e68-3fd0fe08aa45"
        },
        "item": {
          "id": "68cb9954-c70d-48bf-ae2e-8590b748dd21",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "84fb33b7-78c8-4eb2-b66a-da88d3cb8a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fda980e-ab0b-4ac6-83b5-413aefa95340",
        "cursor": {
          "ref": "cba7866b-725a-4827-8c77-c1360d1f81e7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2b92f17-9709-403c-ba16-e18d6a586efe"
        },
        "item": {
          "id": "3fda980e-ab0b-4ac6-83b5-413aefa95340",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0d4d7fa8-847d-4f95-bbb1-2e1a529b4f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92909dfd-a1fa-4589-a633-a71c6d870d3f",
        "cursor": {
          "ref": "72fcef23-b0fb-42be-a8eb-bc05903685f1",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fd73937c-d5c3-4d4c-972d-eecce541e4f6"
        },
        "item": {
          "id": "92909dfd-a1fa-4589-a633-a71c6d870d3f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ac4f6331-ef50-49f6-8fae-4b28f4ce5742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad551f9c-0508-4cf6-bb20-a30caf2120a9",
        "cursor": {
          "ref": "4a495b90-d46a-4b46-8d90-34616a04913e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e45c8c23-bfeb-48da-80e3-d40f03c4440d"
        },
        "item": {
          "id": "ad551f9c-0508-4cf6-bb20-a30caf2120a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "11571fc9-daad-4c3a-a93a-bf59d9995b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b4f2a3-57eb-4578-9053-510017b2892a",
        "cursor": {
          "ref": "7c1011cb-773d-4239-b3cf-ea56c0e8b3ec",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "04fc8b0b-866b-4142-af0b-b39df1204425"
        },
        "item": {
          "id": "f4b4f2a3-57eb-4578-9053-510017b2892a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1e5c9b74-a40b-429f-a47a-14e6c83b7d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27e9439-de09-4dcc-8e0f-4e216972b049",
        "cursor": {
          "ref": "17e9e38a-859e-498b-931e-e4ef075dda6c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0573d01b-bd67-403d-bbc2-e4729a5421e0"
        },
        "item": {
          "id": "e27e9439-de09-4dcc-8e0f-4e216972b049",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f218345f-b74b-4857-aaba-b74f248634ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbc06a-e5b2-4060-b3fc-f6b4056b7ddf",
        "cursor": {
          "ref": "96c55099-54c0-4c6e-aa8a-0e010f55a625",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c15743df-d297-4ed8-bcf9-16d5946b5789"
        },
        "item": {
          "id": "fcbbc06a-e5b2-4060-b3fc-f6b4056b7ddf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "58320e96-8873-43d7-a964-07442f1751a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b479314-1d8d-4a75-871e-db0accd7e839",
        "cursor": {
          "ref": "5b6aa5ad-cb92-48bf-8ff1-7e552d694452",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3f093ca-ac50-4d00-833d-66bab13b82e6"
        },
        "item": {
          "id": "3b479314-1d8d-4a75-871e-db0accd7e839",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7ca0beb0-aef4-46e0-93cf-3196b8fdaf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b95e06-2bd4-4e71-b85f-05885ef83399",
        "cursor": {
          "ref": "39fecbea-cd60-4959-9aeb-f6ff09936c7d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a3c09b1-19f1-43b2-9025-8f491331323f"
        },
        "item": {
          "id": "70b95e06-2bd4-4e71-b85f-05885ef83399",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2fc8f802-0d79-4af1-b447-a84e97e745b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9aec30-7ed3-4d16-91b3-54643ec0b2ca",
        "cursor": {
          "ref": "0ae8c581-99c6-4da2-884d-47bda67ebdae",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "61bf8d69-5e17-4a24-9024-fba5dd617cde"
        },
        "item": {
          "id": "2d9aec30-7ed3-4d16-91b3-54643ec0b2ca",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58c452a3-e961-4169-b8ae-909c72cab57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5540b2a0-b299-4c17-94fa-98247ff0b864",
        "cursor": {
          "ref": "ee1c785c-d500-46c6-904e-b795ee36ac5b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c109432d-a1d8-4b78-8c27-f21f0559a8f3"
        },
        "item": {
          "id": "5540b2a0-b299-4c17-94fa-98247ff0b864",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62f01454-2e19-49bb-a491-6694d974a800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa67f89-9162-4e4e-8a48-919718777b29",
        "cursor": {
          "ref": "5087cb01-2f6e-40ab-b078-f23a38d0e92c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c7be442-629d-4d8c-8ce5-7bfe060e84bc"
        },
        "item": {
          "id": "2fa67f89-9162-4e4e-8a48-919718777b29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "51209211-8ec3-4a4a-ac30-e303f04ae22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6312709-044c-4587-ae26-0c66d2d90751",
        "cursor": {
          "ref": "30931b19-b340-4e02-936e-854b5c4c4ab0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "84f6b019-4142-4dcf-b49d-c54794abae23"
        },
        "item": {
          "id": "f6312709-044c-4587-ae26-0c66d2d90751",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "72a8b977-e302-4f97-bc50-e06ab95a5b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c384cf4f-4d25-449e-8eae-901f88b3eb37",
        "cursor": {
          "ref": "9257e28d-ba7b-4b1f-987e-d82f0ca3bb2c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "455540ce-c989-4753-b6c1-2c9872f0ee58"
        },
        "item": {
          "id": "c384cf4f-4d25-449e-8eae-901f88b3eb37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a196b45e-5311-4cf8-9650-c047fdf267a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf48f9b-bd15-416d-a8ad-71254985fdc6",
        "cursor": {
          "ref": "ff927b19-82a6-4392-948a-7f3bf1894816",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "43c51b2d-60ab-4ecd-b1ae-01fc61eecdb8"
        },
        "item": {
          "id": "aaf48f9b-bd15-416d-a8ad-71254985fdc6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29f77716-b482-472d-b038-ae9ad394e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef949a2-4e3f-4e53-98ba-7918587db055",
        "cursor": {
          "ref": "281a8b6f-da47-4112-b1ff-93948238e171",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4f652165-32f9-4cbb-bb62-c23aa79b6f3a"
        },
        "item": {
          "id": "aef949a2-4e3f-4e53-98ba-7918587db055",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c362c887-b766-400e-ab68-f21beb6ce1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e5af6-9fd8-4a49-bdf8-2b6c65569a58",
        "cursor": {
          "ref": "0ead4cc0-1eab-4a2e-9b48-e929bcfa9606",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c531d71a-2370-46a2-af52-1189b605a241"
        },
        "item": {
          "id": "b67e5af6-9fd8-4a49-bdf8-2b6c65569a58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8b0f1c8-d88d-4234-95aa-d1fe51ffd65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eb246e-2225-4dae-b841-f4511cf443c7",
        "cursor": {
          "ref": "0d1bd65b-14fe-4c48-9001-a2e2f1be402d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d3c261c-d050-4787-9610-b8d82b430ec5"
        },
        "item": {
          "id": "58eb246e-2225-4dae-b841-f4511cf443c7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42001b25-077d-4a59-9f70-2d804dfd2220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf01f4ac-83ee-41a2-85f0-1fe3e910071f",
        "cursor": {
          "ref": "4596dbcb-9bdd-4647-b7d8-5c443068b5ae",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "94d585f4-f7f5-4593-895d-521204e697ff"
        },
        "item": {
          "id": "bf01f4ac-83ee-41a2-85f0-1fe3e910071f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "26693b28-24e0-4b33-bfcf-4fd6ed2d7b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc6db97-85ed-4643-9c02-813b56f2313b",
        "cursor": {
          "ref": "1a135332-e685-4b63-8402-00f6bf365058",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25cd57e4-aa45-40c2-b015-ca2753aa4f9d"
        },
        "item": {
          "id": "5fc6db97-85ed-4643-9c02-813b56f2313b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ebb75f1-e9c6-43df-ae1e-72526fea92f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dcda3f-92ac-4b61-8374-5dda79d35525",
        "cursor": {
          "ref": "a8099e85-b6e2-41fd-8f69-720a2fe842bc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ad372c68-6440-48bb-a0fa-2ae43bdfe881"
        },
        "item": {
          "id": "62dcda3f-92ac-4b61-8374-5dda79d35525",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2f87a81c-12ce-4193-b784-4c014c282c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa20144-d66b-4a77-814d-df8024e6aac1",
        "cursor": {
          "ref": "f3952843-3cc2-490d-b3d7-88815aa1f400",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1db2e296-aa88-4112-ac1e-9e530020fc5d"
        },
        "item": {
          "id": "1fa20144-d66b-4a77-814d-df8024e6aac1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0c11ed3c-d430-475b-921f-0da12f8540b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeae7b8-2cd2-43d7-b3d8-701cedc4b339",
        "cursor": {
          "ref": "1693f00b-736e-48a9-8f9c-ffba2a1c4901",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "580256be-0aea-4848-a235-5870842866bf"
        },
        "item": {
          "id": "3eeae7b8-2cd2-43d7-b3d8-701cedc4b339",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6338eb01-4f9d-43ac-aea5-d5695d6b5028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73257e1f-37a1-468e-bc69-97c927e17641",
        "cursor": {
          "ref": "013e4b3b-22dc-4f9c-bd0f-e4d94b9f9689",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0579b56d-42b6-4af8-8ec5-2ea66217d8c4"
        },
        "item": {
          "id": "73257e1f-37a1-468e-bc69-97c927e17641",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "68577cc8-d717-42bd-a72a-63a544e22ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b742b6d2-f53d-434d-a487-fc4b22b2cc65",
        "cursor": {
          "ref": "4e2c4183-b06a-47cd-9b86-cb3fd8f44fd5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5be60ddf-db37-4fa4-be60-dc8ab5b6f599"
        },
        "item": {
          "id": "b742b6d2-f53d-434d-a487-fc4b22b2cc65",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "13ad5e3e-44e1-416f-a82b-feb21ef9f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8b1e44-0d2d-4200-ab9c-7e201a693ee0",
        "cursor": {
          "ref": "479308fa-aad7-43ba-8fe9-472031a8d36c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "282d4f89-f683-4d95-a289-41a50f7ca01e"
        },
        "item": {
          "id": "cb8b1e44-0d2d-4200-ab9c-7e201a693ee0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "63aeab52-50b6-4474-91f4-48f056171207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e435120-ee89-42b1-952a-699790f1c15c",
        "cursor": {
          "ref": "071f2350-dabe-44ca-b685-d36b10103c9b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f8dde8ed-4cda-47c6-bcce-3174095e2ffd"
        },
        "item": {
          "id": "4e435120-ee89-42b1-952a-699790f1c15c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b531ec14-05bb-4243-bbd9-4557868eeb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31f80d8-2ffe-4ccc-bd8b-e7bb24f4f035",
        "cursor": {
          "ref": "f7e30301-ae02-4474-bbc3-28ec7fc3ed0d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f1415896-f5a0-461d-afea-3d4f2b196970"
        },
        "item": {
          "id": "c31f80d8-2ffe-4ccc-bd8b-e7bb24f4f035",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "543afeff-0fa4-4ad0-970d-fcc38b89de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f561ac-a6cd-4476-9524-d732dbf2d47f",
        "cursor": {
          "ref": "5421888d-7b8a-4178-883d-30aed7ad4065",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b2364989-66f4-4264-834d-ef0e206c5432"
        },
        "item": {
          "id": "44f561ac-a6cd-4476-9524-d732dbf2d47f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b0d25763-a881-48b2-876d-f9a1805dccc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62235242-b8ac-4d6e-89f5-9381e8e7641b",
        "cursor": {
          "ref": "b03a4334-3121-4229-86ef-84f1754881f8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3bc42868-b6dd-4080-a1fd-f3e2af8a1d64"
        },
        "item": {
          "id": "62235242-b8ac-4d6e-89f5-9381e8e7641b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09343c63-cb71-4aec-bbac-c249f5a93454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3ab847-41d6-4fc0-882f-cb929e48a7c8",
        "cursor": {
          "ref": "bc6bad3d-9987-415d-8b73-e90393ae8322",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5e8817ca-60d8-467d-983a-c8133bc2dc9b"
        },
        "item": {
          "id": "bd3ab847-41d6-4fc0-882f-cb929e48a7c8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4f739dd8-c521-41cd-8c97-e1864e204bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfe9483-d6dc-44f8-8340-ab725a8b0ceb",
        "cursor": {
          "ref": "0c3d9310-feb3-451e-b572-b3e53ae6eab2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a3aab1a8-f071-4256-856a-8475ea7d72e3"
        },
        "item": {
          "id": "4bfe9483-d6dc-44f8-8340-ab725a8b0ceb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4ef1676d-631f-40df-858c-287074abeefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c80be3-9d0f-4b98-a239-f5afc6c43f57",
        "cursor": {
          "ref": "397fd154-0bf2-4320-924f-5c36a7744afe",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d1364a62-84d5-4519-88c9-de58db0823a8"
        },
        "item": {
          "id": "48c80be3-9d0f-4b98-a239-f5afc6c43f57",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5e4b5093-9db2-4dda-bc91-2bf8a0e4304a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9706f5-7e8e-459b-b868-9a8922ce1a6b",
        "cursor": {
          "ref": "0d4b0946-0f95-47b8-889a-a471b18810da",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98c1974d-2174-4714-b69d-265a0a0adcea"
        },
        "item": {
          "id": "7c9706f5-7e8e-459b-b868-9a8922ce1a6b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "06dc5a03-c2ef-4798-9cf9-42bf2f940f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0726c39f-e8d3-44bc-90d8-2d3278848bab",
        "cursor": {
          "ref": "dceedc38-79d1-4cff-a19a-b112606e167d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a7d683cb-d77a-472b-97ac-c11d5cf79533"
        },
        "item": {
          "id": "0726c39f-e8d3-44bc-90d8-2d3278848bab",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "62cf4f59-0347-4067-ac78-d5315157a77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb836b-e7c1-441c-80a6-bc579cbf755f",
        "cursor": {
          "ref": "b8174f61-79ca-469c-9c91-6b7b41edb540",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6da8ce04-ab40-4fec-a375-2a45cde355e1"
        },
        "item": {
          "id": "0bcb836b-e7c1-441c-80a6-bc579cbf755f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e9c9f88a-4409-46be-9fa9-407934276274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006f2aeb-d21b-4940-bbaa-27cd88a393c1",
        "cursor": {
          "ref": "1c8ad6e1-f30e-454c-a898-1e868b316b95",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d1e8bee9-63f4-4117-8e43-caa91293eb65"
        },
        "item": {
          "id": "006f2aeb-d21b-4940-bbaa-27cd88a393c1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "987a6142-9968-40ea-a62b-63ec68dc9dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ce395-163b-4277-b13b-49c85d8b1c97",
        "cursor": {
          "ref": "7469f0e6-d9e4-468e-9831-913411f756eb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b4e6756-836e-4954-adf1-b8ad72534b94"
        },
        "item": {
          "id": "3d5ce395-163b-4277-b13b-49c85d8b1c97",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b66deec8-d540-4a5b-ba0f-fcf5fb6a65d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a41d6e0-9c8c-43df-9420-1334f963261a",
        "cursor": {
          "ref": "d367e767-3b03-46a7-b5fb-2e81ff0d99ae",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff45f167-c5a8-4886-b4fe-1e76f31ee765"
        },
        "item": {
          "id": "2a41d6e0-9c8c-43df-9420-1334f963261a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "533cbed9-f60d-48a8-860a-f4899192bf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d969decb-5ae7-433e-a3bf-6ecca44f53f3",
        "cursor": {
          "ref": "41440696-1d63-4262-94e0-9a0e3fcb96c8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f4c7f13-0788-46af-b321-9622d3c2e872"
        },
        "item": {
          "id": "d969decb-5ae7-433e-a3bf-6ecca44f53f3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ed42a5a-abbf-4eb8-bb7e-6a2e1fd912be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff49b9e-6269-4ffe-ae45-b2adae35f5a6",
        "cursor": {
          "ref": "5d427abb-e748-4555-ae01-dbae09c23a60",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3d3be5c4-a007-43bd-8284-48fa8a32d4b9"
        },
        "item": {
          "id": "3ff49b9e-6269-4ffe-ae45-b2adae35f5a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6e5a7708-45a1-4be5-8c67-6e6517d2839d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51cd7e5-47b7-4f8b-b4ee-b3b2ebaa123f",
        "cursor": {
          "ref": "be7d3eb3-3d4a-4105-b252-913c71a7de0b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b4f2e29a-d682-4655-804d-c9388f5e5901"
        },
        "item": {
          "id": "f51cd7e5-47b7-4f8b-b4ee-b3b2ebaa123f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d46d0f51-e9b7-4ca6-a80d-da802ba62c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a73fcc-2570-4aaa-8112-9010baef2e6a",
        "cursor": {
          "ref": "27d732f3-95c5-4b55-8b33-96cbe8ad3731",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "972ccf95-9a68-4feb-bece-c761b8e667e8"
        },
        "item": {
          "id": "57a73fcc-2570-4aaa-8112-9010baef2e6a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0715b3f1-2a72-4887-bec8-d1db90704faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64826ad7-fee8-40f4-a897-32e5d20fd4d9",
        "cursor": {
          "ref": "7c749b4b-8854-434e-bd1f-159584b49206",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "49d89ecd-c900-41ce-a47a-444fd796507a"
        },
        "item": {
          "id": "64826ad7-fee8-40f4-a897-32e5d20fd4d9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "728f4f33-3b57-4429-8f93-d2a0dbb49b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77347379-812a-4715-b381-bda139fd5b3a",
        "cursor": {
          "ref": "3287177e-a8d0-431d-9cfc-d4b0d50ac5c7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4e99549b-c32c-45ba-9436-a698e3b8fa66"
        },
        "item": {
          "id": "77347379-812a-4715-b381-bda139fd5b3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e43ba365-aeb2-4f97-815d-bcfe38a70780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3480cad-abdd-47f6-a59c-6e3be73fd465",
        "cursor": {
          "ref": "1e7df264-955d-4eb8-8924-ee3c184b22cb",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "72239a6a-3c97-4f3a-9c35-deeb2f09c037"
        },
        "item": {
          "id": "d3480cad-abdd-47f6-a59c-6e3be73fd465",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "80bf932d-ed09-4501-a5b2-d33ec0a48038",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce437d47-e34f-41e9-8420-b1c634e0256d",
        "cursor": {
          "ref": "dc49e8f4-b146-43dd-837a-9a9141c76767",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a07a8c8b-87eb-4736-93b9-2fa21cebd224"
        },
        "item": {
          "id": "ce437d47-e34f-41e9-8420-b1c634e0256d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2c21afd5-5451-4e4a-be4a-efb301cf94ce",
          "status": "Created",
          "code": 201,
          "responseTime": 8544,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa47077d-1a66-43de-b543-d20d66eff318",
        "cursor": {
          "ref": "62cacc5b-ff58-4e4c-acba-2325009efe0d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0247e061-b73a-4a29-bfef-56b02d2c7e0d"
        },
        "item": {
          "id": "fa47077d-1a66-43de-b543-d20d66eff318",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1442fe62-7749-4558-913f-8b34455bd6e3",
          "status": "Created",
          "code": 201,
          "responseTime": 7993,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "308af3b7-0779-45dc-bf8f-b1b28bd91995",
        "cursor": {
          "ref": "74ebd6c8-0764-41a8-a14c-9616e032ce55",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ca3c293d-25b6-4eae-908c-b90267f0b177"
        },
        "item": {
          "id": "308af3b7-0779-45dc-bf8f-b1b28bd91995",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "275d3b4c-3653-445c-97c2-a81a052f2d2f",
          "status": "Created",
          "code": 201,
          "responseTime": 9272,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c947a3d-ac34-4c51-9559-0ce8d9524886",
        "cursor": {
          "ref": "3bc25537-2c8e-4af8-a0d7-d6e8ffe8b3e8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c4f43e0b-a181-4c12-be1e-27eb865dcb38"
        },
        "item": {
          "id": "1c947a3d-ac34-4c51-9559-0ce8d9524886",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "742c09bb-cea3-49b8-a00f-7717af19b369",
          "status": "Created",
          "code": 201,
          "responseTime": 7863,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c302ae-6123-4470-9948-35b48c921d9c",
        "cursor": {
          "ref": "1f6a9625-4ab3-4c9b-9acf-dec4a3d4fa8c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bd0b6048-4b8d-4446-a214-f9f02b88726d"
        },
        "item": {
          "id": "03c302ae-6123-4470-9948-35b48c921d9c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8327c79c-61ae-4be8-b3a4-822d67141e6a",
          "status": "Created",
          "code": 201,
          "responseTime": 7887,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c532c8a-25b3-44a7-b239-f172ced46a36",
        "cursor": {
          "ref": "c7df7922-d49c-400a-8edd-e70583d18d9f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "26f688c8-dfe1-4abe-a2e0-39ba84a7b882"
        },
        "item": {
          "id": "3c532c8a-25b3-44a7-b239-f172ced46a36",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6541c202-4607-4419-b354-3b92ce07c99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1c37f27b-a9c0-42e9-840f-2afbd0a1eed0",
        "cursor": {
          "ref": "5fa2a90b-25eb-44b1-b41c-5537230213e6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e0974d91-dc57-46ab-aeec-8866bacb1a85"
        },
        "item": {
          "id": "1c37f27b-a9c0-42e9-840f-2afbd0a1eed0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c2843a45-31e6-44f3-948c-4500292b0a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4010c884-b056-4e0a-814c-4c42358ff360",
        "cursor": {
          "ref": "6cd24356-f1f3-4050-83a9-0a9753e6724f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8b5dd12c-aa56-4329-b58a-a3f1a6fde11d"
        },
        "item": {
          "id": "4010c884-b056-4e0a-814c-4c42358ff360",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "43253632-5f79-4103-9525-25371c027c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723b239e-fe45-4686-af85-d1cd30ec0cfd",
        "cursor": {
          "ref": "e255f438-ced7-4bc3-95d0-e2d5c24f1df4",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "270e21ab-5586-41c7-9798-e1de10daa61b"
        },
        "item": {
          "id": "723b239e-fe45-4686-af85-d1cd30ec0cfd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc58cdb2-7318-4d52-8797-bef3a6b1ea73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4f3041-1e3d-4ad4-ac76-c0843a51775d",
        "cursor": {
          "ref": "7c0139de-4889-4655-9a11-5448e79b1ec3",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8d61924c-0125-4438-99ef-c5e64006fcc5"
        },
        "item": {
          "id": "3d4f3041-1e3d-4ad4-ac76-c0843a51775d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40b25b23-3695-476b-8928-09327a8ef25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fac8c8-96d7-4df2-8b0a-3a899c401efd",
        "cursor": {
          "ref": "663957c7-7de8-438b-afd4-195a659aea10",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c7db0d22-b1d1-4a7a-aa3d-a18ce6b282a3"
        },
        "item": {
          "id": "72fac8c8-96d7-4df2-8b0a-3a899c401efd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a921d564-6450-4390-b0c7-8fdabccc570e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9621157f-0dab-4386-a79a-4374bebbbfb1",
        "cursor": {
          "ref": "717cac1e-484a-4a7c-95e4-4d51f06829e0",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b56064ef-e900-4018-898e-b098e78286e7"
        },
        "item": {
          "id": "9621157f-0dab-4386-a79a-4374bebbbfb1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "07f84020-13b7-412e-a7ca-523fbdbb0c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ea793c-c785-4fed-80b9-b13fe2749878",
        "cursor": {
          "ref": "47bf6abd-2709-4dae-aaf9-4f52e7b459d9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "19d7619f-6817-46bf-998e-d6db6cde573d"
        },
        "item": {
          "id": "e5ea793c-c785-4fed-80b9-b13fe2749878",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2d43fcb-0839-4ab8-9492-ce69a13203ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64897133-9833-402f-98cc-6384fbf3eaec",
        "cursor": {
          "ref": "aa5afe3d-44eb-43a7-84fa-3be9d094d9d9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "46a1f149-d674-44cf-9b84-aeac37378e61"
        },
        "item": {
          "id": "64897133-9833-402f-98cc-6384fbf3eaec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a19f2174-8b04-494f-ac25-440c8b87ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6aff20-c8a3-48ee-9ea4-bb9a02e5cc62",
        "cursor": {
          "ref": "c1b365f1-8b68-47af-96fa-4dea075ce6f9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d11b657e-85d1-4346-8921-26ba04e62516"
        },
        "item": {
          "id": "0f6aff20-c8a3-48ee-9ea4-bb9a02e5cc62",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b285d954-c541-4491-8b9f-60fb6e1b8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5e406-ac13-4c5d-a796-1861bd174607",
        "cursor": {
          "ref": "7c820d9b-0254-4039-800c-44d6b13b3546",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8037ec1-81ab-453e-8baa-48352b7514d8"
        },
        "item": {
          "id": "cec5e406-ac13-4c5d-a796-1861bd174607",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a9faeebf-985f-40f7-ad81-072d1922b08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36534f1-61a9-4ef3-ae7f-a6df5dc9dc26",
        "cursor": {
          "ref": "d670896f-98be-44a0-bd0a-10421f025d38",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "08248eca-1a89-457f-889f-9eb51fff7ec4"
        },
        "item": {
          "id": "a36534f1-61a9-4ef3-ae7f-a6df5dc9dc26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f5d52cbf-2658-4b15-bab7-9cda4be94af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69da4273-d2bf-4231-bd99-eb9dba8410a3",
        "cursor": {
          "ref": "7c917b40-c8dd-4657-b0e9-b0d14df39ee8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0418d77c-0b6e-4ac8-bb93-8f5018c734e0"
        },
        "item": {
          "id": "69da4273-d2bf-4231-bd99-eb9dba8410a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4fec279c-e912-418b-9c4c-da193170e874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daf360c-4acb-4fcf-aac2-6e8a1c2b9c9f",
        "cursor": {
          "ref": "a847f0d4-8c08-4c31-9b8e-c4e13d20c19c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5410d426-d3cb-46c8-9297-24a3b604112e"
        },
        "item": {
          "id": "4daf360c-4acb-4fcf-aac2-6e8a1c2b9c9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb5924b8-c1f7-4cab-abb1-f1527eea1866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0365ae2a-5bf6-46cb-93f0-baab1a548272",
        "cursor": {
          "ref": "445d4d26-7b9c-4090-bb5f-bbac80639fd2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f4a575ca-2b97-4e4d-8cd6-a73756dc8a6d"
        },
        "item": {
          "id": "0365ae2a-5bf6-46cb-93f0-baab1a548272",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "45ecc9b1-e4e4-470c-ae97-70f5b068ebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4081c47-8b71-4e99-9ec6-a32a8f68c891",
        "cursor": {
          "ref": "6e0920a3-b33e-4c75-8b94-1fbc9aa0307b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b0aa2d37-19ec-4e65-880f-9939fdc55b7c"
        },
        "item": {
          "id": "b4081c47-8b71-4e99-9ec6-a32a8f68c891",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ffd57b40-c025-40ca-ba96-0b8c4a6e94b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a575351-53d3-4b9f-b936-c1a0c5fc6f2b",
        "cursor": {
          "ref": "5784b393-1b09-4f36-ae2f-6d9dd2b785b0",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8aecde49-78b5-4a72-b6ca-9c2da53f5500"
        },
        "item": {
          "id": "4a575351-53d3-4b9f-b936-c1a0c5fc6f2b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9596ea5d-cac3-4686-a27f-b7997d8a60f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a1dc0e-6e5c-4dc3-b3f4-f9fb506f0e8f",
        "cursor": {
          "ref": "1a354673-ef09-41e3-9f5a-d65f5ad1a6bc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7d611ec3-1cb4-438a-a391-35b56f959755"
        },
        "item": {
          "id": "10a1dc0e-6e5c-4dc3-b3f4-f9fb506f0e8f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c283429e-3665-4563-b7fc-acfa21707055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0060f8e-0352-4912-8477-917a0fa1ab20",
        "cursor": {
          "ref": "b93ffade-03e1-4e92-abe6-80ea5bd4b1f7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "299e8da7-0ba4-4006-bf8d-0f740bec2013"
        },
        "item": {
          "id": "a0060f8e-0352-4912-8477-917a0fa1ab20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "585daeb2-a8b3-4017-af7e-63ca505ae82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d5bda5-3c82-4167-85a4-fd8ed70152bc",
        "cursor": {
          "ref": "362bba13-6cbe-4f94-b28e-feebc8feba86",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cfeacce9-09ad-406a-8110-badfa9b393b9"
        },
        "item": {
          "id": "30d5bda5-3c82-4167-85a4-fd8ed70152bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "034b4041-a2dc-496a-8f51-db6acc8a4138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b005ae-c6b2-441f-b063-96d57a06d4d9",
        "cursor": {
          "ref": "299d26f3-cdb0-4bed-aeca-8db0f6473dd0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16e6a33b-ed49-450c-9a35-6d66833b7f4d"
        },
        "item": {
          "id": "b4b005ae-c6b2-441f-b063-96d57a06d4d9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa28d0c8-fb17-442f-83c8-2bd424418d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6a5043-a761-4dff-979f-7138171eb5ee",
        "cursor": {
          "ref": "da94229d-f1cd-4057-980d-b6fc63121b8e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "806f2b4e-9052-4a08-adcd-c72b10b64962"
        },
        "item": {
          "id": "ee6a5043-a761-4dff-979f-7138171eb5ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db43dfbc-cf03-4af3-9ab6-ac0a07f1208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272945b8-710e-4953-b848-9ecd671cc158",
        "cursor": {
          "ref": "b19825ea-c61f-4746-9fff-1ff2d2339fb1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e7fd69ea-fce9-474b-a29f-6fc5df2a0bc9"
        },
        "item": {
          "id": "272945b8-710e-4953-b848-9ecd671cc158",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9949f47d-1b98-4b29-8112-b74977b576cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace951b7-7822-4cf2-95ba-0f4b14ddcc2c",
        "cursor": {
          "ref": "dda0b52d-8d2a-4924-8d2a-da5dc2c0f47c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7751764-b1ea-4dd0-9ae3-87119336d763"
        },
        "item": {
          "id": "ace951b7-7822-4cf2-95ba-0f4b14ddcc2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9beb7f55-7f48-421d-bae2-4ddf0a7cf85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f33af00-3bb8-45e4-86bb-ba111b1bcba6",
        "cursor": {
          "ref": "17f8e2a8-3f3e-4993-9212-2a5900f3b809",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "da007ff4-04f8-4401-bba3-4004275be854"
        },
        "item": {
          "id": "0f33af00-3bb8-45e4-86bb-ba111b1bcba6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a5e51aba-ab2d-4c69-9a49-a9ee7367bdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15ed318-bff5-41e5-bc55-6ec8db8ea005",
        "cursor": {
          "ref": "174b2aa9-ed61-4ece-8a4c-6b97499bd276",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b157776b-2776-44fb-8ca5-c0ed914e9759"
        },
        "item": {
          "id": "c15ed318-bff5-41e5-bc55-6ec8db8ea005",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2452c3c3-3e26-49f8-8b4a-d9c442f7ff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b5735e-314f-4c98-b0bc-643a3a2e5190",
        "cursor": {
          "ref": "387a4089-c937-4c0f-95ab-1c624f0fa204",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7d066ba7-b037-45df-a660-53d0db7a5a33"
        },
        "item": {
          "id": "17b5735e-314f-4c98-b0bc-643a3a2e5190",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8be4e126-e950-495f-b95b-021703721c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb30e98-d423-438e-85d3-14467e861ceb",
        "cursor": {
          "ref": "faf1878b-18f9-413c-8f4e-1222757bd97b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "882cf50d-5e7e-4477-843e-bff22e679ba0"
        },
        "item": {
          "id": "0eb30e98-d423-438e-85d3-14467e861ceb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "785da9b1-ea0d-4148-87ae-4d1734fcc294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91872e-a72f-4704-9e5a-c4adc73a4ddf",
        "cursor": {
          "ref": "d287e773-be0b-4af8-abb7-41519e4ba242",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "668da9cd-74c4-4ce0-ad35-4e81cf8a3e91"
        },
        "item": {
          "id": "6c91872e-a72f-4704-9e5a-c4adc73a4ddf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7494bc51-fd5c-4e71-89ec-918b3ac19801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0be97c-b0a4-4e24-a464-74fbd050b870",
        "cursor": {
          "ref": "cbcfc8c4-d93a-4d55-8071-3f2cba099e0f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "88287852-b8a1-4655-af90-f992a1d2dc93"
        },
        "item": {
          "id": "ca0be97c-b0a4-4e24-a464-74fbd050b870",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12f44ea7-6119-44bd-a7df-d08fbe2ff01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b77bbbd-a250-4d30-9e16-41cb6a5082e5",
        "cursor": {
          "ref": "92c82fa9-2c6d-4f0f-b973-318ab2006c9e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "84d8f6ea-9d6e-4290-8be5-27d376058135"
        },
        "item": {
          "id": "6b77bbbd-a250-4d30-9e16-41cb6a5082e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b21fcba-cc89-4fc7-9017-3697d65d63ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca16ea-27a5-4b33-9745-5149b0858035",
        "cursor": {
          "ref": "bbb0213f-e144-4cbb-90e4-e4258e16ccff",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "861184c6-8a99-4efe-99c6-1b4fed7679cf"
        },
        "item": {
          "id": "2dca16ea-27a5-4b33-9745-5149b0858035",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9d1c406-6363-4873-b6eb-6b4588c65e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6ae3d1-6544-4f03-bf50-6d86cd97b095",
        "cursor": {
          "ref": "623ede1a-0e98-4a28-80ce-ea5f4752b359",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9bccf0a3-cc5d-48cc-92a7-f1cc1b0d89dc"
        },
        "item": {
          "id": "ad6ae3d1-6544-4f03-bf50-6d86cd97b095",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a9b7d8c3-e782-4813-82f9-e67532a8bbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd0103-c0b1-4ef9-94c2-f14d24ab6a89",
        "cursor": {
          "ref": "358655db-3e92-4e42-ae63-d20ea8afce7a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5ccd18f-b898-4a03-939f-1f6ccbc9b379"
        },
        "item": {
          "id": "cacd0103-c0b1-4ef9-94c2-f14d24ab6a89",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2c11f98-a8ff-4df7-97ac-2bfe9c3842d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b5bde4-378a-47ca-aa88-9f50c982162f",
        "cursor": {
          "ref": "68b135dc-7ae5-4aac-9cfe-5895e1476661",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "961d0766-16c6-4463-9998-b26b54a2b1db"
        },
        "item": {
          "id": "92b5bde4-378a-47ca-aa88-9f50c982162f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "54187fed-5cc6-4819-b166-10f3b830852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca350f4-67f9-419d-97ae-efde5bb1882f",
        "cursor": {
          "ref": "643c4e3c-15fd-4fd2-99c2-dbf8bc085081",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a40967e0-3b2f-4b27-8f87-9751c212414e"
        },
        "item": {
          "id": "dca350f4-67f9-419d-97ae-efde5bb1882f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ba6f779-1602-455e-b6ea-5bb9ca35dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192220c8-9c61-4df7-9756-739cc225a060",
        "cursor": {
          "ref": "c7f43d28-20dc-4b85-95f4-c841feccff88",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "304f430c-ec43-49d5-9716-ba123e4c6702"
        },
        "item": {
          "id": "192220c8-9c61-4df7-9756-739cc225a060",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f71034af-8d87-4bbb-b1af-5f8ee50fddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea76d70-3d44-4607-bfe0-ccef8a65117b",
        "cursor": {
          "ref": "c42144c8-a90e-4ad8-a90c-e8caffbddb78",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1460c148-01a2-4776-b445-aa39c314926a"
        },
        "item": {
          "id": "7ea76d70-3d44-4607-bfe0-ccef8a65117b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2b722609-a7a7-43e2-a823-911fe4733103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c4ec1b-53ec-41c7-840a-26f2642b7836",
        "cursor": {
          "ref": "e40b7cbe-35a0-4bdc-9a1f-7b4987893d49",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1259cd86-24fb-4210-bd57-9b12feb0673e"
        },
        "item": {
          "id": "b3c4ec1b-53ec-41c7-840a-26f2642b7836",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6c203e26-8eea-4ea8-8393-ae23e6b98683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c56d157-1690-4894-8afd-dbed1833cff4",
        "cursor": {
          "ref": "10f21b10-81ed-4214-9642-f259661b10b9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30ae84dd-c033-49a6-aebc-8ee143689db0"
        },
        "item": {
          "id": "1c56d157-1690-4894-8afd-dbed1833cff4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dc590b96-eda6-4e7a-ae90-1aaf21fe7db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21668a1-19b7-4ed8-b345-ad46c981ef89",
        "cursor": {
          "ref": "a69517c0-7427-4430-a139-73d858c0e61b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b361ae84-e69c-4f55-bdad-ea61bab9b8c2"
        },
        "item": {
          "id": "f21668a1-19b7-4ed8-b345-ad46c981ef89",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3305e630-4ebc-4b9f-b2f9-fd5cd71733d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bd193f-ee56-442f-a8c4-a9aa0d15a8ca",
        "cursor": {
          "ref": "f605e80e-b43d-4e6c-b705-ec08093a01b1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8dde340b-f16d-4c7b-84c3-e73304a49e31"
        },
        "item": {
          "id": "d2bd193f-ee56-442f-a8c4-a9aa0d15a8ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "41fc9e3f-03c7-4d24-bb30-9f79d2ddee9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffe11d8-0d80-4a32-b5cd-6e0041a27282",
        "cursor": {
          "ref": "2ef57508-eaab-43f8-a029-a80e2276a172",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6cb3eb5d-6d08-4693-b59f-2d6bd6a03789"
        },
        "item": {
          "id": "0ffe11d8-0d80-4a32-b5cd-6e0041a27282",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f440dd4b-2e13-4eda-ade7-77866ae29420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6657acaf-a1ed-4579-80c4-cf5efdb085b5",
        "cursor": {
          "ref": "3e0a0928-693e-4163-a850-d85cd5d336f9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b4641d1b-3b54-4e69-bf92-ea1c62f00791"
        },
        "item": {
          "id": "6657acaf-a1ed-4579-80c4-cf5efdb085b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1bfe407c-d715-4c31-bb49-1160b09ef16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d6e741-c6c2-4e65-a910-86aa42c5b6ad",
        "cursor": {
          "ref": "83f411eb-c19f-4f7d-88b2-55a9c5470c99",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80c96360-40e0-43b8-a9a7-8aa4d582563a"
        },
        "item": {
          "id": "98d6e741-c6c2-4e65-a910-86aa42c5b6ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f08228a6-46e4-4195-a446-30662330aa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a3293-df92-4fa4-bcb6-fd0e6428e53b",
        "cursor": {
          "ref": "2bed486a-50f6-4128-b962-ddf14dd9a16e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb4ae164-aa2c-4bcf-bd1a-d327b6d83a43"
        },
        "item": {
          "id": "0a0a3293-df92-4fa4-bcb6-fd0e6428e53b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a21e400-4e1e-476c-86b2-be2d403128df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aa012c-3408-4131-a036-0c2de3f1b05f",
        "cursor": {
          "ref": "ae0c36f1-f78e-459f-81e4-49c4ebf2f4dd",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a42df05c-0291-4173-94a6-692ac054e905"
        },
        "item": {
          "id": "69aa012c-3408-4131-a036-0c2de3f1b05f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d59e42ce-6711-4423-a1cf-4c48e0a4ba09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9ab293-5049-46c7-9c65-08aee4f7d029",
        "cursor": {
          "ref": "5d097677-f1b3-4dae-b640-fd9061c609ab",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9348f4f4-dc9a-4fd1-aeb7-c8974d7a4b14"
        },
        "item": {
          "id": "3e9ab293-5049-46c7-9c65-08aee4f7d029",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a7b932bf-6ed7-4235-9967-6619ff601e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3586651-eed5-437e-8f2e-837efeccc0b9",
        "cursor": {
          "ref": "68150c6b-f7f7-4942-a57c-2866b5699859",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c8309869-9f30-40ff-b0f5-6c58f77a6a76"
        },
        "item": {
          "id": "d3586651-eed5-437e-8f2e-837efeccc0b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d7b3577c-2dfc-4fae-a04f-98f6a48153b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e4982d-31d8-4c06-8fed-5b5cf5b28451",
        "cursor": {
          "ref": "814a2c9c-45a8-4b92-a55a-0a9a94561b06",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10af56b2-c3a0-4611-8566-0fb1e7cf818f"
        },
        "item": {
          "id": "d2e4982d-31d8-4c06-8fed-5b5cf5b28451",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0af04e12-5f5c-4398-a855-69ae2ee8a3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e58ce9-eab1-4453-b285-192680110e49",
        "cursor": {
          "ref": "5f726a24-7f9e-4bf8-b037-91287cc9927d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a16031ce-c5c2-4e5b-b7d3-dbf73e4d4891"
        },
        "item": {
          "id": "f4e58ce9-eab1-4453-b285-192680110e49",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ca8c4d03-5860-4c40-ac49-ed0c86f14101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b48659-7ba9-4e8d-b73b-b298a9e35963",
        "cursor": {
          "ref": "38e8d919-0e19-4527-b43d-d019589a9d47",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "517add37-cc73-4766-9b1a-403b7d1dd981"
        },
        "item": {
          "id": "00b48659-7ba9-4e8d-b73b-b298a9e35963",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a87ac764-c629-4a9a-93d4-b04303e1c9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b789a1-b638-4972-ba10-a6edd2f42d62",
        "cursor": {
          "ref": "474f6fff-4378-41c6-941a-dd4b14383949",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b1e88e23-fdb4-4434-a0fc-c90f5108c585"
        },
        "item": {
          "id": "c2b789a1-b638-4972-ba10-a6edd2f42d62",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15b650d3-3013-4c96-8d4a-bf92e8737b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9f3ef-3f95-475c-8768-19bd8e492e57",
        "cursor": {
          "ref": "d984019e-4956-42b2-a2f1-c822bb35abcc",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8148b59b-cca6-49a6-959f-5d6281503636"
        },
        "item": {
          "id": "5db9f3ef-3f95-475c-8768-19bd8e492e57",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b937dea9-35ee-488a-9f2c-c55f6d76a98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac92ca00-d038-4085-b255-845b2a758252",
        "cursor": {
          "ref": "e068fb63-359e-4c96-b125-565c21774e3c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a0125937-d346-4e99-a675-c976a632d177"
        },
        "item": {
          "id": "ac92ca00-d038-4085-b255-845b2a758252",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5ad6da7-60b7-47be-92dd-e194802a669a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fb4621-b401-48e2-bce7-2ea3e690be95",
        "cursor": {
          "ref": "0b992ae3-7f99-4a1e-a987-a9e19ab5e381",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "77719e5b-5385-4b66-9dbd-365f724a3eed"
        },
        "item": {
          "id": "f4fb4621-b401-48e2-bce7-2ea3e690be95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63926b9e-9634-4949-aae8-c63cc3b88e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f214f837-87c2-4fd1-aecc-3bd06c42e236",
        "cursor": {
          "ref": "aa882c23-4ab9-4a94-8317-0b22822dc636",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89002b86-3f40-413e-8e3b-c5ac4b0b6064"
        },
        "item": {
          "id": "f214f837-87c2-4fd1-aecc-3bd06c42e236",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5fefa00-6694-416e-9bbd-900c7aa11444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b27c77-aff8-4990-938e-c5c0ce4ad369",
        "cursor": {
          "ref": "f4a1b3dc-5f1d-454f-ba8c-af89e13eca3a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c245778-92bf-4fb0-9471-a6b3819815ea"
        },
        "item": {
          "id": "79b27c77-aff8-4990-938e-c5c0ce4ad369",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57125224-ccdf-4946-acf3-31c35904dc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b177f92b-65b9-4eb9-ad2d-6cb6755c1ee4",
        "cursor": {
          "ref": "81aa45e1-13f7-46cf-a165-ec9da1a651d9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "118c7e3e-7771-4834-b2b2-41899f8bfe01"
        },
        "item": {
          "id": "b177f92b-65b9-4eb9-ad2d-6cb6755c1ee4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19516eab-61f1-45d8-824b-a52629b25e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abfd5c4-2b72-43b9-8619-942980e2d3a3",
        "cursor": {
          "ref": "e5db607b-6aca-44cf-994f-84e8605b6fbf",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6db5ce52-3482-4baf-ba70-b77f8ca95bc8"
        },
        "item": {
          "id": "0abfd5c4-2b72-43b9-8619-942980e2d3a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "90a91ab0-f354-479f-88c8-c08b1f9e894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27007607-b1c3-4d66-bd25-e6bfd79ce0ae",
        "cursor": {
          "ref": "b5910b02-267e-4a2a-9f3d-1f53169e183e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ccef1f76-b31f-4586-b16f-e977ff2be5f3"
        },
        "item": {
          "id": "27007607-b1c3-4d66-bd25-e6bfd79ce0ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2bdea136-a85f-415d-92a1-d46f97c3e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f52d3b-b506-4b82-aff5-32ff260b2e6e",
        "cursor": {
          "ref": "37fed41b-1c06-4f96-a6a6-a6f622bfef48",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c1a0e17d-3ea0-45c0-9dae-408106fd1b98"
        },
        "item": {
          "id": "70f52d3b-b506-4b82-aff5-32ff260b2e6e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b235fd36-591e-4bf8-8fd1-f95be2943e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc685c-54cc-42ed-b4fe-7b05b7c0dfc6",
        "cursor": {
          "ref": "c8df3579-3ff1-4866-87f5-c14e0410cd1a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0893674c-eaab-4fcf-9018-da7f5cb3fd4d"
        },
        "item": {
          "id": "a5fc685c-54cc-42ed-b4fe-7b05b7c0dfc6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "898aa11c-0c6f-4345-8aa2-decda2e9e6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a24299-3751-496a-a2cf-71bac43363c1",
        "cursor": {
          "ref": "e5c406c0-e99c-44c2-8a98-ab5ca9acfe5a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c7f5e187-c407-4472-a13e-a7ce172eacd2"
        },
        "item": {
          "id": "e5a24299-3751-496a-a2cf-71bac43363c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ed4ff2d1-ae4f-414e-9f13-9ac591eb74c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3485f648-321c-4ff6-99c9-eae8678f75a8",
        "cursor": {
          "ref": "92005d88-88cf-496b-9818-d2d1e329dcf3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f6ac2f35-90ef-4d84-b224-27aaf3ce4659"
        },
        "item": {
          "id": "3485f648-321c-4ff6-99c9-eae8678f75a8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "81d619de-8cd8-4d00-a145-4c6a1830942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cb72b7-973e-4f43-9de2-bd7e2875f07d",
        "cursor": {
          "ref": "19e6cbaa-3bff-4a45-9f86-90393890317f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "135b2cdf-7a7e-486d-b05a-0349d0ef55dc"
        },
        "item": {
          "id": "28cb72b7-973e-4f43-9de2-bd7e2875f07d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "be0da500-3e58-4374-b9c9-59155a5eb356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f11b65-ae37-415b-9050-90013c68c148",
        "cursor": {
          "ref": "f980fca0-6a97-4e5d-9c15-48b5182785e0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "526b5038-a2d0-4aa0-a430-0ce4f2544b1d"
        },
        "item": {
          "id": "e4f11b65-ae37-415b-9050-90013c68c148",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ee293612-ef69-465b-b5e8-2c69e2ad85aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa4b95-d112-46b6-b90b-0e3cbc7f2714",
        "cursor": {
          "ref": "381f1155-2b5e-40b8-b5cb-2c1348752a62",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d26de0b5-da23-4c9e-939a-11ba6e5dacb8"
        },
        "item": {
          "id": "39fa4b95-d112-46b6-b90b-0e3cbc7f2714",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18a0b7b5-0d5a-4c84-ab0a-fcc7ce4f4ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7925f7-411c-4865-85d7-a35631eac9ce",
        "cursor": {
          "ref": "c90583ca-1e6f-4522-b94a-0388576ad163",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a16384c-de82-49c3-82ae-0daf4e8a7e26"
        },
        "item": {
          "id": "1e7925f7-411c-4865-85d7-a35631eac9ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bf961e6e-dcd0-4361-aca6-b0739b886043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138433bf-5440-4449-8f6a-6acabb7be7f5",
        "cursor": {
          "ref": "841b7d67-69c9-48a8-a86b-13fc595de313",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "51638f63-3911-4011-9ac3-5803161b21da"
        },
        "item": {
          "id": "138433bf-5440-4449-8f6a-6acabb7be7f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "678aa067-b9f1-45e1-9cc4-41e76fdeb2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d444b5e5-dbd5-4fbe-9a1a-bc0db1d236a8",
        "cursor": {
          "ref": "79242abe-15c3-4612-aef5-87c2ea134d10",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4619d21e-2a22-4cdd-862c-8d21cfb5ea5b"
        },
        "item": {
          "id": "d444b5e5-dbd5-4fbe-9a1a-bc0db1d236a8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ffbceed7-3f66-4528-988b-416251b8629f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9676f7e-c1db-4c2c-99b4-55c68b5edbb5",
        "cursor": {
          "ref": "c035d5ca-7d16-4c25-b140-0af2b7013c63",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a5fd7cfc-0c8c-4824-8b91-e94e786fe6b7"
        },
        "item": {
          "id": "a9676f7e-c1db-4c2c-99b4-55c68b5edbb5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ff7369f-4c00-44ec-be54-320360cb111f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21250f1a-8a9d-4d7d-a51e-25f33951521c",
        "cursor": {
          "ref": "6dad1adb-fb79-41a2-a877-34fef23dee77",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc765773-1364-4659-ab50-ce7e2dd7892c"
        },
        "item": {
          "id": "21250f1a-8a9d-4d7d-a51e-25f33951521c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba79ba1a-c410-45b2-96a5-7dcf5ea1283f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e5d69e-d757-4ddf-8de7-73c3b3bf501f",
        "cursor": {
          "ref": "20abad02-21f5-484e-91a2-9d992d3046bd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f72396a8-0314-4cd8-8184-46b17724e10b"
        },
        "item": {
          "id": "08e5d69e-d757-4ddf-8de7-73c3b3bf501f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8551e9de-f8cb-438a-b22a-f3c56cf4903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a583a9-c444-4372-b10e-2e6c59ccada8",
        "cursor": {
          "ref": "b3218c5d-20f1-4566-94bb-c89c9c128c06",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7dd58738-16e0-49f9-8ed1-ad03815a87dc"
        },
        "item": {
          "id": "11a583a9-c444-4372-b10e-2e6c59ccada8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d5d75a9e-fa65-4c67-affc-0a70274143d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6233dac-c16f-4c60-9ec6-85de1b5e54d8",
        "cursor": {
          "ref": "c2a7bcdd-0853-4d42-9ae8-733e64aa8581",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "36d9da64-e86b-4369-abd0-460b1772416a"
        },
        "item": {
          "id": "e6233dac-c16f-4c60-9ec6-85de1b5e54d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "76af41ac-5ab8-4d0f-af2d-4db9debabe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01adb493-0efc-4e1d-a6df-edd1bc9c2203",
        "cursor": {
          "ref": "9e7ade68-ae51-4140-a54c-496437de612c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "70959f75-95d4-49d6-a0e1-33a23afa1ab6"
        },
        "item": {
          "id": "01adb493-0efc-4e1d-a6df-edd1bc9c2203",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3f553926-d983-4a01-bafc-bcb070c7a95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c960a3f-f26d-40ff-a348-d232101d810f",
        "cursor": {
          "ref": "4115b547-202d-4d03-a003-9806e18e430c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d897ac2d-a60d-4984-b60c-7a9713e94720"
        },
        "item": {
          "id": "1c960a3f-f26d-40ff-a348-d232101d810f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63bde6ad-5959-4a9c-b783-248e6a5088dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ea3737-1993-4b0f-b0a3-5c68c77ba6c9",
        "cursor": {
          "ref": "502e9fef-06fc-4028-951c-07cb0588d99f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4c8491d9-16bd-46bd-9401-70a54c26cfca"
        },
        "item": {
          "id": "02ea3737-1993-4b0f-b0a3-5c68c77ba6c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fa1a48f4-1281-4a26-a978-1a89aa5489cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a88e7-5756-4ac4-91da-bc9b3caaea22",
        "cursor": {
          "ref": "170435a8-9b6f-49d9-a9ad-8ab238c79f3a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dfe3a5cc-34a5-4bb6-9ebf-71a4021427f8"
        },
        "item": {
          "id": "413a88e7-5756-4ac4-91da-bc9b3caaea22",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2b43681-1dac-4b85-95b5-9268cb38d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f246f1c-310e-41f0-9579-39ebc31f4d17",
        "cursor": {
          "ref": "b5ff2ae6-573f-4dc5-b854-3ae050bc20b1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8cf8691-03e2-4876-b0fa-ce2ac724394a"
        },
        "item": {
          "id": "1f246f1c-310e-41f0-9579-39ebc31f4d17",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c53f9aa5-7780-490b-8914-ab85e80c0fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0362a2ce-2874-4629-ac18-ef35d1ef0c80",
        "cursor": {
          "ref": "8e248cb8-891c-476b-810e-e4371de3658d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "47605f02-01dc-4d20-ab3e-4a6121dff77c"
        },
        "item": {
          "id": "0362a2ce-2874-4629-ac18-ef35d1ef0c80",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5a97cc6-d59e-4d88-8147-6180b6792b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041f992d-d194-4cb3-83bf-7f0232b88b8b",
        "cursor": {
          "ref": "a9e41467-ee18-4462-afdd-1781b7bd4613",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11ee6fe8-4f29-4178-b991-1fad2ed94961"
        },
        "item": {
          "id": "041f992d-d194-4cb3-83bf-7f0232b88b8b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9c8eeeff-bf9c-461a-95cd-06cdf6d3b44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde274ed-ba0a-4ffb-ab9d-e9d42ebd8ff1",
        "cursor": {
          "ref": "8832a6f1-f77f-48d2-88d1-56dcd578e903",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b8735753-6a07-4fde-829f-ba8d6abced6c"
        },
        "item": {
          "id": "cde274ed-ba0a-4ffb-ab9d-e9d42ebd8ff1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b7538e04-6308-4eb6-afaa-599d8026a5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e982dcff-c240-4ad0-b95c-cefd5d532df4",
        "cursor": {
          "ref": "10fe6b9b-0520-4b8d-b45f-4130706e0f53",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "496a4524-05f7-4a7d-ac49-70bf5a4b8960"
        },
        "item": {
          "id": "e982dcff-c240-4ad0-b95c-cefd5d532df4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "96977d5e-64a3-47f7-9da4-f2899317433a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e83fc6-530d-4650-a173-c79bdccb084d",
        "cursor": {
          "ref": "266b616b-b460-4eb5-9eaa-12daa4847780",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "360a927c-0126-42a1-be78-db7ca5e2b8fc"
        },
        "item": {
          "id": "80e83fc6-530d-4650-a173-c79bdccb084d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "50e593cc-03b9-4f75-a638-b98095563b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51688dfa-8d28-4834-9837-d9119a959630",
        "cursor": {
          "ref": "a97fecb3-81d5-4602-bd42-0f0d58f9cbae",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "476587fc-0a4f-483b-b084-c5db1ace4cda"
        },
        "item": {
          "id": "51688dfa-8d28-4834-9837-d9119a959630",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f117a8f-5be5-4469-8f69-59a820a2d7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17756b6c-940a-4681-8ef1-7db79099c0d3",
        "cursor": {
          "ref": "8f64530d-2702-469f-b01b-2d1f1d38949c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f8e886b0-61ce-41bf-a7e3-ed6fb3653bfb"
        },
        "item": {
          "id": "17756b6c-940a-4681-8ef1-7db79099c0d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c13b1fb5-59c6-4635-b10d-918a52a1d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b99897-0593-4554-8e30-a1af4fce69f0",
        "cursor": {
          "ref": "fd1120c6-c19a-4e4e-af2c-992b99878597",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "94563213-42a8-42b3-8c9a-6824b900ed2e"
        },
        "item": {
          "id": "b4b99897-0593-4554-8e30-a1af4fce69f0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "620a4d5e-eb68-4d02-8b0f-1255791025bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1e6d9d-bee6-4380-9bf5-a4e7ee8f6579",
        "cursor": {
          "ref": "73121e5e-f610-423e-92b8-bda6e331b83e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "22354b44-3fe7-44fa-82de-602af0bd3418"
        },
        "item": {
          "id": "8b1e6d9d-bee6-4380-9bf5-a4e7ee8f6579",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "038c88f4-a1af-4bd2-8a5c-494bd3ca2806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d4d53b-20c0-46bf-82eb-8aaab5eb8179",
        "cursor": {
          "ref": "21b3a55d-8b3c-40af-9fe4-0559803090e1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d0604ed-9dec-4ee9-ac0f-995816bd9a92"
        },
        "item": {
          "id": "17d4d53b-20c0-46bf-82eb-8aaab5eb8179",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ec930283-af47-4008-9387-2c545497a340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696e55eb-130d-4cb6-b351-b646610c9838",
        "cursor": {
          "ref": "0ea5e8ea-bd93-4a57-a681-397dba2b8f35",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "92a52550-a753-4e82-bb24-5eefdfc9f8e5"
        },
        "item": {
          "id": "696e55eb-130d-4cb6-b351-b646610c9838",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc7ad0a9-3167-4395-9d2c-0fab91b36ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8397c7df-9414-407a-a4a2-2997ec59fe30",
        "cursor": {
          "ref": "e33548e5-5442-4526-b56d-1dfc11f5304e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c129b281-4efe-44fc-821f-d29b699e3812"
        },
        "item": {
          "id": "8397c7df-9414-407a-a4a2-2997ec59fe30",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "23fe64eb-bdef-4bef-8e47-05e90b8dd621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0567f5-6d60-44c3-8312-f89202b02b91",
        "cursor": {
          "ref": "2465fc19-40d0-44b3-9ae4-764185b67b92",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2ce31ac1-05d8-4368-b7d5-279f93d72a84"
        },
        "item": {
          "id": "4a0567f5-6d60-44c3-8312-f89202b02b91",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9d6d8a1a-d32c-4459-b79b-6d51a63da7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc3982d-e077-45f4-a19e-741ba42a4a8b",
        "cursor": {
          "ref": "dfbeb143-0ff5-49e5-8110-b62e743c529a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fd0fe059-e9a2-4d9b-b738-67292b3e5dc0"
        },
        "item": {
          "id": "8dc3982d-e077-45f4-a19e-741ba42a4a8b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7f96b333-f278-451f-bce3-d6e1541f3888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ff340-dd2c-4ba2-9d0d-3033df4a5b78",
        "cursor": {
          "ref": "ebb6d3e6-118a-4448-b809-7d49f903d36f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ee7da299-9d9e-4c19-8d33-2f08da9adee3"
        },
        "item": {
          "id": "318ff340-dd2c-4ba2-9d0d-3033df4a5b78",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "557a5f1e-5e4b-4cc0-a418-367519f3716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa10bce-7635-49a9-a537-b5c3c7d2aedc",
        "cursor": {
          "ref": "c4d46ef5-6235-4ae8-bc96-cd315079e143",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "97536fea-d64c-4c15-b9bd-2ff4959a0fba"
        },
        "item": {
          "id": "afa10bce-7635-49a9-a537-b5c3c7d2aedc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "91e130a4-80e4-46ec-9678-d058c9a7c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0d72f2-d235-4f7b-94d5-55c84491abd4",
        "cursor": {
          "ref": "462e2b61-5e42-4acb-925a-7aa654258d8e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b30593c8-1c4d-44b8-8cb4-9dad8eb1bb3f"
        },
        "item": {
          "id": "cd0d72f2-d235-4f7b-94d5-55c84491abd4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8cc1f49d-9e91-4a63-a89e-f61beeb95593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61309298-09f5-42e0-b751-95ca06509fb6",
        "cursor": {
          "ref": "06876b75-5bb5-4897-9a66-3f7f6a5cc9a6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1bbb2899-ca67-4be3-bc1f-3d2cf42ce9c3"
        },
        "item": {
          "id": "61309298-09f5-42e0-b751-95ca06509fb6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "18140d21-01dd-4d6f-939b-40b0776c9220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6346005a-5ac4-4efb-a7cd-a6e322ee26c6",
        "cursor": {
          "ref": "f57fd5c7-a301-4d7d-90ea-84c35922b149",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "760b2949-1359-47cc-8929-f48d7d5882a4"
        },
        "item": {
          "id": "6346005a-5ac4-4efb-a7cd-a6e322ee26c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5aec3738-e99c-47e8-9a70-0196813e5b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f464d882-86ce-4c20-b65c-7a96ea5a9ffc",
        "cursor": {
          "ref": "f1fde0d4-ff26-46be-b410-772cb11c9f33",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "34c97533-578e-4167-a7e0-b115ea74afd1"
        },
        "item": {
          "id": "f464d882-86ce-4c20-b65c-7a96ea5a9ffc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "626ac4af-caa1-455d-8ab1-90f48e693dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc99ed10-3206-4e4b-a042-ab75f6ff9a13",
        "cursor": {
          "ref": "a186dda0-78a6-4094-9c41-f6cfa897e1a5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c504af11-40ae-4781-b0b3-8f6f36c2ed2f"
        },
        "item": {
          "id": "fc99ed10-3206-4e4b-a042-ab75f6ff9a13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4171f1c2-595e-45fb-a195-69b39dea2fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3055236c-af15-4a39-8415-1e41377ef7f9",
        "cursor": {
          "ref": "4ccbcc40-ac28-42a4-b5e6-67b2709db3e5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f2b6447a-3c56-4cf0-baaf-9c388f230159"
        },
        "item": {
          "id": "3055236c-af15-4a39-8415-1e41377ef7f9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "24e83980-69d5-4bfd-ade6-1e6ac6f76329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d347d449-c5b6-4891-bbc3-5eae1a31bda1",
        "cursor": {
          "ref": "100c6136-0692-45f5-b451-0c72d3d58cc2",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2a13280f-9e54-44e4-8108-7ed84fc68e65"
        },
        "item": {
          "id": "d347d449-c5b6-4891-bbc3-5eae1a31bda1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ffe26ec-c17c-4798-bc5f-25caee8af023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b039ab2-03aa-467a-8b4f-e5d7cd0bd1a2",
        "cursor": {
          "ref": "70ffaf12-7c0e-409a-93b5-852c690e6b24",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "472b5c85-373d-4252-9012-612fe4b3fd02"
        },
        "item": {
          "id": "0b039ab2-03aa-467a-8b4f-e5d7cd0bd1a2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "17edc64a-6167-4e65-8bc4-e5e5519c337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b59eae-76e8-4e27-b24e-fe7088db9a27",
        "cursor": {
          "ref": "d75ed843-191f-4482-ab36-ee22fee1c282",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2fcb87c7-421b-4f01-b412-5d753e64c7c3"
        },
        "item": {
          "id": "33b59eae-76e8-4e27-b24e-fe7088db9a27",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "11cd8290-37a4-42fd-aedf-62a4c31665c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37046162-b24f-4c5d-a728-df01e83c206f",
        "cursor": {
          "ref": "ab9f5dee-c7d3-494c-8544-d0fcce533fe4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "923d47ec-80fa-4ce4-8bd9-d0a63582aeeb"
        },
        "item": {
          "id": "37046162-b24f-4c5d-a728-df01e83c206f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee476310-0623-4697-a085-57f6eae587a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973cdb0a-515c-4907-b47c-f56baef203a0",
        "cursor": {
          "ref": "1639834d-370c-4c62-9022-e75ce8613e21",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e0e78576-df70-4a87-9018-e566938d6e06"
        },
        "item": {
          "id": "973cdb0a-515c-4907-b47c-f56baef203a0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "62cc9552-a2fd-42a0-89f6-3074fc7f468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b22c6-5407-48db-be66-de4125a3da0e",
        "cursor": {
          "ref": "8c4f5f60-256e-435f-bcad-80794943c885",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "acc4f0da-f4cf-410d-bab6-8116e9ea2bec"
        },
        "item": {
          "id": "d28b22c6-5407-48db-be66-de4125a3da0e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1311650d-b674-4986-b0f9-5526148a7153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572e50a9-4e9c-4107-b387-49e6a241a363",
        "cursor": {
          "ref": "4bba8ea3-7f20-4501-8dee-46035ab4a630",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "557acd71-fef7-4d65-bbdd-d01002c5a03e"
        },
        "item": {
          "id": "572e50a9-4e9c-4107-b387-49e6a241a363",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09961d0d-0e4f-4c88-a07f-7466003bc06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc36fa-50e0-4242-a91b-abb0018da2c7",
        "cursor": {
          "ref": "962fc312-c664-42dd-8439-2a1f05332cc2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff2a9415-292f-4678-a3a3-d94ae770e46f"
        },
        "item": {
          "id": "08cc36fa-50e0-4242-a91b-abb0018da2c7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eef08eed-438e-4cb2-8baa-b4597893dd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c50794-7cfa-478d-bdd4-45ac021c61e0",
        "cursor": {
          "ref": "b819b0ff-f29b-4fda-901e-7e4389b7956b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8cee9ad-964c-4131-9da1-2a6441731e90"
        },
        "item": {
          "id": "09c50794-7cfa-478d-bdd4-45ac021c61e0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0d39ba0a-c925-4f4e-9f48-4567fa1d173b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873ec9cf-511c-40b7-a057-e72e79d20dd6",
        "cursor": {
          "ref": "00007f44-a448-4e49-88c2-9e1cb856bbf5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cd714268-1be6-499e-b2af-14b5e6390cb1"
        },
        "item": {
          "id": "873ec9cf-511c-40b7-a057-e72e79d20dd6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46c5a09c-921a-498b-bb8c-f2ea65eca00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55649594-038a-42b8-af27-12162efd1b3f",
        "cursor": {
          "ref": "efce6c7d-07b8-4d84-8c52-4de3cc0b3a72",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "216c7e55-21c4-45bf-8e18-e78f7204a422"
        },
        "item": {
          "id": "55649594-038a-42b8-af27-12162efd1b3f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "faed8a76-f136-44b0-bf5f-665342ecb4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02328e9c-fa12-4ce7-941a-3ec50ad2737f",
        "cursor": {
          "ref": "5256d87b-61bd-41b3-abba-cf2f49ac6ba5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b915c7be-5c21-486f-a7a9-2357f35702e2"
        },
        "item": {
          "id": "02328e9c-fa12-4ce7-941a-3ec50ad2737f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4656bf8e-d027-40e4-aa1d-f13a271eba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781abd14-0fee-4512-a516-1cfdc1ed78b6",
        "cursor": {
          "ref": "dad1619f-df80-4a16-be85-97e888cedef9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "788a5273-33d0-4a15-ae67-6bad1993d20b"
        },
        "item": {
          "id": "781abd14-0fee-4512-a516-1cfdc1ed78b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "23e0033a-688d-49d2-b01a-14f1281ec268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65602c19-c3c8-44fb-bd92-9649a838af6b",
        "cursor": {
          "ref": "10510fe5-85c0-4b28-ab3a-6c89090694e3",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "66307fc2-ba09-4522-9482-71cdb579bdd5"
        },
        "item": {
          "id": "65602c19-c3c8-44fb-bd92-9649a838af6b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04d14b4d-ef3f-4107-a9f2-3041dc4dbca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c41833-4b34-4394-bc10-6655d21b7631",
        "cursor": {
          "ref": "38410582-43e6-4290-aff0-61fee9010824",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e938c4d7-7002-4da9-bb74-8ea34c12e152"
        },
        "item": {
          "id": "c0c41833-4b34-4394-bc10-6655d21b7631",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e0d5c004-adb9-4b18-a5aa-595f810eff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b0f48a-cc85-4c53-9197-a06a7954a009",
        "cursor": {
          "ref": "757532b6-815d-4bba-819b-9c1125cfb1c6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fd2f984a-8cc1-409f-85c0-58ee380007ff"
        },
        "item": {
          "id": "25b0f48a-cc85-4c53-9197-a06a7954a009",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5287309b-818e-4405-9152-3427454d1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c37e27-130e-4ef0-b271-536246ec8dfc",
        "cursor": {
          "ref": "918e895c-e72c-4077-afac-acaaa5bdbc24",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "72d61170-b0ac-4aae-8751-895db9a09020"
        },
        "item": {
          "id": "a6c37e27-130e-4ef0-b271-536246ec8dfc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f846edcb-384d-4c57-901e-579c0afb1c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de9f24d-496c-4333-87e6-7c0f4d68096d",
        "cursor": {
          "ref": "26ea0b66-0715-47ad-867c-63d0c6318599",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6cf8b079-6397-45b8-9bde-7afdaddd9dca"
        },
        "item": {
          "id": "0de9f24d-496c-4333-87e6-7c0f4d68096d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "17b01fc2-c618-476f-a70e-2fdb530f7f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d185e678-7836-48f1-97af-4f321315c853",
        "cursor": {
          "ref": "0a70fb52-faf5-4655-a9b6-b6d510ee9c6b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e88d934-11a7-4edd-9ace-b09b36601d22"
        },
        "item": {
          "id": "d185e678-7836-48f1-97af-4f321315c853",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2549a929-78dc-48dc-8af9-c5ed54cc0c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38976e51-4800-4efa-9e3f-7492281c0bd5",
        "cursor": {
          "ref": "0dc60ca0-618f-4f92-b79b-2a9582807b92",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "24076368-6cec-42b0-8581-1eabda340eec"
        },
        "item": {
          "id": "38976e51-4800-4efa-9e3f-7492281c0bd5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "49d670d1-8abb-4bc4-a184-8852d3fbd2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e5eadc-08b9-4f57-9176-29b60e285572",
        "cursor": {
          "ref": "21858f8b-175f-4e45-955c-4d5e54d4c195",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4d0a6701-289d-4fb4-a343-7922dd898bab"
        },
        "item": {
          "id": "f0e5eadc-08b9-4f57-9176-29b60e285572",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "29380bb3-49b4-4c96-a9d0-a189f53cc18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5484fcf3-3f32-487e-9757-fdab93da34cd",
        "cursor": {
          "ref": "079ae64a-3231-4242-b4a1-8bf9f38645f5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "546cbfa2-8584-490e-9499-3ee2dff0e9c5"
        },
        "item": {
          "id": "5484fcf3-3f32-487e-9757-fdab93da34cd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2aa02a57-9879-4711-af5c-e60a9f423929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb4366-b350-47b1-99bc-d33c99bc2e80",
        "cursor": {
          "ref": "168a9792-fb79-4332-95d3-0ff54555eb06",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "686784c0-fc81-4546-80fd-8f042b3d7717"
        },
        "item": {
          "id": "4ebb4366-b350-47b1-99bc-d33c99bc2e80",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5cdd57b8-06e7-481d-82b5-4da32604500f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d447ef-9f89-492f-8c27-39cfe5843a25",
        "cursor": {
          "ref": "aa0810bf-f83d-487b-8480-baabdbe8ded6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aaa0b4e7-7f98-4345-a156-4591083df52a"
        },
        "item": {
          "id": "52d447ef-9f89-492f-8c27-39cfe5843a25",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1aaf79a3-1b87-45e1-aef3-6c4a81cfee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca883031-d64d-4230-afdf-a6aafc9777bb",
        "cursor": {
          "ref": "1324f94d-931c-4206-9d87-6e0221aaa054",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5e726e44-1788-4375-9372-f963157ab97b"
        },
        "item": {
          "id": "ca883031-d64d-4230-afdf-a6aafc9777bb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "220bb6a7-1f86-48f6-b3b0-266f5c0ed7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a11d3e7-67b0-4b2c-80cb-47500ec3f734",
        "cursor": {
          "ref": "62de93ff-0351-4091-878f-7bc8e7c0a7e3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4c947582-2197-490d-9395-f8e26c3e06a5"
        },
        "item": {
          "id": "9a11d3e7-67b0-4b2c-80cb-47500ec3f734",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "28a9e386-366c-4b67-a2e5-fcc230d81fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb3dae3-9188-4676-8b41-321ac1c67dba",
        "cursor": {
          "ref": "461abcd7-ef81-48e6-a814-823c4c5f0e62",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b979c00a-a9d0-4862-9abc-bb4e377aa1fc"
        },
        "item": {
          "id": "2bb3dae3-9188-4676-8b41-321ac1c67dba",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6fd03fd3-5d91-444d-a1ca-1335e256b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f41411b-62c1-4f58-bf2f-17d2609132ed",
        "cursor": {
          "ref": "52eb6e7a-7fca-46d8-9b9f-1eb8b8defedf",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6f521e7e-32b0-4f08-9407-15415f0444f8"
        },
        "item": {
          "id": "6f41411b-62c1-4f58-bf2f-17d2609132ed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6be03b2-ec19-4f6b-92bc-a766c3290598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8956ade3-e07d-437e-bfc0-2cc5ce4fb52e",
        "cursor": {
          "ref": "8a3dc558-9f99-4401-9937-44d42652cce7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f9b976b8-c365-475c-ab16-6cabbacbb2aa"
        },
        "item": {
          "id": "8956ade3-e07d-437e-bfc0-2cc5ce4fb52e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b7ee4197-fbe6-4f00-bc4d-6063aad244c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eee9462-54e3-4db0-b7c1-9d31630f619b",
        "cursor": {
          "ref": "35248988-af2f-44f4-82fe-d41b5c67cdf7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "108cc1b6-dee5-4f44-9d4d-4e4a94a3b707"
        },
        "item": {
          "id": "9eee9462-54e3-4db0-b7c1-9d31630f619b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5e20251b-d170-489a-af4d-2a827699c2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d4ff7-9a7d-4fb0-89e4-d714c4daceed",
        "cursor": {
          "ref": "e43fa5a1-7b8f-4430-86c8-d281ba6af000",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6f2e1d2-9ef7-4d22-9ce4-3b8d50b4bc9b"
        },
        "item": {
          "id": "ef4d4ff7-9a7d-4fb0-89e4-d714c4daceed",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "441e6d6b-c97c-449b-8649-425f2446274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a914288-7353-4550-b2eb-6b389125caad",
        "cursor": {
          "ref": "942c97bd-0ea7-4d83-9a63-0becf1480a9a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7ecccf31-29de-47b0-b60f-2e2fd457fdf0"
        },
        "item": {
          "id": "3a914288-7353-4550-b2eb-6b389125caad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ea79b121-28b6-4bb6-984f-eeae85e394db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdbbf8f-c5ee-4a17-ba10-0e25c939baf0",
        "cursor": {
          "ref": "b150e122-6c8d-44fb-885b-e8021514e78b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9cba57c8-7493-4f11-b2ba-92d840d2d9d8"
        },
        "item": {
          "id": "afdbbf8f-c5ee-4a17-ba10-0e25c939baf0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "51132a38-3df8-431e-bebc-67487eef77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ebfb8a-3468-4ba2-8acc-3b6edc1f8783",
        "cursor": {
          "ref": "78b9a0c7-ab06-4f0c-a008-83ac3be4375c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae119f0d-9270-4e7c-95ba-d7271a66aeda"
        },
        "item": {
          "id": "23ebfb8a-3468-4ba2-8acc-3b6edc1f8783",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "946abde7-9a6f-481a-9f87-47109f23b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c35980-4b3f-4f8f-83f7-f6ad2b4f526a",
        "cursor": {
          "ref": "dd9dc531-6772-4857-b271-9e3e58dcbea7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f8a6745-380d-46e4-bc93-9a40bb5a0142"
        },
        "item": {
          "id": "c7c35980-4b3f-4f8f-83f7-f6ad2b4f526a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6c376a40-018b-4253-930b-bcf0fb5c77a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992113b6-682f-402c-a0f3-65c8efdc3146",
        "cursor": {
          "ref": "fb603876-bd83-4bf3-be78-b61b814ef7af",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6bd8c74-f18f-438e-acf2-9fe018591765"
        },
        "item": {
          "id": "992113b6-682f-402c-a0f3-65c8efdc3146",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3adaad2d-cf68-4f8c-9b68-c04bbd903c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a96976-1873-4e51-b685-459691329eba",
        "cursor": {
          "ref": "75a9d95b-15f8-43a6-88dd-530a9b0c12df",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3074a5f0-15ce-4968-b957-03f403fd8fe0"
        },
        "item": {
          "id": "c9a96976-1873-4e51-b685-459691329eba",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fae799ef-4419-4955-91ff-9ce298c3209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b798c0a3-114d-429e-afc5-bd7bc9084dab",
        "cursor": {
          "ref": "e2423e7c-b66c-4204-a059-4cd6f151c89d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0f6499c-f031-40b9-b1ee-6e57f7548dce"
        },
        "item": {
          "id": "b798c0a3-114d-429e-afc5-bd7bc9084dab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "395a58ec-2077-4a87-aa56-9aaa0212022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf82eb0c-38bb-4da4-8a52-e49d1965ddb1",
        "cursor": {
          "ref": "35b08cdb-aa11-48d3-a50d-f6a61b1c8412",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0872ddaf-0b8f-4429-9999-eab791b935dc"
        },
        "item": {
          "id": "bf82eb0c-38bb-4da4-8a52-e49d1965ddb1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "72d2e886-bfb9-4306-8037-d0a3a600e257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d802c71-4f6e-4695-bb91-90014657b430",
        "cursor": {
          "ref": "94a607bc-db80-477c-a5bf-e09c44eb756b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a3071acb-4457-4eec-b25d-d39f8a67f322"
        },
        "item": {
          "id": "1d802c71-4f6e-4695-bb91-90014657b430",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a394a948-d4b7-4880-a1f3-eab5c4377ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bf883b-eeb7-42da-baf8-6b619f1dc77d",
        "cursor": {
          "ref": "7a90fe2a-f168-42ce-899b-13e4902b5935",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cbc0569d-ed75-4831-9f9b-9839543ad473"
        },
        "item": {
          "id": "06bf883b-eeb7-42da-baf8-6b619f1dc77d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "809a4db2-29ee-48cd-aeb8-04af3185643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74e3e73-4a5d-438e-950b-e0d0078afc91",
        "cursor": {
          "ref": "2c799567-ab03-4096-a40a-61af8e42f1b9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3241733e-528e-40ac-9177-804aaf497f42"
        },
        "item": {
          "id": "a74e3e73-4a5d-438e-950b-e0d0078afc91",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8337c8c1-8034-492c-8406-805c60d332ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e84451c-710d-4add-acfa-6db1bce29d1b",
        "cursor": {
          "ref": "11f5f48c-17d3-4bbd-8762-4701a153b88d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "af7035b1-2143-4e56-ac07-d8a936b562e9"
        },
        "item": {
          "id": "7e84451c-710d-4add-acfa-6db1bce29d1b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4db1f29b-f930-4891-8c5c-9f280d5a6c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739ba3f0-4a8b-43c0-8685-46342d762a03",
        "cursor": {
          "ref": "e8ab0d69-3b89-4ec5-901a-d620dae63bd1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a46c3212-dabd-4568-ae4a-939de63ee7d6"
        },
        "item": {
          "id": "739ba3f0-4a8b-43c0-8685-46342d762a03",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90f27fb4-d0b1-4a95-ac32-48bcd4facbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01191486-2315-4adc-a054-7f4d37997b10",
        "cursor": {
          "ref": "4ec241e3-d15a-4bde-82fa-8d9cd89b4b98",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "49ff140f-9b2d-4c76-a1e0-2f582fce1192"
        },
        "item": {
          "id": "01191486-2315-4adc-a054-7f4d37997b10",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5904734-901c-4c44-8a50-9f5888fed213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87811917-4f0b-46bf-a96b-8ce1a9575e96",
        "cursor": {
          "ref": "995fbdd8-2086-4a75-b2b2-ffc64bba7cbd",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ea488d63-216a-48d2-af99-96364d148c57"
        },
        "item": {
          "id": "87811917-4f0b-46bf-a96b-8ce1a9575e96",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bb52f7ad-8e28-46f7-8e1a-9aa08b09d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283f39b-2f7a-4efa-9319-9792e7d56f2a",
        "cursor": {
          "ref": "10a4749c-9a43-4874-886a-fe992e72e6ab",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c6f410e8-9a89-497e-bf93-72b65f771c33"
        },
        "item": {
          "id": "f283f39b-2f7a-4efa-9319-9792e7d56f2a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8eb4ea74-d330-4240-b954-4eb03da4764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f4dbba-7c9a-42ab-8016-f1bc9af0d650",
        "cursor": {
          "ref": "6e01274b-7535-4853-a400-e5b021220c66",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "811f925a-bf44-473b-ab35-3f65079cbb32"
        },
        "item": {
          "id": "29f4dbba-7c9a-42ab-8016-f1bc9af0d650",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cdce1809-4ea1-4800-8074-60a80e6b14a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af8fca-9de7-411a-b620-b12af453b3a5",
        "cursor": {
          "ref": "0a93d081-6266-45f7-9255-3b87d9f82405",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "02a13ed1-3103-4c47-ada4-24bb31ee2938"
        },
        "item": {
          "id": "c3af8fca-9de7-411a-b620-b12af453b3a5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8704f6ee-41cf-4cdb-bb26-c7c4cfdfd02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5145f8b-3bca-46d3-af19-79cffc4f8dc5",
        "cursor": {
          "ref": "cd1129dd-f383-4e09-8921-516df2b68b94",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4b0a0666-fc19-4ada-a967-ca1f8db2af73"
        },
        "item": {
          "id": "f5145f8b-3bca-46d3-af19-79cffc4f8dc5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d14cc93e-a0e1-433e-9700-9d0e6b8347be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0600d774-6cc5-48b9-a9d9-f67c1f259fde",
        "cursor": {
          "ref": "02a31aba-0f7b-4aad-945c-4b19f431f3d1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3a6b2f5a-f8b1-4f03-ac82-a42d18cbb54e"
        },
        "item": {
          "id": "0600d774-6cc5-48b9-a9d9-f67c1f259fde",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "497a5942-cd53-4a80-8368-c34c21a97b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0085e6-d67e-4b69-a77d-6530e77772b8",
        "cursor": {
          "ref": "fbac49f1-4295-407a-b48e-b82d72138f03",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f6c6a86d-c01b-44ff-9b5d-d41a56af9690"
        },
        "item": {
          "id": "be0085e6-d67e-4b69-a77d-6530e77772b8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e55aa997-7bbd-4760-9b46-ac05ba630294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63204aa-39a0-49e0-8a1d-dcfc1164cb0f",
        "cursor": {
          "ref": "d74f712e-d931-46f0-8047-ccba12e7e9e8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "73fd4132-0cac-450e-b18b-dfc6c9664c25"
        },
        "item": {
          "id": "a63204aa-39a0-49e0-8a1d-dcfc1164cb0f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e610e518-e6c9-4707-947b-38662dbcf139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c84dc7-7518-4bff-91d7-dbda06ac13c4",
        "cursor": {
          "ref": "8e3c598c-4610-4034-aa0a-9ac9cb55cded",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "35e7514b-4739-4ba7-9b74-ca282390bc89"
        },
        "item": {
          "id": "f7c84dc7-7518-4bff-91d7-dbda06ac13c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d900b265-518d-47ec-952e-351738fc77ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cd1da9-d9d1-40df-ac1e-c5c77f9f10b8",
        "cursor": {
          "ref": "6648bb7e-0916-4e46-9d6a-ee96e5cec1c8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "75f312e1-6da6-4f2e-97fc-75f274f3068d"
        },
        "item": {
          "id": "23cd1da9-d9d1-40df-ac1e-c5c77f9f10b8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2be2abdc-3f6d-49d6-9955-af52d8d913b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3491e89a-3ee8-4b07-98e0-0683b8c321d2",
        "cursor": {
          "ref": "fd88c4a9-acb0-4987-b60f-642b177b9353",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f1fb73d0-01f1-4ea9-b101-715ae1621f50"
        },
        "item": {
          "id": "3491e89a-3ee8-4b07-98e0-0683b8c321d2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9bcc7db8-8cb5-4b40-a4c8-6e7e80ffe88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0388bb58-fb91-4664-b51c-2a41a1b98766",
        "cursor": {
          "ref": "385d3757-e8ea-48ed-b976-76df11c71b18",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cbace21e-b3c3-4c0f-8db5-292606ae296c"
        },
        "item": {
          "id": "0388bb58-fb91-4664-b51c-2a41a1b98766",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a8855a83-6dec-4c47-b7f3-aff6e02d41a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e92586d-9d7b-4189-8585-b05c9faa1327",
        "cursor": {
          "ref": "31817a32-e870-4e97-ac18-5fd45a0e2450",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "98e0b272-e754-4ac4-95a7-ff718a4d2acd"
        },
        "item": {
          "id": "4e92586d-9d7b-4189-8585-b05c9faa1327",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "75b8b63f-360f-4f2b-9c7c-79ce25bc50fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc532059-a094-4759-8434-77f7c1e74445",
        "cursor": {
          "ref": "16fd6008-7ed5-4668-8094-fa23eab781ea",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "51de6d23-53bb-47ac-bccf-f5a5f723c95e"
        },
        "item": {
          "id": "dc532059-a094-4759-8434-77f7c1e74445",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4757abbb-5fa9-477e-86ba-640708562e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f80e8c7-e01f-44c3-a8b6-510d1830995d",
        "cursor": {
          "ref": "adaefa2f-6665-4569-8586-02d7f0e2110b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "69dfc94e-a56c-4c04-9ab6-01519dbd5dae"
        },
        "item": {
          "id": "1f80e8c7-e01f-44c3-a8b6-510d1830995d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f004afd3-c197-41d1-9acd-fcfec90f7495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706da11e-108e-443b-9f2a-5006792b7852",
        "cursor": {
          "ref": "5e10f3d7-b558-4313-bad7-697fd265cc75",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8d318b3b-dceb-49a2-8daa-1e395b429e9c"
        },
        "item": {
          "id": "706da11e-108e-443b-9f2a-5006792b7852",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "496bb456-822a-4225-b7e1-053abaea1f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e97925-6066-44c3-8364-99f340211e35",
        "cursor": {
          "ref": "77679981-96f8-40c7-8d9d-641ff877a9d6",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "349df3d4-1ffb-4ca2-995c-8cce0fa4e897"
        },
        "item": {
          "id": "14e97925-6066-44c3-8364-99f340211e35",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "48870b54-8f64-4c60-95bb-41e674db0c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab8a507-afa9-4a05-b7ec-48c3d7d54b98",
        "cursor": {
          "ref": "742d1fd1-6e69-4df2-b94f-7347ab016d0b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ee0704c5-7f8f-4d57-b49c-916aadd8cb2a"
        },
        "item": {
          "id": "1ab8a507-afa9-4a05-b7ec-48c3d7d54b98",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "103ebf15-7f32-4611-a745-48938f447d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e59b554-4de7-494e-8cf1-317f041d0c36",
        "cursor": {
          "ref": "f382fca1-7863-430c-b077-329648139967",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5e759ac2-e374-4ac8-bf34-e2a151bb6119"
        },
        "item": {
          "id": "7e59b554-4de7-494e-8cf1-317f041d0c36",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6cff509c-a0af-4adc-b263-e0c0af348df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e926729-c4a6-452b-85b8-f2d1106a76b9",
        "cursor": {
          "ref": "58cc20dd-e133-4524-8c44-354ec1854108",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b2e40cbd-9533-4c00-9373-d1d378332368"
        },
        "item": {
          "id": "6e926729-c4a6-452b-85b8-f2d1106a76b9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "00db2653-d6d2-48e0-9d80-486459321705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc62a86-677e-4963-b69b-bcacb35e49c0",
        "cursor": {
          "ref": "cb61a647-9a81-4b94-9a1d-31c3612ea4a5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "98222b9d-a15c-43b6-bd2d-afe23e9b5674"
        },
        "item": {
          "id": "edc62a86-677e-4963-b69b-bcacb35e49c0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f3a263a4-9874-413d-be82-00c2d8c8d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe59284-958d-4bfe-9e8f-b9830cec8ca8",
        "cursor": {
          "ref": "a87f6597-f3d5-4ee3-b4f2-6b4894747acd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9fd7bcdb-e1f8-479b-969b-e8797ecb4ea5"
        },
        "item": {
          "id": "5fe59284-958d-4bfe-9e8f-b9830cec8ca8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d175ef2-1b04-4acc-9775-181d6680914f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123f3a9-d973-475b-8957-3d5387d3f410",
        "cursor": {
          "ref": "6ca32142-3a43-40b1-9b6e-eb718c8d5732",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "59f225b6-8193-4a0c-a3c9-c63f81010353"
        },
        "item": {
          "id": "1123f3a9-d973-475b-8957-3d5387d3f410",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ed365a45-a12b-4275-965c-5760eb888bc5",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28280ec-9de5-49eb-916c-0044b9758136",
        "cursor": {
          "ref": "068e2835-a3e7-41d6-b9bb-67aa847d3313",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "46fc3ded-fa37-48b4-a09f-a589180b17a0"
        },
        "item": {
          "id": "d28280ec-9de5-49eb-916c-0044b9758136",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dc65f2f1-d655-4d24-886e-922092c3cb08",
          "status": "OK",
          "code": 200,
          "responseTime": 1399,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3134eb63-be6a-4530-a2da-20abb33af3d1",
        "cursor": {
          "ref": "836a4612-def9-48c0-8228-8e43dbb9a973",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ffc3dfe7-0244-4afe-a68a-027ecf161479"
        },
        "item": {
          "id": "3134eb63-be6a-4530-a2da-20abb33af3d1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4aca0c5f-2d2e-4c89-a2d7-d8bab632778c",
          "status": "OK",
          "code": 200,
          "responseTime": 1914,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50e12d-c4f2-476e-a56d-0e3c9466b369",
        "cursor": {
          "ref": "6aa68e65-f347-439f-b857-c9e8129a84ec",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "903a001e-e209-4b8b-9bca-89ba923c3649"
        },
        "item": {
          "id": "ed50e12d-c4f2-476e-a56d-0e3c9466b369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "680e2db7-0881-4d31-9c37-97da35065d9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50e12d-c4f2-476e-a56d-0e3c9466b369",
        "cursor": {
          "ref": "6aa68e65-f347-439f-b857-c9e8129a84ec",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "903a001e-e209-4b8b-9bca-89ba923c3649"
        },
        "item": {
          "id": "ed50e12d-c4f2-476e-a56d-0e3c9466b369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "680e2db7-0881-4d31-9c37-97da35065d9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f71140-9f6b-45f8-bcad-1895ba52007a",
        "cursor": {
          "ref": "d8d59630-3489-454c-9afc-e2ef7f5c59a4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f5811560-9b7b-43ff-85b5-5d94ece3b549"
        },
        "item": {
          "id": "68f71140-9f6b-45f8-bcad-1895ba52007a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c6d9bee7-a1db-4b18-a5d2-f84c00d74b7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb37a34-65b4-4ab2-a306-f81bf9f27e87",
        "cursor": {
          "ref": "2232f6b4-2f69-4bc0-82c8-afa4bd06e548",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c26f00c2-a19e-457e-8ce6-edd529a76f66"
        },
        "item": {
          "id": "deb37a34-65b4-4ab2-a306-f81bf9f27e87",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3f8e3777-5cd7-4465-998d-0f5c9e21d514",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}