{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56976554-0b2f-4c84-b333-81c78ff83eaa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4df7fb14-c14d-4b14-879d-8cffbfbcbd40",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5d162eb-c625-4c03-a0ee-b46bc1d68c35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f86c47b-ad9d-4600-b3fd-53ae62cc9400"
                }
              }
            ]
          },
          {
            "id": "f3b2997a-cd0f-4f25-9a5f-2bf2e864a1fa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0882c0f5-3ba2-4c34-bd1e-45bc50eadfd7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6af0f86b-e7e3-40ef-9c88-d3b6fdb6e671"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e75a801-21fa-442c-8261-194bd25fea2e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fbb3074d-490c-4326-a2c8-c29a5326beb3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfbb35f5-432f-49d3-bd83-675c757d9ddc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33e596ee-1af1-419e-8ebb-ab1d0b699c5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "734fae9c-e8da-4fbd-8caa-ccb5c8396536"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00cd855e-6990-4ff0-92aa-640c127c4e88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb9e7220-3879-44a2-846c-d952a38f13cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6aa1ffbf-6db7-46aa-972c-1310f755bb1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2f4f331-ead2-4f0d-a48a-685ec3c57075"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9be5f861-dd06-4f2d-876f-d3fa720377f1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0384b060-a543-4be2-ac47-c59edf6d5431"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d3c7c74-01e9-4772-b3af-2914922bb901",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4df6a2d0-3750-4a7d-99dc-eb26445b94cf"
            }
          }
        ]
      },
      {
        "id": "f181f302-bce8-4553-911a-3dcf8dff59a5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "903995ec-91b1-400b-a3a3-fd9285d14138",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84583779-4d4e-4b51-afb9-4b40e48d8803",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "932772a9-f43d-4a9e-9e99-d50cc9e435dc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e08148f-1423-4b8b-bf97-24454c70b2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66cfcc7b-737d-4ee5-9c7e-30ca8ce74a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3eeddf-3517-4fc0-9f1a-b88aa1b99609",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794ed7ef-9fd5-4342-97d9-0c9a5b853f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ebd25b8-280e-4cb7-b2b2-ef52cc64da20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a59c6d-8636-438e-a9c4-b69b9c94639c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c8ce74-dbc3-48c3-bead-b0f34fa73587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "620af8d8-325e-430c-a0f5-13946bef312d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d7d6986-94d3-44cb-bef6-97d71dccd227",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8944b1c-60e6-46e0-aedd-2491611c2f88",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6798f1-71e2-4f80-b3f6-5792db14ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddab19a6-320c-414e-bd29-28acdbb2994b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1cbb3-def2-4955-9166-ec2e38368922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdea7e9-d6e0-46e5-b045-c6157b4fb8a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52bd72be-5f83-4b5f-940f-70489c36942d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "130f6c85-bfba-4b1a-a5da-010df98e6e56",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17aa2f1d-f9a7-4cfc-89e7-6d20b94eedcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "739ad043-b63f-4be8-b754-5c79bb8fd0de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2323f70b-2d10-4171-8275-3380377e3426",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1817dddb-11a7-40e1-9d6b-0d3d8d0edfd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29a1cf5a-f940-4f9a-9c7a-e68504fd00c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "445de2bf-47dc-45fc-8d2a-f880a47c63ef"
            }
          }
        ]
      },
      {
        "id": "6b6d1487-ecd6-4b9a-a4e9-29874cbabb4c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "208e7522-dfbe-4ae2-bd60-ecee087c726e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9a1c34e-8af2-45a9-8a9f-2af5ba9702ba",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9f68cc5a-0cab-4a15-a561-2a6d1ef73588",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d3c01-d1f9-457a-b4d3-4cfc6689b412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f33f29-098c-41e5-849d-a3bee5541f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e30c0d-7ad6-45f4-b7f1-814206538f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a08acf2-24cb-47ee-b2e0-1dd735cd59f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd7a154-b9d1-4576-bbe4-f444d4267518",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9792c4-9da7-4545-855a-5e7e67dc9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9965d4b4-74d6-48d9-a461-68a7914accbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7464fadb-6045-4b11-839e-8040baed530e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c802424-64d0-4ff7-8abd-6a7118204756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd480a5-84e3-474c-af6b-134e660e840d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71b3f31-8ec8-4cab-b5af-e1f81f534608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b532c1-2dc6-4951-9b45-73305dfbb932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac5800a-6abe-42a1-9565-1b8fdb43653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9597c6f9-c001-418c-8a28-0bf7b1d102d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396e518f-79df-4fc2-9cfb-6958774c6b9c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f12bf1-fcb5-445d-b24b-5ddacbc46b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd34a89-0147-44e1-89c9-58eb817d2ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53838810-ab42-4ab0-b3c6-a98a4e943153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c99633-adf2-4b3b-ad35-d7dd3f162595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ead67a-2430-4a90-8460-9a979bad8678",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ae3850-6da9-454d-8f51-ff791177fe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee490599-73e1-4561-aaa4-a9e00d4fdb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c496a3-7f91-4d60-be85-41836c4e731f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b1c49e9-562f-487c-9076-563a10876417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859ba4e3-81f8-4a82-960b-8331252cb9ad",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08e6fc7-79bf-4832-8057-d8b2114098ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8ecbf3-8fdc-419f-8392-db7cdeb48bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bf488a-bfff-4063-ac0d-43bcb6d1ca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed0289a9-adb1-4548-9835-81ac969323ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad74d5e-eb04-454d-acb5-77eb7cfb2be9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27cc2d0-d76a-48c1-a8a7-b4811ac3e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201a093e-168f-423b-aacd-0be9333d1026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c6b4c6-6fe9-4175-8d75-b6050146f9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b53580-386f-450b-b392-d59dad48b501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b12bc-0ff2-43df-9efd-26aea4ea4cb0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67084ba-f4ed-4ee6-a61c-d5fed25104f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ec854-8f13-4414-9be3-526e42cb0d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f48b26-ec51-4a1f-a3f8-a6ded5df6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34993666-8906-441a-b95b-07055df7e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b92ce-e6d3-40a6-b25b-85c647129013",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d645dea-ef22-4041-a624-d8407518a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ae9334-7200-4274-84f7-aae6f3c16e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52d1a8b-9948-4df4-9542-2ed319030c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9859c93a-534a-4aad-9dd7-a4b17496f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488d4f51-31dd-4818-b113-f21cde7496f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d4df06-b2a4-4438-80b1-cd9552849c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ddf137-38cd-45f3-bc4d-13937a746520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f716ffe-58b3-43bb-9b49-1043956a4a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "627df557-389a-4fbd-8b31-64ba66c0fbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d089980-964e-48cd-99ad-e1d997dec311",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760afed9-9c72-45d1-b85e-7c25c9972275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4604a886-b06a-49c3-9e4f-49a54be8d360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d690f5-efc0-4856-b85b-8366a516c889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a639e7e3-bdca-4f9f-905b-4420a713887f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a048102-1313-4121-89da-cf7372a1e166",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3876b955-0821-4cf8-a59e-b8db859cae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9472026a-2c27-4c87-9dc9-922e0e9d05ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89fe7d2-6a8a-4e0f-a5bd-f0651352159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6e97a4f-4750-4bce-a69d-9e2697a3bb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0214e8d6-d835-4bf5-a30e-a2ef92956ecd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae1d6cb-c964-4a1a-bac5-8e0df6b6872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbb40f4-cccd-441f-8e06-663b91380fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f1d135-98d0-46a3-acc8-86842cc61c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a221f7c-4525-4eb3-8083-b1c7a708b0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6db6bb-74ea-4f01-b3be-c49f787de5cb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472f5435-fa17-468b-8670-e8d860ea6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3d0b56-8027-4f8d-a272-2f83946bd01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f136e049-9599-4f64-8891-0cc9ac41b229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b73ae38-8078-4438-a3c6-35faca2aa9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae831fc-3a21-4755-bcdd-c01db467c816",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e8faa2-08ea-46dd-a2bc-9c8810d0529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f4ecbb-d65e-4714-85f1-aa4448602869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0c0654-6d7b-4b98-b031-d91d30a20659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da516f44-a922-4a79-9885-ce621adc4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67879732-2f1e-43e5-a4fd-732c90f92a16",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6974f0e5-feee-46b7-bb15-5a6145b6d043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f446c381-f109-41ac-9228-49e8c1137165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6ea510-c167-4af3-a4fc-17c148cd164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a3d35fa-8239-40b1-b62a-92e75799114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728490ee-b961-4be9-9d2e-aec5be5a5869",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d7ca3-0b34-4f65-bb48-47dd5fc0419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae14b0b4-6c43-4e39-a39d-98b1b2dd5609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca74dac-9f2a-41a3-bf5e-6c8d1da0d651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82087bcb-0ba3-4c63-b294-3dfcf2d9cbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3646771b-60cd-4448-a335-a0bd38824232",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a283279-e57b-4d82-a5c5-6d8bed72ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93faeaac-d858-46a9-8a34-c1fa283f14de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9bbe15-eef2-460b-b7bd-27268fff3de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c430a81e-6e4a-472e-81c7-01b81c1cdb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24adb95d-2e3a-4e29-89f2-1be2f2ceece0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50365d3-d4f7-42e4-9b7e-a9413ac5d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8483544e-3ef0-417e-8c70-40fd71436f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dbc674-303c-4722-955a-ce76a766a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8badc7cf-149f-4aeb-b796-2096b2aced9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b358312-afe2-491b-a6d8-2f78836b544f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e22ba1-f14f-426b-ad0a-a0b5d1a640d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0f00d8-5d64-44e8-82f1-678ec51f929c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381aab77-3fe5-428c-90fd-cd42d38c2915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a6636d-2fa1-4443-9b34-7f09c895c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3af3d3-29e4-4fe8-8b48-5e45c51d342e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7b8fbd-cbd1-4643-9c0c-7ef56efac0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6928718b-7dbb-4875-ab68-f696d478a8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c67a562-c5bc-4204-bdd4-f802d025459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c1f753-8c0a-451b-9ed3-af7da3a1863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648670d4-9fac-4237-80d6-7d4b53f7d7a1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e542a7-06c3-45e0-81e7-0d304e92195b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e77761-7a94-44a5-9773-db6782d56d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c12a086-9dea-418c-9250-190c0440db76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "190d9ab3-6bca-45a4-ac71-b524d36d92fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72b0c21-8115-446a-a545-81bcdd30e739",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a200123d-9f5e-4cf5-84ff-639d1e21e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b669df65-f32a-4f64-8748-cd28202b913f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b007819-e209-422a-885c-b81fcceab8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74170b1e-9277-45f5-b484-abcbb842cd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c488775f-1637-4e9b-9e5a-cb88b519d454",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e5f94-9f4a-4892-beda-e8086bcef847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b92e02-302d-450c-9aab-dd06b5ce267c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db537939-b606-4814-ae07-731ccc5fd7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f96fbb-510b-4858-a85e-cb25984574c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd5e368-db2b-4b27-8a01-707663a2a6dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2d20f8-2d04-425b-b1c9-9de2a0d96e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfcc052-94f2-481e-9b3a-59615e049820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd4b867-f904-4cad-95d8-86f80282d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b69f7c8-57df-442c-a7ad-c96f6866efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df428a9c-a982-4c4d-897b-f0c637f6dfb3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cc1bc-c561-4cef-b75d-46fff63e75d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a6316f-f5d7-4368-8a9a-bca1bf35f4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9bffce-a8a0-4f78-9069-9fdba87a50c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b89845ee-4754-4752-9b5a-567bcab3d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981b9e05-14f7-466b-a8e5-2c9baa259f33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34283f78-6d85-4095-9791-c97566dbaabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377b7aff-f5b4-4a87-95fc-1390f121d4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8fe9f-a60d-4678-9492-fb6ab7e67c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc03a1d-b44a-4b64-8713-5a8144ed1d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374e15f-5b74-4539-9893-605d647d08d0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cead1a-1ede-4e6a-ae92-549e52c8dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226a2cd5-b0d5-4bfd-8158-e089642b20d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d9acea-9cb5-4d8c-aa99-f6f8c39fd9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0981af-8419-4133-919c-72e21fa1d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2458d10b-3b4a-4686-86c4-d203066d0aa2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e85f8ed-80e8-4e69-9658-5eb7f3b148a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874f8833-f9d1-4403-b27b-02e325f31810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32d9b1c-ef6e-4d4f-9cd1-a6ea1c96b68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5241166f-dfaa-4299-835f-781530f375b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06f674-e848-4b38-9aea-6963a3262be2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6b2176-4d3d-4d0b-b151-238a21cf0c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33d116e-fa35-4e15-b65a-7cd29471826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d62cf7e-31c0-4877-bfe0-db70a1f56887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "50137dd1-37de-4043-a0c7-371b2251fac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc68a483-0af5-4634-acbd-5677f7121b43",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ffd785-843f-4a60-9098-72fd32d8ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7156e5a-0221-4775-b9fb-f05c70fd6ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd47a5f-c7cd-479c-bb15-c5cb455760be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "786e5493-7145-439f-8f7b-b62837bf5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1b7c2d-ec65-4b2c-bead-123990394d4f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65423ee-beb5-4a14-b14f-6a2a0623c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96736b11-d04f-4845-bd31-ca9eab3c6e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9790afa8-c1de-49cd-b4a1-2c1666e3aca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08204777-4815-4f44-aa28-8d855f102b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcea043-78d5-4721-9c57-677fee946da1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e193ba2-658e-4e4e-bed4-3bf6ef6f33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d0e42d-1ef1-4880-9b5f-0877ad126918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b419d9a6-3cbc-4b2a-96b4-1f549c144885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33455627-7d76-4d33-a690-ee736024d32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f152e590-f2ed-425d-bd02-6cde6e430138",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbb2c60-25fe-409c-90af-2eeec945ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfaa36e-9d91-4602-8ae1-63bde5ca340e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba43ab48-77ed-41f8-89a4-8fcd3e97370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba91a65-50a1-4645-9390-53b9a66f3535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70d02d7-a9d8-4ca3-829a-c9cddc74b9e0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20467045-7278-4f86-ab50-e43b2cf06c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b99e7ba-7878-4451-b0e8-63e2ff24fbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a734197d-cbe4-4da2-904f-2e2daf9fb32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f433b96e-b127-458c-bf3e-fb8f5dcff95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e149fec-409a-4c53-af20-cfdfc4a1daaf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5042b6-5d36-4982-b5a3-f94edc7177da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c13a089-6360-4ec3-a08d-82640b8c3333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e4d184-c322-4885-b234-3f48daa23b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9013cb-b62b-4bdd-821d-dcfeba6dd28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21f85b5-87fa-4c3e-b4a6-c14800ce87c3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cba84a-802e-45c5-93da-888a6788d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e515d7a2-483c-4a96-9ba4-f84391f2fd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93891e5d-2eaf-4457-9a7b-d65a1dc0c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "990d6a7e-0f79-497a-b295-a5a493e515dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceccc77-2c65-4bd5-8d96-97a164701b1e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811e883e-2653-479c-a367-d417d9770050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76c0e69-33c8-4411-9768-547ff0b6e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155f87b6-ace0-4602-958b-b21257bf3f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0b5aeb-774d-4470-b5dc-a04493e9c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a6340d-2d9c-4940-b854-7424cf5acd32",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc01c89f-75b5-4a4d-b2af-48814a1ad975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b03275-73c9-41ba-b744-017665e21fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4443d-b3b5-420d-9430-fc1e6ad7daa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4f8f3e-d7d9-440d-9ff1-befc2b9fac34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c1321a-ae6e-4fb3-a953-9671c9bed233",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4839d8e3-2743-4116-9897-54d2e42b1e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b43a55-90c7-4c19-a240-b16d1fe13138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2818bf82-fdac-40cb-815b-cc4d56d823b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee1eeb9-079a-4828-8182-6c176b48a725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a375e0a8-e6de-4b73-87ad-482181cfe100",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1616d20e-0875-435e-ba39-80c027e21377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26b2c97-ef96-4ae4-b06d-62db779b8f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a860c98-f437-4a5c-83bf-074961e623e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e467c4a-9460-4bd8-88d0-5864943be573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da51a342-5ac9-4ef9-a4b5-5b4a7f509c0e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517387a3-286b-47ff-acd3-e485b5be6e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96673643-c237-43e1-948a-cd90fcae9380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb7ff7f-fb2a-47e5-960f-f811cab1e0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1926b29d-0cf4-42d7-94be-27955ea8ee3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc02a85-6e55-4cca-b70a-f8c2c89cdc3a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d5dd35-6b4e-48e0-9829-efabbbdf746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef76928-1fef-4793-906a-3872c8c37228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32a86ac-7270-4c09-bddf-d00fd47b566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a236a76a-0070-4645-814a-c448a18e0d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d0f8e6-ddb0-4306-a920-2e12c789c72f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f66173-f179-407d-ad3a-7ff2191773e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea6e354-ee1a-4c6e-b9e2-9d6823a05782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290eca29-13c7-4dbb-a237-9b61a1b42187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6788234-5137-49d1-9809-feff88b7ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bbcfe3-6ad2-4b08-bffc-fc770021e94d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5430da54-854a-4006-84e9-f36d283e9760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc17bbc-673c-4ed6-88f5-121da3c0d0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d08292-c527-4e23-9fc8-c1240e6c6b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a13534-7830-4724-b4d2-43ed387f5cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be120586-894f-48a3-b5d0-1cda5e56a609",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e278bb-2c9d-4fcd-ac41-676d0bb9ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fff2e08-58bb-47fe-a7db-fc969c5b9ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c43ad63-c63b-4748-80ab-e58069fa0cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdf7181-5fa4-4d8d-b56c-27ec8dda964c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f154fe50-d2ee-40b8-bccc-bb13b97e2aa9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a1d904-a72f-4780-8a88-343f927cb6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e10490-dee2-452c-a4db-a8d006ea3d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325bbd7e-7c24-4bbf-9b8c-7ae15914abb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e89925-e741-436f-813c-dad0e11083a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843cdd59-4cda-4ddf-8076-1725200686f7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccc4039-002c-49e4-b4d8-bd6c58581887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d962c83-a018-4754-a54a-75c62adfa2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcc306c-5daf-4357-8e7e-eef93cc9c24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7244506-157d-4d44-bbba-0b54bcfd5c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc57f4ea-674c-4aa8-bb60-bf2afe1e90e9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe61076d-bae8-4865-b3d5-4a97fb73de91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6835e0-6003-416d-8a2c-c81f44c3f683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bed936-1732-4510-a467-7c26878b0291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59f89762-ab63-440b-b62a-85a48b6f6582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eb3d74-c794-4ed8-a1d2-1040b2c6313b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faaabf9-3a7e-4376-9a74-9f6a6f041fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1518e74-c1a2-4036-bb20-cbf3c2bd5d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8d426-c107-4ebd-a28e-3fc3a941cf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb4fc09-c864-446b-9ed3-5210b9285f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d29e58-51e8-4ba7-b86c-8ca9546c7c4b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81d5c1-bd56-4de2-9ad6-3bbc5aab9c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac66a18e-2311-44ec-9ac6-35194b514926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d967fca9-0139-48ad-b8dc-9f7ea462bf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b56cdd-b5dd-420a-8fba-0793d165b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bdd6ee-fae4-4092-ac65-1dd8b402999b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acff65c3-af9f-4b56-8ad3-5d2a048439a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8fc9ae-19b2-4f4b-bd17-43fd894316be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e36620d-955b-44f2-aecb-382c2c4f7a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d821aaf-7914-4e25-b47a-d0f2c8de4c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d4d9d8-4e12-4119-ae66-c9600e30bc84",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d2f8b5-89e6-4337-ad07-20b1974b1a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2134682-8178-4579-a4f1-83481c748e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b397a-f14d-4518-97ca-348ca4702c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0db4f72-ee2c-44e1-9284-0479d5a3d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d16de3b-0500-4e17-a6ee-fc7e9fe1b1d4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39434c7-259f-4cf0-b31e-9c5c88a6d211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eda4f7a-7acb-4191-a0e8-8f1178df7ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cce634-8b12-4501-961b-573e5a2516a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f7996d-19c3-4f8f-a473-f8cd79705f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e63901-3fdc-455f-85ed-5d135b07c0e6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9dddb-caab-4755-97b3-3ca22194b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601a905c-60a5-41c4-9aff-47ac1fd75a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd253986-f4dc-41e1-a9a8-d8a79fe839a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4d39be-83e4-4d8e-ab43-5adcb854ba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16890aa8-d811-485e-8917-533a44e333e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c411a44-da48-4cfa-9003-0c51bf7b2353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccd8b3f-cf09-4a20-aa8d-c55feb4ac5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73babe-3733-4558-a8dd-ee9e2865612a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcaf8de-5126-44e3-b3ef-3a8fb6654232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff105d3-8b9d-4679-946f-da186141674d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189c265f-e330-40d0-80ed-5ce2b469303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be03c1e-ae64-4ffc-839e-38f9f540962f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0245027-c704-4320-a457-325e8556e3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9462a7a-27bd-40b4-a3db-965640fa8117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b11a0a7-e7d9-4f5d-8822-877e54cea2fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f1e5c-5f57-4c01-8feb-645ef7224a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302e477d-1e15-4db3-a139-4c59f9c3d6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b8d237-c27a-4403-900a-7f35024bab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85eca1aa-4acb-46e0-b6c4-8a1d4a933d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f573be-bb4b-4122-b7d2-b8bdb4350fb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f89c5b-7735-480a-9368-ef1917043f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b4164f-2092-4c3a-bd80-017e7c1fcaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd4e866-8742-41fc-a4a1-59b1caa3d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3abf539-aa43-4b38-9751-7d5fff814863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a99fe82-4003-4128-b468-87f5ff0bcba7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f4c579-226a-4f71-8c5a-3d0cb61f39b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b825f9-943f-4edb-8c99-353be0bfa6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381a39b5-b651-4771-9954-a5ed8672ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4749bc-0acc-4e9b-86f5-3b34d6dd5bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a931abe8-6f2c-4983-a181-49411e8c7d2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dccf364-1d7d-4fc1-9b16-d16295847dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a05fb4-d394-46d3-af69-09e7df2b457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8883469-0e67-42a3-93bc-d38c42c2fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cd7ac8-7276-42b1-8a7f-acf661ba55de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fec927f-9732-4f71-8c94-9baa284e3693",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49392d36-bdeb-4db0-9a9b-f8b3ee20bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924ef832-3fee-41e9-8e53-a5276c1dd8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff4c45-5d69-4694-9bbf-86bfc37de367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d675c15-5c6e-4a7f-b77c-432eebf53092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3480dd-0bec-4557-8934-51ad0a66fa00",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5118ba8-0a98-4df8-af61-915ea1b2ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f83d95-60b0-4497-99ba-5faca4f841d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6b55e0-cbe1-48ed-aae5-30aeebe11012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63e68a7-e305-48bf-aa0e-9e53009de0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b09301-c497-4357-ad2b-77924d4785ab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532d75f-98e7-4fe8-8957-48f42e292d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d1146a-1c05-49e2-bd36-67fe1cff370f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61603fbe-de44-4de9-9249-870f47f973b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a395f3-e19f-4267-84ec-f49acdd8ebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc799c8-d723-4c22-8736-9d7e146b5aae",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e811f98b-5998-4819-9bff-301093e1270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3d5e49-a541-4deb-87cb-8dfc79261fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ba0877-445c-4242-a4a5-61f4e7e8a1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc310d54-af94-406b-abcb-7b3e868f6090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8484b13f-ba06-4d77-b0de-072e9a587003",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c2fb1d-d6ea-4def-aac4-1cc4de9d92c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83b58c-3bcb-496e-abaf-a4b240896652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b206f-398d-4a35-8f55-2ac1720863a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec768ec5-f770-478e-83ab-02a693dcd142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfabf9dd-974a-4a78-8e4f-52a20eb312ae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d0031d-a4ba-4531-b33d-e776c9ed4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65fd5c9-3227-4fda-ac8e-7ab6f940cdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d729ff-3a7d-4823-a56a-78da244be98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af90ed7a-cd85-4cdf-b635-cb6a8fc9206a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba3b3a-925a-4051-90e9-9add58c31069",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b400fa-5a8b-4194-beb0-b4a2f96360e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1eb440c-8b3a-4886-a15d-b0785387035d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc84362-1da5-4981-9f9f-cee2298e1829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1920cb-33e3-4f15-a94a-6c1749194877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493bbf77-abaf-4ef8-aedc-ab997d3ec723",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736020dc-cd10-4e45-97f2-9dbb5ce63a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55538bf-bf17-4144-be3b-f0f3abb21b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff00e96-d79a-4263-97d3-7160fb67441a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f28d96-56ae-4e47-a1ff-479e50ee9d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27f650b-fccd-42b0-a5e9-7883486227ee",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe312e20-3696-4c2f-9154-1ebbe7761db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3dbf31-505f-46a5-bafb-a8e95f9febee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dcb6c5-f84f-46b7-9166-9e8fad11add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c9736c-0dd9-4dca-8fee-226e1f82138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526add30-0a95-40c2-a015-49c84bce386a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab67cab6-6841-4ef4-ac24-729b136f4d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6f767d-7eab-4938-b3c1-40c9b027e541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2b4376-4570-496d-a325-4c9c81f0e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d180229d-c01c-410d-a4c5-71c160700658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2712778-0c9d-46cd-9cff-3c5edccd8370",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b516860-c115-4cf2-98b8-c615cae1624d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b748e6f0-6a7d-4bd1-b09f-24ed663beb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0907e-cfc8-4706-ad89-9f4a1b336f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b843b3d-61d6-4c40-ab4a-bbb11f0246dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7053a5c9-eed2-4d41-8b12-13b0d80cce8e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3822eced-e665-4526-b27d-94f9739f7673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d60aea-e937-4f41-b9ae-770298fdd261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b32c8a-7045-44c1-b55b-25a7bda2d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "075ed04d-7fd5-42a8-9fb1-ff689e81277a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d87a6f0-0918-4c03-9c13-2c30b48cc588",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66d40a3-4ada-4103-b10c-7746ed48b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0069b2b3-dfb1-4a00-a74e-606c311278b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e030aff-f63f-4adc-b589-dee729d62bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abc5e806-85de-45bd-99b2-7f755783b958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501ade8d-d9fd-4210-beb2-0bc21077cbab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb081ea-3e1e-46fc-88f8-1afd99e7342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a9a054-eb54-4e14-a2ae-d7a480c9bb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21348c12-5a4e-4c11-a1ff-ee53167fb25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1212e2ed-4e8d-4458-9e25-510d3426f45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76225bee-8b27-454f-9e65-00f200b3bc3d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68229c56-0574-4556-ab63-efc79c0f2743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7da4a0-dd7e-49f8-9b0d-8b99f2b128b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc735bb-6c75-4d8a-82bf-ec124c3760d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1581b86-9a4e-40a1-9ca1-d965558926f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e48dcd6-04ed-4500-81a7-e2ec2986d1b3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56222c6c-8691-4c10-ae3e-b872f283bf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a076d83-d11d-4476-a35f-d72d22b6c6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6454d00a-644b-46a4-a952-3d9b1d26b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aaeb44-31c7-42ff-8cc2-2f4778f1b34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb1d2a7-0ee0-435e-99a5-7fb05715b865",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53272e4-6543-47d7-9480-c7c7efa84cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29dcb07-d099-4151-b34a-7b8f32537dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72ef211-672b-4f84-bdd2-faff9ea136e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3ade48-717c-48f4-a8b9-b8f2eea0fec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75ff109-497d-4730-856e-3a3c10b24fe2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a14e54-4cab-43f7-8c85-9bf7f9496b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1daf98b-61f4-48a4-b564-508bd802d00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc76276-a87f-41bf-b775-c22c0592529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efabd2e0-5add-4362-939a-0e6c089ad764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3b09ae-7cab-4fe1-bef2-aa0c6a721111",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c055c302-ab3c-43ae-94f6-489fd1cc8929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a29f21e-a2a7-4c29-8052-e0ada517eff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6b7453-2ab0-4218-8d7f-fc8df6a767ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37481ae9-d905-4659-8b4f-d7d5a5b7fe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d17b92-9caa-4e40-a0e3-53a1cb057197",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff6015-1fb1-4a12-b997-15d37e9d89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cb4ebb-fd5c-47c0-ab99-44a190dda021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e374fd-0784-401d-b848-d86a0871813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ee0670-00d6-4975-8a29-b41b1e1ddc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9f1369-b039-4bab-beb1-aae651969333",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4fe09e-b455-4bdb-8bbd-a11b1100089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a685fac8-d5ef-4999-8e9b-970b515fa7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd6cd50-feec-4e2f-8573-d715805516c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e96c9c51-222d-4971-b067-8e1b0cc3f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ce872f-c938-4f4b-a746-e6f99f5f653a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbbb5d7-267d-4d7f-a8e9-db97aa34c568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c87e4c-ac2f-4498-b905-68e2366979c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c569e0-a011-4ff3-90df-035e129fa1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc840f0-a855-42af-be5e-86cdd67019df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb1b293-5abe-444f-9db5-0fc72407b0cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e15bda-6d47-4285-88a9-dfb8c83bc557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3b9dfc-0903-4edc-bcfb-07fc60ba50a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a50e3-321d-4430-8629-7bfad713e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f61def-4259-4a6d-a0d9-81cfdc39a514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d45728-1925-4355-8d6f-4381351a0a18",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87efb75c-a2df-407d-9686-308b79c25b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f261e6-5e4e-46eb-b8d4-1217282f4c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67061809-d39c-4600-a300-d0f51176cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aab68b8-13a6-42e4-a92d-4cbe8e58c9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4341f58-0e69-491c-a58f-d5be306c0832",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb5da37-3ca1-408b-b586-0ebabb170346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d8d6bc-5fed-4b8a-ba92-28795bf66f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a175146-6088-4665-9b87-cac0fa17928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "947135b5-1f31-4e2a-96a3-251ea3ea2a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684bb2a2-e41a-40b8-b5f2-87673944a111",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47bdeff-f862-4b80-970a-92507c32a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcb6c08-d872-415a-827b-e59d57fe2163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcec4f9-9721-4361-99f9-21f2a17dee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34f86e3e-772f-4628-98e0-9e501b7c3526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dedae5-794c-4a59-a602-46e5056aa059",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0830ad-55f0-424c-aeff-c5d1907f4897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310f819d-ba52-4ff5-a83b-c7d50e2e0556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4c6db8-9299-4985-b55a-d6d4ff3bcec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6175494b-1e3b-4e72-89ac-0b86ae708ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edee6ec7-38e4-449e-b86b-51a418aafae3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600a718-1382-4b28-8ecc-526e7e383e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4213539-d6ec-4141-8a8f-7d2c8037e95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380244f3-9125-4028-858d-35d3dfb0627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4edba57-16e2-4d4b-81b5-0c77cd829286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51e8529-0676-44f7-8368-8bc6aa9e8317",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2df5f-9afa-4588-ab31-53dd8323f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ed987b-99b2-416c-936c-ccdcdae4c0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df78c88a-6f6b-4c86-a816-9ff11d17942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a3acc3-0f7a-46ad-8e1a-709ac5ff9f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ef274d-2100-4928-a1da-843512eca2a6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89693a66-a002-4ebb-b319-43374c82356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6097a99e-c412-4d36-9918-4344f4d58b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9983ce4c-08f2-47b0-b109-4cc279695135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e1f96b-94f4-4b95-b313-d4a4e4e6f29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc03e80-766e-42dc-afd3-eecc7ca76aa6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cadb91-4876-4df7-84d8-615c6cd3eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c25ef72b-1b9f-4fe4-a0af-549e50ef4f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8355e1f3-c077-4625-8d50-ecd90f8cf5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d44c7c26-6c52-4260-9e5c-ff629c965f26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "162952ac-0312-43ff-b346-c2b5256cc6e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa1fc76f-d4eb-4fe8-b480-21422736bfd1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec0096-ea74-4ea1-8e65-32c8af9bfe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a0355cb-09e0-4464-ad6e-71d750d5668f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc6576d-130f-4356-ac33-0c0d74adc46f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ad37a3-ea3e-4968-a625-200033a3df43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d5aaa4-ab05-4bd8-bb28-978c5f0bbd7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5df10cd-54d1-49dd-a7a3-0d5c76cdeef3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c74081-dba7-41ae-bc93-e620171a590f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c47385d0-dead-4c78-9868-1897993bf23c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22cf6647-2149-4d7b-8560-a91762405297",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ae37b03-67b9-4a35-aebe-b4fa2d513f84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96b8df34-cfe7-4bbf-9403-f94ba57329bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e0443b4-502e-41dc-93df-7349e31a3192"
                }
              }
            ]
          },
          {
            "id": "d2f4628e-dc7f-46a5-a640-30f5494d4458",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ee5a34d-9771-4fef-ae19-c16b6c2777ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91158355-81da-4cf2-b92e-f10e6a7d446b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc5b7d7f-0812-4126-a58d-94e212819e35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f760a2-4bdf-478e-ac71-3767b9bad481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee4a5fad-553a-4dfb-9c2e-7866e5f1d141"
                    }
                  }
                ]
              },
              {
                "id": "5dda0d0b-5c39-4415-8ac6-199d33a04b37",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0409483-515d-4f83-a481-a1712a06c3e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e30ce4-aba5-4a37-a771-348e6c3de105"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f85b95-8345-425c-be41-fc064abbf099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbb1e2c6-c85b-4935-a82d-d7bd7ab1c1be"
                    }
                  }
                ]
              },
              {
                "id": "8520a24e-f21a-450f-9052-b2f40a8ee32c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "319eea27-c87b-476d-b91e-7fecd60824a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c12d65d4-6b89-4c20-9606-6716cbc4fa80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038d222c-5857-47c2-a713-fb67e9e3b485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c343650-2302-40fa-8ab8-0a9a8980c663"
                    }
                  }
                ]
              },
              {
                "id": "b882d82c-7404-4f2d-9d01-27929126ce56",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fff0d54-d3ba-4e04-aa3d-22a8eb1a85a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57ee63c2-6162-4e3a-9033-8294deb64338"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90bb0fb2-21f3-4877-b85b-bde9ad4de361",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4b2761cc-2e4f-40f2-aee9-99aa5ffbcb85"
                    }
                  }
                ]
              },
              {
                "id": "92701655-ae36-441f-bcd9-5e9415b77e11",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e396236e-3180-4db5-bfb7-06865bb10bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d724b0e-9faa-4b6b-adc4-dd2fb3761608"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99f0649d-490e-4e7a-a44a-d7382c210cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9aca4fe2-8419-499e-a49e-5d1a69acc6be"
                    }
                  }
                ]
              },
              {
                "id": "210f8d9f-b2b3-4ca0-b195-35e804158575",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e81571-1b78-421a-8dd9-d8d25ba03faa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f1916c1-eed7-443a-bf7f-574dafb36fd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a8ffcc8-ba35-46c6-9ed1-8731c789cb40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0121d7c-3175-4705-a7ac-e8a3aa763016"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "541a46ab-cdc7-48e2-8742-46fdbe8cb609",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ae20233-7609-4f81-b4ba-3d706914305f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ffa479f-4c21-49a8-9a61-d670bf755567",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64137da1-4f9a-4002-9e67-9bf909101032"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd0e5c93-9635-4d9d-b810-193864e1a41c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a250a5cc-25f7-4689-8575-2fe8502d3133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66d73ace-444d-46ba-816e-31de7ee58eb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f517350-68dd-4ff6-b7e5-71743a9aaf05"
            }
          }
        ]
      },
      {
        "id": "cd77c218-14f8-4070-9c4a-698c2d0ce390",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "837b9ea1-6d71-418f-90ef-1bd6c4d97576",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63f498fd-a506-402f-8487-e03990ed2c62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a02d56a4-0632-4c7c-9b59-89ff263b7fb5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac5878e-4507-4695-bbc1-89aae323eca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d6a50a-8dee-436f-99ed-edc2e3bdd73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea04d26-90b5-457e-a1e2-3b974a308dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b364cabc-d44b-4033-9376-8b8abef0c570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dd9603-1e2c-4d10-b0af-f44d2a7a46e7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a5caf5-fe5c-4ad0-bef0-0b34e8cd3c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f933e5f-66c7-4a37-b99c-7993c02a5641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256bdd8a-b4e4-4ce5-8286-bb622e02d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "179a3278-7b16-4053-9e95-17030b289e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9796f6b-ef13-49f9-af95-2fdaab4efe42",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1f6e16-ec39-411f-903a-7080116b2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27056035-2285-4d46-a5d3-32cf48e64c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c308822-1bd1-48ce-9f25-918d0ba6e92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63d35cf-b0a9-482f-90f5-3c75651edae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2434ba1-485e-42e0-a0d1-d520e66c7085",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7dd379-1d14-4097-bf40-3746ec908aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeaad97-88b4-4fe0-9df6-e0ec9739a27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6897dbe-b9e6-4fd2-a6d8-d17ca247df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac871e7-13e4-47a8-952e-596f3648a510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8148fd-9cda-4616-875e-c32e1a94c0db",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09768d30-189d-47d5-8931-a0853e04872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727e1f7d-b87c-4721-a0d0-1d7a1b4a8048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97788682-692e-4f67-a4f3-ebcf1fb1ec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc5e76c-4466-4a60-a592-61bca6b07a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f83b18-04f0-448e-b5f4-4b934478d9c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6faec3f-415f-4848-929d-afdbb111fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2d7829-d928-410e-b258-07097f4aa3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddbd94f-1af2-4011-9107-b997251cfe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce78353-6a5f-4114-bdba-57eea3f16d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfc7f94-caf3-4196-91bb-3ca6a712f28e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f3ae9e-5bec-4ac9-9f97-3ffd4b8046d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d3b059-5b2e-4517-b08a-9cc768a6a5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d17790d-93e1-4a5b-b2d2-bf14d7094956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4129e7d7-7b43-4f4c-a48f-e83cff59f71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb293e1-282e-4c5c-ab37-9a3726fddcfd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0705bf02-c5ec-49a0-9626-20730ab4864f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970eb48d-6da7-425e-9d43-2254752a17e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8de0e3c-a32f-44e9-ad32-e258a2be8e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cc1f3c-3bc5-4fd1-91ef-8a6de2a8686b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da779c-8992-449f-925d-7bc623263266",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece363c5-e990-44a7-bf46-e4ec74c66f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648ca7c1-5583-432f-8434-a594c5985d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5563588a-09a5-42ce-9994-402a6fbc483a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2947ab75-b1b9-468e-8c99-f29db5b48ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15adc5ec-e48b-4cab-8a79-0f08263bfc1a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0056a3-a001-4bdf-9fa1-e8d09d015de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1422c98b-fa58-4a73-81cd-3b418b7de578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b57ff4-355f-4806-904e-97ecdc73672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c71bbdf-3301-473c-a1e5-2ce70cf6e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e49b0-8008-43c5-a6ce-51578fd2668e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16285acc-04bf-4157-9904-b832b0dc445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4634d99-634c-49b7-abb6-4e2f353375cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b007b15-fd2a-47d2-9e58-8830375562fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38c3db73-21a0-4455-a890-19a5c09e4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92211b15-4f42-4e57-8cc3-f35d00e6a8aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bf150f-3b47-484e-9efa-63a556bb07df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71598c6-2b5e-47d1-85cb-0a931b6729f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297588f2-06c2-401c-806b-507923befc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "173ab8ec-238a-462f-b9f4-435b8356410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc222b7-6688-47bd-9d1a-3cad49063001",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318201af-f33a-479b-a93b-7e2b0a23ea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2eced7-37db-4b25-af03-9c7c2719e2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d0bcef-1be8-4e9c-8fe7-725a8baddcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "412c0b53-5f35-4003-a150-37d602690700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e9e1e1-96df-442e-a605-8c3fb971bd46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0cea0-d3db-4d55-ae07-d3538d944cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc3a101-fb43-43b3-8535-f045d3417934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d728adf-8564-4dd2-bd7c-8b298a620715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8e3967-c1ef-48f9-9744-be311ff779c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159d4bc-e153-40ca-8936-9f42b8574af7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632b80ec-dfe0-4032-895d-a943a4e491ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ba8e84-d4df-48b8-b9f4-b6a209a97d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e0d7d6-2c87-4b06-b057-76efa6ea0992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da7ff65e-56c9-4f04-aacf-51c7e2c4358c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78291342-bb4a-441a-a898-c0a2dddcc630",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67607e2-6d88-480e-97fe-7fb39059237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed509cc-3754-40ef-a2d2-5d1cdb452109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26122e27-2fa9-4a3e-aa24-6e842f7f0e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "681f435f-cc95-4312-a63b-802a35df7a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cbb7c2-471c-4629-9ff3-9d0f2da1d7f0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353b010-e1de-4142-a0fe-b69c5dbd2669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9100c5e0-2b81-43ab-8756-e0cdd1992c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3d5e4b-d42a-4614-be1a-93479ed9b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34fc9f52-3426-419f-9c35-129d6a84fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb360e45-b347-431c-b268-e7da537e8b20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b61aa63-2aff-4dd2-a990-6d692047512d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd5c7f6-39fe-4a85-8fe9-d9d369a148a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cf759a-eb89-47e6-a347-273a39d2e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93848f93-036b-4987-83cb-8f502c00d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d86d76-d26c-4215-a2e3-e24d573f6d63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b753ccae-3000-4f71-81da-c55a5409e6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06db5002-6357-417e-a3f7-858d72081548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc9ed05-6c3a-4b8d-99f9-6f7e863b56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c991801-e741-49d3-81ba-0a294189b4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5628cab-7367-40a0-94c3-c94eed6843a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325c036a-185a-4c83-9d71-99e0d97109fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592ab595-bb53-4be0-9e95-e257284a5d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0900a8-be7b-4e4d-b9a6-d7fbfb73e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbabccc-a676-40db-85f0-dbc9597e5212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d401b-dc36-4adf-93c6-1190263ac014",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a89db8-c8aa-4606-9dc0-e0480ac49871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d3708a-a5e7-4249-8392-6a1581ec5454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f4154-99b2-4a5b-a9cd-d1dff4b58dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b354572b-9088-47a3-a182-3156b2fc51cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7111572-a6e7-4a1a-ab2f-0261ed85afc6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70c14c8-06f4-43ca-b2f8-2c8f24387fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ad9ace-90be-4f61-bc58-71e190f0526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf16d866-c331-4939-84d1-6e2a268e459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c461b6-c0e9-48c5-9f24-e8da0ab86445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36e3167-d23e-4d67-bb15-e1c0014f08c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0392ea40-e683-4669-b332-8c38d5cb6323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faa1f2d-1c2a-4d8c-bc58-37a687b9bf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335228ea-1960-415e-8edb-1a2c98154365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9b0ee5-8a93-4087-a7dc-0cf4c9531e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d525f9e-e81a-4b19-8981-33b6986f747c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf4f8df-d6c7-4f22-86e1-6efeb4d25866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f892eb91-69b5-41e0-8f96-1554ce1d8781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eaf617-aa8e-44ab-b843-173d7534ca25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3f735e-b0a8-4e59-b036-a5b4848b31d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126fa848-38a5-4a2a-85b6-64bcee7f82a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae429e32-e313-4558-8805-19cafb63972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc69edca-224e-45c5-8f12-9b5032018402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ed47f8-d910-4b52-857b-cbc883cb51eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95bcb678-aca0-4fb5-871d-5bed7ae3e96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0162f15d-e084-4f54-8a24-e80456bc331a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d7e6b-4dba-4fda-a9f9-ec60ea740672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa38891-ea25-4e10-8304-fb5b8ddad04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f1c6fc-00b1-4a39-a476-5d3062971959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8531c89-12f9-420c-8d5e-6a677b6d6a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744b8998-c598-463b-b4de-fc31a0aca5d8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5342a3-35ff-40ce-9fc2-b7d64067bf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9cc2f2-ed4e-403c-862b-ae537b1b3cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e498c7d8-69a2-4de7-90f6-2e03e67e2c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f56277e-75c5-43a2-b5a0-13a0078af154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edccad61-9b86-46b2-a58f-350f6d9b4e13",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c11624f-f674-4a75-8db4-66213e21baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabe9d63-9374-4ed9-83cf-a3b11be234cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2c4a35-2898-47c9-8f8c-ee5d31bef36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb81ccd-741e-46ac-a379-97f48b35f2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f36bbe-0d71-40d3-9285-8f2e9baae6e5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de3ed03-c2f7-49b1-a8e1-cad4f37253be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fe701d-4712-4baf-96c9-3a47eb9eed15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8bf631-5946-4485-86e9-68432ff82d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac22d15-eb7e-46e0-9d43-0d7db6c8aa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b6eb5-850e-4015-8a2a-6615fa690dcb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72509417-5f67-4cc0-b479-e510e8cbc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645f0d74-e9db-4b26-8c8f-07082fb3c7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21af7b6d-507c-40b3-939f-3b60348498b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9defb451-d1dc-4575-88f4-3614e71e14f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a86e3eb-02cb-4747-8a94-cb0830f07e40",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c89170-6229-4754-9a0d-789e99624d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38233fff-6871-4290-8b35-3e7fa8f84e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4f93aa-2fa8-45fc-a604-c4135a613eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af3a0582-617e-4387-85f2-189ad52d10b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d82ab-2021-4013-a010-cb769b161a87",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227111a3-3e1b-43b6-a425-15045a02d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756e6c63-8aa2-4578-9d48-3cc136c2fbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867ae5a1-839d-4372-a598-8b222f74048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb79457-bc72-475f-99fb-8a7ba87bf6d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e871792-7185-41f2-9548-843e0a3e1dcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc9ad1ef-fb63-46f2-8c6d-53bd9c49b03c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbce129-134d-4929-aa2a-0a44c7336eef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9c49ddb1-b77d-4bd7-a5c6-274e8d259e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a12dfc8-405d-4745-9521-397129c7bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d941554-0bea-47b7-9989-b7c8f572e0d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7a9a03d-6813-497f-9368-524ae62d1485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e354a0bc-88c5-4dd6-817c-45ab09c1850f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c04116f-5bf4-4a10-bd1f-72d4db4f4fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "199c06fb-8b0b-49e4-a1dc-4acd68553860"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1440f64-3738-4540-9e5e-383e89361f3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58fad598-e78f-4a0a-a195-ec97f1e91406"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8d8cc28-674c-44bd-afc3-ff65389b3a9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "054bbabf-7016-446e-a96a-bc16cf2b4699"
            }
          }
        ]
      },
      {
        "id": "8b702649-ec24-40d5-aa65-67e148466666",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3c3cbdec-ab9a-43aa-a7f2-be13eca3c8f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad2f1ec6-94a0-4404-b8eb-e56a8e96d3c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5db60bba-9770-433f-ab0c-59f28fda4867",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c2251-17e2-498c-a221-23093234d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2da61ff-8032-4b24-8c4b-cbc99e06feb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dff649d-0e6b-4121-ac4c-8de95d92afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22872787-c436-420f-bc2f-9e84efab5f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f9a4b6-5bd8-45ae-beac-e5527a19cdf4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267156d-6384-4916-a008-e9891f289325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37eba84-76c1-482e-a74c-b3bcfea6dd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eff843-eed1-488c-b264-691b92e5489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f701bf14-91cc-4f84-ad3f-a4d4e50c458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257b850f-31e1-488a-ae79-43f7c626e4f3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc7c452-568a-4481-84da-c8c9462a0501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c425f1d2-e982-4ac7-936d-b03caf3ff993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff40764-4fc3-4201-b00b-2e6ba87b3108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05638b4-354d-4979-a954-02b0c689eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143f9d7a-e812-4fa4-ac87-a2c5ca735721",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbbf7cb-9e1e-465b-b503-546ccbf512bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5204dbe-ae36-4ba7-b8a1-0092323d0391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f58b0e-880c-4fb8-9bdf-078716a646ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5053a55-9a5b-4ef6-9c25-54243dff6b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a15e7d-a304-4fc5-9387-017c336f5b4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf59de-a2b2-48ae-aecd-9dfdfbecd047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee588cc0-a672-4011-8fb2-43f6eb73552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b602f06c-c1b2-4815-a4b3-e7c8b2aadfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a629ad0c-52a9-4ed1-a930-0397223ed2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039c1fc9-313b-4f89-9f03-67c6b3a34a94",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56ff97d-6432-4109-8213-5d6aa556efd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664e3af8-1da3-4288-81f2-beac0963a660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702c54fa-ae53-49a7-b4b2-15471286d6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64c3771-cd98-4076-896a-bc2a44438337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7debbe0e-a16b-4d6e-9886-136949447f17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91c9db9-095a-488c-bb48-16422ecf2d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78353b7-d71c-44d8-aaa6-c62120e9983b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8108fe-5302-4e86-9423-9127bd74e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1985d9d0-7686-41c4-9251-c06247f481b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d66e90-0cc2-48dd-8e31-02d9b2f1e992",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f961de9-bad0-4488-bf00-c8626e9a2059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cd6cd4-fa26-4787-b50e-92cd8479ca20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fb781f-48fb-4f01-85e7-0c1432076173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e264c598-1283-4886-8b76-a665cac4c1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52039c4-1205-48eb-a51f-aeea40c1c2c8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576b93a4-ae55-4fd2-afc0-b129a4d79586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccdaaf0-3f69-4e75-9157-d74aeaee3f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e25d4f3-a694-4174-850c-ca9443abdc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77302c66-8a0c-441a-8c38-8e03048926b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29180839-6599-4e58-b534-4194b655317b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef24a33-0b6d-43a0-b961-13f2ba6cdd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb94099-0b5f-4e78-9d49-3477097b973a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e771d142-9f68-44f7-a747-8c2a481630a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "977ed2c5-725d-4568-a3a7-6b6b17c72d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26b028-00f5-44a3-9341-1d2d0857ef2a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea06fd8-b241-4a94-96e8-57945542b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b701d6e5-bfba-404f-abe0-d504213ab0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc04f7d-9a89-4ee2-ac13-f77d977cbe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f1f102-5736-4705-80f8-15e345fd797d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f636ff-99d7-4dff-878c-9b92446f8cff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2979bd4c-3a01-429e-8908-f0ce9564e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edd9c24-c51c-4dd3-94d6-f1197f8e1a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059cf0b-19b0-4365-9e52-ef7ca04dbba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3461e83b-4ab9-41f8-a30a-4af70029bcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1328392-e9a4-4b8d-b211-32cc2a6a0beb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d5239d-ae39-4fa6-9ad5-d6f0a96d9304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ed5e33-680e-486c-98ae-9e4ab698b896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03f42e1-67f3-4ac2-9583-9cdab1128785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e9466-e170-4336-8d74-7aa74f1cf1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb6f31d-e6de-478f-850f-7e5067865528",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a2919f-0c0b-476a-ab91-75579ff34201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82d6c16-ccd4-4346-92d5-1cb4e78173bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c19586c-3521-4134-b9ec-54c4ce062ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94461dd-33c3-4aef-be90-cdb75bb7160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ffafa7-890b-4bf8-87af-a3c5ed0986b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08850a8b-6891-4bf4-b56a-1f0f98949114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd03355-751c-446a-b20a-d3156b0cb77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9a491-41bb-42b6-98ef-ff3127ee267d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7d32b8-d5b4-458f-bfa8-719668d4a9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8085d8-44b0-4f1f-8276-540ee3f6343e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65760933-9bf6-498f-b047-300a7000ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb11bc8-a87b-4102-8607-0d2a36b2edbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857073c3-85c6-47b8-8b50-742452137d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9743fdc6-86df-4af7-a27b-12c90de589a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167c4a88-3965-4db3-9509-d29f0bd4d8e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af47a8e-c2c0-45c0-b4a3-8bfb62633637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b5a28c-822d-4396-aded-dc2d775ef0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0710833-7a41-40be-9ae8-f036744d5a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d319ee-5ec6-439b-9219-4a1cf944a988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffc7025-6351-4cc4-89cf-92d571316574",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d58496-22ba-4118-89b3-c6e38ac7e309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5d6176-08d8-4e74-911b-8fbb00d022c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3098de-5e93-4d81-a132-99179cd6127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e6808c-6ac5-4a84-a6d7-e582fdebc613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52c210c-6223-4763-bfc7-df8f137b0e11",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaf0f7d-2ccd-4826-aba8-b26a502f17fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd9e472-24a8-4c8b-9727-cc25b911edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51087ad8-b1bb-4ea0-af98-5a7cc424cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400d222e-2b2e-4fb3-a160-1cab4f71ab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a95e8-5d38-43aa-b893-306e7f55cdc3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab4778-a65f-4862-b825-b686de2224ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b8f698-ee97-41c7-a471-f7fe89b1623e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29837b85-8ec5-4631-bfd7-22c449259597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b116ae7a-93f2-43bd-b7a3-21faf51d6bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91dbbbb-1f43-4a98-8b30-ba56e8c4cd4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc4815-4856-46d8-9a9a-63e2baf024d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa5a74f-1006-41ee-bd85-fb2f8263546a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35def94f-d93f-42cd-828e-73dfeed5fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ca35f7-b450-4f31-99c7-ae9712d5a75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ee1ee-dc48-44c8-84f1-7ea433286f72",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f487a43-8cee-454c-89b0-60aaea55e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b043ede-bd76-45ca-9141-047b16893d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0f219a-c8ca-48aa-b1d1-cf2fdfd98bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3129d6ea-7bfe-446d-9d94-5d764cc4f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d88b05-9202-43d8-8fde-ee6903b81805",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60bd498-85c8-4e70-887a-e3e9c5eebb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb52d6de-d2c8-47a2-a254-9a65d39e4d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b3dc7f-16fe-400d-80c3-138e51ca951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e876fb-08c1-454c-b762-aa049b03414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d9bf59-47c2-46de-9e86-cf3d279da86b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea5e2be-0774-4f3d-9c85-ee1f99caf485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cce01b-a214-4122-9d28-700ab7b8970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebd53b1-ef02-4cde-af96-b3d79bbb52ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8baf35-c700-4a9c-a3de-3134f68c14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa820504-fb58-4f02-9a7e-7cfdb29e2025",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46aba5-f5ad-411e-bfc3-cfd62d0b6eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1515bd85-560f-49a5-8f8d-af5a7d9f089d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0085509a-a6c6-4b70-b50e-4045e3cf5eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7146a18-d62e-45da-884f-063168cde161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252c834-15c2-41d3-bfd7-7ce50c5a1381",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22a5764-7b98-495e-ab9f-9d00c2d947d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2258d22b-8fcb-4c8f-bd6e-02c8f0463337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b30bcb3-1b44-417d-a8a8-851597dc6609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c1df52-5ec9-49ab-a18d-565b83d4b8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdc9174-22b7-4685-9a80-b24bff0efdfa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e7b7ae-0401-425e-a70a-0f814d2b692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb46323b-e695-439e-80d9-587e52c6c12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590aa196-5878-45cb-bc42-327c1d5cd4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f3a62b-c7f2-4991-a6d5-fc0a25f01ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d296a3b-1a41-4f3f-841e-df39ebfdfe6f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee9669-a32f-4fde-a65d-5e1bc3ef91e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ca5057-415b-463b-b22b-b64330895515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d13ec77-f2b0-440c-bf85-145f8266c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d5bf02-36c1-4e1f-8201-395bc715ae9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6911c3e-44c2-402c-bbf1-bb60801b2fd6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d94070-7eb2-4ba1-b8d0-cc4c05501e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3df3c78-af7d-4ea3-ac05-891f121ce5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3be2c3-5e08-45a1-8600-432c5ab88650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85709b12-9b8d-4cd5-8227-71c87ea727cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc4ba16-c116-41e2-8d39-e2258ddcdd98",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fdb30e-1c71-4ebe-838b-2ca333f68194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d01ac44-13dd-4439-843a-8a5cb4e8c168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a61d97-14a6-4062-b16c-153a311a7b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7d1df7-dfa9-4d32-af90-133aff3cfe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4c74f-e5b1-414b-bd99-39565aa5d0e2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b8dc02-6853-41a0-a170-233175ef6cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e99d75d-1001-45da-9015-d88fc751a95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bef430-cfef-4a1d-997a-0fe47d89486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f24a33c-0627-4de8-91f1-bdcc3f73dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5b62d8-6362-4f43-a7a5-a8cd410d4e13",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90d948-ebba-49ee-a1ef-dda05f52630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75ad44f-2cc1-4915-a84a-72d01eee1f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c9af93-5e41-4ed0-8e02-2c55283d880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2801c7-fbbd-4cd3-919a-c81e6df9f603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb2cd6e-c57b-401c-b809-d6068da76f16",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8300b3-208e-46c1-8160-37f7a2a36f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4596d5d-6c4a-49de-a69c-239fd23322a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a18575a-c02d-4774-a679-269c22c4b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95475ae7-a0b7-4de1-b96c-a49ec7c51842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc8ddf8-3344-4fe5-b306-217f2febdf3f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da599f0d-de13-4106-8f7b-a4ea6d45febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4148124-0b94-4909-90fb-29fb08484884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80519c0-2c59-46b3-90b5-dc1cfdb5da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0f06f0-6ca6-46b3-8ef1-9bdbb06b451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983fd07-3b0f-46cc-badd-4e440e97ea19",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1dab76-630e-41c3-b94c-4f47c4f4bbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0b4a57-81cb-4121-9605-55692be409bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d72350-f677-4e2e-b456-639db98ae381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52ebf79-e469-4c8e-ad29-9feb9e546aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ef37a6-1fd9-43cf-9fc8-59cde44380a0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afafa423-b1fe-4114-a62f-c915e527e274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be5be07-ba31-45b2-b147-97b5b0cc980a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f5068-ca2f-4f80-a90b-10d3bfc13bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c16364-412c-42bb-ad32-a3be869751cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0ab60-aab2-4c0c-bdc3-ceff0871dae4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef02bc2-462a-4f5c-ba1a-110b7320a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bed65a-3134-405b-9322-b433705082ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e55419d-6ab7-40f6-903a-c8ec046b95f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32da4864-5f3d-4b2f-be5d-6b541cd10e0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c20f9295-0226-46d6-9dcb-6cc398aa709c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a779ac8-6cfd-4311-90cc-8af31f204913",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a368822-03b1-4d63-a637-03c9ef2a8f0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba658bb7-fdd7-4c72-b0a4-d3693b0dd296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16185984-b28f-4c14-8d11-71e61dce92c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3acf2fce-b515-4745-9a36-e7cc8e9d8437"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe63e05a-2616-4d50-9294-319385631b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a53e24-45b4-4d51-b9cd-a1dce0f86188"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94c47e40-119d-48d8-ba49-3a97b15d7116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8880edbf-c0e4-4943-8bf0-f3e287b49bb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a7ab638-a5bc-4f68-8795-bf5d0929d64c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08858bba-c9de-40bc-90a7-dd9887b11c5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9b6a433-9296-42d4-b54d-98e8d4b562bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60ecc8d0-3d69-4246-ada6-fb3eb782d951"
            }
          }
        ]
      },
      {
        "id": "20635876-ed40-4b71-a2e8-18fded6717a6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9f813f83-6bf7-442c-8387-d1d6700f160b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4af28a14-dd0c-4168-bb82-74e447c9ac59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16353af8-c343-422b-8207-e696af672cd6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1238449d-01bb-45f5-970b-84deecdb976f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd28fa0-b532-4833-96ba-db258b058774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b04487-81e0-47dd-8803-d0dec6c21f4f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33102a6-e953-4861-93f1-14fee5305525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172faa5f-a909-41c1-a576-009907b81766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afaf6ae-39eb-4fc3-b17c-7e37028efea4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43d5c0-d589-49d3-b0a8-95c9e67e5a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec0c969-b283-4fed-8270-4bd5c62d9d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d96ddca-329c-45d4-b08a-86c3cc078f65",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9413d9ef-1dae-49ad-ac77-27a65922b86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8209c07f-e572-4f7e-bcec-b526a60deacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888ebf8e-e99c-4b49-86ed-69a64f905d61",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a294d4e2-0d14-466a-81f8-2664b7826a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53301ba0-602f-48e1-84e1-74ffadcabe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bb9b11-2c36-42d2-88c1-8d3412f5fc7f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9c378c-d87a-4b7c-911e-8d710c95bd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03d84b0-150a-4ae1-b490-5122a723bb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f64125-2afe-4c30-a3ed-357aff1f3597",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c74338-1d30-4ce3-8c3e-ecf53036f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e31d1e-e016-419d-b289-9acddd32497b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaf7212-e75f-4ff8-841f-84041646bfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df652899-b2ce-485e-ab52-bf98c26cc216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0ba28e-e384-4fb8-bdf0-b7f7a95cf3cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ff383-e75d-4b3f-95ee-da6f72654787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c748da-d306-4226-92ff-2534060ed0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dac9f5-b6d6-4b54-a889-5493579b2d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd9bc97-9770-467b-ad02-864d1c91ab43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f73930b-d7fb-4b6b-a09c-b79b04a52e5e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f108e-649d-49b0-aef8-bbace6c01350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6df956-5228-4235-b464-4ef61c5325de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd8ac5-83d7-49f0-a5fc-625f4e517535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44409d1-8a93-41d6-8b93-84bc9cf73ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad2cedf-92c3-4e72-ad05-0141c504a2ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d92d5-9910-4281-985e-a90be7d523c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da18470-7d14-4352-92f9-1a4e2477646a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4570233a-fca4-4aac-a19d-c060dcdf6ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c67fbc0-f291-4c91-a240-9ac8cf590021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2bba6c-cd37-4d07-be69-dbcb3648c3e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e6e88a-fcac-410e-9b48-030703ef17d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9bea90-99bc-4fe8-a099-0a0882fdf407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2b88e6-af7c-4a3e-9791-0ba567aca196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c69674-0fbb-4d03-b9fc-30350e924883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695764db-7c6c-4c77-af7b-41102cb7323e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164b9894-3c66-4acd-9982-02a75ccb43dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b832e8ec-abe8-49cb-be09-6de70e8049f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da3d8d9-3f4a-4989-873d-33319c3ea21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5589fd6a-4b29-4752-baf7-a77e4a5dc92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021c13cb-7298-4b10-9913-dee9ee0d790a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4bbb6a-3359-4409-a002-4dde2798f89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87a7726-a08c-4bc2-b4ae-8670cf08e679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c14c293-2742-4389-ac54-66c4c1e374dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e29e880-9249-443a-a951-cb61908889d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00678aa0-482f-4f9e-994e-46f83efd909f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f87a24a-60ec-4714-88fe-4ca0ff0571f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722ebf57-00e9-4a60-80c7-09bf0d67b326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01b84d6-e42f-42c6-ac6e-22b5e311b62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c84e09-44ce-4564-85e0-984c11e15a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304d9ef7-97ab-4d7b-924a-06ce698246f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c1ee14-553f-4af7-8858-4708b96beb13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12365c7-762b-4b46-a6d3-f1750f06d05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609a1beb-9d0c-4014-ad9a-2dc7915430ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e962a709-1f62-47c6-9a8d-f06a1d6abf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36947972-8c9f-427c-97d6-181484ae9126",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2cb5a2-cd38-41b2-9c54-1535b5d5a189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d047b2a-e50b-4d88-831d-7eca20ddc07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abba53-1e76-433b-b795-a248bc097a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acecd3ba-0e24-488c-9c4f-8b704217a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3399bc-3742-42a8-b294-a19f0af1df71",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035bb133-2a90-4fb8-89bb-8636ce079172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7f8cfc-69ff-4d9b-a9b0-77c7018019aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe98dd7c-86b1-4b95-810e-9b88800be4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18958b9-f974-44c7-b5e4-febd2d77b54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75366c72-8324-4bfc-8329-abe9f65b13d4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea00c0-feeb-4e0e-84db-55848e1b9dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a333a7c-700f-41c7-94f9-3e8d5418cb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98d6534-a65e-4c4d-a9f1-7c2f818c7f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab1ae30-82d1-4641-9c95-477ef1ce66aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8185972-fd9d-4fc4-930a-43bccf1f2889",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5208d113-a7f5-48dd-9f41-ecc242d9f884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfde0d6e-8373-475a-8725-2c35bf508043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39817f78-26fc-4b96-bd97-f94a903013d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a20f94-1966-441b-a3ca-1dd9e7b5fa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d75a91-e6c6-458a-8293-bff0d4de239d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8342377-2fb3-4f0f-b581-975b37b11caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e886912a-139a-47b5-acfd-47e6b5e004e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ae3385-8664-4e01-84c6-a3947e680856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a939412-2352-4cbc-80fc-2751852432f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a99402d-5c3d-4eb2-bdab-0d6213d09440",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657d260b-4731-4b72-8439-e165487f5298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d039a81-a3f2-44bb-84bb-1645556d64fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d455e6ea-57e6-4e69-bf80-752bda3933e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220a7030-164b-4865-8d66-4a17e6da949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdce990-900c-4e88-b457-65e6deb739c2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02956ed-aef8-47c4-96af-42d74ef9c6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21df1cca-d2bd-48dc-9689-e66875048d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6657969b-6122-4723-a2a2-af3965e930c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd2e4ef-3766-4bc7-87de-e3b543fa2edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242f2be1-3d24-492f-9b70-b73682854b93",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd2ebf3-4ebf-4954-9452-31d987ce474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158f28bf-60cb-4e0b-a33c-076082a7403c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9629c54e-f341-46de-b7c9-b93559899d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7735e8b7-1e95-4895-8075-b97687bccf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7b8597-43ec-49fb-9fd8-c33fc598b7a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc57231-18ba-4e0f-bf91-5d610c2aec14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd6cb2d-e25d-4aa1-9b6f-e0e0f5ae98d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b332fa7d-2fb8-49f9-b181-20cd15033180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bafb6ae-4618-4093-ad3f-f44765c5fff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c565d-2245-4f35-9a48-a2db82829dcc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc18c0fb-fec1-4a54-9838-60e54ef5e22d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4193d5b3-ccc9-4b81-8bee-e348a2d0ffb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d2bf91-eb0b-429f-9707-6d0b49f435f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209e98fd-66b9-4701-afd9-7173931a1b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cb2540-18c1-4b99-8e8e-42a5e0dac6c7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294b1736-352e-4f38-b543-2fde6c5c0afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbb8777-798c-49f1-ac21-3f944c383863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328a3879-c530-4e70-b8c0-96c42cd92d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3e4084-9cee-456f-83d3-d1a586b1a1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4758f-f565-4f96-af26-cc53fe094579",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc38a48-963a-4f6a-8979-4ffa7abc357b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf85bc1-2b78-4ddf-bd4d-1b4cd913beef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170c5412-e9dd-485c-8fec-9f8665dae48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01405ff9-116f-40e4-9027-9cf8d94c18f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed4a177-f1fc-4cdc-80b0-93217bf4636c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9802bb60-46f2-4234-9708-b77e38919fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfbdf66-a883-47bd-b88a-b3ce0a716c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fddbf1-5d7f-41d5-864f-e630e3130269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f258466c-66ae-4202-99b2-f5fa1b9b92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2623d-1c8c-493d-b46b-0c128f3a0727",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc329f78-6fe3-42e3-94d9-a28ae43e32f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92f4187-ef11-49e6-993f-72f545bb095d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa16583-cc7d-4e86-8abc-b8a4d3aa3426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6d3d51-4d27-488f-80eb-b0f38ed88e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d8bb6-b68a-470a-859c-894de8bbf78f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5099354-88a3-4767-a529-14d6bebb0721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce38de3d-c64d-4419-b572-7f078dccbac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e99b1dc-e693-4fc6-8a5f-291befde16d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3fad05-b5eb-4394-8e66-6a73446d9225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede06971-a5aa-43d7-95c7-196cb9631839",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1638bb-d34e-49b4-892c-16364e0fa2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98040a48-ae9e-4a6f-8ad5-df09e2ae3f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6e225d-20a7-4f19-85b2-6a51c314fc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7eb3e31-f2b7-41f4-863b-ba67bf22b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83777827-e2c2-4139-a231-1d59f19ef054",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d59ec5-57bc-47cc-ab5c-5d4e613d643a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2861a268-2870-4ede-8c76-7c86635c6b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0161bafa-2099-4030-bb0e-bf9ed5fb9552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35d4938-f98c-4c80-9c3b-261460b5fb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f256ae-dc40-4cda-a4c2-3d658943a905",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0595d787-87ff-49f3-aba3-6abab62fcbb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb7bfda-e3cf-4fd0-a7b5-d805d6ed7edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d910c2f8-116e-4954-a188-946c6127f680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c048a3a8-d408-4eba-9ae2-d19ab115663e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d94548-83b2-440d-baf7-793d17672136",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d64fac2-8403-473c-871a-d526909f8bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e8a20b-04a2-4550-89a5-cb944aa2e805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3204cd56-be41-4fdd-9bd1-41f4be20105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f0d35d-1ae3-46cd-a56f-ebeb0c274617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74933b3a-4129-42ff-a5ad-66c273f72366",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15b6ff6-cfab-44d2-805f-b5645625731f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e44b9d-0f44-4f84-afa0-8f707bd1122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67d3582-e043-4b4d-8b78-46c47a0dabd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ec053-226e-4eb9-9c51-781ef890535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7a6696-c5c5-47a2-9f9e-444ebfd17ec0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cf2327-3b75-4095-bd82-a64abe1f8d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1debfeb7-beab-4f68-9a2e-c5668b413368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0b084d-6180-47d5-8c2d-ee15bdbead92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d102d7-9ea2-4c89-a395-fdc2653d3a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdf64e3-a2b0-43e0-920c-ea0d50b335c5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5590810-9d5f-4a88-abdd-9365f7517cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06ffcfb-7c8f-47de-b7d2-e5f44d4f11dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a67db0-f7ae-4158-880e-2cc8cd578ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9b0652-2d54-4a6a-810c-d0b8540249e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ead399-c36c-4d2a-a405-40afa0addf24",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb891d6-1895-4d00-bd78-f07e37c3a7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867a0dbb-0c75-4eb5-9a0f-9e2bbd370822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc830a7-4ad1-4d26-b14f-be79801bd129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9273cd5-1f5e-4d08-b4fb-46acfb7d08e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795cf236-9894-4edd-8c56-eb4175715dfd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f69ab70-b7e3-4c9b-9888-e3afb434224c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eafb8b8-6be1-473a-86e9-87c67c8f4fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b2edbb-bbd3-4c5d-b5f1-c83ae90ad6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8113eb2f-17a3-4c60-8b88-13fa7461a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0e5e1d-7e22-4d0c-b45f-a58316303eb5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd0adb6-f8e8-4ea6-a012-0eab5de6350e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdae76d-9152-4cb1-95d9-f763cba37945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bda464a-98dd-437d-af90-22b67c000b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5dc1f9-f9e9-4dad-8d17-d0729ec435d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f264c8-515b-4536-b0c6-d1305db79e72",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa04fa0-15da-4272-bbec-0b14ff49e56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b58473-f908-401c-8b52-53a655c52fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970a9489-36e4-4408-8385-9a069c60fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b9d4d8-2a62-49bf-9e82-af8a1d68b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c5b5ad-fa67-4ec3-a395-1942134ca75b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c662e663-a22d-440a-af8b-ae2bcfff48f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b29138-21e1-4c61-94ad-de458a06b68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f2b7db-f95a-4d6b-a477-bcd8ed4a7b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8045957e-7493-49ef-b691-6aaf8488154c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feca0303-bab0-4188-b8d3-0d766a3a3cb7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df9b1b1-4d9d-4f4f-8639-c178b49c1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700b1f9d-89f5-437c-8c56-5d1b76127014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2048e3dd-325e-4e1f-9621-c188919c372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4095e3-19b1-4626-b7b0-5ca133411736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e012f3bd-5b13-4b09-a804-79e83733ab1a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838a4a5-05f9-4239-a909-1123e2f15452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78da2af-8bcd-4255-99f6-a87c7efbba24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232bfe74-da42-4ae7-9afa-b6ddacb89d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822a7224-df85-428d-b900-4566f223aa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf2091b-894b-4bf5-91e9-d3ac0d49f11e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9d86c4-f040-4fd3-89e3-f79654fd9dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc77d8f6-22dd-400d-86f2-9f86a3f1bd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd870c9-e1c2-480e-98d1-977b677059e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680768f4-45b2-4c07-b9ef-83ba9c34971f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77dacb7-a201-4650-93f0-73a87f76b398",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96041ce-c4a6-4340-a36a-785380757699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986adfb3-6834-4c97-825e-90ee74020fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7c186-b442-47c8-a891-111446017e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc4c80-9f05-49c2-bd19-b50eb6fd01c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e762f8-829c-473d-a790-6e6112dbefec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55071b3-7d15-497c-93a7-bbf1efe8fecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1108c6-654b-4dfa-8a26-1fe588f3c7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee8e18-c41c-417f-9f5c-47ec521d64c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb20058-3e91-4ae9-9c5d-434062aa03b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11240f5f-8cc7-45dc-a6ba-54c04722de78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74b2bda-ec5b-4f12-b3d2-f373c1f45714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df9b0c5-1612-42a1-b9d5-2e140530769e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef200440-2095-4750-9abf-88872fd7c006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f0fcf3-8a61-4866-8da8-3e5e42825028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f50bea-a858-4c3a-8459-3532c165c38e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a664b8-b17b-41f4-a004-f69cf1739f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d3990-deb5-4c08-864d-0145b94cadd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa519991-463b-456b-98a2-63f6eb9b0fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5c5711-6437-44e7-b8d2-e3703131582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa28c9-40bd-4f0d-b9a1-d363ae8aa872",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5396a957-30c9-4046-bb6f-0ceb78066bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e8801a-e8d6-4dca-af86-eabb20fda3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617a074-0000-4ec4-a53e-272beda826cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6397551e-b9bf-4a44-bbfa-0f4141a902cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6597f-a610-4442-8eaa-8ae707ced9c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f18438-42e4-433e-a4ae-726100123dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7fc15a-215b-4e09-b621-7239880f0860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39403934-97f7-4e97-a1cc-c95992f5efc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7fbd6e-26f7-4521-bbbb-2e10209d388c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47678db-e2bc-4c0a-a98f-e492e7d19f37",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acea782-2b8b-4786-aa34-c4dd655b27b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cc2fc4-9cfe-46f9-b878-707a49d43002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8dfc78-cd0f-4787-bfd9-75d9c08d1886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fef9272-7d2f-466c-a3ca-db2523ecc951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa06e77-07d6-4857-824a-8d43c1d24f7e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e00ff-6e20-4d3f-b690-8299bc4b0974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36540c8a-20fa-48bf-a345-25a29703bb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7306e2-eceb-499f-bd69-cc90330e81bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3fbc55-97d3-4833-a0f3-99abd577383e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f24e458-4a24-40bc-a85f-2f468ee702d3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd34173-04bd-4ec9-85bd-bb7c1ba2103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4954afd0-fb13-4d22-ad57-543f57c42aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebcafc3-9816-4a7d-86f4-f9123384beee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05db1ee-695b-4b5c-a80e-bc048a195290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f53d6a-75c1-4a33-a032-363b684fbab0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff723b4-cfc5-4c34-902b-4ecef38fb899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33817d9d-1d86-437c-b958-c4c4c7161a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fc61ab-9452-4c13-a861-24dda86656d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f82d175-e20c-4e77-8044-1fcdb5cd578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224ed33c-3b50-4a8a-ae4a-7461e4ff2b62",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a450c51-7511-4a58-85f2-ced5f4206381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fce34a-14d0-4084-a629-c7ba1dc42e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17857b05-854b-40e2-8ba9-d168d83c646d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ef9cc0-2c22-4e40-9df6-b79eca85bb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13b227-63d4-4d98-bda1-db4e2000f4b5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b835f-8775-4fa2-8cff-5989ba9f801e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f52c67e-500f-4c73-9e51-e081fc6d6fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ddb95-8e2f-4572-a820-45132d3f0be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafdb1c0-0c9d-4a8f-b137-d0aaef80da00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48524ab2-31c0-45da-a1b9-9100c47dbb2b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e67d88-788c-4a60-a6e3-d3d5deb3f989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9deebd08-80c3-414d-a587-6554fe26d5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac2889-2bfd-41bd-b625-21c3f0e3615c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6e44b8-9310-4511-b686-d7f74b931b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e96b1a-df7c-42cd-babf-bd0c9d9eb8fe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b76a4d-bcc0-42ff-83a3-3ff527e74bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89afe4e1-1020-4f13-9555-e529bb2dd3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4352af8a-fe8a-43a8-a205-ebf6c52df645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0611a50-fe5d-44ae-90d5-5962c39a8759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342fd5cd-f6b2-4fc1-892c-7fd3e49d5cdb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0c2668-45e5-4116-ba81-faaa8e0c193b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04ce079-f45b-44a1-8914-2251bab94765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c46e38-1293-44f9-badd-718b2ed2c4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dc1050-9fbf-40f6-9a7e-831987e018bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d692eb-86a6-4704-bc86-2bad3a365b99",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17f3b5a-807d-4898-9673-d54271ed4841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf6a9e5-f983-481e-952e-80b02645e158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbac78c-a400-445b-af29-f9970f7ecbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c69216c-be05-4a9d-971f-152abc7a6339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4291615f-f869-4313-8769-0f55b5fe22ad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa622734-6bdb-4e54-ac8a-73ae880528e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ff1b78-5181-4a62-a41a-cb0997c66b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc1d7d9-c8fc-4f59-a20e-24d353028882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b57482-f40a-401c-97e1-ee8a0a6eb754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e7a56-3c2f-404d-8d5f-c047f8b97d1b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bf2df9-d753-408f-8a66-3f8ba6ee4473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb15c86-9901-4495-ae21-4b8fffb40ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6365e3-af09-49bf-beb1-7403c8d09e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd27bed-4861-4369-8365-31df497303eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52a202f-4de4-4d74-8694-91c1857b5e2c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61c2dac-9bc7-49a1-9381-cfb99dabc8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c7cb21-063b-4df5-8928-2a39c6d08ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa41b901-7c2e-4344-bce4-0d71d27bfb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515e63e5-f6d5-4b95-abc3-ba2ac7fa02e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284ca855-78e7-40ec-bb6c-78bd34f946db",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb40051a-95a6-407a-95fa-a698d9e6373e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dc920a-da66-44ce-9e44-1295b1567507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faddea42-1ecd-48c2-8557-07bd81d14228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd28e8b8-6bd6-4583-b048-82317ef687c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d261a5a-f584-4571-a58a-c98166758e73",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c4516-ba56-4c4c-8d2f-95e939fab041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e283e4-80ec-4b07-87cb-ef5627d0e60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b408aad-fe35-418d-a359-2eb2e419f12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0775383a-835d-42fe-ab2e-3bfb4864c9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5bf80-1f1e-4bb4-9243-fe99aa5a6139",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb8c224-a405-466f-b848-6b0520b7dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa170f4-a6c9-4941-afcd-14c2034c6e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3f39f-2b33-4762-92bc-47410e94690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d443d3f-2945-43d1-bff7-6c478fd50fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b3838-76bf-46ee-b44f-bec6a05d2ea8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd2a49-6aa1-45ba-b69c-365603339d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f2179e-3406-426c-8cc8-bfc7611c4f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d6fcb2-9dfb-420a-aa7f-9496203f0834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bd3f5b-daf9-43e7-b7f1-279eda109498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a8343-aa5e-4651-a812-359a98a98a1c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b05423-d536-4ca9-a1c5-e59d7ab20606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6106bb6e-0753-4860-8d3d-9ea01475917b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b23e92-2103-4944-8a01-4782799c9a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2172e53-afb5-4f43-9422-d2d6087c18b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3441aa5-9a69-45fe-84cf-847349ce5248",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa5e29-38af-4d4a-88d5-b3415fa42b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e7c39c-4970-413a-a6dc-1759ab7ef994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf5f7e0-86d4-4326-9efe-68e007d816bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670c983d-3526-409f-87e0-3d14f4a49cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c991e1f-51d8-4e47-9154-61c83e7d09d4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4285e-9181-41b4-a528-cbff0ed6225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45139f4f-72df-40e4-b9ee-5628c6f304b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca8e567-1906-4b1e-af0a-a0f0fa6720a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd5dd9a-ee8b-40fd-8a1f-6ecb758a9cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2183990-5f9a-4578-a572-aaa1bb5ee42e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576d03a1-014f-46f6-a0a7-12d970e900a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946cae43-5e95-4f46-b5d2-10531eb9309b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3cb764-b892-414d-a6a9-10db2272f491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6994398f-a8d4-4d76-a8cd-81a590e216c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abcd6af-c4ae-403d-9b15-3e703b5225f7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd7860f-0c7d-4849-9e0b-1316b9e051c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbdee971-cf7f-41f2-9bad-1205b31b0b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c85552-56c8-412a-95e6-9f50b3764b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32655bd-f58e-4a50-8b36-d69ae0e82499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3675250-1803-4c98-903b-009772a629c1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0301c0d7-67cf-4c7d-8e10-aaf0ab6a65f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6503398d-68d9-43f4-9df4-fb7decb7e585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adacf1ef-57eb-4c97-9661-76d374a8904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9ee510-b38e-4aea-a7d3-2d10d253f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb999d-07c9-4d99-a9f3-cb122ea2b638",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189806bb-f9b5-41f0-af8d-c6394d1ad807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1b52c7-bae8-483d-b5d7-8ae2cd4387ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7127da-b994-48de-ab87-99f3b9704d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2f276c-9cec-4995-ad38-dcd9deb1f46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6b1b6-c425-4232-831b-bde0559a80f7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f79653b-e0ed-4601-a285-a61f9c70424e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d284879-a67a-4da2-93c5-f4f1d1e2b032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3937b3-fa5b-4616-b507-0c0a8381411f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3274dff5-53be-4cab-82ee-e02771b4254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31506186-22d9-4dec-9314-4ac9f0ba0c8a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd25610c-aa89-4e54-9ca9-7fea3d147697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f652ee-fb86-4761-96d7-9f4d9a10d8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3073b3-fd9f-4ee4-b7f1-e76b3d2ee8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562ea69f-92b4-4d70-a553-0c2f6cf6ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d1070c-7ece-46da-bfe1-5d7b09c7885c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bcb469-d522-4400-9169-f0b3231d8640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bc7f96-9f1a-4127-b60d-8cc2127b0027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a54d649-e1ab-4131-802f-0faf17978db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478bdd4d-adae-4bc4-82db-629f17b86983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5b0760-a8fa-42dc-b6c2-baec47a44478",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97461f9f-b562-45a8-9c85-44d58adb1a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7f2173-5ed1-449d-ac71-03692feec50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc83778-5823-4626-8df2-db85a35f2160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076e1e5d-d84c-49c5-9c28-09d988a19a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff36cc9-1beb-4a0c-a236-e344d1d0f606",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61e0319-da37-49b8-95e1-094d00dbac50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee33592d-a13a-4a75-85e0-17e82af9fd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72cd68-ae6c-427b-a649-0c44f42aba5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ec313b-8041-48f5-90dd-b374be87d10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c86e74-6ed3-4481-babd-29cc3868fb40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b67e55-c436-4001-8256-64b75ef0b90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6092a5c3-631c-435c-8691-9d9cc7b02064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913b60f2-a24a-4d25-ad4d-276e0dd33701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95752b3-1113-4796-883b-ea117f7b7285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee80ea7f-88f9-4e96-8152-1706a6f7e745",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec0ddb-e7ab-493c-9c5e-d2e104a344cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdafdbf3-5e19-4f57-a466-412e83e857d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceeb81a-4183-435a-b69f-4e02d8e7a54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4adb5b-7af6-4904-895e-763d4f334d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbbeac7-bb09-4c0d-9358-ba9a5d792382",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a02eb89-f4ac-43bd-95b9-20d61093add8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d575803-cb65-448d-82f4-e14b9b62657c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f11a27d-3f09-458c-ab6e-a460e1062bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc9e462-ac69-47bb-a982-f68346b7924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572a75eb-8334-4399-a0da-5601e0a73f40",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705b2539-6d26-4990-81ad-76c14f46a406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d817e01b-52ac-42be-85a1-9122dd7510bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe4a71-41af-49a4-9c50-9e9b4a1eb3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3a1996-63d0-48c5-8d9f-5e5dcd8dd558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c926d0d-6f20-4288-a428-10bfd203582d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb256280-1876-42e0-bdbb-fe937857c196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f74a30af-9b5a-4146-b479-161131c1a28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5723e9c-1fa1-4479-b4f5-c2dc7313ee52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c481800-becf-4219-9e20-d78ec2f6938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eea61b-0844-4dc1-addd-8359fec2021c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592324f2-58a7-4e2d-b388-9561e75b1583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2891c082-aec8-4b39-a0a9-0affbd239e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e073fdfa-9aba-413e-b36f-f39a0ec05bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0ac92a-5710-4d81-9ce7-3a1d983b41d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334916b1-0a7e-4432-aaa9-2b9e8f728a35",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc427a2-b994-4aaf-9f81-c424c6c4d65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27401552-a082-4075-8a96-44a6a531496c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee28d6-cad5-4353-a999-96f832b5f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c559978-d610-48b9-9018-26c14e9ffc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa21a9dd-270e-46a9-a603-8d145097537b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b6270-2f3c-48d2-bbe5-940ad5ab4506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89aef311-84af-48a5-91b0-8105dbfecafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d3835a-4880-4faa-aa1d-022d6f902054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e77cfbe-40e4-4527-98de-e9405bd0a8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd787c3-b3e1-441e-bcc3-e37ec5003914",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4635d4b9-7f46-41e3-a7c3-13f814625a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cac1313-4b51-4efc-b7db-c18fa0f87973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f45c2-ffed-4cb2-9bc3-ec5190cb8a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f66813-484e-47c2-a55b-98c56b23eeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87da57b-968b-4457-a242-f3a911bde45c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed12c2ac-8775-4ca1-8d15-2326036cc5fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f6e627-c976-4e4c-b982-c35315cd704a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbc4a1-54d4-4455-8965-21bdce92d07c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10271b45-03a8-4678-ac27-d81303a7da65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6103b2fe-daf5-4bf8-b111-b114dae6bdd1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bc67bd-9134-4151-90c7-2c7d5f4b97fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb679da-4cf6-4124-b159-10c7ae2d1c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961245a-5f2a-4bb7-a5f3-3381ef4b9b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1d27b-d50e-42d4-adbc-40fc6e578b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb6e634-191c-42e6-b505-f8d95e4d6c8a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f1b0a0-6a9a-4cab-a288-ee9a95b979c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feec0ef1-82f2-42c2-85dd-02dcde31577b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd3300-4749-44e6-8b98-97053a6c3033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1039f2-4422-458e-bd9e-cb4cfa84bf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f3abf-0188-43f7-bdeb-1ed42de84941",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f3148-1b7c-48d9-bdfb-fe2717632533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c1f51d-9036-443c-a01c-9183fc52a443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6980fe1-9872-4d7c-9336-932d7f2dc753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb72c47-7449-4b45-b225-e724aa38f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98953133-2a9a-4681-a492-9d55efed1af7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00d34ea-43b3-4138-90d1-b5471a2b55fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0951c835-0028-4de4-942b-d812a92e114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8aa678-4f0a-4e8b-b998-7dd459ff947d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d83f47b-0438-4505-9259-c65bf5ec10ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a064a010-61e0-429c-859b-748563f7e42b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7f39f-6a93-4609-998a-9d233cdc1cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16cfbfa8-be37-46be-9d68-f98ccf68fc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06319b-0f77-4ee5-b60d-7364c266d2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73bd6e7-fbb9-4636-8ec0-47822d608ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c6680c-af08-44c2-a053-5e4d7e620521",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517f1405-4459-4d66-878d-1fdf03baba52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eaa5685-d07b-43b6-8a53-aadcc402367f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af3559c-1eff-418c-8072-0899c85ca7c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339e8f99-f2b2-43ad-b1d8-5bf0523d43eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd82a4a-1e35-432a-b404-1de1f03dc790",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3282e-2e80-4a6c-9d87-56bd35b98830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6aa2f5a-9d19-46f2-9ef9-fdeee854bcf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd18149-9e3c-4423-8963-f1753b385bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1290c17-1911-4a7e-af4f-0879045c4bf5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "469ce63b-7330-4725-b367-6cbf6805f5d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9050c12-18a3-47f2-aa01-78b9f6083290"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93dd3aca-2fc7-492d-9f95-256fdd8b55bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57340fe3-a9d4-430b-9bef-6c2df8cf67e0"
                    }
                  }
                ]
              },
              {
                "id": "80256a65-dc86-4b68-80ee-354d6e293383",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e23f5a69-734d-4d58-9074-4d1ea8d3df89",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec7e692-b86b-4cae-9ed8-e78241bc7f59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "31e76da7-2fce-4e28-b4bf-140b290161b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91337e7c-9967-41aa-8254-5abf87ed6217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84be2311-a225-48b4-8f59-efc04ebe04cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "222162ae-c1bc-492a-aeaf-87ef2499039d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72213fd3-e93e-4505-9789-03c1710bbb02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd01e03a-0246-47fc-bf36-7ae36fb19e7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a691a8-52d0-4753-8a93-bb2bf9a47952"
                    }
                  }
                ]
              },
              {
                "id": "04e5d8d2-a18c-493e-b710-80c74133219d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1aab6b0f-f43c-49a9-97f4-31d1e651ce3b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0197ecda-e7aa-4ca7-988a-075b692519f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7c4421f9-aafa-4cc5-baec-7c8c1bb029d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee16f8-cd66-420f-9563-b8f4bcae4b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f60e742-2300-4ad1-946e-32a48adec772"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6de0ed74-3262-4a3c-a41b-80bf13b18f57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aaf5fe04-075c-45c6-a644-72bf53fc79bf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85434265-e332-45e9-a365-1ac7e3a01a6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d9c42b1b-b4e8-448e-9beb-b072497bb0ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b68538f-d446-4128-a661-3ba8e698bcca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c0caddd-eb59-44ef-9bc9-a49cce25a7e5"
                    }
                  }
                ]
              },
              {
                "id": "97fcf7e2-d88c-4894-8540-7b43c66abd1c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c50813d-9f1b-4a85-97cb-b4e18f5135bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94cca121-9430-4093-9bf7-3448f546dd6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f531b52a-85be-4d1c-926b-460ae8254835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6626b882-8697-4a99-8367-931e4e9ec3b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "303fbceb-3cb7-44c8-a5c2-5e57b8d37139",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "95f01169-f316-44ff-8108-5a07f0782921"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4166f107-56e8-4312-9206-90f0115605a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5919e18-4ac8-42db-acf8-ab710b220380"
            }
          }
        ]
      },
      {
        "id": "d505ba9e-a98b-44b3-833a-3ef285caadcb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a590d386-66c9-4aee-821f-c8bf765a81b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c613100c-58ef-434d-ac3f-a1704505be2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55a37f5a-33d9-4fea-b0b3-d748998e56f4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f91fb9-3e61-4f51-81cd-e07b39dab972",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02959ddd-a419-47ef-882d-ef0e0a808dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba0170-d072-47ab-a985-10d63999ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28f67b22-f851-4aa6-a798-1bc54270061f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d283da2d-a722-42d7-926b-53868fe2e60e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "004f95f0-d365-4251-b225-a5fe5d0395b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae090a2b-275d-44fe-b025-0ae930d8acf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3d29f9f-a055-40d0-ac4a-c8f9171ec6a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e36ddff-5f8c-4f1a-8f2e-a7da34f36512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ff66b47-8736-46c3-a646-b24272b77014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "755785d6-939e-407c-9923-13415f8bdcb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66323340-72be-4a22-8f35-491938e627d3"
            }
          }
        ]
      },
      {
        "id": "17b8a460-97fc-40af-8c20-ce0c10db69b8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "502fff02-874f-480c-ae08-a9b6676f192f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "201fa0ec-34a1-4214-bc5e-0c1e5f1c5a93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04a0baa6-4696-4f53-bce7-9c9b0902101c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4659f1a-9331-494a-aa00-35b2ed53d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13d8b58-e603-4aef-9ec5-1754182cce3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c081b69-6640-4946-80d4-6d1f2a14f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "522c126c-a773-4137-8026-65086a5e8da1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dd79bd2-3580-4f32-a426-a6c18bc2059f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ebebf2c-f8bf-4371-8a28-5389eaff60ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73506aee-5fd9-4262-bade-6f8d99af817a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3858a05-4e2f-465c-b3b3-3662b1523b69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edb10752-ae5b-4be2-a187-f8f251a4671e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55db92ed-f455-4cba-8e68-1c65c559e6d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38daaff2-f0f8-4750-8092-9d71f2af9d14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "104cdfeb-2814-49f5-83c2-8c87f261b350"
            }
          }
        ]
      },
      {
        "id": "880af703-5434-4917-8bdc-1f1657910d3d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c5309246-d5cc-411a-9e02-8566c4b4df3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6b70528-893b-4012-8fa3-a2525c8bd5b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f416a43f-3dcc-4bd4-8c67-a6919c14b6ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6fcff6-1593-4d02-b0f2-de7131c9af53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb912e70-a478-4444-a0e5-bf63e1c6a514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2e5486-93ed-434e-849d-90df2faaeb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a90b072f-00fa-4334-b586-136492b10d82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "679e78f3-ba40-427e-ab68-3e853e7cea15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fad7e48-be76-404d-a416-31ebeb973094"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a76a3817-1ee1-4f79-bb6a-0aa53701e776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd722e0a-34d2-4990-8d04-953dad66ddb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "480e830c-f39f-4a36-8cd2-4624fab8ad73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b71f954-9751-4146-8def-c16d767cd1eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "560d6c16-10a8-4935-bb08-34e3615c6ba1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4431192-1b62-4466-94cf-bdb3df41c76c"
            }
          }
        ]
      },
      {
        "id": "4a529364-9662-4d3e-8aa0-e15a818497e7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c14e606-b111-488b-9722-6f83bbbfb3c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d1f4fcc-cef2-49f2-9b69-3ad85c2d931f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9c41bb66-3c37-4a6c-9d15-b1c8feb49f34",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44aa6986-0f8f-49b0-a7f6-e2bfa72d585b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "178278fc-1fa4-4292-8701-ac48f74dc772",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.99295774647882,
      "responseMin": 14,
      "responseMax": 4489,
      "responseSd": 380.7054607406239,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696898008730,
      "completed": 1696898051761
    },
    "executions": [
      {
        "id": "4df7fb14-c14d-4b14-879d-8cffbfbcbd40",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "83714484-c369-4946-a39a-243e9b9542a1",
          "httpRequestId": "9030dc34-70a9-4d2f-bdec-e3e1f0f8c46a"
        },
        "item": {
          "id": "4df7fb14-c14d-4b14-879d-8cffbfbcbd40",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "59841db8-e8c8-48b3-abe4-634beb98f992",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "f3b2997a-cd0f-4f25-9a5f-2bf2e864a1fa",
        "cursor": {
          "ref": "b1417e2f-af5b-4905-bfe6-7a5ddf00b175",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6be47188-ace6-4739-9e79-db3ee48acfa7"
        },
        "item": {
          "id": "f3b2997a-cd0f-4f25-9a5f-2bf2e864a1fa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b54668a8-647a-4a1f-9bd5-34052f4d434d",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "bfbb35f5-432f-49d3-bd83-675c757d9ddc",
        "cursor": {
          "ref": "c52945f5-f8c7-4e0c-9c20-3e377856960d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f9b7a684-a393-440e-bfcf-76a601c32a88"
        },
        "item": {
          "id": "bfbb35f5-432f-49d3-bd83-675c757d9ddc",
          "name": "did_json"
        },
        "response": {
          "id": "391d8c5b-1b6c-4b3f-aa52-139d07832272",
          "status": "OK",
          "code": 200,
          "responseTime": 315,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932772a9-f43d-4a9e-9e99-d50cc9e435dc",
        "cursor": {
          "ref": "db5d721c-35fe-4719-b0f2-9cdbbdd6fbde",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ab88632-40f7-4822-852c-2f3fabc03ea6"
        },
        "item": {
          "id": "932772a9-f43d-4a9e-9e99-d50cc9e435dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfe8f6b2-89c4-4eae-8ae3-dae63c4587c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932772a9-f43d-4a9e-9e99-d50cc9e435dc",
        "cursor": {
          "ref": "db5d721c-35fe-4719-b0f2-9cdbbdd6fbde",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ab88632-40f7-4822-852c-2f3fabc03ea6"
        },
        "item": {
          "id": "932772a9-f43d-4a9e-9e99-d50cc9e435dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "bfe8f6b2-89c4-4eae-8ae3-dae63c4587c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3eeddf-3517-4fc0-9f1a-b88aa1b99609",
        "cursor": {
          "ref": "8a908d01-1220-415d-902c-0f5d08e357bf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "902413f0-2769-4315-ad5d-ea9276a1dd7c"
        },
        "item": {
          "id": "dc3eeddf-3517-4fc0-9f1a-b88aa1b99609",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0768755a-93cd-4b32-8909-196cbf79ae95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a59c6d-8636-438e-a9c4-b69b9c94639c",
        "cursor": {
          "ref": "1e7b1074-eac1-4bf9-80d0-419b84d6a3ce",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61d4c373-d8d9-4d35-8ec3-2d91be557340"
        },
        "item": {
          "id": "c3a59c6d-8636-438e-a9c4-b69b9c94639c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "14b95a12-3495-4a3b-9c0e-70f7958ee302",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8944b1c-60e6-46e0-aedd-2491611c2f88",
        "cursor": {
          "ref": "9da8fe9d-4533-4b64-ae97-995305270285",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a8aac2db-cd87-4cb1-9522-b40624d38c8e"
        },
        "item": {
          "id": "e8944b1c-60e6-46e0-aedd-2491611c2f88",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "17ebcd52-475c-4be3-989c-01e0d89e50f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130f6c85-bfba-4b1a-a5da-010df98e6e56",
        "cursor": {
          "ref": "b65558d8-0cd4-4381-a076-71c9b72ae800",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40e1b70b-507a-4e98-8ede-c6022a9d39c1"
        },
        "item": {
          "id": "130f6c85-bfba-4b1a-a5da-010df98e6e56",
          "name": "identifiers"
        },
        "response": {
          "id": "c86a49e7-c693-4762-b4fe-fb0408638fe5",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f68cc5a-0cab-4a15-a561-2a6d1ef73588",
        "cursor": {
          "ref": "2386af93-6e05-41bf-8073-18ae12f9530f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f551fba-986f-4535-b27b-3abd7b27d6b1"
        },
        "item": {
          "id": "9f68cc5a-0cab-4a15-a561-2a6d1ef73588",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ac1485e-1aab-4db2-9adc-23d5caec74c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd7a154-b9d1-4576-bbe4-f444d4267518",
        "cursor": {
          "ref": "8d630a58-e065-4eba-8f36-addf4a329b19",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d23b914-31ff-44d9-90e7-3a5727c39f11"
        },
        "item": {
          "id": "0cd7a154-b9d1-4576-bbe4-f444d4267518",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "18f3ce5d-ed94-44e4-b576-c0ee73c13163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd480a5-84e3-474c-af6b-134e660e840d",
        "cursor": {
          "ref": "989ef6dd-25e0-4053-97ba-def129fc9afd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "853f527f-205d-4ba9-92c0-9be853615be0"
        },
        "item": {
          "id": "1cd480a5-84e3-474c-af6b-134e660e840d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cda08953-f541-4872-b4e9-a97a57399689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396e518f-79df-4fc2-9cfb-6958774c6b9c",
        "cursor": {
          "ref": "58a53a6c-9d60-440f-840a-9db7063f20fd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "746f89d2-27e6-4fcc-9fa5-4e6534e04c8d"
        },
        "item": {
          "id": "396e518f-79df-4fc2-9cfb-6958774c6b9c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b0a97f32-5225-4bff-8a55-766604581f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ead67a-2430-4a90-8460-9a979bad8678",
        "cursor": {
          "ref": "2cf28fc3-b947-42cc-8e60-71a56c4b45e1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a9bf393-1c70-4b7b-861c-d8f8f75302e9"
        },
        "item": {
          "id": "45ead67a-2430-4a90-8460-9a979bad8678",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6438ec1c-a4c6-4e61-9f4e-d969ecdde9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859ba4e3-81f8-4a82-960b-8331252cb9ad",
        "cursor": {
          "ref": "a496f839-e09d-4d1b-9195-9e42f6f9fcaf",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d3e6e58b-45fa-4cdd-a862-778af9ccb912"
        },
        "item": {
          "id": "859ba4e3-81f8-4a82-960b-8331252cb9ad",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "57ce3497-831a-43e0-b44f-6bf1c7fc4065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad74d5e-eb04-454d-acb5-77eb7cfb2be9",
        "cursor": {
          "ref": "a2d53abe-b448-4b1e-823a-0a6efe1707b5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b5848e31-ea94-4884-8efc-2d5f0550d95b"
        },
        "item": {
          "id": "6ad74d5e-eb04-454d-acb5-77eb7cfb2be9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f98d9e70-75eb-464a-a3b4-bb879780ce5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b12bc-0ff2-43df-9efd-26aea4ea4cb0",
        "cursor": {
          "ref": "05060473-4307-4769-8173-50c8cc37ce93",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6f7c8ff-85e3-49ca-ad8f-921e84d3c7d1"
        },
        "item": {
          "id": "f79b12bc-0ff2-43df-9efd-26aea4ea4cb0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "80f397e2-a2ab-47d5-b90d-9435312c879e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b92ce-e6d3-40a6-b25b-85c647129013",
        "cursor": {
          "ref": "95706e81-2c96-4559-86ae-690a61850415",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4b235eb2-b012-4fc1-b5fd-e8d6da9aafa3"
        },
        "item": {
          "id": "9e5b92ce-e6d3-40a6-b25b-85c647129013",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bfcab9a2-9560-46f2-9d33-abdd234cdcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488d4f51-31dd-4818-b113-f21cde7496f8",
        "cursor": {
          "ref": "e950ac17-9a3a-42e8-843c-ae8224df9100",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ba778b0-0b45-4985-ae1c-d2ca37d66701"
        },
        "item": {
          "id": "488d4f51-31dd-4818-b113-f21cde7496f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "79e234d0-624e-4945-b735-c247f5e6bf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d089980-964e-48cd-99ad-e1d997dec311",
        "cursor": {
          "ref": "c6c9c58d-0948-447f-873b-3984f134ba0d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb5b8337-18df-4144-9dd8-36499c8b9ea7"
        },
        "item": {
          "id": "0d089980-964e-48cd-99ad-e1d997dec311",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "68c32f16-264c-409f-a54d-6357848825c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a048102-1313-4121-89da-cf7372a1e166",
        "cursor": {
          "ref": "5cca0d5a-b039-4629-9dfb-2e6ff76b3245",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c355318c-676d-436b-b618-f6ad89db6a98"
        },
        "item": {
          "id": "4a048102-1313-4121-89da-cf7372a1e166",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea0e24b5-96cb-440c-95e0-1e0376bab2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0214e8d6-d835-4bf5-a30e-a2ef92956ecd",
        "cursor": {
          "ref": "2fa303ba-1bd7-47a6-809b-61d01d3db9ee",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c09f3b4a-2120-4051-9c30-5938cf28ec4a"
        },
        "item": {
          "id": "0214e8d6-d835-4bf5-a30e-a2ef92956ecd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eb41464a-f352-4af9-9880-8808e9357893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6db6bb-74ea-4f01-b3be-c49f787de5cb",
        "cursor": {
          "ref": "90031db8-af7c-46e8-a560-bdb9cbe9bcd7",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae427684-1fb0-47b0-90ad-a4aeb1cf1350"
        },
        "item": {
          "id": "ed6db6bb-74ea-4f01-b3be-c49f787de5cb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d02e51b9-33b7-49ea-bbec-bc1a6bb7ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae831fc-3a21-4755-bcdd-c01db467c816",
        "cursor": {
          "ref": "70bef3c6-14dc-460e-85da-f8b4dc14b20a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e27166bd-c3e6-439f-83c2-231da14900f4"
        },
        "item": {
          "id": "4ae831fc-3a21-4755-bcdd-c01db467c816",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0949fb36-ea67-4844-b4d9-c5e8440e0213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67879732-2f1e-43e5-a4fd-732c90f92a16",
        "cursor": {
          "ref": "072db965-c1c8-4fcb-898d-d80d6cd980a2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ec1eab3e-443f-40d4-8d1e-7365c712f3d1"
        },
        "item": {
          "id": "67879732-2f1e-43e5-a4fd-732c90f92a16",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bef6b6a5-cc44-4bab-a005-333381706f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728490ee-b961-4be9-9d2e-aec5be5a5869",
        "cursor": {
          "ref": "d8a2efa8-5213-4b25-a507-767a143a4ef2",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6652e00-fbd3-479d-a20d-02cb17678677"
        },
        "item": {
          "id": "728490ee-b961-4be9-9d2e-aec5be5a5869",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "670d0b00-68d0-4bc8-8aa5-320ba7bb2fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3646771b-60cd-4448-a335-a0bd38824232",
        "cursor": {
          "ref": "c4649f54-3a64-4815-a591-9730db9b63f7",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "987453c2-9814-4445-8357-2d1e3b91b882"
        },
        "item": {
          "id": "3646771b-60cd-4448-a335-a0bd38824232",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15aecf5f-d5ec-489b-be7a-4d6fa22e51f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24adb95d-2e3a-4e29-89f2-1be2f2ceece0",
        "cursor": {
          "ref": "8c4ec297-3087-4e40-8fa5-f63bb3dc0249",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d5fe4f66-c8c9-4789-80fd-ab17d0caa33c"
        },
        "item": {
          "id": "24adb95d-2e3a-4e29-89f2-1be2f2ceece0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e8142916-eb71-45bb-86d5-20922bef88f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b358312-afe2-491b-a6d8-2f78836b544f",
        "cursor": {
          "ref": "c6e5072c-7c29-4e93-821c-56bef171bf44",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "356a4b3c-d822-4063-9c3d-dfc1273595ff"
        },
        "item": {
          "id": "3b358312-afe2-491b-a6d8-2f78836b544f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10582ee1-f20d-4f1f-bd99-b7f590a2e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3af3d3-29e4-4fe8-8b48-5e45c51d342e",
        "cursor": {
          "ref": "ec4b195c-23df-4606-a151-e45efeb475dc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3677c844-f8b1-4674-943a-8ff4f14e82f5"
        },
        "item": {
          "id": "df3af3d3-29e4-4fe8-8b48-5e45c51d342e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b059d853-7f96-4369-a5ff-2f3796a4f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648670d4-9fac-4237-80d6-7d4b53f7d7a1",
        "cursor": {
          "ref": "6952319b-0bd9-4122-b270-9cbaba1da46f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "77f17a3b-d704-4349-89bd-68e8af958cf1"
        },
        "item": {
          "id": "648670d4-9fac-4237-80d6-7d4b53f7d7a1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91d742dd-ba71-450c-88d1-09cd93ab69de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72b0c21-8115-446a-a545-81bcdd30e739",
        "cursor": {
          "ref": "ad36054a-5141-4fbd-8cf1-22c832c5af48",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1e10b3db-cf29-4c0e-bb57-a000895c05af"
        },
        "item": {
          "id": "c72b0c21-8115-446a-a545-81bcdd30e739",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "83e6912c-cb4d-4873-a0b8-72a97fed3c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c488775f-1637-4e9b-9e5a-cb88b519d454",
        "cursor": {
          "ref": "ef451c7e-fa3f-4ad0-97ac-43e1c8cf3f9b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f33e5f1d-ff64-4e84-bcac-f69def7c2e70"
        },
        "item": {
          "id": "c488775f-1637-4e9b-9e5a-cb88b519d454",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "537e8c25-00ad-49a9-8dfe-62b38978b8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd5e368-db2b-4b27-8a01-707663a2a6dd",
        "cursor": {
          "ref": "4b4dd936-6f50-42b7-bedf-6d6bef98f669",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "66184be3-8296-49f5-9ce9-8b3730a4b0c8"
        },
        "item": {
          "id": "0cd5e368-db2b-4b27-8a01-707663a2a6dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e630f4f4-48ac-4662-a187-7ce7bcce1398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df428a9c-a982-4c4d-897b-f0c637f6dfb3",
        "cursor": {
          "ref": "f99edd40-be6c-4959-a1f8-a789c7362491",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70764a63-7485-4b67-be05-e9ee8d7fa722"
        },
        "item": {
          "id": "df428a9c-a982-4c4d-897b-f0c637f6dfb3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ad340130-5954-4bad-9c01-f77ff7be7e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981b9e05-14f7-466b-a8e5-2c9baa259f33",
        "cursor": {
          "ref": "0817fa2b-aabf-456a-88a3-98919b106e02",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6ae2bd73-769e-4e00-b64d-88ca0888bb9b"
        },
        "item": {
          "id": "981b9e05-14f7-466b-a8e5-2c9baa259f33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2b2fbe39-c459-4bc3-8f3f-f2e4c4038f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374e15f-5b74-4539-9893-605d647d08d0",
        "cursor": {
          "ref": "fa9315e1-177d-48bc-ba70-c32527968968",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd1d4808-4adf-4752-8224-89fc828d16ed"
        },
        "item": {
          "id": "9374e15f-5b74-4539-9893-605d647d08d0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bfd7118e-99ca-4fa8-8901-6487c8bfae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2458d10b-3b4a-4686-86c4-d203066d0aa2",
        "cursor": {
          "ref": "9e1306b1-4cdf-4e0f-8eac-e66a4065c81c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1ade6d03-791c-4b9f-86cb-02c2f8cb5145"
        },
        "item": {
          "id": "2458d10b-3b4a-4686-86c4-d203066d0aa2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f537fa97-a4ad-4a4e-8533-0afad324a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06f674-e848-4b38-9aea-6963a3262be2",
        "cursor": {
          "ref": "d83ac861-1952-4bd0-8aad-2c00fd48d312",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34a74506-8068-4eb1-a47a-89e789b862a4"
        },
        "item": {
          "id": "2f06f674-e848-4b38-9aea-6963a3262be2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7f91465b-ed80-4a55-bdc8-599ea920c974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc68a483-0af5-4634-acbd-5677f7121b43",
        "cursor": {
          "ref": "c68fbfce-1565-45b2-b7b9-0009ae206b28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db628544-a29e-4d00-82a8-baac25443d6a"
        },
        "item": {
          "id": "cc68a483-0af5-4634-acbd-5677f7121b43",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d97bead-03a0-4e2f-85ae-ef75a1b15ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1b7c2d-ec65-4b2c-bead-123990394d4f",
        "cursor": {
          "ref": "42566876-e195-4203-9e99-ee8265175a7e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4a2e558-8125-4cc7-a395-1611ce3e5d61"
        },
        "item": {
          "id": "8d1b7c2d-ec65-4b2c-bead-123990394d4f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0ca56a64-c0d4-43d5-ad4b-471baa3ae729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcea043-78d5-4721-9c57-677fee946da1",
        "cursor": {
          "ref": "9e44787b-46d8-4b2c-8385-eddc1de86562",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5283801a-799f-4e6c-a2a5-cd6dacb9baba"
        },
        "item": {
          "id": "6dcea043-78d5-4721-9c57-677fee946da1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6719bdca-47b6-43f7-815b-ddabfb133e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f152e590-f2ed-425d-bd02-6cde6e430138",
        "cursor": {
          "ref": "252c667e-4596-42a2-bc16-fb31f3368221",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1435ebaa-3d07-4142-8746-b753b0911362"
        },
        "item": {
          "id": "f152e590-f2ed-425d-bd02-6cde6e430138",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6aa56361-e50b-4e4b-8883-f7839de91c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70d02d7-a9d8-4ca3-829a-c9cddc74b9e0",
        "cursor": {
          "ref": "13effd07-9bf4-49a5-9d1d-448c86593cd6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07721240-4f98-4c1a-a1c6-0ea2eb2bc9e5"
        },
        "item": {
          "id": "a70d02d7-a9d8-4ca3-829a-c9cddc74b9e0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a658c33b-23b3-4a1c-96d4-0a75cc3b45a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e149fec-409a-4c53-af20-cfdfc4a1daaf",
        "cursor": {
          "ref": "9d777f05-56fc-470e-82cb-d660c3ba7871",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c97cbb8e-9871-47ac-8209-8741d4d00969"
        },
        "item": {
          "id": "2e149fec-409a-4c53-af20-cfdfc4a1daaf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f0af4678-6281-44a2-a042-ba09b64f340b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21f85b5-87fa-4c3e-b4a6-c14800ce87c3",
        "cursor": {
          "ref": "04cd954d-c0cc-412e-8a90-837b9a8efb73",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0eded6d0-0835-4035-b048-0c590edbac2d"
        },
        "item": {
          "id": "d21f85b5-87fa-4c3e-b4a6-c14800ce87c3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "02b1b385-4d73-4d0f-afe1-59d35b5359e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceccc77-2c65-4bd5-8d96-97a164701b1e",
        "cursor": {
          "ref": "2914a71a-b8d7-4d84-8746-947231e6307d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "48b57280-0faa-4483-85f5-a6fc1a06e1a2"
        },
        "item": {
          "id": "3ceccc77-2c65-4bd5-8d96-97a164701b1e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "970b1e44-8429-47d2-820a-a2f151a95f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a6340d-2d9c-4940-b854-7424cf5acd32",
        "cursor": {
          "ref": "8cf36ac6-d844-415b-b47f-4d1ba6488301",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e26979a7-2189-4106-9991-66081cff996a"
        },
        "item": {
          "id": "97a6340d-2d9c-4940-b854-7424cf5acd32",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d2477899-bda3-4fbe-912a-2252ba5c3518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c1321a-ae6e-4fb3-a953-9671c9bed233",
        "cursor": {
          "ref": "4ba1da5f-635e-4a52-9d2c-8a57b43ff900",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f55e93d8-730d-41ef-b1bc-e77703c5eb7f"
        },
        "item": {
          "id": "36c1321a-ae6e-4fb3-a953-9671c9bed233",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c3d33f9-0975-49aa-8cb5-2243b92fd6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a375e0a8-e6de-4b73-87ad-482181cfe100",
        "cursor": {
          "ref": "19eb83d8-d8d9-4eb4-824b-abceccc003db",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f1ec7c9c-1eb7-4ae5-914c-938ca1fe9b76"
        },
        "item": {
          "id": "a375e0a8-e6de-4b73-87ad-482181cfe100",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "36a21a94-8154-4f76-8fff-eccfcd218b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da51a342-5ac9-4ef9-a4b5-5b4a7f509c0e",
        "cursor": {
          "ref": "e84fa54b-12a4-49ad-a43c-fa5b843dcede",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "36e29e61-56a9-4d94-bd44-8219bfdf6e21"
        },
        "item": {
          "id": "da51a342-5ac9-4ef9-a4b5-5b4a7f509c0e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ce1412f1-ed5b-438d-9534-54f99e7986ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc02a85-6e55-4cca-b70a-f8c2c89cdc3a",
        "cursor": {
          "ref": "b3028e3f-9207-4d0f-a95f-1bdfa978ca7e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0433a95b-16bf-4738-9c06-59c702879c1f"
        },
        "item": {
          "id": "4fc02a85-6e55-4cca-b70a-f8c2c89cdc3a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "068c6ad7-1412-45b1-9a8a-04d8391e9626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d0f8e6-ddb0-4306-a920-2e12c789c72f",
        "cursor": {
          "ref": "4277f59d-7bd3-44b6-ba6b-45a3195ba641",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "88f8b942-fb1c-4db5-8d7d-5dd4457cd8c7"
        },
        "item": {
          "id": "69d0f8e6-ddb0-4306-a920-2e12c789c72f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f47bf39-c3f1-45ff-bde8-6fbecc5982b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bbcfe3-6ad2-4b08-bffc-fc770021e94d",
        "cursor": {
          "ref": "349fa874-519d-48bc-a5b4-b3fac337d1b8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e2f05634-61e7-4838-b17b-2bcde1a7bae8"
        },
        "item": {
          "id": "b0bbcfe3-6ad2-4b08-bffc-fc770021e94d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b8d2ca97-fb78-453f-b96b-1ddc7913b769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be120586-894f-48a3-b5d0-1cda5e56a609",
        "cursor": {
          "ref": "5149b013-f54e-46d3-be22-617183f5e0c9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d6446029-c82e-4414-9ab6-00a152e35174"
        },
        "item": {
          "id": "be120586-894f-48a3-b5d0-1cda5e56a609",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "273aeb89-a4a2-41cb-8b50-6d9d12dd0e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f154fe50-d2ee-40b8-bccc-bb13b97e2aa9",
        "cursor": {
          "ref": "45d6ec41-482f-4705-a77b-c7639f10fbc0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "018ea036-2778-4d7c-8255-bf1530534ce9"
        },
        "item": {
          "id": "f154fe50-d2ee-40b8-bccc-bb13b97e2aa9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea1e930b-9370-4469-b2d7-ad5924362dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843cdd59-4cda-4ddf-8076-1725200686f7",
        "cursor": {
          "ref": "74be2eff-7085-4636-b7ca-b732ecbcf0bd",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c7918296-5e90-4c05-b1cc-923beb627697"
        },
        "item": {
          "id": "843cdd59-4cda-4ddf-8076-1725200686f7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a19a4b9f-00b5-47b6-a0ae-58e01a8afbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc57f4ea-674c-4aa8-bb60-bf2afe1e90e9",
        "cursor": {
          "ref": "547afce2-e19a-429e-a780-6d4b0c316a8d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3b6c8571-0993-4937-a982-b2961a66cd73"
        },
        "item": {
          "id": "cc57f4ea-674c-4aa8-bb60-bf2afe1e90e9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e22503b0-24b9-4a07-ac52-f4bb98cf51b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eb3d74-c794-4ed8-a1d2-1040b2c6313b",
        "cursor": {
          "ref": "579e2218-0395-441e-8bbf-af16032299f5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fa47af57-5faf-4537-a747-416be908cd66"
        },
        "item": {
          "id": "53eb3d74-c794-4ed8-a1d2-1040b2c6313b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b2807e28-03d0-4dbb-afd1-0f8b5528e73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d29e58-51e8-4ba7-b86c-8ca9546c7c4b",
        "cursor": {
          "ref": "08e45651-2862-475b-8dc0-b32fdf37f901",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df76e9f0-5a43-4953-8454-deddb34741b1"
        },
        "item": {
          "id": "68d29e58-51e8-4ba7-b86c-8ca9546c7c4b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fccca67f-71e6-4c76-8989-1ec57c53110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bdd6ee-fae4-4092-ac65-1dd8b402999b",
        "cursor": {
          "ref": "1aedd944-be53-4c27-8f0c-7e3cff439673",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dcba4cf4-41f0-4059-a25d-79d609fb97b0"
        },
        "item": {
          "id": "76bdd6ee-fae4-4092-ac65-1dd8b402999b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a415717-6c60-430b-b406-48f453af1c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d4d9d8-4e12-4119-ae66-c9600e30bc84",
        "cursor": {
          "ref": "867b5e3e-609a-43d3-bdd9-e6b490d3cde3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0570576e-c242-4a02-849b-9c8dbb109439"
        },
        "item": {
          "id": "e8d4d9d8-4e12-4119-ae66-c9600e30bc84",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eacf82f1-cc2e-43a5-9e2f-a685aff7bb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d16de3b-0500-4e17-a6ee-fc7e9fe1b1d4",
        "cursor": {
          "ref": "84a0aebe-b3e5-4267-b2df-90bee079872e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e74604d-8165-4970-8f87-3af85c7e3bf9"
        },
        "item": {
          "id": "3d16de3b-0500-4e17-a6ee-fc7e9fe1b1d4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "207c4f62-f242-493d-b06d-7aacf3c7174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e63901-3fdc-455f-85ed-5d135b07c0e6",
        "cursor": {
          "ref": "b923cfdd-8bba-4b31-8362-623e6acdd4d5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ce7240d5-7a3d-4cba-8515-0eb5548b45d0"
        },
        "item": {
          "id": "65e63901-3fdc-455f-85ed-5d135b07c0e6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "75131eab-a321-4d14-b42d-e1b5b24ebdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16890aa8-d811-485e-8917-533a44e333e3",
        "cursor": {
          "ref": "007c7fdd-6a01-43a5-88f5-fdacbe6780ac",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f93edbeb-bca4-419b-aed0-a3e3919ac0d4"
        },
        "item": {
          "id": "16890aa8-d811-485e-8917-533a44e333e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a8624423-b127-437c-a954-a13568893f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff105d3-8b9d-4679-946f-da186141674d",
        "cursor": {
          "ref": "4a88f107-66be-45fc-a293-9887967481dd",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "31fcd043-c571-4da9-aa68-d7e857f7b904"
        },
        "item": {
          "id": "0ff105d3-8b9d-4679-946f-da186141674d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "86fe64e4-83f0-4915-997d-2d88205eb498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b11a0a7-e7d9-4f5d-8822-877e54cea2fa",
        "cursor": {
          "ref": "42f9097d-fa35-4171-947b-c1655b6233d5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "21e7d899-2df4-4575-8f71-7cb4766278f7"
        },
        "item": {
          "id": "5b11a0a7-e7d9-4f5d-8822-877e54cea2fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2df8e1bc-c2e3-4fc1-8ee5-cb524b6b1c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f573be-bb4b-4122-b7d2-b8bdb4350fb3",
        "cursor": {
          "ref": "72dc8a84-adc2-4a6b-b2d8-cb185ed0117b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "05941b06-76ca-415e-b674-cea12c3cac58"
        },
        "item": {
          "id": "36f573be-bb4b-4122-b7d2-b8bdb4350fb3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a6451d49-2387-482b-99a2-4e3335c842c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a99fe82-4003-4128-b468-87f5ff0bcba7",
        "cursor": {
          "ref": "85181cb6-1a0d-4ce7-be6b-a4b32ad8b56c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8ba6480e-bcc3-4719-a003-41d01d88353c"
        },
        "item": {
          "id": "7a99fe82-4003-4128-b468-87f5ff0bcba7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b997ffb2-a065-4525-b147-be9a6a0af0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a931abe8-6f2c-4983-a181-49411e8c7d2a",
        "cursor": {
          "ref": "bedc3d1f-c74e-4e23-8405-4f8c7df45c69",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "66b5f5af-feee-4b95-b618-370d60cf2de4"
        },
        "item": {
          "id": "a931abe8-6f2c-4983-a181-49411e8c7d2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d3ab21d3-b013-4883-999f-6098e3534400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fec927f-9732-4f71-8c94-9baa284e3693",
        "cursor": {
          "ref": "506a8515-f4fc-43cd-810b-05b6d8e5c4f0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9535457c-5fda-4058-b09a-097f766cc625"
        },
        "item": {
          "id": "1fec927f-9732-4f71-8c94-9baa284e3693",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c19a6741-0e9a-44f5-acc2-37433e79e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3480dd-0bec-4557-8934-51ad0a66fa00",
        "cursor": {
          "ref": "5ed64bc4-ac95-4fba-a113-37af1c3398ee",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2141d6fd-2de2-45ce-80d7-b25bb827022b"
        },
        "item": {
          "id": "2b3480dd-0bec-4557-8934-51ad0a66fa00",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "46dcc711-d7da-416f-b2c7-19edd70387c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b09301-c497-4357-ad2b-77924d4785ab",
        "cursor": {
          "ref": "a2db92cf-147a-47e9-af23-4f6194bc9959",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5dc10dda-060e-4af1-8383-67a27f8070c4"
        },
        "item": {
          "id": "58b09301-c497-4357-ad2b-77924d4785ab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a8f716da-f3e6-4d21-8801-6a1865302528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc799c8-d723-4c22-8736-9d7e146b5aae",
        "cursor": {
          "ref": "e94425de-8bd7-4187-864b-a8d7c2daa7be",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b10105c3-a59d-488c-a3b5-2ff842bf56ea"
        },
        "item": {
          "id": "0bc799c8-d723-4c22-8736-9d7e146b5aae",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d958b3d7-3150-4789-809c-764af55ed59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8484b13f-ba06-4d77-b0de-072e9a587003",
        "cursor": {
          "ref": "14fc9764-9a86-414f-93f1-046b82c62be1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d531ccf5-061d-45aa-893b-17a7f0f89dfe"
        },
        "item": {
          "id": "8484b13f-ba06-4d77-b0de-072e9a587003",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b86f690e-900a-4604-9194-d4de0f036e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfabf9dd-974a-4a78-8e4f-52a20eb312ae",
        "cursor": {
          "ref": "7fcd6fed-e9b5-4d63-84d4-a5668a9e9c8a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9a86ac24-e6eb-4f9b-8e8f-0ffeb4b09200"
        },
        "item": {
          "id": "dfabf9dd-974a-4a78-8e4f-52a20eb312ae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dfd2c41c-e00e-40a9-bcf3-661e247b671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba3b3a-925a-4051-90e9-9add58c31069",
        "cursor": {
          "ref": "4eefc7fa-82b5-4845-8a96-c8770c1a9059",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8698b651-34b9-4317-9c56-e3dfa911b57c"
        },
        "item": {
          "id": "eeba3b3a-925a-4051-90e9-9add58c31069",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "def0842e-268d-4b36-a32b-4658cb10655a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493bbf77-abaf-4ef8-aedc-ab997d3ec723",
        "cursor": {
          "ref": "00bcb27c-1b6f-492e-bbbf-2544d1aff67c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "100deb77-c1e3-48dd-9cac-4eb64333fb48"
        },
        "item": {
          "id": "493bbf77-abaf-4ef8-aedc-ab997d3ec723",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4af4c27d-67c9-4513-989f-522b163fb827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27f650b-fccd-42b0-a5e9-7883486227ee",
        "cursor": {
          "ref": "2ce8341b-0ce7-43d0-8b3a-82a088b56bc9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1aa988fd-b2b3-4aba-a2f3-7f1ca0739719"
        },
        "item": {
          "id": "a27f650b-fccd-42b0-a5e9-7883486227ee",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "571f4e27-93a8-49f0-95f1-edde733d9b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526add30-0a95-40c2-a015-49c84bce386a",
        "cursor": {
          "ref": "91b72fc4-ccbd-43ed-923d-d131adddd2a6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0bb76542-494e-4b7b-afd3-39de1db2c2bc"
        },
        "item": {
          "id": "526add30-0a95-40c2-a015-49c84bce386a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "442b3e97-18cb-45b0-903b-dab7215ea27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2712778-0c9d-46cd-9cff-3c5edccd8370",
        "cursor": {
          "ref": "1784ab2b-5253-4fc7-9fd7-96ba47e44b70",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "78bfea19-2fcf-47db-b173-160e1eb53905"
        },
        "item": {
          "id": "f2712778-0c9d-46cd-9cff-3c5edccd8370",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c7563174-d0de-487e-b87e-b2c4146991ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7053a5c9-eed2-4d41-8b12-13b0d80cce8e",
        "cursor": {
          "ref": "4a591fab-c7dc-4eb5-9474-7361de035232",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0e6af42-9a65-4ec0-8f32-416601444adf"
        },
        "item": {
          "id": "7053a5c9-eed2-4d41-8b12-13b0d80cce8e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0f85c687-7e00-40f6-827e-f4cd8540d70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87a6f0-0918-4c03-9c13-2c30b48cc588",
        "cursor": {
          "ref": "887619f3-c1af-4942-8ad7-d630268869b3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "655c01ff-f846-4e32-86f3-da4aef5481c0"
        },
        "item": {
          "id": "1d87a6f0-0918-4c03-9c13-2c30b48cc588",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14171ea7-33b5-4891-a65d-272ae7cfe196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ade8d-d9fd-4210-beb2-0bc21077cbab",
        "cursor": {
          "ref": "c47b6f81-e862-4559-9637-0a885b902a3e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1a11e45a-066b-457d-999e-a7231c556e53"
        },
        "item": {
          "id": "501ade8d-d9fd-4210-beb2-0bc21077cbab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c93ae1c6-abf5-4300-be03-4b0df8aa75c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76225bee-8b27-454f-9e65-00f200b3bc3d",
        "cursor": {
          "ref": "8a6ff5e0-0763-4ef0-8099-ae2554ebd17e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7f74ea1a-25ff-4893-8e6e-a4a3ed6c250a"
        },
        "item": {
          "id": "76225bee-8b27-454f-9e65-00f200b3bc3d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "de27e0a5-0276-4503-8278-543f29efb623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e48dcd6-04ed-4500-81a7-e2ec2986d1b3",
        "cursor": {
          "ref": "70faa542-efa0-4ac8-9034-50264670e696",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68ceda25-32f2-4cc9-b2de-e40a7dd7a822"
        },
        "item": {
          "id": "9e48dcd6-04ed-4500-81a7-e2ec2986d1b3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea9e3b15-ba29-4ea3-a65b-3266e4769be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb1d2a7-0ee0-435e-99a5-7fb05715b865",
        "cursor": {
          "ref": "d77eeb9f-1f95-4fca-8f9f-73b3c8db35bc",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c26d890d-a78c-48bd-a3c9-8182b9814f40"
        },
        "item": {
          "id": "4eb1d2a7-0ee0-435e-99a5-7fb05715b865",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a69506f-bc9c-4e35-b4a0-6e75bcc9a71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75ff109-497d-4730-856e-3a3c10b24fe2",
        "cursor": {
          "ref": "ce1f15cf-02da-4311-97f4-06aa5f0e8d59",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "085c68b3-f58b-40ae-92ea-83d59720b8e2"
        },
        "item": {
          "id": "d75ff109-497d-4730-856e-3a3c10b24fe2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "49c9e604-8308-45f7-a739-d76474043a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3b09ae-7cab-4fe1-bef2-aa0c6a721111",
        "cursor": {
          "ref": "7925bc07-0497-4eb0-914b-e955f5cedbd7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5dd72540-aa6c-4ae8-98b3-dcd5c1625e85"
        },
        "item": {
          "id": "ca3b09ae-7cab-4fe1-bef2-aa0c6a721111",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8610eb6b-70da-48c2-9395-6a1aecde1e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d17b92-9caa-4e40-a0e3-53a1cb057197",
        "cursor": {
          "ref": "582751ac-2ce0-48d8-a8b3-19e106e401ab",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5a58d625-05de-4423-b750-bec820902cc1"
        },
        "item": {
          "id": "58d17b92-9caa-4e40-a0e3-53a1cb057197",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0bf2b6f3-6cb1-4ba6-be19-ef96d83bf1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9f1369-b039-4bab-beb1-aae651969333",
        "cursor": {
          "ref": "13f10117-a393-4caf-b274-3f29c5ed61ca",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "472690f2-c351-40e2-a706-cfb048593994"
        },
        "item": {
          "id": "ab9f1369-b039-4bab-beb1-aae651969333",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f896d38d-f115-4c8b-b984-007826b52b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce872f-c938-4f4b-a746-e6f99f5f653a",
        "cursor": {
          "ref": "75c7e8bf-bc71-4b90-8116-43cd073c4c0d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6266a7c6-6108-4599-8483-d1b3688b016b"
        },
        "item": {
          "id": "75ce872f-c938-4f4b-a746-e6f99f5f653a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d7a8b6d-0d73-482c-85c5-fc4a10ad5805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1b293-5abe-444f-9db5-0fc72407b0cf",
        "cursor": {
          "ref": "30bbb3d4-ee72-41ca-98aa-7ed65e3bdbfe",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9d19c32f-39f2-4c32-a5d4-59a8e4469acf"
        },
        "item": {
          "id": "6cb1b293-5abe-444f-9db5-0fc72407b0cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b71b664-2a04-4951-9232-a08b4686e430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d45728-1925-4355-8d6f-4381351a0a18",
        "cursor": {
          "ref": "44cc3d07-3729-4f3a-88ae-b4da6b60e093",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "76d292a6-bb61-4e5f-84ed-a1ff33e5a1d1"
        },
        "item": {
          "id": "39d45728-1925-4355-8d6f-4381351a0a18",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7cd0927c-21a3-4331-98f5-810748812af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4341f58-0e69-491c-a58f-d5be306c0832",
        "cursor": {
          "ref": "4166c16b-e7f9-45ec-a8de-828881f3e5a6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f23ffcd8-b914-4200-89a5-cd5967c2d426"
        },
        "item": {
          "id": "a4341f58-0e69-491c-a58f-d5be306c0832",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a2ec7fc3-1e25-4ae4-8028-fc515810d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684bb2a2-e41a-40b8-b5f2-87673944a111",
        "cursor": {
          "ref": "b8fe7977-b384-417b-8a5a-75ff4b7354d5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d111e653-98f8-4a87-b710-ba5f7a24d888"
        },
        "item": {
          "id": "684bb2a2-e41a-40b8-b5f2-87673944a111",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d293875-7090-45fa-abf0-6d1347d30434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dedae5-794c-4a59-a602-46e5056aa059",
        "cursor": {
          "ref": "055d8977-73b9-4a1d-92f1-13a70ebc624a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fe291d59-f297-4be5-9279-9c94f09c4fb0"
        },
        "item": {
          "id": "61dedae5-794c-4a59-a602-46e5056aa059",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "12f42ca3-a4dc-480f-8ac8-6df614fa567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edee6ec7-38e4-449e-b86b-51a418aafae3",
        "cursor": {
          "ref": "fa9df042-3871-479a-937d-4ba138ca3649",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0927cf4d-13c1-429d-a976-125a84ed0715"
        },
        "item": {
          "id": "edee6ec7-38e4-449e-b86b-51a418aafae3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d18ac57b-087f-4b94-a6c4-de1df44b26a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e8529-0676-44f7-8368-8bc6aa9e8317",
        "cursor": {
          "ref": "ed48b316-4347-4cf9-b381-5c3ab59d75b6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97d333ef-f0f5-421d-9a07-8304cf889861"
        },
        "item": {
          "id": "b51e8529-0676-44f7-8368-8bc6aa9e8317",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "89198364-4c54-4022-88f7-a0e496cd78b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ef274d-2100-4928-a1da-843512eca2a6",
        "cursor": {
          "ref": "deb3986c-f7d0-4da6-8162-7edc3f63f3e5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "196c421b-bcb6-43c0-bc65-b7f6898d32eb"
        },
        "item": {
          "id": "02ef274d-2100-4928-a1da-843512eca2a6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8ed06a77-53d5-4139-a12b-3e2a16f1120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc03e80-766e-42dc-afd3-eecc7ca76aa6",
        "cursor": {
          "ref": "6b4cc3e6-594a-4cd4-92a6-d043a739a2e6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6debd01-6124-4cff-85ae-8b0d3acc8ee3"
        },
        "item": {
          "id": "cfc03e80-766e-42dc-afd3-eecc7ca76aa6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "453ba334-055d-4898-8fd9-c39ddd148f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1fc76f-d4eb-4fe8-b480-21422736bfd1",
        "cursor": {
          "ref": "937f6d25-e23d-4b4f-98a8-be1da83744a7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e268f000-9ae9-4d06-8473-1727eed0b883"
        },
        "item": {
          "id": "fa1fc76f-d4eb-4fe8-b480-21422736bfd1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d64362f4-a988-4529-ba58-90bfbd58e945",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee5a34d-9771-4fef-ae19-c16b6c2777ba",
        "cursor": {
          "ref": "3745a624-33c1-499f-8e87-eb8618fa0437",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9eeb4964-d74a-4780-a4d2-6c4e522a3f52"
        },
        "item": {
          "id": "1ee5a34d-9771-4fef-ae19-c16b6c2777ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "37cd8c89-12f8-4170-bbfc-315edd5fd4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "5dda0d0b-5c39-4415-8ac6-199d33a04b37",
        "cursor": {
          "ref": "f29a294c-75f3-4da0-a0a6-fc33a98e8359",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "94e651c2-560c-43fc-bb9e-e01b203b2ef2"
        },
        "item": {
          "id": "5dda0d0b-5c39-4415-8ac6-199d33a04b37",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3652c435-abe1-4d7c-9269-ae0796077fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "8520a24e-f21a-450f-9052-b2f40a8ee32c",
        "cursor": {
          "ref": "13907890-ea77-4480-8d3d-5a82e9ccfc73",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53187d05-e094-4510-8c99-66bcd06154f0"
        },
        "item": {
          "id": "8520a24e-f21a-450f-9052-b2f40a8ee32c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "88370d59-8094-4c84-8d01-1c8ad457cc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b882d82c-7404-4f2d-9d01-27929126ce56",
        "cursor": {
          "ref": "66b483fa-5ca9-405b-b47a-8a806c5333fb",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7f1f3af3-8b98-470e-9e7d-62121efd5bc6"
        },
        "item": {
          "id": "b882d82c-7404-4f2d-9d01-27929126ce56",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bb9e9237-0952-44fb-9b8b-2da23e28e4d3",
          "status": "Created",
          "code": 201,
          "responseTime": 4489,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92701655-ae36-441f-bcd9-5e9415b77e11",
        "cursor": {
          "ref": "dd95947e-2653-4dd6-aa87-08d25d41e25a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dd14db0b-b3d9-4203-bd12-e4de45ee3d74"
        },
        "item": {
          "id": "92701655-ae36-441f-bcd9-5e9415b77e11",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e3a662e8-a794-4c32-8558-deeba1a84f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "210f8d9f-b2b3-4ca0-b195-35e804158575",
        "cursor": {
          "ref": "f416685c-61ef-4930-97bd-d0b4bd969375",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "85f86bbe-18b3-4a71-9300-d8ddf024b7eb"
        },
        "item": {
          "id": "210f8d9f-b2b3-4ca0-b195-35e804158575",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "759825fe-7896-4d80-9aee-6800f6e0e2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a02d56a4-0632-4c7c-9b59-89ff263b7fb5",
        "cursor": {
          "ref": "ffae02fd-c7b3-480a-a356-4058066a5dd7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "191cf03d-6ff2-41a1-b884-428782bfaaf0"
        },
        "item": {
          "id": "a02d56a4-0632-4c7c-9b59-89ff263b7fb5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a75c7fd3-cc0e-4516-beee-bca94590f611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd9603-1e2c-4d10-b0af-f44d2a7a46e7",
        "cursor": {
          "ref": "d1cc77c9-cf93-4fe8-aa71-804fa787565c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f1f16e5f-6877-4ba5-96bb-6942f58beec1"
        },
        "item": {
          "id": "87dd9603-1e2c-4d10-b0af-f44d2a7a46e7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0984f94-3292-4c1f-a0cc-794a62c96ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9796f6b-ef13-49f9-af95-2fdaab4efe42",
        "cursor": {
          "ref": "c7092b07-7597-4603-9d67-ee854a7bc08e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4866499d-41bd-4de0-bc07-c5af65aa6529"
        },
        "item": {
          "id": "d9796f6b-ef13-49f9-af95-2fdaab4efe42",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bdf8f73c-8b81-402c-84b8-2ee86d448fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2434ba1-485e-42e0-a0d1-d520e66c7085",
        "cursor": {
          "ref": "bfe1859b-0cd4-488c-b376-30599aa25ac4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "92ed7d54-6c52-484d-92ad-c27596f52fb2"
        },
        "item": {
          "id": "c2434ba1-485e-42e0-a0d1-d520e66c7085",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5117291b-63f5-47c6-bdc3-b4f256e04a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8148fd-9cda-4616-875e-c32e1a94c0db",
        "cursor": {
          "ref": "08e1241c-004f-48a5-abc5-5f2af3cb1c91",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d43cdda-e95a-44ab-9f0f-bc98d758a16f"
        },
        "item": {
          "id": "ea8148fd-9cda-4616-875e-c32e1a94c0db",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a066b3fa-c0e9-4506-9c2a-bd064acd3a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f83b18-04f0-448e-b5f4-4b934478d9c5",
        "cursor": {
          "ref": "caf720f4-7f3c-4da8-90c7-ada9b8791338",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2d003d04-e378-47e0-aab6-744068d83ef5"
        },
        "item": {
          "id": "96f83b18-04f0-448e-b5f4-4b934478d9c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ef2620bf-903e-4672-b7a0-ca73553b859d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc7f94-caf3-4196-91bb-3ca6a712f28e",
        "cursor": {
          "ref": "c442ec0e-1bd6-4f91-a032-4cdbf9232c81",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7043f49b-22e3-4a76-bb1b-e2a4cce07d53"
        },
        "item": {
          "id": "5bfc7f94-caf3-4196-91bb-3ca6a712f28e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "523f8033-f880-4821-b094-2db46e68c454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb293e1-282e-4c5c-ab37-9a3726fddcfd",
        "cursor": {
          "ref": "06962a42-7d1e-404f-bb46-842a60d3dfc2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36c65844-06a9-4d1d-9e6f-9dc289b00416"
        },
        "item": {
          "id": "5bb293e1-282e-4c5c-ab37-9a3726fddcfd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e0315a6-9146-4f90-ad66-d857ef3b3ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da779c-8992-449f-925d-7bc623263266",
        "cursor": {
          "ref": "d6675be4-0cd2-46e7-9251-320b998b6039",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "15135606-7a9b-49d8-906b-bb472d082af2"
        },
        "item": {
          "id": "76da779c-8992-449f-925d-7bc623263266",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1966f800-73f7-4891-b588-0115378bab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15adc5ec-e48b-4cab-8a79-0f08263bfc1a",
        "cursor": {
          "ref": "04125c76-8b5f-481c-9cf6-a64ee9a09615",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b248263b-2e4d-4c53-b4b1-51b122155f27"
        },
        "item": {
          "id": "15adc5ec-e48b-4cab-8a79-0f08263bfc1a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "decc6942-5407-43a1-b265-393d6393bb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e49b0-8008-43c5-a6ce-51578fd2668e",
        "cursor": {
          "ref": "c03218ab-74a8-41a2-a71e-025f17b5dfc0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dc72079a-4620-479b-9579-2f98fb06a3ad"
        },
        "item": {
          "id": "3e7e49b0-8008-43c5-a6ce-51578fd2668e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4729cd98-794e-4c98-8e3c-e9b149d186c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92211b15-4f42-4e57-8cc3-f35d00e6a8aa",
        "cursor": {
          "ref": "5504a1b6-19ef-4f58-a1e9-930da729a746",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dfac7d9c-7f08-45b0-ae11-bfdbef8c0f06"
        },
        "item": {
          "id": "92211b15-4f42-4e57-8cc3-f35d00e6a8aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "99557c6d-38b5-49d2-8f3d-8454b4e14adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc222b7-6688-47bd-9d1a-3cad49063001",
        "cursor": {
          "ref": "6b47ac04-6bbf-44f6-970f-59402317ddde",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0ce78539-1bf9-4d19-8d50-d648bf97df3e"
        },
        "item": {
          "id": "ffc222b7-6688-47bd-9d1a-3cad49063001",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bfe7c2b2-649a-4ab4-abf4-634ca0e36026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e9e1e1-96df-442e-a605-8c3fb971bd46",
        "cursor": {
          "ref": "11693f86-0bb7-472e-b95f-fa99188305a7",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "990784f7-9f75-47e0-9433-a6e60e7a93b9"
        },
        "item": {
          "id": "a5e9e1e1-96df-442e-a605-8c3fb971bd46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc82e325-ce07-4539-867d-65c6bdf6cf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159d4bc-e153-40ca-8936-9f42b8574af7",
        "cursor": {
          "ref": "eec03662-f9bb-4f7d-b12b-13c58d952202",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4f5935e8-76df-4168-a645-bc9cead87545"
        },
        "item": {
          "id": "a159d4bc-e153-40ca-8936-9f42b8574af7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "76a31655-ffea-4212-a968-7dccb46ca481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78291342-bb4a-441a-a898-c0a2dddcc630",
        "cursor": {
          "ref": "6fc3d5d7-be59-4f49-9d7b-36b8881ba7b6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "445467ef-9a08-4223-948b-f9f671f7ca08"
        },
        "item": {
          "id": "78291342-bb4a-441a-a898-c0a2dddcc630",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f775d18e-f750-460a-9486-256b39499750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cbb7c2-471c-4629-9ff3-9d0f2da1d7f0",
        "cursor": {
          "ref": "a7ae959c-58ae-4885-9ef6-32700483d849",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cfa77e20-fbd4-4adc-af33-f0f392c1c364"
        },
        "item": {
          "id": "64cbb7c2-471c-4629-9ff3-9d0f2da1d7f0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4bfa4e5c-77a6-4d18-a237-d576e3a7a54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb360e45-b347-431c-b268-e7da537e8b20",
        "cursor": {
          "ref": "d02d9319-0c35-4b43-aef2-d77168e6a8a6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bdfccc63-0ffc-4209-a395-d4c3856d17c8"
        },
        "item": {
          "id": "bb360e45-b347-431c-b268-e7da537e8b20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "81398d93-8764-4970-9dcd-6426a41e8453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d86d76-d26c-4215-a2e3-e24d573f6d63",
        "cursor": {
          "ref": "71c131cd-8163-4687-99ce-d457b949cff8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0900b678-87c4-43b7-a38f-31e81b5cf8ae"
        },
        "item": {
          "id": "90d86d76-d26c-4215-a2e3-e24d573f6d63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a502e628-bb7b-455f-88e8-8392c374af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5628cab-7367-40a0-94c3-c94eed6843a2",
        "cursor": {
          "ref": "660f576d-bc37-46b4-accb-02ef51b5a31b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "66ead67a-b684-49f6-a84f-721da26d65b2"
        },
        "item": {
          "id": "b5628cab-7367-40a0-94c3-c94eed6843a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1aab9926-0924-4bc5-8dec-c6e9336f347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d401b-dc36-4adf-93c6-1190263ac014",
        "cursor": {
          "ref": "d39c854b-4612-4a41-9c08-590de6418a76",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6ae44ec7-7827-4942-a35f-8fd648eff304"
        },
        "item": {
          "id": "6e9d401b-dc36-4adf-93c6-1190263ac014",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27f84cc5-5596-4d23-9d1f-e36ad21740c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7111572-a6e7-4a1a-ab2f-0261ed85afc6",
        "cursor": {
          "ref": "5a73846c-23e2-4b97-9dd6-b62879c01824",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "603c209e-0131-4ec3-ae45-07635bf37c05"
        },
        "item": {
          "id": "d7111572-a6e7-4a1a-ab2f-0261ed85afc6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5e43097-f09d-4831-91b4-c18285b3ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36e3167-d23e-4d67-bb15-e1c0014f08c7",
        "cursor": {
          "ref": "2dd5cd34-3915-47f9-a255-354883b33c7a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "41d73545-b8e8-4a42-bbdf-fb355973fc68"
        },
        "item": {
          "id": "a36e3167-d23e-4d67-bb15-e1c0014f08c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88ab0f27-6219-44c9-9bde-1210ebbe1fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d525f9e-e81a-4b19-8981-33b6986f747c",
        "cursor": {
          "ref": "364af417-3705-46cb-aad6-04d1ff0a5595",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "067c89ed-8e8c-40b0-9811-797ad6ba7ee7"
        },
        "item": {
          "id": "8d525f9e-e81a-4b19-8981-33b6986f747c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf26a04b-1c59-4a19-8d18-c130e268e0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126fa848-38a5-4a2a-85b6-64bcee7f82a8",
        "cursor": {
          "ref": "01f4e74e-6162-408a-a3d3-8329c0b2046b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6ad26593-3a02-4dda-a514-6e4c8497aef0"
        },
        "item": {
          "id": "126fa848-38a5-4a2a-85b6-64bcee7f82a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58d07a1e-975e-461f-ae50-7da6b3060764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0162f15d-e084-4f54-8a24-e80456bc331a",
        "cursor": {
          "ref": "562fd91d-f73d-48c4-91bd-6650eebf8228",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "35e2d6f7-6fd8-464d-bd7d-a0ecd82eca76"
        },
        "item": {
          "id": "0162f15d-e084-4f54-8a24-e80456bc331a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6218053-6a62-48ae-9430-0070ca412b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744b8998-c598-463b-b4de-fc31a0aca5d8",
        "cursor": {
          "ref": "a99c7392-3c2f-494d-af71-6caeb00d7efa",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c87c68f7-e73e-4425-93a5-a73336065028"
        },
        "item": {
          "id": "744b8998-c598-463b-b4de-fc31a0aca5d8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c9f61d1-41f6-45c7-8724-cb8739fd47c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edccad61-9b86-46b2-a58f-350f6d9b4e13",
        "cursor": {
          "ref": "33b8cfda-71cb-497f-bef5-2bdbc82b9722",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9b93219c-11df-4db9-bfb8-def1253cc173"
        },
        "item": {
          "id": "edccad61-9b86-46b2-a58f-350f6d9b4e13",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f56fba5-4a25-46ee-bc7d-3e86a19f1187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f36bbe-0d71-40d3-9285-8f2e9baae6e5",
        "cursor": {
          "ref": "1d6da5a9-fc2d-4da4-944d-1cdad6346230",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bd2527cc-1a9a-468c-bbd3-de69131367f0"
        },
        "item": {
          "id": "73f36bbe-0d71-40d3-9285-8f2e9baae6e5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e9776dec-5cfc-449b-969e-5ec62d0d4a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b6eb5-850e-4015-8a2a-6615fa690dcb",
        "cursor": {
          "ref": "3a10e35c-93c0-4687-ba4d-35fedd897867",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c3efb827-64dd-4f12-a8a9-f0aed67bd157"
        },
        "item": {
          "id": "436b6eb5-850e-4015-8a2a-6615fa690dcb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ef709e1-1c7c-41ca-881b-d82448e23681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a86e3eb-02cb-4747-8a94-cb0830f07e40",
        "cursor": {
          "ref": "64af71cb-d01e-4b92-a60b-ccb879a6e4e4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "07577bca-a706-425f-bf9d-c7f801bea2af"
        },
        "item": {
          "id": "8a86e3eb-02cb-4747-8a94-cb0830f07e40",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ba4533b9-b26f-42e0-9206-ed167e151a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d82ab-2021-4013-a010-cb769b161a87",
        "cursor": {
          "ref": "e063c1fd-00b3-4559-bb77-0192585be8c7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1c1cf56a-e184-4373-b4f5-8ded83202a9e"
        },
        "item": {
          "id": "088d82ab-2021-4013-a010-cb769b161a87",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4dbf8912-b4e1-42e0-8965-9a0640fb7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9ad1ef-fb63-46f2-8c6d-53bd9c49b03c",
        "cursor": {
          "ref": "36b54064-3e3f-42ca-8335-14d7fd6583c6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7eca394-0458-4371-8283-f4d76aa6ef6f"
        },
        "item": {
          "id": "dc9ad1ef-fb63-46f2-8c6d-53bd9c49b03c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49327192-3c9b-4fda-a9c6-04526af0c84c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db60bba-9770-433f-ab0c-59f28fda4867",
        "cursor": {
          "ref": "6a3599f4-4538-4054-bf1e-aee6b73bf6f0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54170c7a-9aa2-4ef6-8565-9743488bbf5a"
        },
        "item": {
          "id": "5db60bba-9770-433f-ab0c-59f28fda4867",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0cc3307c-26f2-4e4d-bc60-26501f4dab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f9a4b6-5bd8-45ae-beac-e5527a19cdf4",
        "cursor": {
          "ref": "839c2a0b-bb83-44f9-835c-f825e11e85db",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b59589ac-c717-4f4d-8e2b-28a6c142d066"
        },
        "item": {
          "id": "29f9a4b6-5bd8-45ae-beac-e5527a19cdf4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f479586-d927-44b4-b3ba-e6484c741ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b850f-31e1-488a-ae79-43f7c626e4f3",
        "cursor": {
          "ref": "e3544928-57e6-4a65-9bd9-eb6ee8395719",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5031e2df-37e4-46df-af72-e0d9ef3260b7"
        },
        "item": {
          "id": "257b850f-31e1-488a-ae79-43f7c626e4f3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a732ebd8-7d80-4e55-8116-8a3a2dd8cfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143f9d7a-e812-4fa4-ac87-a2c5ca735721",
        "cursor": {
          "ref": "48361023-bd81-4c01-83a1-876149e7aaf0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "49f0caed-6c22-4d4c-8993-802f91a5cb32"
        },
        "item": {
          "id": "143f9d7a-e812-4fa4-ac87-a2c5ca735721",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "165b6e5f-c596-4883-a3cd-7906dd75c207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a15e7d-a304-4fc5-9387-017c336f5b4a",
        "cursor": {
          "ref": "1be17f81-4742-4213-9a9c-a95dd2d48c23",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03056fc0-64f0-4042-8f4e-550e5c6184ec"
        },
        "item": {
          "id": "22a15e7d-a304-4fc5-9387-017c336f5b4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "69a4ef99-0c1c-44ac-8dd2-3abafc9fb40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039c1fc9-313b-4f89-9f03-67c6b3a34a94",
        "cursor": {
          "ref": "5e005f7c-1b39-48a1-9e24-e7083b37b4ee",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "099b6795-8925-4042-855f-e80f8a61ff14"
        },
        "item": {
          "id": "039c1fc9-313b-4f89-9f03-67c6b3a34a94",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bd860eda-b127-4dee-b437-9a8e193aa5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7debbe0e-a16b-4d6e-9886-136949447f17",
        "cursor": {
          "ref": "59de2b09-fd4a-4080-96c3-6f39d46da32c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0f54cf93-7f9d-4ae0-99bf-e03541b38dda"
        },
        "item": {
          "id": "7debbe0e-a16b-4d6e-9886-136949447f17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "28723b84-606a-4fbb-aedc-d11c6a648449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d66e90-0cc2-48dd-8e31-02d9b2f1e992",
        "cursor": {
          "ref": "47362a63-a1ef-44bd-9661-68c3ab9ecda5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "54459ee6-43f3-45d2-8393-9572c4c9da71"
        },
        "item": {
          "id": "83d66e90-0cc2-48dd-8e31-02d9b2f1e992",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cdad2583-b828-4c23-943d-99154219631d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52039c4-1205-48eb-a51f-aeea40c1c2c8",
        "cursor": {
          "ref": "7a996da4-e489-4738-a672-af116c80148d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "014148bd-3509-405f-bcab-82685e13d7a3"
        },
        "item": {
          "id": "e52039c4-1205-48eb-a51f-aeea40c1c2c8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2703c1cb-0c3b-489d-86e8-31f5859d0e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29180839-6599-4e58-b534-4194b655317b",
        "cursor": {
          "ref": "4e984804-c488-4faa-bcb5-bee0d73cc047",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0d455540-2430-49d7-9c3c-3f565aedd0bf"
        },
        "item": {
          "id": "29180839-6599-4e58-b534-4194b655317b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd666126-179f-47c4-9755-a66687198919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26b028-00f5-44a3-9341-1d2d0857ef2a",
        "cursor": {
          "ref": "aa606ba7-d0d1-4868-85db-bf367cb980f1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8ecbcc46-7704-44ce-a872-e9fd4e07b14f"
        },
        "item": {
          "id": "7e26b028-00f5-44a3-9341-1d2d0857ef2a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "28b2d84d-3601-410c-95c8-3a89397af514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f636ff-99d7-4dff-878c-9b92446f8cff",
        "cursor": {
          "ref": "4148e50c-a329-4c27-9b87-b69a7381a61b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a1061377-bb2c-4f60-a07c-84870df5d068"
        },
        "item": {
          "id": "48f636ff-99d7-4dff-878c-9b92446f8cff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d198ab6-2075-468a-aed8-a22b6e9d94f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1328392-e9a4-4b8d-b211-32cc2a6a0beb",
        "cursor": {
          "ref": "ab1861da-d5bf-4b2d-94ac-3dfbea6c67fc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "96ac2563-3e3f-403c-8dfc-503b83dc5c94"
        },
        "item": {
          "id": "b1328392-e9a4-4b8d-b211-32cc2a6a0beb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "449cde04-5eb3-49e6-b4aa-58626db142c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb6f31d-e6de-478f-850f-7e5067865528",
        "cursor": {
          "ref": "9a71bd7d-c22f-44a7-a344-d9bfa2d680bc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d0d33497-bc70-479e-a7d3-71da6f37b172"
        },
        "item": {
          "id": "0bb6f31d-e6de-478f-850f-7e5067865528",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c378f8bf-2bed-428f-b688-03784def2206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ffafa7-890b-4bf8-87af-a3c5ed0986b2",
        "cursor": {
          "ref": "f22d2445-b4e2-48db-808f-bf59231ae0f3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "431f2e7b-a4c1-4304-b4f8-8698a12e689e"
        },
        "item": {
          "id": "27ffafa7-890b-4bf8-87af-a3c5ed0986b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8a2c682a-861e-44d9-8914-75f17531a698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8085d8-44b0-4f1f-8276-540ee3f6343e",
        "cursor": {
          "ref": "020ab800-3dfc-473d-b8e7-ae95c8dee628",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7946a84b-1232-4b56-b50c-bb349edcef78"
        },
        "item": {
          "id": "5f8085d8-44b0-4f1f-8276-540ee3f6343e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0c8a5525-8f04-4823-a8e0-db87329b80e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167c4a88-3965-4db3-9509-d29f0bd4d8e5",
        "cursor": {
          "ref": "9143ce92-e77d-47ef-9647-431cf22ddeeb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0571c4fa-0232-4b27-a635-4a0591f74f44"
        },
        "item": {
          "id": "167c4a88-3965-4db3-9509-d29f0bd4d8e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7f985e7a-ccaf-4b77-8831-4f414c7c8317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffc7025-6351-4cc4-89cf-92d571316574",
        "cursor": {
          "ref": "8af72322-3331-4874-a38f-d8bdcccd57d9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a1307e21-2fc8-41b8-9d35-7e2d1d17e3fa"
        },
        "item": {
          "id": "cffc7025-6351-4cc4-89cf-92d571316574",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cba06ffe-82a0-4288-a986-0a28c46551ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52c210c-6223-4763-bfc7-df8f137b0e11",
        "cursor": {
          "ref": "18baa41e-7514-4f63-9edb-84d8a53f1a53",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16b4982e-91bf-48e2-b326-fc578b6d03c6"
        },
        "item": {
          "id": "f52c210c-6223-4763-bfc7-df8f137b0e11",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a2a8536c-9662-4e64-8bde-3b4bc1571686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a95e8-5d38-43aa-b893-306e7f55cdc3",
        "cursor": {
          "ref": "733e2aad-f94e-4878-89ec-4b8206bfe3fa",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e2e3079b-d18f-46ed-9273-c0052387a63b"
        },
        "item": {
          "id": "f63a95e8-5d38-43aa-b893-306e7f55cdc3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f25366e-1fc3-418e-af2d-3f72174e6184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91dbbbb-1f43-4a98-8b30-ba56e8c4cd4c",
        "cursor": {
          "ref": "f023d71e-3011-4c8a-88df-643929015ff6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d74b6013-3df1-424a-a5ed-0848a1250129"
        },
        "item": {
          "id": "d91dbbbb-1f43-4a98-8b30-ba56e8c4cd4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0eedb19-4354-462f-863f-be4856138543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ee1ee-dc48-44c8-84f1-7ea433286f72",
        "cursor": {
          "ref": "80ba5801-a65b-4d3a-bf83-1cc753bc19c0",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f3121bd9-680a-46f3-8a16-ea104bd2fb97"
        },
        "item": {
          "id": "f25ee1ee-dc48-44c8-84f1-7ea433286f72",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cf86ec4-dc97-467f-97a3-fc65e6ca7408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d88b05-9202-43d8-8fde-ee6903b81805",
        "cursor": {
          "ref": "9f6a1caa-58ca-4273-9671-f33eadad2dc6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "842cc448-36ea-4b91-8471-30b39c81e70f"
        },
        "item": {
          "id": "e1d88b05-9202-43d8-8fde-ee6903b81805",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cc4c884-fe1f-42ee-8b51-6aaf50d8aa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d9bf59-47c2-46de-9e86-cf3d279da86b",
        "cursor": {
          "ref": "3d244e26-cf92-45d3-9e4d-9ffa81d778e5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "43c45396-4501-4d14-a91a-262d32227b28"
        },
        "item": {
          "id": "a9d9bf59-47c2-46de-9e86-cf3d279da86b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ced19bfe-bb65-4786-a152-15310a436d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa820504-fb58-4f02-9a7e-7cfdb29e2025",
        "cursor": {
          "ref": "6be73637-2660-46de-8693-8351cf2ebcf3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "46ede5c5-09c4-41d8-891d-6196fbba0152"
        },
        "item": {
          "id": "fa820504-fb58-4f02-9a7e-7cfdb29e2025",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "82ca6095-3a42-4a3b-841d-6a5492d1e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252c834-15c2-41d3-bfd7-7ce50c5a1381",
        "cursor": {
          "ref": "79c97db9-3131-44df-9bf9-f51f0788e0b0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "269d82c5-449a-4a4c-827d-da67ab8b3d54"
        },
        "item": {
          "id": "a252c834-15c2-41d3-bfd7-7ce50c5a1381",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a61f5baf-f158-4c7a-b24d-85e30c4d17db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdc9174-22b7-4685-9a80-b24bff0efdfa",
        "cursor": {
          "ref": "7287d707-4f19-4030-b90f-99aa2e8ddb89",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f4c81055-cb23-41c8-aa01-5cd5806e40cd"
        },
        "item": {
          "id": "ffdc9174-22b7-4685-9a80-b24bff0efdfa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "95897a5c-3121-47d5-ae3e-508781b85046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d296a3b-1a41-4f3f-841e-df39ebfdfe6f",
        "cursor": {
          "ref": "b5f84ad6-2ccd-4d78-bb1b-f2e40f4361b4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "da62d940-667b-4cf5-9bbb-6b4b034afe11"
        },
        "item": {
          "id": "5d296a3b-1a41-4f3f-841e-df39ebfdfe6f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dce47851-500b-45b9-b65a-6dce9761e5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6911c3e-44c2-402c-bbf1-bb60801b2fd6",
        "cursor": {
          "ref": "5d0e018f-8c29-4e99-8fae-6e1b5b790993",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef55b87a-f69b-4dc2-a149-e152986b4176"
        },
        "item": {
          "id": "a6911c3e-44c2-402c-bbf1-bb60801b2fd6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a674733-232c-4e46-8504-2171ad2a65f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc4ba16-c116-41e2-8d39-e2258ddcdd98",
        "cursor": {
          "ref": "f0accdee-84cb-4d45-a012-5627a9484505",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e4cb1070-c3dd-4c10-9ca6-66af5986fc40"
        },
        "item": {
          "id": "5cc4ba16-c116-41e2-8d39-e2258ddcdd98",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5b73b50f-f2bf-4a82-8bd5-6d59663897de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4c74f-e5b1-414b-bd99-39565aa5d0e2",
        "cursor": {
          "ref": "4b4c6712-b6b7-4a4e-ba07-19b0a1329970",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "88b4635c-d2f1-49f3-9803-6fd34b7b3974"
        },
        "item": {
          "id": "a5f4c74f-e5b1-414b-bd99-39565aa5d0e2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0431e616-96df-4df2-a972-1a858caab85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5b62d8-6362-4f43-a7a5-a8cd410d4e13",
        "cursor": {
          "ref": "57107b42-6d6c-40fb-bad8-a59254464ff8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c96ee5a4-8d3a-451f-b750-eb2496f0a7ab"
        },
        "item": {
          "id": "ad5b62d8-6362-4f43-a7a5-a8cd410d4e13",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "38c7ef11-ecaa-4373-b4f2-abb9cc7bee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb2cd6e-c57b-401c-b809-d6068da76f16",
        "cursor": {
          "ref": "68bae947-1ca8-4fca-9dbb-8d436e53a30d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "30660044-bdfa-41be-b85e-299e09ede9fd"
        },
        "item": {
          "id": "1eb2cd6e-c57b-401c-b809-d6068da76f16",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2ac10595-2d08-46a9-b7b0-3e3ba7ce402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc8ddf8-3344-4fe5-b306-217f2febdf3f",
        "cursor": {
          "ref": "54d045b6-7446-404d-aeb4-8f4bcc04dbd7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "015da868-5c9b-4764-a6ca-4432bad46921"
        },
        "item": {
          "id": "fcc8ddf8-3344-4fe5-b306-217f2febdf3f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a23648b-d9de-44c0-8519-2bc2161661b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983fd07-3b0f-46cc-badd-4e440e97ea19",
        "cursor": {
          "ref": "a93a3b49-7c04-4ddd-b5ff-28acdc9c1232",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4eb1fcf4-9b45-4d5d-b6fb-6e1649d27a6c"
        },
        "item": {
          "id": "4983fd07-3b0f-46cc-badd-4e440e97ea19",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "10e2f96c-8841-4cbe-b198-764d5ed648fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ef37a6-1fd9-43cf-9fc8-59cde44380a0",
        "cursor": {
          "ref": "67f25409-4f90-4dc2-a421-3bc72afdb175",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8970121a-9273-4ab1-9923-5ac24b203ac1"
        },
        "item": {
          "id": "c4ef37a6-1fd9-43cf-9fc8-59cde44380a0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e92914ce-f428-4edf-911c-ad1af7084d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0ab60-aab2-4c0c-bdc3-ceff0871dae4",
        "cursor": {
          "ref": "b7d333a2-25bd-42af-a798-bf1109cb31ca",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "521bcb71-7c58-4883-965d-06a369fad549"
        },
        "item": {
          "id": "87d0ab60-aab2-4c0c-bdc3-ceff0871dae4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "39e2407a-8030-4899-92e3-30e94b0986cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a779ac8-6cfd-4311-90cc-8af31f204913",
        "cursor": {
          "ref": "e1c51537-787d-4bca-a978-4403b78ef6d0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15ad7ae0-d253-46c4-b66c-75fbbc782367"
        },
        "item": {
          "id": "1a779ac8-6cfd-4311-90cc-8af31f204913",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72648064-574a-42f2-acdb-1b409e521ef4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16353af8-c343-422b-8207-e696af672cd6",
        "cursor": {
          "ref": "e4b6f004-203d-4a9b-acb3-988dd60d835d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c95eeb8-aebd-4bcf-9dd7-4e3e2d51202b"
        },
        "item": {
          "id": "16353af8-c343-422b-8207-e696af672cd6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7eb418fe-1849-407e-bd55-bacc19ac46f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b04487-81e0-47dd-8803-d0dec6c21f4f",
        "cursor": {
          "ref": "07e3170a-20b0-4a3e-9243-3f2100b7f692",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cedd1bc5-8ab8-4d27-9c44-43b2c0c31995"
        },
        "item": {
          "id": "10b04487-81e0-47dd-8803-d0dec6c21f4f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a4d3e4e4-7ad4-4799-bd7d-0c41041066d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afaf6ae-39eb-4fc3-b17c-7e37028efea4",
        "cursor": {
          "ref": "a5a07df7-040e-4ef6-b0a2-0bd522531046",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bbfcabcb-d1b7-4628-942d-dd2fa09ec86b"
        },
        "item": {
          "id": "2afaf6ae-39eb-4fc3-b17c-7e37028efea4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f0f68c83-258a-4bc7-87e5-2f192a4b0be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d96ddca-329c-45d4-b08a-86c3cc078f65",
        "cursor": {
          "ref": "921688a5-7b13-4ba3-b714-ea271975bc8e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33e1f07b-aa0a-4f29-bbe5-b613591c97bf"
        },
        "item": {
          "id": "3d96ddca-329c-45d4-b08a-86c3cc078f65",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc3d4f15-7195-455d-a173-468debb6c8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888ebf8e-e99c-4b49-86ed-69a64f905d61",
        "cursor": {
          "ref": "98e2fe3b-faf0-427f-948e-49f4a85007db",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6356a93a-94d7-4f57-b08c-d69e287f52ee"
        },
        "item": {
          "id": "888ebf8e-e99c-4b49-86ed-69a64f905d61",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "10bd14b5-7ea2-4e42-9ee0-124c882a2a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bb9b11-2c36-42d2-88c1-8d3412f5fc7f",
        "cursor": {
          "ref": "64b7e939-cad3-4ef8-8129-02d7914e9038",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8836ea2e-acb8-462a-929a-2ba4deadf88e"
        },
        "item": {
          "id": "46bb9b11-2c36-42d2-88c1-8d3412f5fc7f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ece081a7-d655-40d2-a3c6-401f0a39e4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f64125-2afe-4c30-a3ed-357aff1f3597",
        "cursor": {
          "ref": "6001f781-ecea-42a7-901d-4cb3858b5494",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "15deaec7-392a-437d-b189-fd94b0650081"
        },
        "item": {
          "id": "b6f64125-2afe-4c30-a3ed-357aff1f3597",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "188ad2e2-8208-4616-9117-b39d73ba5576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0ba28e-e384-4fb8-bdf0-b7f7a95cf3cb",
        "cursor": {
          "ref": "72b4b22a-abb5-41f0-90da-dc2f4ad1e93d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b4e984f5-f4ee-463d-86dc-e3c905ae4b6f"
        },
        "item": {
          "id": "5c0ba28e-e384-4fb8-bdf0-b7f7a95cf3cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "04b1c300-8a3a-41e8-9748-9f8ba415b703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f73930b-d7fb-4b6b-a09c-b79b04a52e5e",
        "cursor": {
          "ref": "3b0f6ddd-a728-4215-831f-918301a07525",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c420a767-82fd-4ef1-ae7b-cd51d11ba696"
        },
        "item": {
          "id": "8f73930b-d7fb-4b6b-a09c-b79b04a52e5e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "26a559ce-8345-463a-9640-18a9697c1f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad2cedf-92c3-4e72-ad05-0141c504a2ad",
        "cursor": {
          "ref": "5d2e362e-ff91-4201-858c-3ec39705a94d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9620606a-7f75-42bd-a858-8713a3e319a9"
        },
        "item": {
          "id": "0ad2cedf-92c3-4e72-ad05-0141c504a2ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd13d91a-d7e1-4519-8622-1f7fb8e1bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2bba6c-cd37-4d07-be69-dbcb3648c3e4",
        "cursor": {
          "ref": "ca351f62-bd12-42cd-a9f1-7c53aaf64f2e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c320a40-bad1-45db-97a4-454ad7f84962"
        },
        "item": {
          "id": "0c2bba6c-cd37-4d07-be69-dbcb3648c3e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2a1469bf-40fd-433e-acd8-948db089806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695764db-7c6c-4c77-af7b-41102cb7323e",
        "cursor": {
          "ref": "db625a48-0c8c-4f65-845a-587887a3f3ca",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a62c0036-9640-4772-b2e8-954ca4eeac62"
        },
        "item": {
          "id": "695764db-7c6c-4c77-af7b-41102cb7323e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "400738c9-491c-451d-963a-98f534612fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021c13cb-7298-4b10-9913-dee9ee0d790a",
        "cursor": {
          "ref": "45b0ad47-a28e-4193-9d00-1716b3462e99",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3d630d03-1f21-4bb2-9471-ce448327cb44"
        },
        "item": {
          "id": "021c13cb-7298-4b10-9913-dee9ee0d790a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b2d7a3b6-2031-43bc-970b-54c1e74896b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00678aa0-482f-4f9e-994e-46f83efd909f",
        "cursor": {
          "ref": "5a9c9a91-9196-4c21-ab9c-d4f4092b763b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2213aaf5-c01b-4ae5-9478-2ce3841ab76a"
        },
        "item": {
          "id": "00678aa0-482f-4f9e-994e-46f83efd909f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f29e1f5-a645-4c16-99e7-0b90f0039e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304d9ef7-97ab-4d7b-924a-06ce698246f2",
        "cursor": {
          "ref": "d0cebf7f-a2db-4055-ba84-5cb2a1a145d5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aac6a812-328f-4c83-94e0-b2179755be1e"
        },
        "item": {
          "id": "304d9ef7-97ab-4d7b-924a-06ce698246f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "12c7bad0-adee-473d-b8fa-94075ccfc5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36947972-8c9f-427c-97d6-181484ae9126",
        "cursor": {
          "ref": "c5784b74-d34a-429a-b3ed-ccec43d7f542",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6488fe67-996e-4444-b644-36e8cfbe93e4"
        },
        "item": {
          "id": "36947972-8c9f-427c-97d6-181484ae9126",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e32ca688-6cf5-48fb-a1a1-8d4a93d3d270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3399bc-3742-42a8-b294-a19f0af1df71",
        "cursor": {
          "ref": "85d0d7b4-09a0-4e34-91de-3adce96a71c3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1904ff42-d7b5-4adb-a825-5a29eb90af51"
        },
        "item": {
          "id": "2c3399bc-3742-42a8-b294-a19f0af1df71",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0115984a-2796-428b-a96e-8f9009e77760",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "75366c72-8324-4bfc-8329-abe9f65b13d4",
        "cursor": {
          "ref": "70d2aca9-e39e-4ca8-be0a-7b7249c11829",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c5a68bf-4e7d-4da5-a3df-667f72539849"
        },
        "item": {
          "id": "75366c72-8324-4bfc-8329-abe9f65b13d4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e72ca5c9-67ab-42fe-af43-9e865e58bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8185972-fd9d-4fc4-930a-43bccf1f2889",
        "cursor": {
          "ref": "c95d403b-bd39-4904-b9e2-9970ee602970",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d6fba40-c90f-459f-a53e-4e08fa9bdffe"
        },
        "item": {
          "id": "a8185972-fd9d-4fc4-930a-43bccf1f2889",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cec32e41-b6c8-4208-9222-21d9dec853c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d75a91-e6c6-458a-8293-bff0d4de239d",
        "cursor": {
          "ref": "dccfb3ab-b962-4450-a87a-a1988fad4443",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "86ef6759-0a72-47a5-b602-49ca2b12091a"
        },
        "item": {
          "id": "72d75a91-e6c6-458a-8293-bff0d4de239d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "be7b910a-35b8-4fda-be58-c69216dad65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a99402d-5c3d-4eb2-bdab-0d6213d09440",
        "cursor": {
          "ref": "a40f580c-9ac6-4e9d-8f3d-005bd5cd1404",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7892567-5728-473d-b095-8b5e9a46b210"
        },
        "item": {
          "id": "3a99402d-5c3d-4eb2-bdab-0d6213d09440",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b6897457-eb08-4c06-a9fb-61289f972fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdce990-900c-4e88-b457-65e6deb739c2",
        "cursor": {
          "ref": "26852e3c-f9f2-485d-a2d2-5dd0620ec074",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c3cacc7f-6874-488c-93d7-ce9e7918fd66"
        },
        "item": {
          "id": "ecdce990-900c-4e88-b457-65e6deb739c2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4af9162b-6399-4613-863a-0691714f10fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f2be1-3d24-492f-9b70-b73682854b93",
        "cursor": {
          "ref": "8aac60ed-7f39-42e8-b64b-9594b67e57bc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a476c240-f601-4ccd-96ff-1838155075c2"
        },
        "item": {
          "id": "242f2be1-3d24-492f-9b70-b73682854b93",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "87a313fa-7778-4792-bc4d-8f3e2067f9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7b8597-43ec-49fb-9fd8-c33fc598b7a4",
        "cursor": {
          "ref": "7f027aaa-0259-44b1-b08e-4abcf45f16ae",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7567c5ff-32d7-4315-ad8b-8873ed56de92"
        },
        "item": {
          "id": "8f7b8597-43ec-49fb-9fd8-c33fc598b7a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6be9d5f7-2ea3-442b-9ca5-6f2d2a7ba139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c565d-2245-4f35-9a48-a2db82829dcc",
        "cursor": {
          "ref": "e3c3bda6-4289-4d87-8911-97ebd3036cdf",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7a607ff1-2325-42ff-88a4-dd18f8ebab9d"
        },
        "item": {
          "id": "670c565d-2245-4f35-9a48-a2db82829dcc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "78a328d5-6b5c-4de8-b2a9-cfb9fb359283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cb2540-18c1-4b99-8e8e-42a5e0dac6c7",
        "cursor": {
          "ref": "befebc73-4083-44f5-851d-8a21ce840658",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c6f52e95-53d6-4538-a0a4-b68dab401cb4"
        },
        "item": {
          "id": "f4cb2540-18c1-4b99-8e8e-42a5e0dac6c7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "60a909c5-a43d-4795-8999-54a929739051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4758f-f565-4f96-af26-cc53fe094579",
        "cursor": {
          "ref": "9aeefe0f-9b88-4219-aca6-0215ce7ef4f9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2795c9d7-5c4a-43d3-b034-82eb8263e254"
        },
        "item": {
          "id": "0aa4758f-f565-4f96-af26-cc53fe094579",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ca13d1b-b6a8-47ba-9bfd-d3fa54a1b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed4a177-f1fc-4cdc-80b0-93217bf4636c",
        "cursor": {
          "ref": "732d0630-e903-4d8c-9192-a95e14f342b1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "60c39c47-c561-491d-bdc3-083d728d8532"
        },
        "item": {
          "id": "3ed4a177-f1fc-4cdc-80b0-93217bf4636c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4cc70c43-407a-45cc-ae85-59dec3a596a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2623d-1c8c-493d-b46b-0c128f3a0727",
        "cursor": {
          "ref": "9f47126e-d759-4191-899f-22fcfc345d53",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1c8238bf-97cf-40fd-92bc-5b0db363de20"
        },
        "item": {
          "id": "42e2623d-1c8c-493d-b46b-0c128f3a0727",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1704eb48-2bc8-48c4-994d-2d1d2fc73788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d8bb6-b68a-470a-859c-894de8bbf78f",
        "cursor": {
          "ref": "d012c8a9-a0ea-4c3f-9fa0-5ca4fa28f18e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56656835-2c83-44f5-b5a1-b3a7ec26ebe4"
        },
        "item": {
          "id": "c55d8bb6-b68a-470a-859c-894de8bbf78f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c736c7d-44da-4dd7-840d-6ee90b78b9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede06971-a5aa-43d7-95c7-196cb9631839",
        "cursor": {
          "ref": "ab26b747-1c22-4cf5-8a4e-07ccde706db2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e1b788c7-d59d-4806-b0cb-db2462f41787"
        },
        "item": {
          "id": "ede06971-a5aa-43d7-95c7-196cb9631839",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "87bb26a6-1d2b-4df4-b9e9-228e915996c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83777827-e2c2-4139-a231-1d59f19ef054",
        "cursor": {
          "ref": "5fe30b84-0d6c-4c79-b5bd-d8655f54a9e7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3afcdfe3-7be1-46ba-b7fa-70b124788123"
        },
        "item": {
          "id": "83777827-e2c2-4139-a231-1d59f19ef054",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "feec98f5-e2f6-467b-b8f1-c9808d51d2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f256ae-dc40-4cda-a4c2-3d658943a905",
        "cursor": {
          "ref": "30be7000-1970-4e2a-bfa5-ccd03740e88c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "26cd7ee7-21c7-4ab3-bb6e-174bc63e8871"
        },
        "item": {
          "id": "a5f256ae-dc40-4cda-a4c2-3d658943a905",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "37268018-70f1-4915-8e19-ee33c1e6aa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d94548-83b2-440d-baf7-793d17672136",
        "cursor": {
          "ref": "1b5054bc-3361-41c4-b8b4-36873990f015",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "82aa32f1-ecb2-4c11-a421-fc6b424d1198"
        },
        "item": {
          "id": "82d94548-83b2-440d-baf7-793d17672136",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "de68078b-985b-4677-9a75-41a2f34d285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74933b3a-4129-42ff-a5ad-66c273f72366",
        "cursor": {
          "ref": "491a51c6-61df-4288-9882-b2341bee9405",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1915fd0c-2396-481f-9068-4a26a1755fd1"
        },
        "item": {
          "id": "74933b3a-4129-42ff-a5ad-66c273f72366",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec550536-01ba-4f3b-933a-7cc7c2885340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7a6696-c5c5-47a2-9f9e-444ebfd17ec0",
        "cursor": {
          "ref": "d9bcbb77-f549-46fd-ad39-3a51cc00f6c3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "47a48f2a-0847-44da-9680-b2943748c942"
        },
        "item": {
          "id": "1d7a6696-c5c5-47a2-9f9e-444ebfd17ec0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "920a3fef-f121-46e1-bf23-7192d08816af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdf64e3-a2b0-43e0-920c-ea0d50b335c5",
        "cursor": {
          "ref": "86cc7bf8-52a7-42ea-811b-a15716fb8460",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "962d4fa0-76b2-4214-aaad-0608fcc78826"
        },
        "item": {
          "id": "3fdf64e3-a2b0-43e0-920c-ea0d50b335c5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "24572aee-1431-4955-b54f-58476b94a790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ead399-c36c-4d2a-a405-40afa0addf24",
        "cursor": {
          "ref": "fa94a21e-f5b7-4908-9dda-e1b604f149e6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cc1b9c8a-6f3e-469c-977d-b7bb10ad93fb"
        },
        "item": {
          "id": "37ead399-c36c-4d2a-a405-40afa0addf24",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e02f0cd-19b5-4740-907c-851902c72468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795cf236-9894-4edd-8c56-eb4175715dfd",
        "cursor": {
          "ref": "5ca787b0-9ef2-4cf2-8fdd-4581a763b07f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a1c54a04-8fd5-4bc4-8372-e8dda1974585"
        },
        "item": {
          "id": "795cf236-9894-4edd-8c56-eb4175715dfd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed1c7d56-9299-4f91-ace4-9241ae8a7577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0e5e1d-7e22-4d0c-b45f-a58316303eb5",
        "cursor": {
          "ref": "7b3848c1-0ea9-49e2-84c5-a466b58cb041",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c07e7700-7529-4bfe-8d58-45407abf69a2"
        },
        "item": {
          "id": "9d0e5e1d-7e22-4d0c-b45f-a58316303eb5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1d301f8b-9c92-4cd0-b49b-6327f26ecd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f264c8-515b-4536-b0c6-d1305db79e72",
        "cursor": {
          "ref": "a9e9fad4-6e1e-4137-89b7-5532c6132cdd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2bab9732-55ee-4b17-8c2a-c16bf001e5ce"
        },
        "item": {
          "id": "a4f264c8-515b-4536-b0c6-d1305db79e72",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fb68cbe1-84de-4acd-8e63-e2465c214ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c5b5ad-fa67-4ec3-a395-1942134ca75b",
        "cursor": {
          "ref": "196bd89e-9079-4061-94a6-82e6658f2827",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "910b34e5-dd01-4ab4-94ad-b0c5b5d5a82b"
        },
        "item": {
          "id": "e9c5b5ad-fa67-4ec3-a395-1942134ca75b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "344bbc8c-2153-4ee0-9ef8-4d3a67b52fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feca0303-bab0-4188-b8d3-0d766a3a3cb7",
        "cursor": {
          "ref": "52332c6e-b716-434f-ac4b-5b5fb0ecb33d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "66c69ebe-296c-4237-a7ac-82db75459291"
        },
        "item": {
          "id": "feca0303-bab0-4188-b8d3-0d766a3a3cb7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5eae9038-1492-4cf6-b52e-4a89602b76ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e012f3bd-5b13-4b09-a804-79e83733ab1a",
        "cursor": {
          "ref": "148ab808-55fb-41ce-abdb-08280d15b1e9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a8208033-a458-48f3-b350-c8b4884a88ab"
        },
        "item": {
          "id": "e012f3bd-5b13-4b09-a804-79e83733ab1a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01c70b21-0fc2-4fbf-8b10-fde463c488c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf2091b-894b-4bf5-91e9-d3ac0d49f11e",
        "cursor": {
          "ref": "54dd1ad0-357f-4936-b1d0-c8008b319368",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "22bd5aab-35a1-4594-acf2-13daa4611f31"
        },
        "item": {
          "id": "faf2091b-894b-4bf5-91e9-d3ac0d49f11e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6fe81c72-ff96-462d-aa36-afce39dbeee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77dacb7-a201-4650-93f0-73a87f76b398",
        "cursor": {
          "ref": "6f6de514-3ca5-4a6a-9501-e93568babd7f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4d17ac6d-46a3-440e-822e-8543643f57fa"
        },
        "item": {
          "id": "a77dacb7-a201-4650-93f0-73a87f76b398",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3007f199-e1ad-467b-b77e-d442a04a8420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e762f8-829c-473d-a790-6e6112dbefec",
        "cursor": {
          "ref": "4f88ab9e-e99d-4edf-8f5e-27e1efb4787e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bc4c7fa0-470c-4be6-9656-d7f7281c3b12"
        },
        "item": {
          "id": "54e762f8-829c-473d-a790-6e6112dbefec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eda79aee-fde8-4281-95d0-1e35a47e84be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11240f5f-8cc7-45dc-a6ba-54c04722de78",
        "cursor": {
          "ref": "855903a0-356f-4864-9464-afdfb0c0e850",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6bb619da-1615-487c-a21e-d05753e5cb54"
        },
        "item": {
          "id": "11240f5f-8cc7-45dc-a6ba-54c04722de78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c7eecc77-a9c6-461d-b214-f39e4b4cfe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f50bea-a858-4c3a-8459-3532c165c38e",
        "cursor": {
          "ref": "e3af8c0b-e317-4c80-8fb3-0f006a2c60d4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "31da1ae0-b1ac-4a93-a4f2-e725f651e0ef"
        },
        "item": {
          "id": "78f50bea-a858-4c3a-8459-3532c165c38e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fef66528-cf7e-44c4-90f4-24e6e4a65c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa28c9-40bd-4f0d-b9a1-d363ae8aa872",
        "cursor": {
          "ref": "9e8c245b-9d3f-485c-8d11-6788c358c313",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba2709d0-aa1e-41ef-a9c4-21d4523310c0"
        },
        "item": {
          "id": "25aa28c9-40bd-4f0d-b9a1-d363ae8aa872",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3d36a72c-bb41-44db-a43c-e14de3e0fd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6597f-a610-4442-8eaa-8ae707ced9c0",
        "cursor": {
          "ref": "2cc003e6-27a0-4c84-8176-958d0d415813",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8acb1fa1-33e6-4781-8112-ebc0a53fca55"
        },
        "item": {
          "id": "b1a6597f-a610-4442-8eaa-8ae707ced9c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e4a4b60c-1ee6-4809-afd9-28e0a599f089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47678db-e2bc-4c0a-a98f-e492e7d19f37",
        "cursor": {
          "ref": "dff8b3fe-6338-425e-b28b-9d44bcd59206",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "62602381-e00f-401e-872b-7e576de06fdb"
        },
        "item": {
          "id": "b47678db-e2bc-4c0a-a98f-e492e7d19f37",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b4d8023f-77aa-4008-9a65-3d238f24f8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa06e77-07d6-4857-824a-8d43c1d24f7e",
        "cursor": {
          "ref": "6dc31593-0278-44ea-86d9-e4c041004047",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f247822-1061-4d2b-ab83-3be3545ac5b3"
        },
        "item": {
          "id": "efa06e77-07d6-4857-824a-8d43c1d24f7e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b72ef324-04b2-488f-96ec-74d21dbd7ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f24e458-4a24-40bc-a85f-2f468ee702d3",
        "cursor": {
          "ref": "9ea8168e-65ca-46b3-b2e0-8d90d0a35959",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8cc069e0-c2c7-40a3-a2a5-edd026eb9449"
        },
        "item": {
          "id": "6f24e458-4a24-40bc-a85f-2f468ee702d3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eba6aa69-a191-4962-9a59-44f2508dfa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f53d6a-75c1-4a33-a032-363b684fbab0",
        "cursor": {
          "ref": "9a7272ae-2836-4478-8779-8aab5299d4d5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "095718b1-eea2-4c19-88c0-4a4bbe2a1e21"
        },
        "item": {
          "id": "82f53d6a-75c1-4a33-a032-363b684fbab0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5335a83f-4642-4ef9-9631-3f117e2bf80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224ed33c-3b50-4a8a-ae4a-7461e4ff2b62",
        "cursor": {
          "ref": "f7824ac6-8315-4bb4-9bfb-23336bded190",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2dea9721-6193-4d35-8cd9-db7ecf2876f4"
        },
        "item": {
          "id": "224ed33c-3b50-4a8a-ae4a-7461e4ff2b62",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ae87c7b-30ce-4364-9e9c-4c6b35e13ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13b227-63d4-4d98-bda1-db4e2000f4b5",
        "cursor": {
          "ref": "d8fd62dd-a285-4b72-aa26-a9e7f7a1f579",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cffd2347-ddb7-4d20-9160-855a6cfa6c90"
        },
        "item": {
          "id": "df13b227-63d4-4d98-bda1-db4e2000f4b5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c10c251c-12fc-4fdc-9f5e-825ac4d27377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48524ab2-31c0-45da-a1b9-9100c47dbb2b",
        "cursor": {
          "ref": "c985c2ed-7d8c-4015-a52e-8f4ad31c4c4f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc2df17a-4f29-4423-9587-cd73708f9fbe"
        },
        "item": {
          "id": "48524ab2-31c0-45da-a1b9-9100c47dbb2b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cdc76b59-82e2-4233-8068-c44244df485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e96b1a-df7c-42cd-babf-bd0c9d9eb8fe",
        "cursor": {
          "ref": "a83a44f8-01f0-49b6-a178-036195373105",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6c8338c0-5dde-4dad-8d64-5531beab5e89"
        },
        "item": {
          "id": "13e96b1a-df7c-42cd-babf-bd0c9d9eb8fe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d318f013-5a6e-4e4b-a4fe-60fc6ed527b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342fd5cd-f6b2-4fc1-892c-7fd3e49d5cdb",
        "cursor": {
          "ref": "3b44904e-6048-4a24-9368-e40b4cb4f30f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "54c2820a-9d58-413e-862e-3f7212ebb915"
        },
        "item": {
          "id": "342fd5cd-f6b2-4fc1-892c-7fd3e49d5cdb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f61349cb-b664-4be8-9d8b-6668a8213e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d692eb-86a6-4704-bc86-2bad3a365b99",
        "cursor": {
          "ref": "6c20dc75-ab18-4504-bcf2-12562134d734",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7b5e9291-e312-4e4b-99e4-0ce79d5016bb"
        },
        "item": {
          "id": "85d692eb-86a6-4704-bc86-2bad3a365b99",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "491406a0-6dcb-4d65-929b-fe5b7c17a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4291615f-f869-4313-8769-0f55b5fe22ad",
        "cursor": {
          "ref": "37c3220f-784a-4bdf-8076-7da7dc0bcc48",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1691ef97-e3b6-459e-b542-32fd0883f885"
        },
        "item": {
          "id": "4291615f-f869-4313-8769-0f55b5fe22ad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "62b3a233-1924-48c3-8ff5-df7392c6172b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e7a56-3c2f-404d-8d5f-c047f8b97d1b",
        "cursor": {
          "ref": "211fad8c-8a26-4cfd-87f1-3c657379f951",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7959946-7f1f-435a-afdd-915cc1f00832"
        },
        "item": {
          "id": "da4e7a56-3c2f-404d-8d5f-c047f8b97d1b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04672dd9-67ac-4d54-81bc-f54bfa74cc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52a202f-4de4-4d74-8694-91c1857b5e2c",
        "cursor": {
          "ref": "59bff836-12ae-4d37-b7ad-6b5e942c41ee",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9f32c939-680f-4d8b-9d1f-f47dcd79002a"
        },
        "item": {
          "id": "f52a202f-4de4-4d74-8694-91c1857b5e2c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1ef086fc-8f07-41fa-ac90-e725fa90a0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ca855-78e7-40ec-bb6c-78bd34f946db",
        "cursor": {
          "ref": "6fbf5034-8451-4688-a421-2e0c3d6be431",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b3f90132-3eb5-4cd0-8bad-59143287bd1b"
        },
        "item": {
          "id": "284ca855-78e7-40ec-bb6c-78bd34f946db",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19c6422d-268a-4a90-aa06-7379f7657255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d261a5a-f584-4571-a58a-c98166758e73",
        "cursor": {
          "ref": "87290e40-fdf6-4767-b5c8-32625a068f64",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "71057fa6-8330-479f-827e-3ab0ebee7a82"
        },
        "item": {
          "id": "6d261a5a-f584-4571-a58a-c98166758e73",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a18ee93-83d6-43ec-9a7c-cf571e6ab421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5bf80-1f1e-4bb4-9243-fe99aa5a6139",
        "cursor": {
          "ref": "0c489f6f-d9e4-437a-ade4-8cbc9cb0f84b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f5f684b-f1ed-4cec-9dbc-8e4dd294c482"
        },
        "item": {
          "id": "a9d5bf80-1f1e-4bb4-9243-fe99aa5a6139",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a8b3d7a1-4593-4311-b538-0202a91bc82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b3838-76bf-46ee-b44f-bec6a05d2ea8",
        "cursor": {
          "ref": "0aa57f1a-85c8-4536-bc11-17da3efd2c80",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d0f51003-1ff8-4939-8eb9-02b83de565f6"
        },
        "item": {
          "id": "1e4b3838-76bf-46ee-b44f-bec6a05d2ea8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4ceb5d14-664e-498d-ae65-a7b9a7609c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a8343-aa5e-4651-a812-359a98a98a1c",
        "cursor": {
          "ref": "9fe451c0-bc10-41a6-a15d-36dcd5aea805",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "abd2b508-2db6-4f10-ace9-4f84f2f48411"
        },
        "item": {
          "id": "643a8343-aa5e-4651-a812-359a98a98a1c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b6d7cb88-50d2-46b0-ac6d-46857e797d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3441aa5-9a69-45fe-84cf-847349ce5248",
        "cursor": {
          "ref": "96b195be-8bac-477c-b788-e5130d697549",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15382867-71e8-4688-a6b5-22ea09bbccbf"
        },
        "item": {
          "id": "a3441aa5-9a69-45fe-84cf-847349ce5248",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d7ea66e2-6e71-4114-a42c-9ee3f95346b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c991e1f-51d8-4e47-9154-61c83e7d09d4",
        "cursor": {
          "ref": "e4d1b1ec-0821-414b-95e8-bd33e94fc351",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8f301d45-4dfe-4ec5-bdaf-ddf9b9b81ec7"
        },
        "item": {
          "id": "6c991e1f-51d8-4e47-9154-61c83e7d09d4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "93a8615e-880f-4882-ac06-b1d2ea909ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2183990-5f9a-4578-a572-aaa1bb5ee42e",
        "cursor": {
          "ref": "e5a63eef-d50a-4d32-bf16-271bb82cff1c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ada8111-9c76-4c24-9227-ca793af890c4"
        },
        "item": {
          "id": "e2183990-5f9a-4578-a572-aaa1bb5ee42e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4314c56d-c877-4032-835d-95acca87fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abcd6af-c4ae-403d-9b15-3e703b5225f7",
        "cursor": {
          "ref": "3847cdb7-60ed-42d2-86ad-6c78576aa7df",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "85f0a046-44e1-4d76-8ca7-1cfe68fa6a5c"
        },
        "item": {
          "id": "0abcd6af-c4ae-403d-9b15-3e703b5225f7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e3f2b133-6f7c-4493-8abd-3747aac3c51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3675250-1803-4c98-903b-009772a629c1",
        "cursor": {
          "ref": "509bd2d0-7cd3-4a4f-890d-9f14d7031b45",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3641dfb3-525b-47e4-8fef-f468f5e88aff"
        },
        "item": {
          "id": "c3675250-1803-4c98-903b-009772a629c1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "120aadd0-108c-47fa-8560-513cb671509a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb999d-07c9-4d99-a9f3-cb122ea2b638",
        "cursor": {
          "ref": "dede6ab8-d345-4887-8320-04b0774f512a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8dc94def-7d72-4888-96b3-52f3f1fbd6a7"
        },
        "item": {
          "id": "98bb999d-07c9-4d99-a9f3-cb122ea2b638",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ff03a7b6-5cd2-46ee-acd6-a54cd2a4fa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b1b6-c425-4232-831b-bde0559a80f7",
        "cursor": {
          "ref": "32aba687-28b0-4bb4-9c4c-8369a1e21e76",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d1bce52d-10d6-44bb-8398-9dc60c74b8a4"
        },
        "item": {
          "id": "02b6b1b6-c425-4232-831b-bde0559a80f7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa0a083a-d28d-4d23-930e-5c7b3777dfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31506186-22d9-4dec-9314-4ac9f0ba0c8a",
        "cursor": {
          "ref": "869d416f-fab3-4ac3-9469-72a2e7a71886",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c02623c3-3149-4cd2-b883-592194afe06b"
        },
        "item": {
          "id": "31506186-22d9-4dec-9314-4ac9f0ba0c8a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "979998f2-da9b-4d13-8147-8146c60e6e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d1070c-7ece-46da-bfe1-5d7b09c7885c",
        "cursor": {
          "ref": "8dbae001-cd67-4f7a-8f7b-3d4b022a0061",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d4363511-c376-4191-bc0e-4a59e3fc68ae"
        },
        "item": {
          "id": "d3d1070c-7ece-46da-bfe1-5d7b09c7885c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8bd3ad5b-6191-4f82-9155-0e37ff8806cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5b0760-a8fa-42dc-b6c2-baec47a44478",
        "cursor": {
          "ref": "d06a49a7-8e0d-47eb-ac1e-b21b648cb1a3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7a5a90a3-5f15-46fc-9f67-209b75839c4a"
        },
        "item": {
          "id": "7c5b0760-a8fa-42dc-b6c2-baec47a44478",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "99652045-a41c-4323-9e67-c57c8415d01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff36cc9-1beb-4a0c-a236-e344d1d0f606",
        "cursor": {
          "ref": "434b0914-89ad-4397-adf9-7aed162c801e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ed627d0f-3b2c-4a3d-ace7-e23c3f7c3eaf"
        },
        "item": {
          "id": "8ff36cc9-1beb-4a0c-a236-e344d1d0f606",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0435fbb0-9e94-4a7c-af2d-af6dcae2e2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c86e74-6ed3-4481-babd-29cc3868fb40",
        "cursor": {
          "ref": "67fd7581-3caf-46aa-b531-baeab555bba8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "726d7cb3-be40-47a8-84b8-a470e03decb7"
        },
        "item": {
          "id": "18c86e74-6ed3-4481-babd-29cc3868fb40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d6ff1fb7-2bcf-42ff-bb82-1dbb6cc1a451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee80ea7f-88f9-4e96-8152-1706a6f7e745",
        "cursor": {
          "ref": "3e621423-14aa-4194-b165-54d501c436a4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "179279c4-dbf5-4d90-beae-36eced69a885"
        },
        "item": {
          "id": "ee80ea7f-88f9-4e96-8152-1706a6f7e745",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7568790b-4d60-42b2-ab34-94df2299a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbbeac7-bb09-4c0d-9358-ba9a5d792382",
        "cursor": {
          "ref": "1340bbee-907e-4389-a4ab-114b20cb98df",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fef496f7-34a4-4e69-8cf9-2f88f6931e6a"
        },
        "item": {
          "id": "4bbbeac7-bb09-4c0d-9358-ba9a5d792382",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fc02a90f-eaab-4c9f-b278-3e30f2a615c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572a75eb-8334-4399-a0da-5601e0a73f40",
        "cursor": {
          "ref": "2a921512-108f-4046-b696-9b197fd5d7d5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "69b9d7fc-b350-4983-ae21-ef545394ea44"
        },
        "item": {
          "id": "572a75eb-8334-4399-a0da-5601e0a73f40",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "58beeeca-d36e-49f2-93b9-98489178a65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c926d0d-6f20-4288-a428-10bfd203582d",
        "cursor": {
          "ref": "ba0f144f-ac41-4962-b29d-9211e1bf669e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3eb47c51-e10f-42d5-8e00-5bfa1b6c4d8c"
        },
        "item": {
          "id": "8c926d0d-6f20-4288-a428-10bfd203582d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "27edee2c-55ac-4b4f-9eda-4cafba3ebc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eea61b-0844-4dc1-addd-8359fec2021c",
        "cursor": {
          "ref": "f737102c-fa6c-42d2-98cd-cdc20f3c3868",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d1e8fb9f-6f1f-4162-b35a-7277a40350a9"
        },
        "item": {
          "id": "b5eea61b-0844-4dc1-addd-8359fec2021c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "71f1858c-b501-4fb6-9de7-6a509bf52868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334916b1-0a7e-4432-aaa9-2b9e8f728a35",
        "cursor": {
          "ref": "f4873910-1654-4f7f-bd9d-26d6cdeeb274",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "32c6493f-69e3-4991-8263-159fd1810d94"
        },
        "item": {
          "id": "334916b1-0a7e-4432-aaa9-2b9e8f728a35",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d7c36f59-d80a-49cb-97dc-039739b64245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa21a9dd-270e-46a9-a603-8d145097537b",
        "cursor": {
          "ref": "5e68f7ef-a880-4603-99d0-4bcf3b1b0b87",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8818c246-0483-4f1c-b7b2-b979b6c33fb8"
        },
        "item": {
          "id": "fa21a9dd-270e-46a9-a603-8d145097537b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cd526a41-5ff4-46bd-8e20-c6ac535e1864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd787c3-b3e1-441e-bcc3-e37ec5003914",
        "cursor": {
          "ref": "18f4f4f9-62bf-4a54-b66e-d757eb18ecb2",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "20c4a7e7-97d4-4d05-9f93-4e8074681488"
        },
        "item": {
          "id": "ecd787c3-b3e1-441e-bcc3-e37ec5003914",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d44e2871-0e71-40eb-82f6-fa3a243acf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87da57b-968b-4457-a242-f3a911bde45c",
        "cursor": {
          "ref": "8617af8d-30f5-4821-98cc-bb051e97c3e2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe9a83b7-f599-4de3-9361-0130b6b866a5"
        },
        "item": {
          "id": "a87da57b-968b-4457-a242-f3a911bde45c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1867a2ff-8660-4918-b15b-d8b962509f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6103b2fe-daf5-4bf8-b111-b114dae6bdd1",
        "cursor": {
          "ref": "078a0b2a-25c7-4c5c-9511-c6e2ca2e882e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a388eda5-cdff-42f3-950c-fc9d2ed5dc0c"
        },
        "item": {
          "id": "6103b2fe-daf5-4bf8-b111-b114dae6bdd1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "08e8865c-88e1-47e7-bf9d-e89bd03b7f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb6e634-191c-42e6-b505-f8d95e4d6c8a",
        "cursor": {
          "ref": "9e4ddee0-54c9-4279-92ba-1015dce2a1b9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eaed7750-e88e-4460-92ff-fc9ff45eb8f4"
        },
        "item": {
          "id": "fbb6e634-191c-42e6-b505-f8d95e4d6c8a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "57804eff-90f6-44d0-b2a9-f8696d8d681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f3abf-0188-43f7-bdeb-1ed42de84941",
        "cursor": {
          "ref": "af298e39-8e3d-4644-8bcc-91d98e781f62",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "75a1bcbd-8cd1-41a2-b293-f37d366fd89d"
        },
        "item": {
          "id": "bb4f3abf-0188-43f7-bdeb-1ed42de84941",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "17070126-18d7-4294-b959-0c82a705ca31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98953133-2a9a-4681-a492-9d55efed1af7",
        "cursor": {
          "ref": "6f64c133-7305-4c0b-96ee-2e02c34a30cc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "eca7015d-5dd5-47da-852e-8be616bd9de4"
        },
        "item": {
          "id": "98953133-2a9a-4681-a492-9d55efed1af7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a3e118f2-e703-4cd2-a9fc-2cd148e0f2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a064a010-61e0-429c-859b-748563f7e42b",
        "cursor": {
          "ref": "057bcaa3-1492-4f6a-bdf6-234185533b11",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "91d20403-cb15-4c24-8944-45d6e543dd24"
        },
        "item": {
          "id": "a064a010-61e0-429c-859b-748563f7e42b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "27e53d2b-26ed-4188-94ac-820f28f2aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c6680c-af08-44c2-a053-5e4d7e620521",
        "cursor": {
          "ref": "c0ed953e-d3ed-4b5a-8b64-7996b0680857",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fae5f186-1379-43c7-bb00-89650f3d3435"
        },
        "item": {
          "id": "23c6680c-af08-44c2-a053-5e4d7e620521",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cec7be4b-2407-43ec-a879-57f5087b05ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd82a4a-1e35-432a-b404-1de1f03dc790",
        "cursor": {
          "ref": "bf95369e-ff28-437f-a2ad-1b2d727da751",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "809839f5-8868-426c-a25f-1be6b77415cd"
        },
        "item": {
          "id": "efd82a4a-1e35-432a-b404-1de1f03dc790",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5fcd4fd-9f06-488c-af84-7fd15e14fa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f5a69-734d-4d58-9074-4d1ea8d3df89",
        "cursor": {
          "ref": "eff16888-b8ef-4b40-9adb-bb0ef07ccf6f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "138c0115-ddd4-45ad-bf13-ac659c5817df"
        },
        "item": {
          "id": "e23f5a69-734d-4d58-9074-4d1ea8d3df89",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "737dcff5-e6af-4c45-8dc7-cbfcee3f2026",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aab6b0f-f43c-49a9-97f4-31d1e651ce3b",
        "cursor": {
          "ref": "fc3639c3-ebbe-418e-81bd-48ec60784f7d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "802f8b73-9632-474d-8f69-12450106e357"
        },
        "item": {
          "id": "1aab6b0f-f43c-49a9-97f4-31d1e651ce3b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d65a597-d32a-4556-ba5f-42589914dc04",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf5fe04-075c-45c6-a644-72bf53fc79bf",
        "cursor": {
          "ref": "4877e128-bbbe-45a4-b3fe-b712c2ba69b1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5baf9d3e-67d0-400e-bc4b-765180259ef8"
        },
        "item": {
          "id": "aaf5fe04-075c-45c6-a644-72bf53fc79bf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ae5a8649-8ffe-4a4e-9a22-0cfdbcf636b8",
          "status": "OK",
          "code": 200,
          "responseTime": 3278,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fcf7e2-d88c-4894-8540-7b43c66abd1c",
        "cursor": {
          "ref": "3c4da780-932d-490c-9c22-05356182c50a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e1d32488-f5e3-4abf-afb4-780c2c253fb1"
        },
        "item": {
          "id": "97fcf7e2-d88c-4894-8540-7b43c66abd1c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "245273c7-a6bf-4b66-bf86-770a048d1b0f",
          "status": "OK",
          "code": 200,
          "responseTime": 3043,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a37f5a-33d9-4fea-b0b3-d748998e56f4",
        "cursor": {
          "ref": "18760e19-75eb-468f-9a4e-e50f71a7f3a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "60a1a76c-a549-4782-bd3f-da4800563e1c"
        },
        "item": {
          "id": "55a37f5a-33d9-4fea-b0b3-d748998e56f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59291efb-a4da-4e48-a707-72894fc58a6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a37f5a-33d9-4fea-b0b3-d748998e56f4",
        "cursor": {
          "ref": "18760e19-75eb-468f-9a4e-e50f71a7f3a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "60a1a76c-a549-4782-bd3f-da4800563e1c"
        },
        "item": {
          "id": "55a37f5a-33d9-4fea-b0b3-d748998e56f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59291efb-a4da-4e48-a707-72894fc58a6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a0baa6-4696-4f53-bce7-9c9b0902101c",
        "cursor": {
          "ref": "60af118a-6496-4b8d-9a43-a4d2e801f83e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4e796438-df6f-465e-9f0a-82406647e247"
        },
        "item": {
          "id": "04a0baa6-4696-4f53-bce7-9c9b0902101c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9031a91f-d0a7-424e-a3ef-dd53f6cee76b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f416a43f-3dcc-4bd4-8c67-a6919c14b6ce",
        "cursor": {
          "ref": "cf6eff2f-b2b4-494c-9a52-03a9495c1f4e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e5425208-2b44-455e-b6d4-eca544f6a249"
        },
        "item": {
          "id": "f416a43f-3dcc-4bd4-8c67-a6919c14b6ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1778945c-33fc-401d-b1cb-6078e2e8ee49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}